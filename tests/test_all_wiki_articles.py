import inspect
import unittest
from src.wiktionary_romanization import WiktionaryRomanization

class TestUniqueDBCases(unittest.TestCase):
	file = ''

	def set_file(self, file):
		self.file = file

	def test_yeoja_ph(self):
		self.run_test("여자", "{{ko-IPA|a=Ko-여자.oga}}", "여자", "ph")
	def test_yeoja_rr(self):
		self.run_test("여자", "{{ko-IPA|a=Ko-여자.oga}}", "yeoja", "rr")
	def test_yeoja_rrr(self):
		self.run_test("여자", "{{ko-IPA|a=Ko-여자.oga}}", "yeoja", "rrr")
	def test_yeoja_mr(self):
		self.run_test("여자", "{{ko-IPA|a=Ko-여자.oga}}", "yŏja", "mr")
	def test_yeoja_yr(self):
		self.run_test("여자", "{{ko-IPA|a=Ko-여자.oga}}", "yeca", "yr")
	def test_yeoja_ipa(self):
		self.run_test("여자", "{{ko-IPA|a=Ko-여자.oga}}", "[jʌ̹d͡ʑa̠]", "ipa")

	def test_yeoseong_ph(self):
		self.run_test("여성", "{{ko-IPA|a=y}}", "여성", "ph")
	def test_yeoseong_rr(self):
		self.run_test("여성", "{{ko-IPA|a=y}}", "yeoseong", "rr")
	def test_yeoseong_rrr(self):
		self.run_test("여성", "{{ko-IPA|a=y}}", "yeoseong", "rrr")
	def test_yeoseong_mr(self):
		self.run_test("여성", "{{ko-IPA|a=y}}", "yŏsŏng", "mr")
	def test_yeoseong_yr(self):
		self.run_test("여성", "{{ko-IPA|a=y}}", "yeseng", "yr")
	def test_yeoseong_ipa(self):
		self.run_test("여성", "{{ko-IPA|a=y}}", "[jʌ̹sʰʌ̹ŋ]", "ipa")

	def test_hangugeo_ph(self):
		self.run_test("한국어", "{{ko-IPA|l=y}}", "한(ː)구거", "ph")
	def test_hangugeo_rr(self):
		self.run_test("한국어", "{{ko-IPA|l=y}}", "han'gugeo", "rr")
	def test_hangugeo_rrr(self):
		self.run_test("한국어", "{{ko-IPA|l=y}}", "hangug'eo", "rrr")
	def test_hangugeo_mr(self):
		self.run_test("한국어", "{{ko-IPA|l=y}}", "han'gugŏ", "mr")
	def test_hangugeo_yr(self):
		self.run_test("한국어", "{{ko-IPA|l=y}}", "hānkwuk.e", "yr")
	def test_hangugeo_ipa(self):
		self.run_test("한국어", "{{ko-IPA|l=y}}", "[ˈha̠(ː)nɡuɡʌ̹]", "ipa")

	def test_namu_ph(self):
		self.run_test("나무", "{{ko-IPA}}", "나무", "ph")
	def test_namu_rr(self):
		self.run_test("나무", "{{ko-IPA}}", "namu", "rr")
	def test_namu_rrr(self):
		self.run_test("나무", "{{ko-IPA}}", "namu", "rrr")
	def test_namu_mr(self):
		self.run_test("나무", "{{ko-IPA}}", "namu", "mr")
	def test_namu_yr(self):
		self.run_test("나무", "{{ko-IPA}}", "namu", "yr")
	def test_namu_ipa(self):
		self.run_test("나무", "{{ko-IPA}}", "[na̠mu]", "ipa")

	def test_il_ph(self):
		self.run_test("일", "{{ko-IPA|l=y}}", "일(ː)", "ph")
	def test_il_rr(self):
		self.run_test("일", "{{ko-IPA|l=y}}", "il", "rr")
	def test_il_rrr(self):
		self.run_test("일", "{{ko-IPA|l=y}}", "il", "rrr")
	def test_il_mr(self):
		self.run_test("일", "{{ko-IPA|l=y}}", "il", "mr")
	def test_il_yr(self):
		self.run_test("일", "{{ko-IPA|l=y}}", "īl", "yr")
	def test_il_ipa(self):
		self.run_test("일", "{{ko-IPA|l=y}}", "[i(ː)ɭ]", "ipa")
	def test_il_ph_1(self):
		self.run_test("일", "{{ko-IPA}}", "일", "ph")
	def test_il_rr_1(self):
		self.run_test("일", "{{ko-IPA}}", "il", "rr")
	def test_il_rrr_1(self):
		self.run_test("일", "{{ko-IPA}}", "il", "rrr")
	def test_il_mr_1(self):
		self.run_test("일", "{{ko-IPA}}", "il", "mr")
	def test_il_yr_1(self):
		self.run_test("일", "{{ko-IPA}}", "il", "yr")
	def test_il_ipa_1(self):
		self.run_test("일", "{{ko-IPA}}", "[iɭ]", "ipa")
	def test_il_ph_2(self):
		self.run_test("일", "{{ko-IPA}}", "일", "ph")
	def test_il_rr_2(self):
		self.run_test("일", "{{ko-IPA}}", "il", "rr")
	def test_il_rrr_2(self):
		self.run_test("일", "{{ko-IPA}}", "il", "rrr")
	def test_il_mr_2(self):
		self.run_test("일", "{{ko-IPA}}", "il", "mr")
	def test_il_yr_2(self):
		self.run_test("일", "{{ko-IPA}}", "il", "yr")
	def test_il_ipa_2(self):
		self.run_test("일", "{{ko-IPA}}", "[iɭ]", "ipa")

	def test_pisibang_ph(self):
		self.run_test("PC방", "{{ko-IPA|피시방|com=1}}", "피씨방", "ph")
	def test_pisibang_rr(self):
		self.run_test("PC방", "{{ko-IPA|피시방|com=1}}", "pisibang", "rr")
	def test_pisibang_rrr(self):
		self.run_test("PC방", "{{ko-IPA|피시방|com=1}}", "pisibang", "rrr")
	def test_pisibang_mr(self):
		self.run_test("PC방", "{{ko-IPA|피시방|com=1}}", "p'issibang", "mr")
	def test_pisibang_yr(self):
		self.run_test("PC방", "{{ko-IPA|피시방|com=1}}", "phiqsipang", "yr")
	def test_pisibang_ipa(self):
		self.run_test("PC방", "{{ko-IPA|피시방|com=1}}", "[pʰiɕ͈iba̠ŋ]", "ipa")

	def test_pissibang_ph(self):
		self.run_test("피씨방", "{{ko-IPA}}", "피씨방", "ph")
	def test_pissibang_rr(self):
		self.run_test("피씨방", "{{ko-IPA}}", "pissibang", "rr")
	def test_pissibang_rrr(self):
		self.run_test("피씨방", "{{ko-IPA}}", "pi'ssibang", "rrr")
	def test_pissibang_mr(self):
		self.run_test("피씨방", "{{ko-IPA}}", "p'issibang", "mr")
	def test_pissibang_yr(self):
		self.run_test("피씨방", "{{ko-IPA}}", "phi.ssipang", "yr")
	def test_pissibang_ipa(self):
		self.run_test("피씨방", "{{ko-IPA}}", "[pʰiɕ͈iba̠ŋ]", "ipa")

	def test_eum_ph(self):
		self.run_test("음", "{{ko-IPA}}", "음", "ph")
	def test_eum_rr(self):
		self.run_test("음", "{{ko-IPA}}", "eum", "rr")
	def test_eum_rrr(self):
		self.run_test("음", "{{ko-IPA}}", "eum", "rrr")
	def test_eum_mr(self):
		self.run_test("음", "{{ko-IPA}}", "ŭm", "mr")
	def test_eum_yr(self):
		self.run_test("음", "{{ko-IPA}}", "um", "yr")
	def test_eum_ipa(self):
		self.run_test("음", "{{ko-IPA}}", "[ɯm]", "ipa")

	def test_yang_ph(self):
		self.run_test("양", "{{ko-ipa}}", "양", "ph")
	def test_yang_rr(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rr")
	def test_yang_rrr(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rrr")
	def test_yang_mr(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "mr")
	def test_yang_yr(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "yr")
	def test_yang_ipa(self):
		self.run_test("양", "{{ko-ipa}}", "[ja̠ŋ]", "ipa")
	def test_yang_ph_1(self):
		self.run_test("양", "{{ko-ipa}}", "양", "ph")
	def test_yang_rr_1(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rr")
	def test_yang_rrr_1(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rrr")
	def test_yang_mr_1(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "mr")
	def test_yang_yr_1(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "yr")
	def test_yang_ipa_1(self):
		self.run_test("양", "{{ko-ipa}}", "[ja̠ŋ]", "ipa")
	def test_yang_ph_2(self):
		self.run_test("양", "{{ko-ipa}}", "양", "ph")
	def test_yang_rr_2(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rr")
	def test_yang_rrr_2(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rrr")
	def test_yang_mr_2(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "mr")
	def test_yang_yr_2(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "yr")
	def test_yang_ipa_2(self):
		self.run_test("양", "{{ko-ipa}}", "[ja̠ŋ]", "ipa")
	def test_yang_ph_3(self):
		self.run_test("양", "{{ko-ipa}}", "양", "ph")
	def test_yang_rr_3(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rr")
	def test_yang_rrr_3(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rrr")
	def test_yang_mr_3(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "mr")
	def test_yang_yr_3(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "yr")
	def test_yang_ipa_3(self):
		self.run_test("양", "{{ko-ipa}}", "[ja̠ŋ]", "ipa")
	def test_yang_ph_4(self):
		self.run_test("양", "{{ko-IPA|l=y}}", "양(ː)", "ph")
	def test_yang_rr_4(self):
		self.run_test("양", "{{ko-IPA|l=y}}", "yang", "rr")
	def test_yang_rrr_4(self):
		self.run_test("양", "{{ko-IPA|l=y}}", "yang", "rrr")
	def test_yang_mr_4(self):
		self.run_test("양", "{{ko-IPA|l=y}}", "yang", "mr")
	def test_yang_yr_4(self):
		self.run_test("양", "{{ko-IPA|l=y}}", "yāng", "yr")
	def test_yang_ipa_4(self):
		self.run_test("양", "{{ko-IPA|l=y}}", "[ja̠(ː)ŋ]", "ipa")
	def test_yang_ph_5(self):
		self.run_test("양", "{{ko-IPA}}", "양", "ph")
	def test_yang_rr_5(self):
		self.run_test("양", "{{ko-IPA}}", "yang", "rr")
	def test_yang_rrr_5(self):
		self.run_test("양", "{{ko-IPA}}", "yang", "rrr")
	def test_yang_mr_5(self):
		self.run_test("양", "{{ko-IPA}}", "yang", "mr")
	def test_yang_yr_5(self):
		self.run_test("양", "{{ko-IPA}}", "yang", "yr")
	def test_yang_ipa_5(self):
		self.run_test("양", "{{ko-IPA}}", "[ja̠ŋ]", "ipa")
	def test_yang_ph_6(self):
		self.run_test("양", "{{ko-ipa}}", "양", "ph")
	def test_yang_rr_6(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rr")
	def test_yang_rrr_6(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "rrr")
	def test_yang_mr_6(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "mr")
	def test_yang_yr_6(self):
		self.run_test("양", "{{ko-ipa}}", "yang", "yr")
	def test_yang_ipa_6(self):
		self.run_test("양", "{{ko-ipa}}", "[ja̠ŋ]", "ipa")

	def test_Ilbon_ph(self):
		self.run_test("일본", "{{ko-IPA|cap=y}}", "일본", "ph")
	def test_Ilbon_rr(self):
		self.run_test("일본", "{{ko-IPA|cap=y}}", "Ilbon", "rr")
	def test_Ilbon_rrr(self):
		self.run_test("일본", "{{ko-IPA|cap=y}}", "Ilbon", "rrr")
	def test_Ilbon_mr(self):
		self.run_test("일본", "{{ko-IPA|cap=y}}", "Ilbon", "mr")
	def test_Ilbon_yr(self):
		self.run_test("일본", "{{ko-IPA|cap=y}}", "il.pon", "yr")
	def test_Ilbon_ipa(self):
		self.run_test("일본", "{{ko-IPA|cap=y}}", "[iɭbo̞n]", "ipa")

	def test_sangeo_ph(self):
		self.run_test("상어", "{{ko-IPA}}", "상어", "ph")
	def test_sangeo_rr(self):
		self.run_test("상어", "{{ko-IPA}}", "sang'eo", "rr")
	def test_sangeo_rrr(self):
		self.run_test("상어", "{{ko-IPA}}", "sang'eo", "rrr")
	def test_sangeo_mr(self):
		self.run_test("상어", "{{ko-IPA}}", "sangŏ", "mr")
	def test_sangeo_yr(self):
		self.run_test("상어", "{{ko-IPA}}", "sange", "yr")
	def test_sangeo_ipa(self):
		self.run_test("상어", "{{ko-IPA}}", "[sʰa̠ŋʌ̹]", "ipa")


	def test_reul_ph(self):
		self.run_test("-를", "{{ko-IPA}}", "를", "ph")
	def test_reul_rr(self):
		self.run_test("-를", "{{ko-IPA}}", "reul", "rr")
	def test_reul_rrr(self):
		self.run_test("-를", "{{ko-IPA}}", "leul", "rrr")
	def test_reul_mr(self):
		self.run_test("-를", "{{ko-IPA}}", "rŭl", "mr")
	def test_reul_yr(self):
		self.run_test("-를", "{{ko-IPA}}", "lul", "yr")
	def test_reul_ipa(self):
		self.run_test("-를", "{{ko-IPA}}", "[ɾɯɭ]", "ipa")

	def test_eul_ph(self):
		self.run_test("을", "{{ko-ipa}}", "을", "ph")
	def test_eul_rr(self):
		self.run_test("을", "{{ko-ipa}}", "eul", "rr")
	def test_eul_rrr(self):
		self.run_test("을", "{{ko-ipa}}", "eul", "rrr")
	def test_eul_mr(self):
		self.run_test("을", "{{ko-ipa}}", "ŭl", "mr")
	def test_eul_yr(self):
		self.run_test("을", "{{ko-ipa}}", "ul", "yr")
	def test_eul_ipa(self):
		self.run_test("을", "{{ko-ipa}}", "[ɯɭ]", "ipa")

	def test_maneul_ph(self):
		self.run_test("마늘", "{{ko-IPA}}", "마늘", "ph")
	def test_maneul_rr(self):
		self.run_test("마늘", "{{ko-IPA}}", "maneul", "rr")
	def test_maneul_rrr(self):
		self.run_test("마늘", "{{ko-IPA}}", "maneul", "rrr")
	def test_maneul_mr(self):
		self.run_test("마늘", "{{ko-IPA}}", "manŭl", "mr")
	def test_maneul_yr(self):
		self.run_test("마늘", "{{ko-IPA}}", "manul", "yr")
	def test_maneul_ipa(self):
		self.run_test("마늘", "{{ko-IPA}}", "[ma̠nɯɭ]", "ipa")

	def test_yaksil_ph(self):
		self.run_test("약실", "{{ko-IPA}}", "약씰", "ph")
	def test_yaksil_rr(self):
		self.run_test("약실", "{{ko-IPA}}", "yaksil", "rr")
	def test_yaksil_rrr(self):
		self.run_test("약실", "{{ko-IPA}}", "yagsil", "rrr")
	def test_yaksil_mr(self):
		self.run_test("약실", "{{ko-IPA}}", "yaksil", "mr")
	def test_yaksil_yr(self):
		self.run_test("약실", "{{ko-IPA}}", "yak.sil", "yr")
	def test_yaksil_ipa(self):
		self.run_test("약실", "{{ko-IPA}}", "[ja̠kɕ͈iɭ]", "ipa")

	def test_ui_ph(self):
		self.run_test("의", "{{ko-IPA|l=y}}", "의(ː)", "ph")
	def test_ui_rr(self):
		self.run_test("의", "{{ko-IPA|l=y}}", "ui", "rr")
	def test_ui_rrr(self):
		self.run_test("의", "{{ko-IPA|l=y}}", "ui", "rrr")
	def test_ui_mr(self):
		self.run_test("의", "{{ko-IPA|l=y}}", "ŭi", "mr")
	def test_ui_yr(self):
		self.run_test("의", "{{ko-IPA|l=y}}", "ūy", "yr")
	def test_ui_ipa(self):
		self.run_test("의", "{{ko-IPA|l=y}}", "[ɰi(ː)]", "ipa")

	def test_hana_ph(self):
		self.run_test("하나", "{{ko-IPA|a=Ko-하나.oga}}", "하나", "ph")
	def test_hana_rr(self):
		self.run_test("하나", "{{ko-IPA|a=Ko-하나.oga}}", "hana", "rr")
	def test_hana_rrr(self):
		self.run_test("하나", "{{ko-IPA|a=Ko-하나.oga}}", "hana", "rrr")
	def test_hana_mr(self):
		self.run_test("하나", "{{ko-IPA|a=Ko-하나.oga}}", "hana", "mr")
	def test_hana_yr(self):
		self.run_test("하나", "{{ko-IPA|a=Ko-하나.oga}}", "hana", "yr")
	def test_hana_ipa(self):
		self.run_test("하나", "{{ko-IPA|a=Ko-하나.oga}}", "[ha̠na̠]", "ipa")

	def test_dul_ph(self):
		self.run_test("둘", "{{ko-IPA|l=y}}", "둘(ː)", "ph")
	def test_dul_rr(self):
		self.run_test("둘", "{{ko-IPA|l=y}}", "dul", "rr")
	def test_dul_rrr(self):
		self.run_test("둘", "{{ko-IPA|l=y}}", "dul", "rrr")
	def test_dul_mr(self):
		self.run_test("둘", "{{ko-IPA|l=y}}", "tul", "mr")
	def test_dul_yr(self):
		self.run_test("둘", "{{ko-IPA|l=y}}", "twūl", "yr")
	def test_dul_ipa(self):
		self.run_test("둘", "{{ko-IPA|l=y}}", "[tu(ː)ɭ]", "ipa")

	def test_set_ph(self):
		self.run_test("셋", "{{ko-IPA|l=y}}", "섿(ː)", "ph")
	def test_set_rr(self):
		self.run_test("셋", "{{ko-IPA|l=y}}", "set", "rr")
	def test_set_rrr(self):
		self.run_test("셋", "{{ko-IPA|l=y}}", "ses", "rrr")
	def test_set_mr(self):
		self.run_test("셋", "{{ko-IPA|l=y}}", "set", "mr")
	def test_set_yr(self):
		self.run_test("셋", "{{ko-IPA|l=y}}", "sēys", "yr")
	def test_set_ipa(self):
		self.run_test("셋", "{{ko-IPA|l=y}}", "[sʰe̞(ː)t̚]", "ipa")

	def test_net_ph(self):
		self.run_test("넷", "{{ko-IPA|l=y}}", "넫(ː)", "ph")
	def test_net_rr(self):
		self.run_test("넷", "{{ko-IPA|l=y}}", "net", "rr")
	def test_net_rrr(self):
		self.run_test("넷", "{{ko-IPA|l=y}}", "nes", "rrr")
	def test_net_mr(self):
		self.run_test("넷", "{{ko-IPA|l=y}}", "net", "mr")
	def test_net_yr(self):
		self.run_test("넷", "{{ko-IPA|l=y}}", "nēys", "yr")
	def test_net_ipa(self):
		self.run_test("넷", "{{ko-IPA|l=y}}", "[ne̞(ː)t̚]", "ipa")

	def test_daseot_ph(self):
		self.run_test("다섯", "{{ko-IPA}}", "다섣", "ph")
	def test_daseot_rr(self):
		self.run_test("다섯", "{{ko-IPA}}", "daseot", "rr")
	def test_daseot_rrr(self):
		self.run_test("다섯", "{{ko-IPA}}", "daseos", "rrr")
	def test_daseot_mr(self):
		self.run_test("다섯", "{{ko-IPA}}", "tasŏt", "mr")
	def test_daseot_yr(self):
		self.run_test("다섯", "{{ko-IPA}}", "tases", "yr")
	def test_daseot_ipa(self):
		self.run_test("다섯", "{{ko-IPA}}", "[ta̠sʰʌ̹t̚]", "ipa")

	def test_yeoseot_ph(self):
		self.run_test("여섯", "{{ko-IPA}}", "여섣", "ph")
	def test_yeoseot_rr(self):
		self.run_test("여섯", "{{ko-IPA}}", "yeoseot", "rr")
	def test_yeoseot_rrr(self):
		self.run_test("여섯", "{{ko-IPA}}", "yeoseos", "rrr")
	def test_yeoseot_mr(self):
		self.run_test("여섯", "{{ko-IPA}}", "yŏsŏt", "mr")
	def test_yeoseot_yr(self):
		self.run_test("여섯", "{{ko-IPA}}", "yeses", "yr")
	def test_yeoseot_ipa(self):
		self.run_test("여섯", "{{ko-IPA}}", "[jʌ̹sʰʌ̹t̚]", "ipa")

	def test_ilgop_ph(self):
		self.run_test("일곱", "{{ko-IPA}}", "일곱", "ph")
	def test_ilgop_rr(self):
		self.run_test("일곱", "{{ko-IPA}}", "ilgop", "rr")
	def test_ilgop_rrr(self):
		self.run_test("일곱", "{{ko-IPA}}", "ilgob", "rrr")
	def test_ilgop_mr(self):
		self.run_test("일곱", "{{ko-IPA}}", "ilgop", "mr")
	def test_ilgop_yr(self):
		self.run_test("일곱", "{{ko-IPA}}", "il.kop", "yr")
	def test_ilgop_ipa(self):
		self.run_test("일곱", "{{ko-IPA}}", "[iɭɡo̞p̚]", "ipa")

	def test_yeodeol_ph(self):
		self.run_test("여덟", "{{ko-IPA}}", "여덜", "ph")
	def test_yeodeol_rr(self):
		self.run_test("여덟", "{{ko-IPA}}", "yeodeol", "rr")
	def test_yeodeol_rrr(self):
		self.run_test("여덟", "{{ko-IPA}}", "yeodeolb", "rrr")
	def test_yeodeol_mr(self):
		self.run_test("여덟", "{{ko-IPA}}", "yŏdŏl", "mr")
	def test_yeodeol_yr(self):
		self.run_test("여덟", "{{ko-IPA}}", "yetelp", "yr")
	def test_yeodeol_ipa(self):
		self.run_test("여덟", "{{ko-IPA}}", "[jʌ̹dʌ̹ɭ]", "ipa")

	def test_ahop_ph(self):
		self.run_test("아홉", "{{ko-IPA}}", "아홉", "ph")
	def test_ahop_rr(self):
		self.run_test("아홉", "{{ko-IPA}}", "ahop", "rr")
	def test_ahop_rrr(self):
		self.run_test("아홉", "{{ko-IPA}}", "ahob", "rrr")
	def test_ahop_mr(self):
		self.run_test("아홉", "{{ko-IPA}}", "ahop", "mr")
	def test_ahop_yr(self):
		self.run_test("아홉", "{{ko-IPA}}", "ahop", "yr")
	def test_ahop_ipa(self):
		self.run_test("아홉", "{{ko-IPA}}", "[a̠βo̞p̚]", "ipa")

	def test_yeol_ph(self):
		self.run_test("열", "{{ko-IPA}}", "열", "ph")
	def test_yeol_rr(self):
		self.run_test("열", "{{ko-IPA}}", "yeol", "rr")
	def test_yeol_rrr(self):
		self.run_test("열", "{{ko-IPA}}", "yeol", "rrr")
	def test_yeol_mr(self):
		self.run_test("열", "{{ko-IPA}}", "yŏl", "mr")
	def test_yeol_yr(self):
		self.run_test("열", "{{ko-IPA}}", "yel", "yr")
	def test_yeol_ipa(self):
		self.run_test("열", "{{ko-IPA}}", "[jʌ̹ɭ]", "ipa")
	def test_yeol_ph_1(self):
		self.run_test("열", "{{ko-IPA}}", "열", "ph")
	def test_yeol_rr_1(self):
		self.run_test("열", "{{ko-IPA}}", "yeol", "rr")
	def test_yeol_rrr_1(self):
		self.run_test("열", "{{ko-IPA}}", "yeol", "rrr")
	def test_yeol_mr_1(self):
		self.run_test("열", "{{ko-IPA}}", "yŏl", "mr")
	def test_yeol_yr_1(self):
		self.run_test("열", "{{ko-IPA}}", "yel", "yr")
	def test_yeol_ipa_1(self):
		self.run_test("열", "{{ko-IPA}}", "[jʌ̹ɭ]", "ipa")
	def test_yeol_ph_2(self):
		self.run_test("열", "{{ko-IPA}}", "열", "ph")
	def test_yeol_rr_2(self):
		self.run_test("열", "{{ko-IPA}}", "yeol", "rr")
	def test_yeol_rrr_2(self):
		self.run_test("열", "{{ko-IPA}}", "yeol", "rrr")
	def test_yeol_mr_2(self):
		self.run_test("열", "{{ko-IPA}}", "yŏl", "mr")
	def test_yeol_yr_2(self):
		self.run_test("열", "{{ko-IPA}}", "yel", "yr")
	def test_yeol_ipa_2(self):
		self.run_test("열", "{{ko-IPA}}", "[jʌ̹ɭ]", "ipa")

	def test_nun_ph(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "눈", "ph")
	def test_nun_rr(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nun", "rr")
	def test_nun_rrr(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nun", "rrr")
	def test_nun_mr(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nun", "mr")
	def test_nun_yr(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nwun", "yr")
	def test_nun_ipa(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "[nun]", "ipa")
	def test_nun_ph_1(self):
		self.run_test("눈", "{{ko-IPA|l=y|a=y}}", "눈(ː)", "ph")
	def test_nun_rr_1(self):
		self.run_test("눈", "{{ko-IPA|l=y|a=y}}", "nun", "rr")
	def test_nun_rrr_1(self):
		self.run_test("눈", "{{ko-IPA|l=y|a=y}}", "nun", "rrr")
	def test_nun_mr_1(self):
		self.run_test("눈", "{{ko-IPA|l=y|a=y}}", "nun", "mr")
	def test_nun_yr_1(self):
		self.run_test("눈", "{{ko-IPA|l=y|a=y}}", "nwūn", "yr")
	def test_nun_ipa_1(self):
		self.run_test("눈", "{{ko-IPA|l=y|a=y}}", "[nu(ː)n]", "ipa")
	def test_nun_ph_2(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "눈", "ph")
	def test_nun_rr_2(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nun", "rr")
	def test_nun_rrr_2(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nun", "rrr")
	def test_nun_mr_2(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nun", "mr")
	def test_nun_yr_2(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nwun", "yr")
	def test_nun_ipa_2(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "[nun]", "ipa")
	def test_nun_ph_3(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "눈", "ph")
	def test_nun_rr_3(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nun", "rr")
	def test_nun_rrr_3(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nun", "rrr")
	def test_nun_mr_3(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nun", "mr")
	def test_nun_yr_3(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "nwun", "yr")
	def test_nun_ipa_3(self):
		self.run_test("눈", "{{ko-IPA|a=y}}", "[nun]", "ipa")

	def test_ga_ph(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "가(ː)", "ph")
	def test_ga_rr(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "ga", "rr")
	def test_ga_rrr(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "ga", "rrr")
	def test_ga_mr(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "ka", "mr")
	def test_ga_yr(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "kā", "yr")
	def test_ga_ipa(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "[ka̠(ː)]", "ipa")
	def test_ga_ph_1(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "가", "ph")
	def test_ga_rr_1(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ga", "rr")
	def test_ga_rrr_1(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ga", "rrr")
	def test_ga_mr_1(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ka", "mr")
	def test_ga_yr_1(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ka", "yr")
	def test_ga_ipa_1(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "[ka̠]", "ipa")
	def test_ga_ph_2(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "가(ː)", "ph")
	def test_ga_rr_2(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "ga", "rr")
	def test_ga_rrr_2(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "ga", "rrr")
	def test_ga_mr_2(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "ka", "mr")
	def test_ga_yr_2(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "kā", "yr")
	def test_ga_ipa_2(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "[ka̠(ː)]", "ipa")
	def test_ga_ph_3(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "가(ː)", "ph")
	def test_ga_rr_3(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "ga", "rr")
	def test_ga_rrr_3(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "ga", "rrr")
	def test_ga_mr_3(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "ka", "mr")
	def test_ga_yr_3(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "kā", "yr")
	def test_ga_ipa_3(self):
		self.run_test("가", "{{ko-IPA|l=y|a=y}}", "[ka̠(ː)]", "ipa")
	def test_ga_ph_4(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "가", "ph")
	def test_ga_rr_4(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ga", "rr")
	def test_ga_rrr_4(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ga", "rrr")
	def test_ga_mr_4(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ka", "mr")
	def test_ga_yr_4(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ka", "yr")
	def test_ga_ipa_4(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "[ka̠]", "ipa")
	def test_ga_ph_5(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "가", "ph")
	def test_ga_rr_5(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ga", "rr")
	def test_ga_rrr_5(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ga", "rrr")
	def test_ga_mr_5(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ka", "mr")
	def test_ga_yr_5(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "ka", "yr")
	def test_ga_ipa_5(self):
		self.run_test("가", "{{ko-IPA|a=y}}", "[ka̠]", "ipa")

	def test_i_ph(self):
		self.run_test("이", "{{ko-IPA}}", "이", "ph")
	def test_i_rr(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rr")
	def test_i_rrr(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rrr")
	def test_i_mr(self):
		self.run_test("이", "{{ko-IPA}}", "i", "mr")
	def test_i_yr(self):
		self.run_test("이", "{{ko-IPA}}", "i", "yr")
	def test_i_ipa(self):
		self.run_test("이", "{{ko-IPA}}", "[i]", "ipa")
	def test_i_ph_1(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "이(ː)", "ph")
	def test_i_rr_1(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "i", "rr")
	def test_i_rrr_1(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "i", "rrr")
	def test_i_mr_1(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "i", "mr")
	def test_i_yr_1(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "ī", "yr")
	def test_i_ipa_1(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "[i(ː)]", "ipa")
	def test_i_ph_2(self):
		self.run_test("이", "{{ko-IPA}}", "이", "ph")
	def test_i_rr_2(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rr")
	def test_i_rrr_2(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rrr")
	def test_i_mr_2(self):
		self.run_test("이", "{{ko-IPA}}", "i", "mr")
	def test_i_yr_2(self):
		self.run_test("이", "{{ko-IPA}}", "i", "yr")
	def test_i_ipa_2(self):
		self.run_test("이", "{{ko-IPA}}", "[i]", "ipa")
	def test_ni_ph_3(self):
		self.run_test("이", "{{ko-IPA|니}}", "니", "ph")
	def test_ni_rr_3(self):
		self.run_test("이", "{{ko-IPA|니}}", "ni", "rr")
	def test_ni_rrr_3(self):
		self.run_test("이", "{{ko-IPA|니}}", "ni", "rrr")
	def test_ni_mr_3(self):
		self.run_test("이", "{{ko-IPA|니}}", "ni", "mr")
	def test_ni_yr_3(self):
		self.run_test("이", "{{ko-IPA|니}}", "ni", "yr")
	def test_ni_ipa_3(self):
		self.run_test("이", "{{ko-IPA|니}}", "[ni]", "ipa")
	def test_i_ph_4(self):
		self.run_test("이", "{{ko-IPA}}", "이", "ph")
	def test_i_rr_4(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rr")
	def test_i_rrr_4(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rrr")
	def test_i_mr_4(self):
		self.run_test("이", "{{ko-IPA}}", "i", "mr")
	def test_i_yr_4(self):
		self.run_test("이", "{{ko-IPA}}", "i", "yr")
	def test_i_ipa_4(self):
		self.run_test("이", "{{ko-IPA}}", "[i]", "ipa")
	def test_i_ph_5(self):
		self.run_test("이", "{{ko-IPA}}", "이", "ph")
	def test_i_rr_5(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rr")
	def test_i_rrr_5(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rrr")
	def test_i_mr_5(self):
		self.run_test("이", "{{ko-IPA}}", "i", "mr")
	def test_i_yr_5(self):
		self.run_test("이", "{{ko-IPA}}", "i", "yr")
	def test_i_ipa_5(self):
		self.run_test("이", "{{ko-IPA}}", "[i]", "ipa")
	def test_ni_ph_6(self):
		self.run_test("이", "{{ko-IPA|니}}", "니", "ph")
	def test_ni_rr_6(self):
		self.run_test("이", "{{ko-IPA|니}}", "ni", "rr")
	def test_ni_rrr_6(self):
		self.run_test("이", "{{ko-IPA|니}}", "ni", "rrr")
	def test_ni_mr_6(self):
		self.run_test("이", "{{ko-IPA|니}}", "ni", "mr")
	def test_ni_yr_6(self):
		self.run_test("이", "{{ko-IPA|니}}", "ni", "yr")
	def test_ni_ipa_6(self):
		self.run_test("이", "{{ko-IPA|니}}", "[ni]", "ipa")
	def test_I_ph_7(self):
		self.run_test("이", "{{ko-IPA|l=y|cap=y}}", "이(ː)", "ph")
	def test_I_rr_7(self):
		self.run_test("이", "{{ko-IPA|l=y|cap=y}}", "I", "rr")
	def test_I_rrr_7(self):
		self.run_test("이", "{{ko-IPA|l=y|cap=y}}", "I", "rrr")
	def test_I_mr_7(self):
		self.run_test("이", "{{ko-IPA|l=y|cap=y}}", "I", "mr")
	def test_I_yr_7(self):
		self.run_test("이", "{{ko-IPA|l=y|cap=y}}", "ī", "yr")
	def test_I_ipa_7(self):
		self.run_test("이", "{{ko-IPA|l=y|cap=y}}", "[i(ː)]", "ipa")
	def test_i_ph_8(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "이(ː)", "ph")
	def test_i_rr_8(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "i", "rr")
	def test_i_rrr_8(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "i", "rrr")
	def test_i_mr_8(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "i", "mr")
	def test_i_yr_8(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "ī", "yr")
	def test_i_ipa_8(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "[i(ː)]", "ipa")
	def test_i_ph_9(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "이(ː)", "ph")
	def test_i_rr_9(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "i", "rr")
	def test_i_rrr_9(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "i", "rrr")
	def test_i_mr_9(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "i", "mr")
	def test_i_yr_9(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "ī", "yr")
	def test_i_ipa_9(self):
		self.run_test("이", "{{ko-IPA|l=y}}", "[i(ː)]", "ipa")
	def test_i_ph_10(self):
		self.run_test("이", "{{ko-IPA}}", "이", "ph")
	def test_i_rr_10(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rr")
	def test_i_rrr_10(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rrr")
	def test_i_mr_10(self):
		self.run_test("이", "{{ko-IPA}}", "i", "mr")
	def test_i_yr_10(self):
		self.run_test("이", "{{ko-IPA}}", "i", "yr")
	def test_i_ipa_10(self):
		self.run_test("이", "{{ko-IPA}}", "[i]", "ipa")
	def test_i_ph_11(self):
		self.run_test("이", "{{ko-IPA}}", "이", "ph")
	def test_i_rr_11(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rr")
	def test_i_rrr_11(self):
		self.run_test("이", "{{ko-IPA}}", "i", "rrr")
	def test_i_mr_11(self):
		self.run_test("이", "{{ko-IPA}}", "i", "mr")
	def test_i_yr_11(self):
		self.run_test("이", "{{ko-IPA}}", "i", "yr")
	def test_i_ipa_11(self):
		self.run_test("이", "{{ko-IPA}}", "[i]", "ipa")

	def test_baem_ph(self):
		self.run_test("뱀", "{{ko-IPA|l=y}}", "뱀(ː)/벰(ː)", "ph")
	def test_baem_rr(self):
		self.run_test("뱀", "{{ko-IPA|l=y}}", "baem", "rr")
	def test_baem_rrr(self):
		self.run_test("뱀", "{{ko-IPA|l=y}}", "baem", "rrr")
	def test_baem_mr(self):
		self.run_test("뱀", "{{ko-IPA|l=y}}", "paem", "mr")
	def test_baem_yr(self):
		self.run_test("뱀", "{{ko-IPA|l=y}}", "pāym", "yr")
	def test_baem_ipa(self):
		self.run_test("뱀", "{{ko-IPA|l=y}}", "[pɛ(ː)m] ~ [pe̞(ː)m]", "ipa")

	def test_moraesangja_ph(self):
		self.run_test("모래상자", "{{ko-IPA}}", "모래상자/모레상자", "ph")
	def test_moraesangja_rr(self):
		self.run_test("모래상자", "{{ko-IPA}}", "moraesangja", "rr")
	def test_moraesangja_rrr(self):
		self.run_test("모래상자", "{{ko-IPA}}", "molaesangja", "rrr")
	def test_moraesangja_mr(self):
		self.run_test("모래상자", "{{ko-IPA}}", "moraesangja", "mr")
	def test_moraesangja_yr(self):
		self.run_test("모래상자", "{{ko-IPA}}", "molaysangca", "yr")
	def test_moraesangja_ipa(self):
		self.run_test("모래상자", "{{ko-IPA}}", "[mo̞ɾɛsʰa̠ŋd͡ʑa̠] ~ [mo̞ɾe̞sʰa̠ŋd͡ʑa̠]", "ipa")

	def test_Hananim_ph(self):
		self.run_test("하나님", "{{ko-IPA|cap=y}}", "하나님", "ph")
	def test_Hananim_rr(self):
		self.run_test("하나님", "{{ko-IPA|cap=y}}", "Hananim", "rr")
	def test_Hananim_rrr(self):
		self.run_test("하나님", "{{ko-IPA|cap=y}}", "Hananim", "rrr")
	def test_Hananim_mr(self):
		self.run_test("하나님", "{{ko-IPA|cap=y}}", "Hananim", "mr")
	def test_Hananim_yr(self):
		self.run_test("하나님", "{{ko-IPA|cap=y}}", "hananim", "yr")
	def test_Hananim_ipa(self):
		self.run_test("하나님", "{{ko-IPA|cap=y}}", "[ha̠na̠nim]", "ipa")

	def test_balgata_ph(self):
		self.run_test("발갛다", "{{ko-IPA|l=y}}", "발(ː)가타", "ph")
	def test_balgata_rr(self):
		self.run_test("발갛다", "{{ko-IPA|l=y}}", "balgata", "rr")
	def test_balgata_rrr(self):
		self.run_test("발갛다", "{{ko-IPA|l=y}}", "balgahda", "rrr")
	def test_balgata_mr(self):
		self.run_test("발갛다", "{{ko-IPA|l=y}}", "palgat'a", "mr")
	def test_balgata_yr(self):
		self.run_test("발갛다", "{{ko-IPA|l=y}}", "pāl.kahta", "yr")
	def test_balgata_ipa(self):
		self.run_test("발갛다", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)ɭɡa̠tʰa̠]", "ipa")

	def test_hada_ph(self):
		self.run_test("하다", "{{ko-IPA|a=Ko-하다.oga}}", "하다", "ph")
	def test_hada_rr(self):
		self.run_test("하다", "{{ko-IPA|a=Ko-하다.oga}}", "hada", "rr")
	def test_hada_rrr(self):
		self.run_test("하다", "{{ko-IPA|a=Ko-하다.oga}}", "hada", "rrr")
	def test_hada_mr(self):
		self.run_test("하다", "{{ko-IPA|a=Ko-하다.oga}}", "hada", "mr")
	def test_hada_yr(self):
		self.run_test("하다", "{{ko-IPA|a=Ko-하다.oga}}", "hata", "yr")
	def test_hada_ipa(self):
		self.run_test("하다", "{{ko-IPA|a=Ko-하다.oga}}", "[ha̠da̠]", "ipa")

	def test_eumseongmoeum_ph(self):
		self.run_test("음성모음", "{{ko-IPA}}", "음성모음", "ph")
	def test_eumseongmoeum_rr(self):
		self.run_test("음성모음", "{{ko-IPA}}", "eumseongmo'eum", "rr")
	def test_eumseongmoeum_rrr(self):
		self.run_test("음성모음", "{{ko-IPA}}", "eumseongmo'eum", "rrr")
	def test_eumseongmoeum_mr(self):
		self.run_test("음성모음", "{{ko-IPA}}", "ŭmsŏngmoŭm", "mr")
	def test_eumseongmoeum_yr(self):
		self.run_test("음성모음", "{{ko-IPA}}", "umsengmoum", "yr")
	def test_eumseongmoeum_ipa(self):
		self.run_test("음성모음", "{{ko-IPA}}", "[ɯmsʰʌ̹ŋmo̞ɯm]", "ipa")

	def test_goripji_ph(self):
		self.run_test("고립지", "{{ko-IPA}}", "고립찌", "ph")
	def test_goripji_rr(self):
		self.run_test("고립지", "{{ko-IPA}}", "goripji", "rr")
	def test_goripji_rrr(self):
		self.run_test("고립지", "{{ko-IPA}}", "golibji", "rrr")
	def test_goripji_mr(self):
		self.run_test("고립지", "{{ko-IPA}}", "koripchi", "mr")
	def test_goripji_yr(self):
		self.run_test("고립지", "{{ko-IPA}}", "kolipci", "yr")
	def test_goripji_ipa(self):
		self.run_test("고립지", "{{ko-IPA}}", "[ko̞ɾip̚t͡ɕ͈i]", "ipa")

	def test_dwaeji_ph(self):
		self.run_test("돼지", "{{ko-IPA|l=y}}", "돼(ː)지/뒈(ː)지", "ph")
	def test_dwaeji_rr(self):
		self.run_test("돼지", "{{ko-IPA|l=y}}", "dwaeji", "rr")
	def test_dwaeji_rrr(self):
		self.run_test("돼지", "{{ko-IPA|l=y}}", "dwaeji", "rrr")
	def test_dwaeji_mr(self):
		self.run_test("돼지", "{{ko-IPA|l=y}}", "twaeji", "mr")
	def test_dwaeji_yr(self):
		self.run_test("돼지", "{{ko-IPA|l=y}}", "twāyci", "yr")
	def test_dwaeji_ipa(self):
		self.run_test("돼지", "{{ko-IPA|l=y}}", "[ˈtwɛ(ː)d͡ʑi] ~ [ˈtwe̞(ː)d͡ʑi]", "ipa")

	def test_mal_ph(self):
		self.run_test("말", "{{ko-IPA|l=y}}", "말(ː)", "ph")
	def test_mal_rr(self):
		self.run_test("말", "{{ko-IPA|l=y}}", "mal", "rr")
	def test_mal_rrr(self):
		self.run_test("말", "{{ko-IPA|l=y}}", "mal", "rrr")
	def test_mal_mr(self):
		self.run_test("말", "{{ko-IPA|l=y}}", "mal", "mr")
	def test_mal_yr(self):
		self.run_test("말", "{{ko-IPA|l=y}}", "māl", "yr")
	def test_mal_ipa(self):
		self.run_test("말", "{{ko-IPA|l=y}}", "[ma̠(ː)ɭ]", "ipa")
	def test_mal_ph_1(self):
		self.run_test("말", "{{ko-IPA}}", "말", "ph")
	def test_mal_rr_1(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rr")
	def test_mal_rrr_1(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rrr")
	def test_mal_mr_1(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "mr")
	def test_mal_yr_1(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "yr")
	def test_mal_ipa_1(self):
		self.run_test("말", "{{ko-IPA}}", "[ma̠ɭ]", "ipa")
	def test_mal_ph_2(self):
		self.run_test("말", "{{ko-IPA}}", "말", "ph")
	def test_mal_rr_2(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rr")
	def test_mal_rrr_2(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rrr")
	def test_mal_mr_2(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "mr")
	def test_mal_yr_2(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "yr")
	def test_mal_ipa_2(self):
		self.run_test("말", "{{ko-IPA}}", "[ma̠ɭ]", "ipa")
	def test_mal_ph_3(self):
		self.run_test("말", "{{ko-IPA}}", "말", "ph")
	def test_mal_rr_3(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rr")
	def test_mal_rrr_3(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rrr")
	def test_mal_mr_3(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "mr")
	def test_mal_yr_3(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "yr")
	def test_mal_ipa_3(self):
		self.run_test("말", "{{ko-IPA}}", "[ma̠ɭ]", "ipa")
	def test_mal_ph_4(self):
		self.run_test("말", "{{ko-IPA}}", "말", "ph")
	def test_mal_rr_4(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rr")
	def test_mal_rrr_4(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rrr")
	def test_mal_mr_4(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "mr")
	def test_mal_yr_4(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "yr")
	def test_mal_ipa_4(self):
		self.run_test("말", "{{ko-IPA}}", "[ma̠ɭ]", "ipa")
	def test_mal_ph_5(self):
		self.run_test("말", "{{ko-IPA}}", "말", "ph")
	def test_mal_rr_5(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rr")
	def test_mal_rrr_5(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "rrr")
	def test_mal_mr_5(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "mr")
	def test_mal_yr_5(self):
		self.run_test("말", "{{ko-IPA}}", "mal", "yr")
	def test_mal_ipa_5(self):
		self.run_test("말", "{{ko-IPA}}", "[ma̠ɭ]", "ipa")

	def test_sori_ph(self):
		self.run_test("소리", "{{ko-IPA|a=Ko-소리.oga}}", "소리", "ph")
	def test_sori_rr(self):
		self.run_test("소리", "{{ko-IPA|a=Ko-소리.oga}}", "sori", "rr")
	def test_sori_rrr(self):
		self.run_test("소리", "{{ko-IPA|a=Ko-소리.oga}}", "soli", "rrr")
	def test_sori_mr(self):
		self.run_test("소리", "{{ko-IPA|a=Ko-소리.oga}}", "sori", "mr")
	def test_sori_yr(self):
		self.run_test("소리", "{{ko-IPA|a=Ko-소리.oga}}", "soli", "yr")
	def test_sori_ipa(self):
		self.run_test("소리", "{{ko-IPA|a=Ko-소리.oga}}", "[sʰo̞ɾi]", "ipa")

	def test_bansiot_ph(self):
		self.run_test("반시옷", "{{ko-IPA}}", "반시옫", "ph")
	def test_bansiot_rr(self):
		self.run_test("반시옷", "{{ko-IPA}}", "bansiot", "rr")
	def test_bansiot_rrr(self):
		self.run_test("반시옷", "{{ko-IPA}}", "bansios", "rrr")
	def test_bansiot_mr(self):
		self.run_test("반시옷", "{{ko-IPA}}", "pansiot", "mr")
	def test_bansiot_yr(self):
		self.run_test("반시옷", "{{ko-IPA}}", "pansios", "yr")
	def test_bansiot_ipa(self):
		self.run_test("반시옷", "{{ko-IPA}}", "[pa̠nɕʰio̞t̚]", "ipa")

	def test_giyeok_ph(self):
		self.run_test("기역", "{{ko-IPA}}", "기역", "ph")
	def test_giyeok_rr(self):
		self.run_test("기역", "{{ko-IPA}}", "giyeok", "rr")
	def test_giyeok_rrr(self):
		self.run_test("기역", "{{ko-IPA}}", "giyeog", "rrr")
	def test_giyeok_mr(self):
		self.run_test("기역", "{{ko-IPA}}", "kiyŏk", "mr")
	def test_giyeok_yr(self):
		self.run_test("기역", "{{ko-IPA}}", "kiyek", "yr")
	def test_giyeok_ipa(self):
		self.run_test("기역", "{{ko-IPA}}", "[kijʌ̹k̚]", "ipa")

	def test_chingu_ph(self):
		self.run_test("친구", "{{ko-IPA|a=y}}", "친구", "ph")
	def test_chingu_rr(self):
		self.run_test("친구", "{{ko-IPA|a=y}}", "chin'gu", "rr")
	def test_chingu_rrr(self):
		self.run_test("친구", "{{ko-IPA|a=y}}", "chingu", "rrr")
	def test_chingu_mr(self):
		self.run_test("친구", "{{ko-IPA|a=y}}", "ch'in'gu", "mr")
	def test_chingu_yr(self):
		self.run_test("친구", "{{ko-IPA|a=y}}", "chinkwu", "yr")
	def test_chingu_ipa(self):
		self.run_test("친구", "{{ko-IPA|a=y}}", "[t͡ɕʰinɡu]", "ipa")

	def test_eumhun_ph(self):
		self.run_test("음훈", "{{ko-IPA}}", "음훈", "ph")
	def test_eumhun_rr(self):
		self.run_test("음훈", "{{ko-IPA}}", "eumhun", "rr")
	def test_eumhun_rrr(self):
		self.run_test("음훈", "{{ko-IPA}}", "eumhun", "rrr")
	def test_eumhun_mr(self):
		self.run_test("음훈", "{{ko-IPA}}", "ŭmhun", "mr")
	def test_eumhun_yr(self):
		self.run_test("음훈", "{{ko-IPA}}", "umhwun", "yr")
	def test_eumhun_ipa(self):
		self.run_test("음훈", "{{ko-IPA}}", "[ɯmβun]", "ipa")

	def test_hun_ph(self):
		self.run_test("훈", "{{ko-IPA|l=y}}", "훈(ː)", "ph")
	def test_hun_rr(self):
		self.run_test("훈", "{{ko-IPA|l=y}}", "hun", "rr")
	def test_hun_rrr(self):
		self.run_test("훈", "{{ko-IPA|l=y}}", "hun", "rrr")
	def test_hun_mr(self):
		self.run_test("훈", "{{ko-IPA|l=y}}", "hun", "mr")
	def test_hun_yr(self):
		self.run_test("훈", "{{ko-IPA|l=y}}", "hwūn", "yr")
	def test_hun_ipa(self):
		self.run_test("훈", "{{ko-IPA|l=y}}", "[ɸʷu(ː)n]", "ipa")

	def test_ikda_ph(self):
		self.run_test("읽다", "{{ko-IPA|a=y}}", "익따", "ph")
	def test_ikda_rr(self):
		self.run_test("읽다", "{{ko-IPA|a=y}}", "ikda", "rr")
	def test_ikda_rrr(self):
		self.run_test("읽다", "{{ko-IPA|a=y}}", "ilgda", "rrr")
	def test_ikda_mr(self):
		self.run_test("읽다", "{{ko-IPA|a=y}}", "ikta", "mr")
	def test_ikda_yr(self):
		self.run_test("읽다", "{{ko-IPA|a=y}}", "ilkta", "yr")
	def test_ikda_ipa(self):
		self.run_test("읽다", "{{ko-IPA|a=y}}", "[ik̚t͈a̠]", "ipa")
	def test_ilda_ph_1(self):
		self.run_test("읽다", "{{ko-IPA|일다|l=y|com=1}}", "일(ː)따", "ph")
	def test_ilda_rr_1(self):
		self.run_test("읽다", "{{ko-IPA|일다|l=y|com=1}}", "ilda", "rr")
	def test_ilda_rrr_1(self):
		self.run_test("읽다", "{{ko-IPA|일다|l=y|com=1}}", "ilda", "rrr")
	def test_ilda_mr_1(self):
		self.run_test("읽다", "{{ko-IPA|일다|l=y|com=1}}", "ilta", "mr")
	def test_ilda_yr_1(self):
		self.run_test("읽다", "{{ko-IPA|일다|l=y|com=1}}", "īlqta", "yr")
	def test_ilda_ipa_1(self):
		self.run_test("읽다", "{{ko-IPA|일다|l=y|com=1}}", "[ˈi(ː)ɭt͈a̠]", "ipa")

	def test_joseoneo_ph(self):
		self.run_test("조선어", "{{ko-IPA}}", "조서너", "ph")
	def test_joseoneo_rr(self):
		self.run_test("조선어", "{{ko-IPA}}", "joseoneo", "rr")
	def test_joseoneo_rrr(self):
		self.run_test("조선어", "{{ko-IPA}}", "joseon'eo", "rrr")
	def test_joseoneo_mr(self):
		self.run_test("조선어", "{{ko-IPA}}", "chosŏnŏ", "mr")
	def test_joseoneo_yr(self):
		self.run_test("조선어", "{{ko-IPA}}", "cosen.e", "yr")
	def test_joseoneo_ipa(self):
		self.run_test("조선어", "{{ko-IPA}}", "[t͡ɕo̞sʰʌ̹nʌ̹]", "ipa")

	def test_reosiaeo_ph(self):
		self.run_test("러시아어", "{{ko-IPA}}", "러시아어", "ph")
	def test_reosiaeo_rr(self):
		self.run_test("러시아어", "{{ko-IPA}}", "reosia'eo", "rr")
	def test_reosiaeo_rrr(self):
		self.run_test("러시아어", "{{ko-IPA}}", "leosia'eo", "rrr")
	def test_reosiaeo_mr(self):
		self.run_test("러시아어", "{{ko-IPA}}", "rŏsiaŏ", "mr")
	def test_reosiaeo_yr(self):
		self.run_test("러시아어", "{{ko-IPA}}", "lesiae", "yr")
	def test_reosiaeo_ipa(self):
		self.run_test("러시아어", "{{ko-IPA}}", "[ɾʌ̹ɕʰia̠ʌ̹]", "ipa")

	def test_segye_ph(self):
		self.run_test("세계", "{{ko-IPA|l=y|a=y}}", "세(ː)계/세(ː)게", "ph")
	def test_segye_rr(self):
		self.run_test("세계", "{{ko-IPA|l=y|a=y}}", "segye", "rr")
	def test_segye_rrr(self):
		self.run_test("세계", "{{ko-IPA|l=y|a=y}}", "segye", "rrr")
	def test_segye_mr(self):
		self.run_test("세계", "{{ko-IPA|l=y|a=y}}", "segye", "mr")
	def test_segye_yr(self):
		self.run_test("세계", "{{ko-IPA|l=y|a=y}}", "sēykyey", "yr")
	def test_segye_ipa(self):
		self.run_test("세계", "{{ko-IPA|l=y|a=y}}", "[ˈsʰe̞(ː)ɡje̞] ~ [ˈsʰe̞(ː)ɡe̞]", "ipa")

	def test_nuri_ph(self):
		self.run_test("누리", "{{ko-ipa}}", "누리", "ph")
	def test_nuri_rr(self):
		self.run_test("누리", "{{ko-ipa}}", "nuri", "rr")
	def test_nuri_rrr(self):
		self.run_test("누리", "{{ko-ipa}}", "nuli", "rrr")
	def test_nuri_mr(self):
		self.run_test("누리", "{{ko-ipa}}", "nuri", "mr")
	def test_nuri_yr(self):
		self.run_test("누리", "{{ko-ipa}}", "nwuli", "yr")
	def test_nuri_ipa(self):
		self.run_test("누리", "{{ko-ipa}}", "[nuɾi]", "ipa")

	def test_ua_ph(self):
		self.run_test("우아", "{{ko-IPA}}", "우아", "ph")
	def test_ua_rr(self):
		self.run_test("우아", "{{ko-IPA}}", "ua", "rr")
	def test_ua_rrr(self):
		self.run_test("우아", "{{ko-IPA}}", "ua", "rrr")
	def test_ua_mr(self):
		self.run_test("우아", "{{ko-IPA}}", "ua", "mr")
	def test_ua_yr(self):
		self.run_test("우아", "{{ko-IPA}}", "wua", "yr")
	def test_ua_ipa(self):
		self.run_test("우아", "{{ko-IPA}}", "[ua̠]", "ipa")

	def test_dogi_ph(self):
		self.run_test("도기", "{{ko-IPA}}", "도기", "ph")
	def test_dogi_rr(self):
		self.run_test("도기", "{{ko-IPA}}", "dogi", "rr")
	def test_dogi_rrr(self):
		self.run_test("도기", "{{ko-IPA}}", "dogi", "rrr")
	def test_dogi_mr(self):
		self.run_test("도기", "{{ko-IPA}}", "togi", "mr")
	def test_dogi_yr(self):
		self.run_test("도기", "{{ko-IPA}}", "toki", "yr")
	def test_dogi_ipa(self):
		self.run_test("도기", "{{ko-IPA}}", "[to̞ɡi]", "ipa")

	def test_sarang_ph(self):
		self.run_test("사랑", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-사랑.wav}}", "사랑", "ph")
	def test_sarang_rr(self):
		self.run_test("사랑", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-사랑.wav}}", "sarang", "rr")
	def test_sarang_rrr(self):
		self.run_test("사랑", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-사랑.wav}}", "salang", "rrr")
	def test_sarang_mr(self):
		self.run_test("사랑", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-사랑.wav}}", "sarang", "mr")
	def test_sarang_yr(self):
		self.run_test("사랑", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-사랑.wav}}", "salang", "yr")
	def test_sarang_ipa(self):
		self.run_test("사랑", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-사랑.wav}}", "[sʰa̠ɾa̠ŋ]", "ipa")

	def test_seongnyu_ph(self):
		self.run_test("석류", "{{ko-IPA}}", "성뉴", "ph")
	def test_seongnyu_rr(self):
		self.run_test("석류", "{{ko-IPA}}", "seongnyu", "rr")
	def test_seongnyu_rrr(self):
		self.run_test("석류", "{{ko-IPA}}", "seoglyu", "rrr")
	def test_seongnyu_mr(self):
		self.run_test("석류", "{{ko-IPA}}", "sŏngnyu", "mr")
	def test_seongnyu_yr(self):
		self.run_test("석류", "{{ko-IPA}}", "seklyu", "yr")
	def test_seongnyu_ipa(self):
		self.run_test("석류", "{{ko-IPA}}", "[sʰʌ̹ŋɲu]", "ipa")

	def test_saeng_ph(self):
		self.run_test("생", "{{ko-IPA|l=y}}", "생(ː)/셍(ː)", "ph")
	def test_saeng_rr(self):
		self.run_test("생", "{{ko-IPA|l=y}}", "saeng", "rr")
	def test_saeng_rrr(self):
		self.run_test("생", "{{ko-IPA|l=y}}", "saeng", "rrr")
	def test_saeng_mr(self):
		self.run_test("생", "{{ko-IPA|l=y}}", "saeng", "mr")
	def test_saeng_yr(self):
		self.run_test("생", "{{ko-IPA|l=y}}", "sāyng", "yr")
	def test_saeng_ipa(self):
		self.run_test("생", "{{ko-IPA|l=y}}", "[sʰɛ(ː)ŋ] ~ [sʰe̞(ː)ŋ]", "ipa")

	def test_gyeon_ph(self):
		self.run_test("견", "{{ko-IPA}}", "견", "ph")
	def test_gyeon_rr(self):
		self.run_test("견", "{{ko-IPA}}", "gyeon", "rr")
	def test_gyeon_rrr(self):
		self.run_test("견", "{{ko-IPA}}", "gyeon", "rrr")
	def test_gyeon_mr(self):
		self.run_test("견", "{{ko-IPA}}", "kyŏn", "mr")
	def test_gyeon_yr(self):
		self.run_test("견", "{{ko-IPA}}", "kyen", "yr")
	def test_gyeon_ipa(self):
		self.run_test("견", "{{ko-IPA}}", "[kjʌ̹n]", "ipa")
	def test_gyeon_ph_1(self):
		self.run_test("견", "{{ko-IPA|l=y}}", "견(ː)", "ph")
	def test_gyeon_rr_1(self):
		self.run_test("견", "{{ko-IPA|l=y}}", "gyeon", "rr")
	def test_gyeon_rrr_1(self):
		self.run_test("견", "{{ko-IPA|l=y}}", "gyeon", "rrr")
	def test_gyeon_mr_1(self):
		self.run_test("견", "{{ko-IPA|l=y}}", "kyŏn", "mr")
	def test_gyeon_yr_1(self):
		self.run_test("견", "{{ko-IPA|l=y}}", "kyēn", "yr")
	def test_gyeon_ipa_1(self):
		self.run_test("견", "{{ko-IPA|l=y}}", "[kjɘ(ː)n]", "ipa")

	def test_jeok_ph(self):
		self.run_test("적", "{{ko-IPA}}", "적", "ph")
	def test_jeok_rr(self):
		self.run_test("적", "{{ko-IPA}}", "jeok", "rr")
	def test_jeok_rrr(self):
		self.run_test("적", "{{ko-IPA}}", "jeog", "rrr")
	def test_jeok_mr(self):
		self.run_test("적", "{{ko-IPA}}", "chŏk", "mr")
	def test_jeok_yr(self):
		self.run_test("적", "{{ko-IPA}}", "cek", "yr")
	def test_jeok_ipa(self):
		self.run_test("적", "{{ko-IPA}}", "[t͡ɕʌ̹k̚]", "ipa")
	def test_jeok_ph_1(self):
		self.run_test("적", "{{ko-IPA}}", "적", "ph")
	def test_jeok_rr_1(self):
		self.run_test("적", "{{ko-IPA}}", "jeok", "rr")
	def test_jeok_rrr_1(self):
		self.run_test("적", "{{ko-IPA}}", "jeog", "rrr")
	def test_jeok_mr_1(self):
		self.run_test("적", "{{ko-IPA}}", "chŏk", "mr")
	def test_jeok_yr_1(self):
		self.run_test("적", "{{ko-IPA}}", "cek", "yr")
	def test_jeok_ipa_1(self):
		self.run_test("적", "{{ko-IPA}}", "[t͡ɕʌ̹k̚]", "ipa")
	def test_jeok_ph_2(self):
		self.run_test("적", "{{ko-IPA}}", "적", "ph")
	def test_jeok_rr_2(self):
		self.run_test("적", "{{ko-IPA}}", "jeok", "rr")
	def test_jeok_rrr_2(self):
		self.run_test("적", "{{ko-IPA}}", "jeog", "rrr")
	def test_jeok_mr_2(self):
		self.run_test("적", "{{ko-IPA}}", "chŏk", "mr")
	def test_jeok_yr_2(self):
		self.run_test("적", "{{ko-IPA}}", "cek", "yr")
	def test_jeok_ipa_2(self):
		self.run_test("적", "{{ko-IPA}}", "[t͡ɕʌ̹k̚]", "ipa")
	def test_jeok_ph_3(self):
		self.run_test("적", "{{ko-IPA}}", "적", "ph")
	def test_jeok_rr_3(self):
		self.run_test("적", "{{ko-IPA}}", "jeok", "rr")
	def test_jeok_rrr_3(self):
		self.run_test("적", "{{ko-IPA}}", "jeog", "rrr")
	def test_jeok_mr_3(self):
		self.run_test("적", "{{ko-IPA}}", "chŏk", "mr")
	def test_jeok_yr_3(self):
		self.run_test("적", "{{ko-IPA}}", "cek", "yr")
	def test_jeok_ipa_3(self):
		self.run_test("적", "{{ko-IPA}}", "[t͡ɕʌ̹k̚]", "ipa")
	def test_jeok_ph_4(self):
		self.run_test("적", "{{ko-IPA}}", "적", "ph")
	def test_jeok_rr_4(self):
		self.run_test("적", "{{ko-IPA}}", "jeok", "rr")
	def test_jeok_rrr_4(self):
		self.run_test("적", "{{ko-IPA}}", "jeog", "rrr")
	def test_jeok_mr_4(self):
		self.run_test("적", "{{ko-IPA}}", "chŏk", "mr")
	def test_jeok_yr_4(self):
		self.run_test("적", "{{ko-IPA}}", "cek", "yr")
	def test_jeok_ipa_4(self):
		self.run_test("적", "{{ko-IPA}}", "[t͡ɕʌ̹k̚]", "ipa")
	def test_jeok_ph_5(self):
		self.run_test("적", "{{ko-IPA}}", "적", "ph")
	def test_jeok_rr_5(self):
		self.run_test("적", "{{ko-IPA}}", "jeok", "rr")
	def test_jeok_rrr_5(self):
		self.run_test("적", "{{ko-IPA}}", "jeog", "rrr")
	def test_jeok_mr_5(self):
		self.run_test("적", "{{ko-IPA}}", "chŏk", "mr")
	def test_jeok_yr_5(self):
		self.run_test("적", "{{ko-IPA}}", "cek", "yr")
	def test_jeok_ipa_5(self):
		self.run_test("적", "{{ko-IPA}}", "[t͡ɕʌ̹k̚]", "ipa")
	def test_jeok_ph_6(self):
		self.run_test("적", "{{ko-IPA}}", "적", "ph")
	def test_jeok_rr_6(self):
		self.run_test("적", "{{ko-IPA}}", "jeok", "rr")
	def test_jeok_rrr_6(self):
		self.run_test("적", "{{ko-IPA}}", "jeog", "rrr")
	def test_jeok_mr_6(self):
		self.run_test("적", "{{ko-IPA}}", "chŏk", "mr")
	def test_jeok_yr_6(self):
		self.run_test("적", "{{ko-IPA}}", "cek", "yr")
	def test_jeok_ipa_6(self):
		self.run_test("적", "{{ko-IPA}}", "[t͡ɕʌ̹k̚]", "ipa")
	def test_jeok_ph_7(self):
		self.run_test("적", "{{ko-IPA}}", "적", "ph")
	def test_jeok_rr_7(self):
		self.run_test("적", "{{ko-IPA}}", "jeok", "rr")
	def test_jeok_rrr_7(self):
		self.run_test("적", "{{ko-IPA}}", "jeog", "rrr")
	def test_jeok_mr_7(self):
		self.run_test("적", "{{ko-IPA}}", "chŏk", "mr")
	def test_jeok_yr_7(self):
		self.run_test("적", "{{ko-IPA}}", "cek", "yr")
	def test_jeok_ipa_7(self):
		self.run_test("적", "{{ko-IPA}}", "[t͡ɕʌ̹k̚]", "ipa")

	def test_chil_ph(self):
		self.run_test("칠", "{{ko-IPA}}", "칠", "ph")
	def test_chil_rr(self):
		self.run_test("칠", "{{ko-IPA}}", "chil", "rr")
	def test_chil_rrr(self):
		self.run_test("칠", "{{ko-IPA}}", "chil", "rrr")
	def test_chil_mr(self):
		self.run_test("칠", "{{ko-IPA}}", "ch'il", "mr")
	def test_chil_yr(self):
		self.run_test("칠", "{{ko-IPA}}", "chil", "yr")
	def test_chil_ipa(self):
		self.run_test("칠", "{{ko-IPA}}", "[t͡ɕʰiɭ]", "ipa")

	def test_simda_ph(self):
		self.run_test("심다", "{{ko-IPA|l=y|com=1}}", "심(ː)따", "ph")
	def test_simda_rr(self):
		self.run_test("심다", "{{ko-IPA|l=y|com=1}}", "simda", "rr")
	def test_simda_rrr(self):
		self.run_test("심다", "{{ko-IPA|l=y|com=1}}", "simda", "rrr")
	def test_simda_mr(self):
		self.run_test("심다", "{{ko-IPA|l=y|com=1}}", "simta", "mr")
	def test_simda_yr(self):
		self.run_test("심다", "{{ko-IPA|l=y|com=1}}", "sīmqta", "yr")
	def test_simda_ipa(self):
		self.run_test("심다", "{{ko-IPA|l=y|com=1}}", "[ˈɕʰi(ː)mt͈a̠]", "ipa")

	def test_saek_ph(self):
		self.run_test("색", "{{ko-IPA}}", "색/섹", "ph")
	def test_saek_rr(self):
		self.run_test("색", "{{ko-IPA}}", "saek", "rr")
	def test_saek_rrr(self):
		self.run_test("색", "{{ko-IPA}}", "saeg", "rrr")
	def test_saek_mr(self):
		self.run_test("색", "{{ko-IPA}}", "saek", "mr")
	def test_saek_yr(self):
		self.run_test("색", "{{ko-IPA}}", "sayk", "yr")
	def test_saek_ipa(self):
		self.run_test("색", "{{ko-IPA}}", "[sʰɛk̚] ~ [sʰe̞k̚]", "ipa")

	def test_hwa_ph(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "화(ː)", "ph")
	def test_hwa_rr(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "hwa", "rr")
	def test_hwa_rrr(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "hwa", "rrr")
	def test_hwa_mr(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "hwa", "mr")
	def test_hwa_yr(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "hwā", "yr")
	def test_hwa_ipa(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "[ɸwa̠(ː)]", "ipa")
	def test_hwa_ph_1(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "화(ː)", "ph")
	def test_hwa_rr_1(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "hwa", "rr")
	def test_hwa_rrr_1(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "hwa", "rrr")
	def test_hwa_mr_1(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "hwa", "mr")
	def test_hwa_yr_1(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "hwā", "yr")
	def test_hwa_ipa_1(self):
		self.run_test("화", "{{ko-IPA|l=y}}", "[ɸwa̠(ː)]", "ipa")
	def test_hwa_ph_2(self):
		self.run_test("화", "{{ko-IPA}}", "화", "ph")
	def test_hwa_rr_2(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "rr")
	def test_hwa_rrr_2(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "rrr")
	def test_hwa_mr_2(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "mr")
	def test_hwa_yr_2(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "yr")
	def test_hwa_ipa_2(self):
		self.run_test("화", "{{ko-IPA}}", "[ɸwa̠]", "ipa")
	def test_hwa_ph_3(self):
		self.run_test("화", "{{ko-IPA}}", "화", "ph")
	def test_hwa_rr_3(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "rr")
	def test_hwa_rrr_3(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "rrr")
	def test_hwa_mr_3(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "mr")
	def test_hwa_yr_3(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "yr")
	def test_hwa_ipa_3(self):
		self.run_test("화", "{{ko-IPA}}", "[ɸwa̠]", "ipa")
	def test_hwa_ph_4(self):
		self.run_test("화", "{{ko-IPA}}", "화", "ph")
	def test_hwa_rr_4(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "rr")
	def test_hwa_rrr_4(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "rrr")
	def test_hwa_mr_4(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "mr")
	def test_hwa_yr_4(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "yr")
	def test_hwa_ipa_4(self):
		self.run_test("화", "{{ko-IPA}}", "[ɸwa̠]", "ipa")
	def test_hwa_ph_5(self):
		self.run_test("화", "{{ko-IPA}}", "화", "ph")
	def test_hwa_rr_5(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "rr")
	def test_hwa_rrr_5(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "rrr")
	def test_hwa_mr_5(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "mr")
	def test_hwa_yr_5(self):
		self.run_test("화", "{{ko-IPA}}", "hwa", "yr")
	def test_hwa_ipa_5(self):
		self.run_test("화", "{{ko-IPA}}", "[ɸwa̠]", "ipa")

	def test_man_ph(self):
		self.run_test("만", "{{ko-ipa|l=y}}", "만(ː)", "ph")
	def test_man_rr(self):
		self.run_test("만", "{{ko-ipa|l=y}}", "man", "rr")
	def test_man_rrr(self):
		self.run_test("만", "{{ko-ipa|l=y}}", "man", "rrr")
	def test_man_mr(self):
		self.run_test("만", "{{ko-ipa|l=y}}", "man", "mr")
	def test_man_yr(self):
		self.run_test("만", "{{ko-ipa|l=y}}", "mān", "yr")
	def test_man_ipa(self):
		self.run_test("만", "{{ko-ipa|l=y}}", "[ma̠(ː)n]", "ipa")
	def test_man_ph_1(self):
		self.run_test("만", "{{ko-ipa}}", "만", "ph")
	def test_man_rr_1(self):
		self.run_test("만", "{{ko-ipa}}", "man", "rr")
	def test_man_rrr_1(self):
		self.run_test("만", "{{ko-ipa}}", "man", "rrr")
	def test_man_mr_1(self):
		self.run_test("만", "{{ko-ipa}}", "man", "mr")
	def test_man_yr_1(self):
		self.run_test("만", "{{ko-ipa}}", "man", "yr")
	def test_man_ipa_1(self):
		self.run_test("만", "{{ko-ipa}}", "[ma̠n]", "ipa")
	def test_man_ph_2(self):
		self.run_test("만", "{{ko-ipa}}", "만", "ph")
	def test_man_rr_2(self):
		self.run_test("만", "{{ko-ipa}}", "man", "rr")
	def test_man_rrr_2(self):
		self.run_test("만", "{{ko-ipa}}", "man", "rrr")
	def test_man_mr_2(self):
		self.run_test("만", "{{ko-ipa}}", "man", "mr")
	def test_man_yr_2(self):
		self.run_test("만", "{{ko-ipa}}", "man", "yr")
	def test_man_ipa_2(self):
		self.run_test("만", "{{ko-ipa}}", "[ma̠n]", "ipa")

	def test_in_ph(self):
		self.run_test("인", "{{ko-IPA}}", "인", "ph")
	def test_in_rr(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rr")
	def test_in_rrr(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rrr")
	def test_in_mr(self):
		self.run_test("인", "{{ko-IPA}}", "in", "mr")
	def test_in_yr(self):
		self.run_test("인", "{{ko-IPA}}", "in", "yr")
	def test_in_ipa(self):
		self.run_test("인", "{{ko-IPA}}", "[in]", "ipa")
	def test_in_ph_1(self):
		self.run_test("인", "{{ko-IPA}}", "인", "ph")
	def test_in_rr_1(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rr")
	def test_in_rrr_1(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rrr")
	def test_in_mr_1(self):
		self.run_test("인", "{{ko-IPA}}", "in", "mr")
	def test_in_yr_1(self):
		self.run_test("인", "{{ko-IPA}}", "in", "yr")
	def test_in_ipa_1(self):
		self.run_test("인", "{{ko-IPA}}", "[in]", "ipa")
	def test_in_ph_2(self):
		self.run_test("인", "{{ko-IPA}}", "인", "ph")
	def test_in_rr_2(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rr")
	def test_in_rrr_2(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rrr")
	def test_in_mr_2(self):
		self.run_test("인", "{{ko-IPA}}", "in", "mr")
	def test_in_yr_2(self):
		self.run_test("인", "{{ko-IPA}}", "in", "yr")
	def test_in_ipa_2(self):
		self.run_test("인", "{{ko-IPA}}", "[in]", "ipa")
	def test_in_ph_3(self):
		self.run_test("인", "{{ko-IPA}}", "인", "ph")
	def test_in_rr_3(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rr")
	def test_in_rrr_3(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rrr")
	def test_in_mr_3(self):
		self.run_test("인", "{{ko-IPA}}", "in", "mr")
	def test_in_yr_3(self):
		self.run_test("인", "{{ko-IPA}}", "in", "yr")
	def test_in_ipa_3(self):
		self.run_test("인", "{{ko-IPA}}", "[in]", "ipa")
	def test_in_ph_4(self):
		self.run_test("인", "{{ko-IPA}}", "인", "ph")
	def test_in_rr_4(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rr")
	def test_in_rrr_4(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rrr")
	def test_in_mr_4(self):
		self.run_test("인", "{{ko-IPA}}", "in", "mr")
	def test_in_yr_4(self):
		self.run_test("인", "{{ko-IPA}}", "in", "yr")
	def test_in_ipa_4(self):
		self.run_test("인", "{{ko-IPA}}", "[in]", "ipa")
	def test_in_ph_5(self):
		self.run_test("인", "{{ko-IPA}}", "인", "ph")
	def test_in_rr_5(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rr")
	def test_in_rrr_5(self):
		self.run_test("인", "{{ko-IPA}}", "in", "rrr")
	def test_in_mr_5(self):
		self.run_test("인", "{{ko-IPA}}", "in", "mr")
	def test_in_yr_5(self):
		self.run_test("인", "{{ko-IPA}}", "in", "yr")
	def test_in_ipa_5(self):
		self.run_test("인", "{{ko-IPA}}", "[in]", "ipa")

	def test_sangsil_ph(self):
		self.run_test("상실", "{{ko-IPA}}", "상실", "ph")
	def test_sangsil_rr(self):
		self.run_test("상실", "{{ko-IPA}}", "sangsil", "rr")
	def test_sangsil_rrr(self):
		self.run_test("상실", "{{ko-IPA}}", "sangsil", "rrr")
	def test_sangsil_mr(self):
		self.run_test("상실", "{{ko-IPA}}", "sangsil", "mr")
	def test_sangsil_yr(self):
		self.run_test("상실", "{{ko-IPA}}", "sangsil", "yr")
	def test_sangsil_ipa(self):
		self.run_test("상실", "{{ko-IPA}}", "[sʰa̠ŋɕʰiɭ]", "ipa")

	def test_heuk_ph(self):
		self.run_test("흑", "{{ko-IPA}}", "흑", "ph")
	def test_heuk_rr(self):
		self.run_test("흑", "{{ko-IPA}}", "heuk", "rr")
	def test_heuk_rrr(self):
		self.run_test("흑", "{{ko-IPA}}", "heug", "rrr")
	def test_heuk_mr(self):
		self.run_test("흑", "{{ko-IPA}}", "hŭk", "mr")
	def test_heuk_yr(self):
		self.run_test("흑", "{{ko-IPA}}", "huk", "yr")
	def test_heuk_ipa(self):
		self.run_test("흑", "{{ko-IPA}}", "[xɯk̚]", "ipa")

	def test_seo_ph(self):
		self.run_test("서", "{{ko-IPA}}", "서", "ph")
	def test_seo_rr(self):
		self.run_test("서", "{{ko-IPA}}", "seo", "rr")
	def test_seo_rrr(self):
		self.run_test("서", "{{ko-IPA}}", "seo", "rrr")
	def test_seo_mr(self):
		self.run_test("서", "{{ko-IPA}}", "sŏ", "mr")
	def test_seo_yr(self):
		self.run_test("서", "{{ko-IPA}}", "se", "yr")
	def test_seo_ipa(self):
		self.run_test("서", "{{ko-IPA}}", "[sʰʌ̹]", "ipa")
	def test_seo_ph_1(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "서(ː)", "ph")
	def test_seo_rr_1(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "seo", "rr")
	def test_seo_rrr_1(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "seo", "rrr")
	def test_seo_mr_1(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "sŏ", "mr")
	def test_seo_yr_1(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "sē", "yr")
	def test_seo_ipa_1(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "[sʰɘ(ː)]", "ipa")
	def test_seo_ph_2(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "서(ː)", "ph")
	def test_seo_rr_2(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "seo", "rr")
	def test_seo_rrr_2(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "seo", "rrr")
	def test_seo_mr_2(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "sŏ", "mr")
	def test_seo_yr_2(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "sē", "yr")
	def test_seo_ipa_2(self):
		self.run_test("서", "{{ko-IPA|l=y}}", "[sʰɘ(ː)]", "ipa")

	def test_cha_ph(self):
		self.run_test("차", "{{ko-ipa}}", "차", "ph")
	def test_cha_rr(self):
		self.run_test("차", "{{ko-ipa}}", "cha", "rr")
	def test_cha_rrr(self):
		self.run_test("차", "{{ko-ipa}}", "cha", "rrr")
	def test_cha_mr(self):
		self.run_test("차", "{{ko-ipa}}", "ch'a", "mr")
	def test_cha_yr(self):
		self.run_test("차", "{{ko-ipa}}", "cha", "yr")
	def test_cha_ipa(self):
		self.run_test("차", "{{ko-ipa}}", "[t͡ɕʰa̠]", "ipa")

	def test_oneul_ph(self):
		self.run_test("오늘", "{{ko-IPA|a=y}}", "오늘", "ph")
	def test_oneul_rr(self):
		self.run_test("오늘", "{{ko-IPA|a=y}}", "oneul", "rr")
	def test_oneul_rrr(self):
		self.run_test("오늘", "{{ko-IPA|a=y}}", "oneul", "rrr")
	def test_oneul_mr(self):
		self.run_test("오늘", "{{ko-IPA|a=y}}", "onŭl", "mr")
	def test_oneul_yr(self):
		self.run_test("오늘", "{{ko-IPA|a=y}}", "onul", "yr")
	def test_oneul_ipa(self):
		self.run_test("오늘", "{{ko-IPA|a=y}}", "[o̞nɯɭ]", "ipa")

	def test_sim_ph(self):
		self.run_test("심", "{{ko-IPA}}", "심", "ph")
	def test_sim_rr(self):
		self.run_test("심", "{{ko-IPA}}", "sim", "rr")
	def test_sim_rrr(self):
		self.run_test("심", "{{ko-IPA}}", "sim", "rrr")
	def test_sim_mr(self):
		self.run_test("심", "{{ko-IPA}}", "sim", "mr")
	def test_sim_yr(self):
		self.run_test("심", "{{ko-IPA}}", "sim", "yr")
	def test_sim_ipa(self):
		self.run_test("심", "{{ko-IPA}}", "[ɕʰim]", "ipa")

	def test_nanmal_ph(self):
		self.run_test("낱말", "{{ko-IPA|l=y}}", "난(ː)말", "ph")
	def test_nanmal_rr(self):
		self.run_test("낱말", "{{ko-IPA|l=y}}", "nanmal", "rr")
	def test_nanmal_rrr(self):
		self.run_test("낱말", "{{ko-IPA|l=y}}", "natmal", "rrr")
	def test_nanmal_mr(self):
		self.run_test("낱말", "{{ko-IPA|l=y}}", "nanmal", "mr")
	def test_nanmal_yr(self):
		self.run_test("낱말", "{{ko-IPA|l=y}}", "nāthmal", "yr")
	def test_nanmal_ipa(self):
		self.run_test("낱말", "{{ko-IPA|l=y}}", "[ˈna̠(ː)nma̠ɭ]", "ipa")

	def test_yo_ph(self):
		self.run_test("요", "{{ko-IPA}}", "요", "ph")
	def test_yo_rr(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "rr")
	def test_yo_rrr(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "rrr")
	def test_yo_mr(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "mr")
	def test_yo_yr(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "yr")
	def test_yo_ipa(self):
		self.run_test("요", "{{ko-IPA}}", "[jo]", "ipa")
	def test_yo_ph_1(self):
		self.run_test("요", "{{ko-IPA}}", "요", "ph")
	def test_yo_rr_1(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "rr")
	def test_yo_rrr_1(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "rrr")
	def test_yo_mr_1(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "mr")
	def test_yo_yr_1(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "yr")
	def test_yo_ipa_1(self):
		self.run_test("요", "{{ko-IPA}}", "[jo]", "ipa")
	def test_yo_ph_2(self):
		self.run_test("요", "{{ko-IPA}}", "요", "ph")
	def test_yo_rr_2(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "rr")
	def test_yo_rrr_2(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "rrr")
	def test_yo_mr_2(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "mr")
	def test_yo_yr_2(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "yr")
	def test_yo_ipa_2(self):
		self.run_test("요", "{{ko-IPA}}", "[jo]", "ipa")
	def test_yo_ph_3(self):
		self.run_test("요", "{{ko-IPA}}", "요", "ph")
	def test_yo_rr_3(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "rr")
	def test_yo_rrr_3(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "rrr")
	def test_yo_mr_3(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "mr")
	def test_yo_yr_3(self):
		self.run_test("요", "{{ko-IPA}}", "yo", "yr")
	def test_yo_ipa_3(self):
		self.run_test("요", "{{ko-IPA}}", "[jo]", "ipa")
	def test_Yo_ph_4(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "요", "ph")
	def test_Yo_rr_4(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "Yo", "rr")
	def test_Yo_rrr_4(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "Yo", "rrr")
	def test_Yo_mr_4(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "Yo", "mr")
	def test_Yo_yr_4(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "yo", "yr")
	def test_Yo_ipa_4(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "[jo]", "ipa")
	def test_Yo_ph_5(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "요", "ph")
	def test_Yo_rr_5(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "Yo", "rr")
	def test_Yo_rrr_5(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "Yo", "rrr")
	def test_Yo_mr_5(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "Yo", "mr")
	def test_Yo_yr_5(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "yo", "yr")
	def test_Yo_ipa_5(self):
		self.run_test("요", "{{ko-IPA|cap=y}}", "[jo]", "ipa")

	def test_ireum_ph(self):
		self.run_test("이름", "{{ko-IPA|a=y}}", "이름", "ph")
	def test_ireum_rr(self):
		self.run_test("이름", "{{ko-IPA|a=y}}", "ireum", "rr")
	def test_ireum_rrr(self):
		self.run_test("이름", "{{ko-IPA|a=y}}", "ileum", "rrr")
	def test_ireum_mr(self):
		self.run_test("이름", "{{ko-IPA|a=y}}", "irŭm", "mr")
	def test_ireum_yr(self):
		self.run_test("이름", "{{ko-IPA|a=y}}", "ilum", "yr")
	def test_ireum_ipa(self):
		self.run_test("이름", "{{ko-IPA|a=y}}", "[iɾɯm]", "ipa")

	def test_somun_ph(self):
		self.run_test("소문", "{{ko-IPA|l=y}}", "소(ː)문", "ph")
	def test_somun_rr(self):
		self.run_test("소문", "{{ko-IPA|l=y}}", "somun", "rr")
	def test_somun_rrr(self):
		self.run_test("소문", "{{ko-IPA|l=y}}", "somun", "rrr")
	def test_somun_mr(self):
		self.run_test("소문", "{{ko-IPA|l=y}}", "somun", "mr")
	def test_somun_yr(self):
		self.run_test("소문", "{{ko-IPA|l=y}}", "sōmun", "yr")
	def test_somun_ipa(self):
		self.run_test("소문", "{{ko-IPA|l=y}}", "[ˈsʰo̞(ː)mun]", "ipa")

	def test_han_ph(self):
		self.run_test("한", "{{ko-IPA}}", "한", "ph")
	def test_han_rr(self):
		self.run_test("한", "{{ko-IPA}}", "han", "rr")
	def test_han_rrr(self):
		self.run_test("한", "{{ko-IPA}}", "han", "rrr")
	def test_han_mr(self):
		self.run_test("한", "{{ko-IPA}}", "han", "mr")
	def test_han_yr(self):
		self.run_test("한", "{{ko-IPA}}", "han", "yr")
	def test_han_ipa(self):
		self.run_test("한", "{{ko-IPA}}", "[ha̠n]", "ipa")
	def test_han_ph_1(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "한(ː)", "ph")
	def test_han_rr_1(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "rr")
	def test_han_rrr_1(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "rrr")
	def test_han_mr_1(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "mr")
	def test_han_yr_1(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "hān", "yr")
	def test_han_ipa_1(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "[ha̠(ː)n]", "ipa")
	def test_han_ph_2(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "한(ː)", "ph")
	def test_han_rr_2(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "rr")
	def test_han_rrr_2(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "rrr")
	def test_han_mr_2(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "mr")
	def test_han_yr_2(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "hān", "yr")
	def test_han_ipa_2(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "[ha̠(ː)n]", "ipa")
	def test_han_ph_3(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "한(ː)", "ph")
	def test_han_rr_3(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "rr")
	def test_han_rrr_3(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "rrr")
	def test_han_mr_3(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "mr")
	def test_han_yr_3(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "hān", "yr")
	def test_han_ipa_3(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "[ha̠(ː)n]", "ipa")
	def test_han_ph_4(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "한(ː)", "ph")
	def test_han_rr_4(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "rr")
	def test_han_rrr_4(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "rrr")
	def test_han_mr_4(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "han", "mr")
	def test_han_yr_4(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "hān", "yr")
	def test_han_ipa_4(self):
		self.run_test("한", "{{ko-IPA|l=y}}", "[ha̠(ː)n]", "ipa")

	def test_su_ph(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "수", "ph")
	def test_su_rr(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rr")
	def test_su_rrr(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rrr")
	def test_su_mr(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "mr")
	def test_su_yr(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "swu", "yr")
	def test_su_ipa(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "[sʰu]", "ipa")
	def test_su_ph_1(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "수(ː)", "ph")
	def test_su_rr_1(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "su", "rr")
	def test_su_rrr_1(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "su", "rrr")
	def test_su_mr_1(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "su", "mr")
	def test_su_yr_1(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "swū", "yr")
	def test_su_ipa_1(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "[sʰu(ː)]", "ipa")
	def test_su_ph_2(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "수", "ph")
	def test_su_rr_2(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rr")
	def test_su_rrr_2(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rrr")
	def test_su_mr_2(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "mr")
	def test_su_yr_2(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "swu", "yr")
	def test_su_ipa_2(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "[sʰu]", "ipa")
	def test_su_ph_3(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "수", "ph")
	def test_su_rr_3(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rr")
	def test_su_rrr_3(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rrr")
	def test_su_mr_3(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "mr")
	def test_su_yr_3(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "swu", "yr")
	def test_su_ipa_3(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "[sʰu]", "ipa")
	def test_su_ph_4(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "수(ː)", "ph")
	def test_su_rr_4(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "su", "rr")
	def test_su_rrr_4(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "su", "rrr")
	def test_su_mr_4(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "su", "mr")
	def test_su_yr_4(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "swū", "yr")
	def test_su_ipa_4(self):
		self.run_test("수", "{{ko-IPA|l=y}}", "[sʰu(ː)]", "ipa")
	def test_su_ph_5(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "수", "ph")
	def test_su_rr_5(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rr")
	def test_su_rrr_5(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rrr")
	def test_su_mr_5(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "mr")
	def test_su_yr_5(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "swu", "yr")
	def test_su_ipa_5(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "[sʰu]", "ipa")
	def test_su_ph_6(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "수", "ph")
	def test_su_rr_6(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rr")
	def test_su_rrr_6(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "rrr")
	def test_su_mr_6(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "su", "mr")
	def test_su_yr_6(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "swu", "yr")
	def test_su_ipa_6(self):
		self.run_test("수", "{{ko-IPA|a=Ko-수.ogg}}", "[sʰu]", "ipa")
	def test_su_ph_7(self):
		self.run_test("수", "{{ko-IPA}}", "수", "ph")
	def test_su_rr_7(self):
		self.run_test("수", "{{ko-IPA}}", "su", "rr")
	def test_su_rrr_7(self):
		self.run_test("수", "{{ko-IPA}}", "su", "rrr")
	def test_su_mr_7(self):
		self.run_test("수", "{{ko-IPA}}", "su", "mr")
	def test_su_yr_7(self):
		self.run_test("수", "{{ko-IPA}}", "swu", "yr")
	def test_su_ipa_7(self):
		self.run_test("수", "{{ko-IPA}}", "[sʰu]", "ipa")
	def test_Su_ph_8(self):
		self.run_test("수", "{{ko-IPA|cap=y}}", "수", "ph")
	def test_Su_rr_8(self):
		self.run_test("수", "{{ko-IPA|cap=y}}", "Su", "rr")
	def test_Su_rrr_8(self):
		self.run_test("수", "{{ko-IPA|cap=y}}", "Su", "rrr")
	def test_Su_mr_8(self):
		self.run_test("수", "{{ko-IPA|cap=y}}", "Su", "mr")
	def test_Su_yr_8(self):
		self.run_test("수", "{{ko-IPA|cap=y}}", "swu", "yr")
	def test_Su_ipa_8(self):
		self.run_test("수", "{{ko-IPA|cap=y}}", "[sʰu]", "ipa")
	def test_su_ph_9(self):
		self.run_test("수", "{{ko-IPA}}", "수", "ph")
	def test_su_rr_9(self):
		self.run_test("수", "{{ko-IPA}}", "su", "rr")
	def test_su_rrr_9(self):
		self.run_test("수", "{{ko-IPA}}", "su", "rrr")
	def test_su_mr_9(self):
		self.run_test("수", "{{ko-IPA}}", "su", "mr")
	def test_su_yr_9(self):
		self.run_test("수", "{{ko-IPA}}", "swu", "yr")
	def test_su_ipa_9(self):
		self.run_test("수", "{{ko-IPA}}", "[sʰu]", "ipa")

	def test_sa_ph(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "사(ː)", "ph")
	def test_sa_rr(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sa", "rr")
	def test_sa_rrr(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sa", "rrr")
	def test_sa_mr(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sa", "mr")
	def test_sa_yr(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sā", "yr")
	def test_sa_ipa(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "[sʰa̠(ː)]", "ipa")
	def test_sa_ph_1(self):
		self.run_test("사", "{{ko-IPA}}", "사", "ph")
	def test_sa_rr_1(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "rr")
	def test_sa_rrr_1(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "rrr")
	def test_sa_mr_1(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "mr")
	def test_sa_yr_1(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "yr")
	def test_sa_ipa_1(self):
		self.run_test("사", "{{ko-IPA}}", "[sʰa̠]", "ipa")
	def test_sa_ph_2(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "사(ː)", "ph")
	def test_sa_rr_2(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sa", "rr")
	def test_sa_rrr_2(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sa", "rrr")
	def test_sa_mr_2(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sa", "mr")
	def test_sa_yr_2(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sā", "yr")
	def test_sa_ipa_2(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "[sʰa̠(ː)]", "ipa")
	def test_sa_ph_3(self):
		self.run_test("사", "{{ko-IPA}}", "사", "ph")
	def test_sa_rr_3(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "rr")
	def test_sa_rrr_3(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "rrr")
	def test_sa_mr_3(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "mr")
	def test_sa_yr_3(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "yr")
	def test_sa_ipa_3(self):
		self.run_test("사", "{{ko-IPA}}", "[sʰa̠]", "ipa")
	def test_sa_ph_4(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "사(ː)", "ph")
	def test_sa_rr_4(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sa", "rr")
	def test_sa_rrr_4(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sa", "rrr")
	def test_sa_mr_4(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sa", "mr")
	def test_sa_yr_4(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "sā", "yr")
	def test_sa_ipa_4(self):
		self.run_test("사", "{{ko-IPA|l=y}}", "[sʰa̠(ː)]", "ipa")
	def test_sa_ph_5(self):
		self.run_test("사", "{{ko-IPA}}", "사", "ph")
	def test_sa_rr_5(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "rr")
	def test_sa_rrr_5(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "rrr")
	def test_sa_mr_5(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "mr")
	def test_sa_yr_5(self):
		self.run_test("사", "{{ko-IPA}}", "sa", "yr")
	def test_sa_ipa_5(self):
		self.run_test("사", "{{ko-IPA}}", "[sʰa̠]", "ipa")

	def test_chim_ph(self):
		self.run_test("침", "{{ko-IPA}}", "침", "ph")
	def test_chim_rr(self):
		self.run_test("침", "{{ko-IPA}}", "chim", "rr")
	def test_chim_rrr(self):
		self.run_test("침", "{{ko-IPA}}", "chim", "rrr")
	def test_chim_mr(self):
		self.run_test("침", "{{ko-IPA}}", "ch'im", "mr")
	def test_chim_yr(self):
		self.run_test("침", "{{ko-IPA}}", "chim", "yr")
	def test_chim_ipa(self):
		self.run_test("침", "{{ko-IPA}}", "[t͡ɕʰim]", "ipa")

	def test_ganeungseong_ph(self):
		self.run_test("가능성", "{{ko-IPA|l=y|com=2}}", "가(ː)능썽", "ph")
	def test_ganeungseong_rr(self):
		self.run_test("가능성", "{{ko-IPA|l=y|com=2}}", "ganeungseong", "rr")
	def test_ganeungseong_rrr(self):
		self.run_test("가능성", "{{ko-IPA|l=y|com=2}}", "ganeungseong", "rrr")
	def test_ganeungseong_mr(self):
		self.run_test("가능성", "{{ko-IPA|l=y|com=2}}", "kanŭngssŏng", "mr")
	def test_ganeungseong_yr(self):
		self.run_test("가능성", "{{ko-IPA|l=y|com=2}}", "kānungqseng", "yr")
	def test_ganeungseong_ipa(self):
		self.run_test("가능성", "{{ko-IPA|l=y|com=2}}", "[ˈka̠(ː)nɯŋs͈ʌ̹ŋ]", "ipa")

	def test_seok_ph(self):
		self.run_test("석", "{{ko-ipa|l=y}}", "석(ː)", "ph")
	def test_seok_rr(self):
		self.run_test("석", "{{ko-ipa|l=y}}", "seok", "rr")
	def test_seok_rrr(self):
		self.run_test("석", "{{ko-ipa|l=y}}", "seog", "rrr")
	def test_seok_mr(self):
		self.run_test("석", "{{ko-ipa|l=y}}", "sŏk", "mr")
	def test_seok_yr(self):
		self.run_test("석", "{{ko-ipa|l=y}}", "sēk", "yr")
	def test_seok_ipa(self):
		self.run_test("석", "{{ko-ipa|l=y}}", "[sʰɘ(ː)k̚]", "ipa")
	def test_seok_ph_1(self):
		self.run_test("석", "{{ko-IPA}}", "석", "ph")
	def test_seok_rr_1(self):
		self.run_test("석", "{{ko-IPA}}", "seok", "rr")
	def test_seok_rrr_1(self):
		self.run_test("석", "{{ko-IPA}}", "seog", "rrr")
	def test_seok_mr_1(self):
		self.run_test("석", "{{ko-IPA}}", "sŏk", "mr")
	def test_seok_yr_1(self):
		self.run_test("석", "{{ko-IPA}}", "sek", "yr")
	def test_seok_ipa_1(self):
		self.run_test("석", "{{ko-IPA}}", "[sʰʌ̹k̚]", "ipa")


	def test_ye_ph(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "예(ː)", "ph")
	def test_ye_rr(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "ye", "rr")
	def test_ye_rrr(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "ye", "rrr")
	def test_ye_mr(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "ye", "mr")
	def test_ye_yr(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "yēy", "yr")
	def test_ye_ipa(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "[je̞(ː)]", "ipa")
	def test_ye_ph_1(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "예(ː)", "ph")
	def test_ye_rr_1(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "ye", "rr")
	def test_ye_rrr_1(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "ye", "rrr")
	def test_ye_mr_1(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "ye", "mr")
	def test_ye_yr_1(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "yēy", "yr")
	def test_ye_ipa_1(self):
		self.run_test("예", "{{ko-IPA|l=y}}", "[je̞(ː)]", "ipa")
	def test_ye_ph_2(self):
		self.run_test("예", "{{ko-ipa}}", "예", "ph")
	def test_ye_rr_2(self):
		self.run_test("예", "{{ko-ipa}}", "ye", "rr")
	def test_ye_rrr_2(self):
		self.run_test("예", "{{ko-ipa}}", "ye", "rrr")
	def test_ye_mr_2(self):
		self.run_test("예", "{{ko-ipa}}", "ye", "mr")
	def test_ye_yr_2(self):
		self.run_test("예", "{{ko-ipa}}", "yey", "yr")
	def test_ye_ipa_2(self):
		self.run_test("예", "{{ko-ipa}}", "[je̞]", "ipa")
	def test_ye_ph_3(self):
		self.run_test("예", "{{ko-ipa|l=y}}", "예(ː)", "ph")
	def test_ye_rr_3(self):
		self.run_test("예", "{{ko-ipa|l=y}}", "ye", "rr")
	def test_ye_rrr_3(self):
		self.run_test("예", "{{ko-ipa|l=y}}", "ye", "rrr")
	def test_ye_mr_3(self):
		self.run_test("예", "{{ko-ipa|l=y}}", "ye", "mr")
	def test_ye_yr_3(self):
		self.run_test("예", "{{ko-ipa|l=y}}", "yēy", "yr")
	def test_ye_ipa_3(self):
		self.run_test("예", "{{ko-ipa|l=y}}", "[je̞(ː)]", "ipa")
	def test_ye_ph_4(self):
		self.run_test("예", "{{ko-ipa}}", "예", "ph")
	def test_ye_rr_4(self):
		self.run_test("예", "{{ko-ipa}}", "ye", "rr")
	def test_ye_rrr_4(self):
		self.run_test("예", "{{ko-ipa}}", "ye", "rrr")
	def test_ye_mr_4(self):
		self.run_test("예", "{{ko-ipa}}", "ye", "mr")
	def test_ye_yr_4(self):
		self.run_test("예", "{{ko-ipa}}", "yey", "yr")
	def test_ye_ipa_4(self):
		self.run_test("예", "{{ko-ipa}}", "[je̞]", "ipa")
	def test_ye_ph_5(self):
		self.run_test("예", "{{ko-IPA}}", "예", "ph")
	def test_ye_rr_5(self):
		self.run_test("예", "{{ko-IPA}}", "ye", "rr")
	def test_ye_rrr_5(self):
		self.run_test("예", "{{ko-IPA}}", "ye", "rrr")
	def test_ye_mr_5(self):
		self.run_test("예", "{{ko-IPA}}", "ye", "mr")
	def test_ye_yr_5(self):
		self.run_test("예", "{{ko-IPA}}", "yey", "yr")
	def test_ye_ipa_5(self):
		self.run_test("예", "{{ko-IPA}}", "[je̞]", "ipa")
	def test_ye_ph_6(self):
		self.run_test("예", "{{ko-IPA}}", "예", "ph")
	def test_ye_rr_6(self):
		self.run_test("예", "{{ko-IPA}}", "ye", "rr")
	def test_ye_rrr_6(self):
		self.run_test("예", "{{ko-IPA}}", "ye", "rrr")
	def test_ye_mr_6(self):
		self.run_test("예", "{{ko-IPA}}", "ye", "mr")
	def test_ye_yr_6(self):
		self.run_test("예", "{{ko-IPA}}", "yey", "yr")
	def test_ye_ipa_6(self):
		self.run_test("예", "{{ko-IPA}}", "[je̞]", "ipa")

	def test_seol_ph(self):
		self.run_test("설", "{{ko-ipa|l=y}}", "설(ː)", "ph")
	def test_seol_rr(self):
		self.run_test("설", "{{ko-ipa|l=y}}", "seol", "rr")
	def test_seol_rrr(self):
		self.run_test("설", "{{ko-ipa|l=y}}", "seol", "rrr")
	def test_seol_mr(self):
		self.run_test("설", "{{ko-ipa|l=y}}", "sŏl", "mr")
	def test_seol_yr(self):
		self.run_test("설", "{{ko-ipa|l=y}}", "sēl", "yr")
	def test_seol_ipa(self):
		self.run_test("설", "{{ko-ipa|l=y}}", "[sʰɘ(ː)ɭ]", "ipa")
	def test_seol_ph_1(self):
		self.run_test("설", "{{ko-ipa}}", "설", "ph")
	def test_seol_rr_1(self):
		self.run_test("설", "{{ko-ipa}}", "seol", "rr")
	def test_seol_rrr_1(self):
		self.run_test("설", "{{ko-ipa}}", "seol", "rrr")
	def test_seol_mr_1(self):
		self.run_test("설", "{{ko-ipa}}", "sŏl", "mr")
	def test_seol_yr_1(self):
		self.run_test("설", "{{ko-ipa}}", "sel", "yr")
	def test_seol_ipa_1(self):
		self.run_test("설", "{{ko-ipa}}", "[sʰʌ̹ɭ]", "ipa")

	def test_nat_ph(self):
		self.run_test("낱", "{{ko-ipa|l=y}}", "낟(ː)", "ph")
	def test_nat_rr(self):
		self.run_test("낱", "{{ko-ipa|l=y}}", "nat", "rr")
	def test_nat_rrr(self):
		self.run_test("낱", "{{ko-ipa|l=y}}", "nat", "rrr")
	def test_nat_mr(self):
		self.run_test("낱", "{{ko-ipa|l=y}}", "nat", "mr")
	def test_nat_yr(self):
		self.run_test("낱", "{{ko-ipa|l=y}}", "nāth", "yr")
	def test_nat_ipa(self):
		self.run_test("낱", "{{ko-ipa|l=y}}", "[na̠(ː)t̚]", "ipa")

	def test_seollal_ph(self):
		self.run_test("설날", "{{ko-IPA|l=y}}", "설(ː)랄", "ph")
	def test_seollal_rr(self):
		self.run_test("설날", "{{ko-IPA|l=y}}", "seollal", "rr")
	def test_seollal_rrr(self):
		self.run_test("설날", "{{ko-IPA|l=y}}", "seolnal", "rrr")
	def test_seollal_mr(self):
		self.run_test("설날", "{{ko-IPA|l=y}}", "sŏllal", "mr")
	def test_seollal_yr(self):
		self.run_test("설날", "{{ko-IPA|l=y}}", "sēlnal", "yr")
	def test_seollal_ipa(self):
		self.run_test("설날", "{{ko-IPA|l=y}}", "[ˈsʰɘ(ː)ɭɭa̠ɭ]", "ipa")

	def test_nal_ph(self):
		self.run_test("날", "{{ko-IPA}}", "날", "ph")
	def test_nal_rr(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rr")
	def test_nal_rrr(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rrr")
	def test_nal_mr(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "mr")
	def test_nal_yr(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "yr")
	def test_nal_ipa(self):
		self.run_test("날", "{{ko-IPA}}", "[na̠ɭ]", "ipa")
	def test_nal_ph_1(self):
		self.run_test("날", "{{ko-IPA}}", "날", "ph")
	def test_nal_rr_1(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rr")
	def test_nal_rrr_1(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rrr")
	def test_nal_mr_1(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "mr")
	def test_nal_yr_1(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "yr")
	def test_nal_ipa_1(self):
		self.run_test("날", "{{ko-IPA}}", "[na̠ɭ]", "ipa")
	def test_nal_ph_2(self):
		self.run_test("날", "{{ko-IPA}}", "날", "ph")
	def test_nal_rr_2(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rr")
	def test_nal_rrr_2(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rrr")
	def test_nal_mr_2(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "mr")
	def test_nal_yr_2(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "yr")
	def test_nal_ipa_2(self):
		self.run_test("날", "{{ko-IPA}}", "[na̠ɭ]", "ipa")
	def test_nal_ph_3(self):
		self.run_test("날", "{{ko-IPA}}", "날", "ph")
	def test_nal_rr_3(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rr")
	def test_nal_rrr_3(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rrr")
	def test_nal_mr_3(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "mr")
	def test_nal_yr_3(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "yr")
	def test_nal_ipa_3(self):
		self.run_test("날", "{{ko-IPA}}", "[na̠ɭ]", "ipa")
	def test_nal_ph_4(self):
		self.run_test("날", "{{ko-IPA}}", "날", "ph")
	def test_nal_rr_4(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rr")
	def test_nal_rrr_4(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rrr")
	def test_nal_mr_4(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "mr")
	def test_nal_yr_4(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "yr")
	def test_nal_ipa_4(self):
		self.run_test("날", "{{ko-IPA}}", "[na̠ɭ]", "ipa")
	def test_nal_ph_5(self):
		self.run_test("날", "{{ko-IPA}}", "날", "ph")
	def test_nal_rr_5(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rr")
	def test_nal_rrr_5(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "rrr")
	def test_nal_mr_5(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "mr")
	def test_nal_yr_5(self):
		self.run_test("날", "{{ko-IPA}}", "nal", "yr")
	def test_nal_ipa_5(self):
		self.run_test("날", "{{ko-IPA}}", "[na̠ɭ]", "ipa")

	def test_mo_ph(self):
		self.run_test("모", "{{ko-IPA}}", "모", "ph")
	def test_mo_rr(self):
		self.run_test("모", "{{ko-IPA}}", "mo", "rr")
	def test_mo_rrr(self):
		self.run_test("모", "{{ko-IPA}}", "mo", "rrr")
	def test_mo_mr(self):
		self.run_test("모", "{{ko-IPA}}", "mo", "mr")
	def test_mo_yr(self):
		self.run_test("모", "{{ko-IPA}}", "mo", "yr")
	def test_mo_ipa(self):
		self.run_test("모", "{{ko-IPA}}", "[mo̞]", "ipa")

	def test_mak_ph(self):
		self.run_test("막", "{{ko-IPA}}", "막", "ph")
	def test_mak_rr(self):
		self.run_test("막", "{{ko-IPA}}", "mak", "rr")
	def test_mak_rrr(self):
		self.run_test("막", "{{ko-IPA}}", "mag", "rrr")
	def test_mak_mr(self):
		self.run_test("막", "{{ko-IPA}}", "mak", "mr")
	def test_mak_yr(self):
		self.run_test("막", "{{ko-IPA}}", "mak", "yr")
	def test_mak_ipa(self):
		self.run_test("막", "{{ko-IPA}}", "[ma̠k̚]", "ipa")

	def test_gam_ph(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "감(ː)", "ph")
	def test_gam_rr(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "gam", "rr")
	def test_gam_rrr(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "gam", "rrr")
	def test_gam_mr(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "kam", "mr")
	def test_gam_yr(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "kām", "yr")
	def test_gam_ipa(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "[ka̠(ː)m]", "ipa")
	def test_gam_ph_1(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "감(ː)", "ph")
	def test_gam_rr_1(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "gam", "rr")
	def test_gam_rrr_1(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "gam", "rrr")
	def test_gam_mr_1(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "kam", "mr")
	def test_gam_yr_1(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "kām", "yr")
	def test_gam_ipa_1(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "[ka̠(ː)m]", "ipa")
	def test_gam_ph_2(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "감(ː)", "ph")
	def test_gam_rr_2(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "gam", "rr")
	def test_gam_rrr_2(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "gam", "rrr")
	def test_gam_mr_2(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "kam", "mr")
	def test_gam_yr_2(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "kām", "yr")
	def test_gam_ipa_2(self):
		self.run_test("감", "{{ko-IPA|l=y}}", "[ka̠(ː)m]", "ipa")
	def test_Gam_ph_3(self):
		self.run_test("감", "{{ko-IPA|cap=y}}", "감", "ph")
	def test_Gam_rr_3(self):
		self.run_test("감", "{{ko-IPA|cap=y}}", "Gam", "rr")
	def test_Gam_rrr_3(self):
		self.run_test("감", "{{ko-IPA|cap=y}}", "Gam", "rrr")
	def test_Gam_mr_3(self):
		self.run_test("감", "{{ko-IPA|cap=y}}", "Kam", "mr")
	def test_Gam_yr_3(self):
		self.run_test("감", "{{ko-IPA|cap=y}}", "kam", "yr")
	def test_Gam_ipa_3(self):
		self.run_test("감", "{{ko-IPA|cap=y}}", "[ka̠m]", "ipa")

	def test_hoe_ph(self):
		self.run_test("회", "{{ko-IPA}}", "훼/회", "ph")
	def test_hoe_rr(self):
		self.run_test("회", "{{ko-IPA}}", "hoe", "rr")
	def test_hoe_rrr(self):
		self.run_test("회", "{{ko-IPA}}", "hoe", "rrr")
	def test_hoe_mr(self):
		self.run_test("회", "{{ko-IPA}}", "hoe", "mr")
	def test_hoe_yr(self):
		self.run_test("회", "{{ko-IPA}}", "hoy", "yr")
	def test_hoe_ipa(self):
		self.run_test("회", "{{ko-IPA}}", "[ɸwe̞] ~ [hø̞]", "ipa")

	def test_yeo_ph(self):
		self.run_test("여", "{{ko-IPA}}", "여", "ph")
	def test_yeo_rr(self):
		self.run_test("여", "{{ko-IPA}}", "yeo", "rr")
	def test_yeo_rrr(self):
		self.run_test("여", "{{ko-IPA}}", "yeo", "rrr")
	def test_yeo_mr(self):
		self.run_test("여", "{{ko-IPA}}", "yŏ", "mr")
	def test_yeo_yr(self):
		self.run_test("여", "{{ko-IPA}}", "ye", "yr")
	def test_yeo_ipa(self):
		self.run_test("여", "{{ko-IPA}}", "[jʌ̹]", "ipa")
	def test_yeo_ph_1(self):
		self.run_test("여", "{{ko-IPA}}", "여", "ph")
	def test_yeo_rr_1(self):
		self.run_test("여", "{{ko-IPA}}", "yeo", "rr")
	def test_yeo_rrr_1(self):
		self.run_test("여", "{{ko-IPA}}", "yeo", "rrr")
	def test_yeo_mr_1(self):
		self.run_test("여", "{{ko-IPA}}", "yŏ", "mr")
	def test_yeo_yr_1(self):
		self.run_test("여", "{{ko-IPA}}", "ye", "yr")
	def test_yeo_ipa_1(self):
		self.run_test("여", "{{ko-IPA}}", "[jʌ̹]", "ipa")
	def test_yeo_ph_2(self):
		self.run_test("여", "{{ko-IPA|l=y}}", "여(ː)", "ph")
	def test_yeo_rr_2(self):
		self.run_test("여", "{{ko-IPA|l=y}}", "yeo", "rr")
	def test_yeo_rrr_2(self):
		self.run_test("여", "{{ko-IPA|l=y}}", "yeo", "rrr")
	def test_yeo_mr_2(self):
		self.run_test("여", "{{ko-IPA|l=y}}", "yŏ", "mr")
	def test_yeo_yr_2(self):
		self.run_test("여", "{{ko-IPA|l=y}}", "yē", "yr")
	def test_yeo_ipa_2(self):
		self.run_test("여", "{{ko-IPA|l=y}}", "[jɘ(ː)]", "ipa")
	def test_yeo_ph_3(self):
		self.run_test("여", "{{ko-IPA}}", "여", "ph")
	def test_yeo_rr_3(self):
		self.run_test("여", "{{ko-IPA}}", "yeo", "rr")
	def test_yeo_rrr_3(self):
		self.run_test("여", "{{ko-IPA}}", "yeo", "rrr")
	def test_yeo_mr_3(self):
		self.run_test("여", "{{ko-IPA}}", "yŏ", "mr")
	def test_yeo_yr_3(self):
		self.run_test("여", "{{ko-IPA}}", "ye", "yr")
	def test_yeo_ipa_3(self):
		self.run_test("여", "{{ko-IPA}}", "[jʌ̹]", "ipa")


	def test_neok_ph(self):
		self.run_test("넋", "{{ko-IPA}}", "넉", "ph")
	def test_neok_rr(self):
		self.run_test("넋", "{{ko-IPA}}", "neok", "rr")
	def test_neok_rrr(self):
		self.run_test("넋", "{{ko-IPA}}", "neogs", "rrr")
	def test_neok_mr(self):
		self.run_test("넋", "{{ko-IPA}}", "nŏk", "mr")
	def test_neok_yr(self):
		self.run_test("넋", "{{ko-IPA}}", "neks", "yr")
	def test_neok_ipa(self):
		self.run_test("넋", "{{ko-IPA}}", "[nʌ̹k̚]", "ipa")

	def test_yeogaek_ph(self):
		self.run_test("여객", "{{ko-IPA}}", "여객/여겍", "ph")
	def test_yeogaek_rr(self):
		self.run_test("여객", "{{ko-IPA}}", "yeogaek", "rr")
	def test_yeogaek_rrr(self):
		self.run_test("여객", "{{ko-IPA}}", "yeogaeg", "rrr")
	def test_yeogaek_mr(self):
		self.run_test("여객", "{{ko-IPA}}", "yŏgaek", "mr")
	def test_yeogaek_yr(self):
		self.run_test("여객", "{{ko-IPA}}", "yekayk", "yr")
	def test_yeogaek_ipa(self):
		self.run_test("여객", "{{ko-IPA}}", "[jʌ̹ɡɛk̚] ~ [jʌ̹ɡe̞k̚]", "ipa")

	def test_yeongjeok_ph(self):
		self.run_test("영적", "{{ko-IPA|com=1}}", "영쩍", "ph")
	def test_yeongjeok_rr(self):
		self.run_test("영적", "{{ko-IPA|com=1}}", "yeongjeok", "rr")
	def test_yeongjeok_rrr(self):
		self.run_test("영적", "{{ko-IPA|com=1}}", "yeongjeog", "rrr")
	def test_yeongjeok_mr(self):
		self.run_test("영적", "{{ko-IPA|com=1}}", "yŏngchŏk", "mr")
	def test_yeongjeok_yr(self):
		self.run_test("영적", "{{ko-IPA|com=1}}", "yengqcek", "yr")
	def test_yeongjeok_ipa(self):
		self.run_test("영적", "{{ko-IPA|com=1}}", "[jʌ̹ŋt͡ɕ͈ʌ̹k̚]", "ipa")

	def test_menyu_ph(self):
		self.run_test("메뉴", "{{ko-IPA}}", "메뉴", "ph")
	def test_menyu_rr(self):
		self.run_test("메뉴", "{{ko-IPA}}", "menyu", "rr")
	def test_menyu_rrr(self):
		self.run_test("메뉴", "{{ko-IPA}}", "menyu", "rrr")
	def test_menyu_mr(self):
		self.run_test("메뉴", "{{ko-IPA}}", "menyu", "mr")
	def test_menyu_yr(self):
		self.run_test("메뉴", "{{ko-IPA}}", "meynyu", "yr")
	def test_menyu_ipa(self):
		self.run_test("메뉴", "{{ko-IPA}}", "[me̞ɲu]", "ipa")

	def test_je_ph(self):
		self.run_test("제", "{{ko-IPA}}", "제", "ph")
	def test_je_rr(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rr")
	def test_je_rrr(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rrr")
	def test_je_mr(self):
		self.run_test("제", "{{ko-IPA}}", "che", "mr")
	def test_je_yr(self):
		self.run_test("제", "{{ko-IPA}}", "cey", "yr")
	def test_je_ipa(self):
		self.run_test("제", "{{ko-IPA}}", "[t͡ɕe̞]", "ipa")
	def test_je_ph_1(self):
		self.run_test("제", "{{ko-IPA}}", "제", "ph")
	def test_je_rr_1(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rr")
	def test_je_rrr_1(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rrr")
	def test_je_mr_1(self):
		self.run_test("제", "{{ko-IPA}}", "che", "mr")
	def test_je_yr_1(self):
		self.run_test("제", "{{ko-IPA}}", "cey", "yr")
	def test_je_ipa_1(self):
		self.run_test("제", "{{ko-IPA}}", "[t͡ɕe̞]", "ipa")
	def test_je_ph_2(self):
		self.run_test("제", "{{ko-IPA}}", "제", "ph")
	def test_je_rr_2(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rr")
	def test_je_rrr_2(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rrr")
	def test_je_mr_2(self):
		self.run_test("제", "{{ko-IPA}}", "che", "mr")
	def test_je_yr_2(self):
		self.run_test("제", "{{ko-IPA}}", "cey", "yr")
	def test_je_ipa_2(self):
		self.run_test("제", "{{ko-IPA}}", "[t͡ɕe̞]", "ipa")
	def test_je_ph_3(self):
		self.run_test("제", "{{ko-IPA}}", "제", "ph")
	def test_je_rr_3(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rr")
	def test_je_rrr_3(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rrr")
	def test_je_mr_3(self):
		self.run_test("제", "{{ko-IPA}}", "che", "mr")
	def test_je_yr_3(self):
		self.run_test("제", "{{ko-IPA}}", "cey", "yr")
	def test_je_ipa_3(self):
		self.run_test("제", "{{ko-IPA}}", "[t͡ɕe̞]", "ipa")
	def test_je_ph_4(self):
		self.run_test("제", "{{ko-IPA|l=y}}", "제(ː)", "ph")
	def test_je_rr_4(self):
		self.run_test("제", "{{ko-IPA|l=y}}", "je", "rr")
	def test_je_rrr_4(self):
		self.run_test("제", "{{ko-IPA|l=y}}", "je", "rrr")
	def test_je_mr_4(self):
		self.run_test("제", "{{ko-IPA|l=y}}", "che", "mr")
	def test_je_yr_4(self):
		self.run_test("제", "{{ko-IPA|l=y}}", "cēy", "yr")
	def test_je_ipa_4(self):
		self.run_test("제", "{{ko-IPA|l=y}}", "[t͡ɕe̞(ː)]", "ipa")
	def test_je_ph_5(self):
		self.run_test("제", "{{ko-IPA}}", "제", "ph")
	def test_je_rr_5(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rr")
	def test_je_rrr_5(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rrr")
	def test_je_mr_5(self):
		self.run_test("제", "{{ko-IPA}}", "che", "mr")
	def test_je_yr_5(self):
		self.run_test("제", "{{ko-IPA}}", "cey", "yr")
	def test_je_ipa_5(self):
		self.run_test("제", "{{ko-IPA}}", "[t͡ɕe̞]", "ipa")
	def test_je_ph_6(self):
		self.run_test("제", "{{ko-IPA}}", "제", "ph")
	def test_je_rr_6(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rr")
	def test_je_rrr_6(self):
		self.run_test("제", "{{ko-IPA}}", "je", "rrr")
	def test_je_mr_6(self):
		self.run_test("제", "{{ko-IPA}}", "che", "mr")
	def test_je_yr_6(self):
		self.run_test("제", "{{ko-IPA}}", "cey", "yr")
	def test_je_ipa_6(self):
		self.run_test("제", "{{ko-IPA}}", "[t͡ɕe̞]", "ipa")

	def test_seolmyeong_ph(self):
		self.run_test("설명", "{{ko-IPA}}", "설명", "ph")
	def test_seolmyeong_rr(self):
		self.run_test("설명", "{{ko-IPA}}", "seolmyeong", "rr")
	def test_seolmyeong_rrr(self):
		self.run_test("설명", "{{ko-IPA}}", "seolmyeong", "rrr")
	def test_seolmyeong_mr(self):
		self.run_test("설명", "{{ko-IPA}}", "sŏlmyŏng", "mr")
	def test_seolmyeong_yr(self):
		self.run_test("설명", "{{ko-IPA}}", "sel.myeng", "yr")
	def test_seolmyeong_ipa(self):
		self.run_test("설명", "{{ko-IPA}}", "[sʰʌ̹ɭmjʌ̹ŋ]", "ipa")

	def test_hugyeonin_ph(self):
		self.run_test("후견인", "{{ko-IPA|l=y}}", "후(ː)겨닌", "ph")
	def test_hugyeonin_rr(self):
		self.run_test("후견인", "{{ko-IPA|l=y}}", "hugyeonin", "rr")
	def test_hugyeonin_rrr(self):
		self.run_test("후견인", "{{ko-IPA|l=y}}", "hugyeon'in", "rrr")
	def test_hugyeonin_mr(self):
		self.run_test("후견인", "{{ko-IPA|l=y}}", "hugyŏnin", "mr")
	def test_hugyeonin_yr(self):
		self.run_test("후견인", "{{ko-IPA|l=y}}", "hwūkyen.in", "yr")
	def test_hugyeonin_ipa(self):
		self.run_test("후견인", "{{ko-IPA|l=y}}", "[ˈɸʷu(ː)ɡjʌ̹nin]", "ipa")

	def test_mujehan_ph(self):
		self.run_test("무제한", "{{ko-IPA}}", "무제한", "ph")
	def test_mujehan_rr(self):
		self.run_test("무제한", "{{ko-IPA}}", "mujehan", "rr")
	def test_mujehan_rrr(self):
		self.run_test("무제한", "{{ko-IPA}}", "mujehan", "rrr")
	def test_mujehan_mr(self):
		self.run_test("무제한", "{{ko-IPA}}", "mujehan", "mr")
	def test_mujehan_yr(self):
		self.run_test("무제한", "{{ko-IPA}}", "muceyhan", "yr")
	def test_mujehan_ipa(self):
		self.run_test("무제한", "{{ko-IPA}}", "[mud͡ʑe̞ɦa̠n]", "ipa")

	def test_uimu_ph(self):
		self.run_test("의무", "{{ko-IPA|l=y}}", "의(ː)무", "ph")
	def test_uimu_rr(self):
		self.run_test("의무", "{{ko-IPA|l=y}}", "uimu", "rr")
	def test_uimu_rrr(self):
		self.run_test("의무", "{{ko-IPA|l=y}}", "uimu", "rrr")
	def test_uimu_mr(self):
		self.run_test("의무", "{{ko-IPA|l=y}}", "ŭimu", "mr")
	def test_uimu_yr(self):
		self.run_test("의무", "{{ko-IPA|l=y}}", "ūymu", "yr")
	def test_uimu_ipa(self):
		self.run_test("의무", "{{ko-IPA|l=y}}", "[ˈɰi(ː)mu]", "ipa")

	def test_geose_ph(self):
		self.run_test("거세", "{{ko-ipa|l=y}}", "거(ː)세", "ph")
	def test_geose_rr(self):
		self.run_test("거세", "{{ko-ipa|l=y}}", "geose", "rr")
	def test_geose_rrr(self):
		self.run_test("거세", "{{ko-ipa|l=y}}", "geose", "rrr")
	def test_geose_mr(self):
		self.run_test("거세", "{{ko-ipa|l=y}}", "kŏse", "mr")
	def test_geose_yr(self):
		self.run_test("거세", "{{ko-ipa|l=y}}", "kēsey", "yr")
	def test_geose_ipa(self):
		self.run_test("거세", "{{ko-ipa|l=y}}", "[ˈkɘ(ː)sʰe̞]", "ipa")

	def test_juk_ph(self):
		self.run_test("죽", "{{ko-IPA}}", "죽", "ph")
	def test_juk_rr(self):
		self.run_test("죽", "{{ko-IPA}}", "juk", "rr")
	def test_juk_rrr(self):
		self.run_test("죽", "{{ko-IPA}}", "jug", "rrr")
	def test_juk_mr(self):
		self.run_test("죽", "{{ko-IPA}}", "chuk", "mr")
	def test_juk_yr(self):
		self.run_test("죽", "{{ko-IPA}}", "cwuk", "yr")
	def test_juk_ipa(self):
		self.run_test("죽", "{{ko-IPA}}", "[t͡ɕuk̚]", "ipa")

	def test_yuk_ph(self):
		self.run_test("육", "{{ko-IPA}}", "육", "ph")
	def test_yuk_rr(self):
		self.run_test("육", "{{ko-IPA}}", "yuk", "rr")
	def test_yuk_rrr(self):
		self.run_test("육", "{{ko-IPA}}", "yug", "rrr")
	def test_yuk_mr(self):
		self.run_test("육", "{{ko-IPA}}", "yuk", "mr")
	def test_yuk_yr(self):
		self.run_test("육", "{{ko-IPA}}", "yuk", "yr")
	def test_yuk_ipa(self):
		self.run_test("육", "{{ko-IPA}}", "[juk̚]", "ipa")

	def test_beolle_ph(self):
		self.run_test("벌레", "{{ko-ipa}}", "벌레", "ph")
	def test_beolle_rr(self):
		self.run_test("벌레", "{{ko-ipa}}", "beolle", "rr")
	def test_beolle_rrr(self):
		self.run_test("벌레", "{{ko-ipa}}", "beolle", "rrr")
	def test_beolle_mr(self):
		self.run_test("벌레", "{{ko-ipa}}", "pŏlle", "mr")
	def test_beolle_yr(self):
		self.run_test("벌레", "{{ko-ipa}}", "pelley", "yr")
	def test_beolle_ipa(self):
		self.run_test("벌레", "{{ko-ipa}}", "[pʌ̹ɭɭe̞]", "ipa")

	def test_dal_ph(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "달", "ph")
	def test_dal_rr(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "dal", "rr")
	def test_dal_rrr(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "dal", "rrr")
	def test_dal_mr(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "tal", "mr")
	def test_dal_yr(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "tal", "yr")
	def test_dal_ipa(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "[ta̠ɭ]", "ipa")
	def test_dal_ph_1(self):
		self.run_test("달", "{{ko-IPA|l=y|a=y}}", "달(ː)", "ph")
	def test_dal_rr_1(self):
		self.run_test("달", "{{ko-IPA|l=y|a=y}}", "dal", "rr")
	def test_dal_rrr_1(self):
		self.run_test("달", "{{ko-IPA|l=y|a=y}}", "dal", "rrr")
	def test_dal_mr_1(self):
		self.run_test("달", "{{ko-IPA|l=y|a=y}}", "tal", "mr")
	def test_dal_yr_1(self):
		self.run_test("달", "{{ko-IPA|l=y|a=y}}", "tāl", "yr")
	def test_dal_ipa_1(self):
		self.run_test("달", "{{ko-IPA|l=y|a=y}}", "[ta̠(ː)ɭ]", "ipa")
	def test_dal_ph_2(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "달", "ph")
	def test_dal_rr_2(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "dal", "rr")
	def test_dal_rrr_2(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "dal", "rrr")
	def test_dal_mr_2(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "tal", "mr")
	def test_dal_yr_2(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "tal", "yr")
	def test_dal_ipa_2(self):
		self.run_test("달", "{{ko-IPA|a=y}}", "[ta̠ɭ]", "ipa")

	def test_wol_ph(self):
		self.run_test("월", "{{ko-IPA}}", "월", "ph")
	def test_wol_rr(self):
		self.run_test("월", "{{ko-IPA}}", "wol", "rr")
	def test_wol_rrr(self):
		self.run_test("월", "{{ko-IPA}}", "wol", "rrr")
	def test_wol_mr(self):
		self.run_test("월", "{{ko-IPA}}", "wŏl", "mr")
	def test_wol_yr(self):
		self.run_test("월", "{{ko-IPA}}", "wel", "yr")
	def test_wol_ipa(self):
		self.run_test("월", "{{ko-IPA}}", "[wʌ̹ɭ]", "ipa")

	def test_gong_ph(self):
		self.run_test("공", "{{ko-IPA|l=y}}", "공(ː)", "ph")
	def test_gong_rr(self):
		self.run_test("공", "{{ko-IPA|l=y}}", "gong", "rr")
	def test_gong_rrr(self):
		self.run_test("공", "{{ko-IPA|l=y}}", "gong", "rrr")
	def test_gong_mr(self):
		self.run_test("공", "{{ko-IPA|l=y}}", "kong", "mr")
	def test_gong_yr(self):
		self.run_test("공", "{{ko-IPA|l=y}}", "kōng", "yr")
	def test_gong_ipa(self):
		self.run_test("공", "{{ko-IPA|l=y}}", "[ko̞(ː)ŋ]", "ipa")
	def test_gong_ph_1(self):
		self.run_test("공", "{{ko-IPA}}", "공", "ph")
	def test_gong_rr_1(self):
		self.run_test("공", "{{ko-IPA}}", "gong", "rr")
	def test_gong_rrr_1(self):
		self.run_test("공", "{{ko-IPA}}", "gong", "rrr")
	def test_gong_mr_1(self):
		self.run_test("공", "{{ko-IPA}}", "kong", "mr")
	def test_gong_yr_1(self):
		self.run_test("공", "{{ko-IPA}}", "kong", "yr")
	def test_gong_ipa_1(self):
		self.run_test("공", "{{ko-IPA}}", "[ko̞ŋ]", "ipa")
	def test_gong_ph_2(self):
		self.run_test("공", "{{ko-IPA}}", "공", "ph")
	def test_gong_rr_2(self):
		self.run_test("공", "{{ko-IPA}}", "gong", "rr")
	def test_gong_rrr_2(self):
		self.run_test("공", "{{ko-IPA}}", "gong", "rrr")
	def test_gong_mr_2(self):
		self.run_test("공", "{{ko-IPA}}", "kong", "mr")
	def test_gong_yr_2(self):
		self.run_test("공", "{{ko-IPA}}", "kong", "yr")
	def test_gong_ipa_2(self):
		self.run_test("공", "{{ko-IPA}}", "[ko̞ŋ]", "ipa")
	def test_gong_ph_3(self):
		self.run_test("공", "{{ko-IPA}}", "공", "ph")
	def test_gong_rr_3(self):
		self.run_test("공", "{{ko-IPA}}", "gong", "rr")
	def test_gong_rrr_3(self):
		self.run_test("공", "{{ko-IPA}}", "gong", "rrr")
	def test_gong_mr_3(self):
		self.run_test("공", "{{ko-IPA}}", "kong", "mr")
	def test_gong_yr_3(self):
		self.run_test("공", "{{ko-IPA}}", "kong", "yr")
	def test_gong_ipa_3(self):
		self.run_test("공", "{{ko-IPA}}", "[ko̞ŋ]", "ipa")

	def test_ju_ph(self):
		self.run_test("주", "{{ko-IPA}}", "주", "ph")
	def test_ju_rr(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rr")
	def test_ju_rrr(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rrr")
	def test_ju_mr(self):
		self.run_test("주", "{{ko-IPA}}", "chu", "mr")
	def test_ju_yr(self):
		self.run_test("주", "{{ko-IPA}}", "cwu", "yr")
	def test_ju_ipa(self):
		self.run_test("주", "{{ko-IPA}}", "[t͡ɕu]", "ipa")
	def test_ju_ph_1(self):
		self.run_test("주", "{{ko-IPA}}", "주", "ph")
	def test_ju_rr_1(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rr")
	def test_ju_rrr_1(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rrr")
	def test_ju_mr_1(self):
		self.run_test("주", "{{ko-IPA}}", "chu", "mr")
	def test_ju_yr_1(self):
		self.run_test("주", "{{ko-IPA}}", "cwu", "yr")
	def test_ju_ipa_1(self):
		self.run_test("주", "{{ko-IPA}}", "[t͡ɕu]", "ipa")
	def test_ju_ph_2(self):
		self.run_test("주", "{{ko-IPA}}", "주", "ph")
	def test_ju_rr_2(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rr")
	def test_ju_rrr_2(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rrr")
	def test_ju_mr_2(self):
		self.run_test("주", "{{ko-IPA}}", "chu", "mr")
	def test_ju_yr_2(self):
		self.run_test("주", "{{ko-IPA}}", "cwu", "yr")
	def test_ju_ipa_2(self):
		self.run_test("주", "{{ko-IPA}}", "[t͡ɕu]", "ipa")
	def test_ju_ph_3(self):
		self.run_test("주", "{{ko-IPA}}", "주", "ph")
	def test_ju_rr_3(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rr")
	def test_ju_rrr_3(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rrr")
	def test_ju_mr_3(self):
		self.run_test("주", "{{ko-IPA}}", "chu", "mr")
	def test_ju_yr_3(self):
		self.run_test("주", "{{ko-IPA}}", "cwu", "yr")
	def test_ju_ipa_3(self):
		self.run_test("주", "{{ko-IPA}}", "[t͡ɕu]", "ipa")
	def test_ju_ph_4(self):
		self.run_test("주", "{{ko-IPA}}", "주", "ph")
	def test_ju_rr_4(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rr")
	def test_ju_rrr_4(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rrr")
	def test_ju_mr_4(self):
		self.run_test("주", "{{ko-IPA}}", "chu", "mr")
	def test_ju_yr_4(self):
		self.run_test("주", "{{ko-IPA}}", "cwu", "yr")
	def test_ju_ipa_4(self):
		self.run_test("주", "{{ko-IPA}}", "[t͡ɕu]", "ipa")
	def test_ju_ph_5(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "주(ː)", "ph")
	def test_ju_rr_5(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "ju", "rr")
	def test_ju_rrr_5(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "ju", "rrr")
	def test_ju_mr_5(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "chu", "mr")
	def test_ju_yr_5(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "cwū", "yr")
	def test_ju_ipa_5(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "[t͡ɕu(ː)]", "ipa")
	def test_ju_ph_6(self):
		self.run_test("주", "{{ko-IPA}}", "주", "ph")
	def test_ju_rr_6(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rr")
	def test_ju_rrr_6(self):
		self.run_test("주", "{{ko-IPA}}", "ju", "rrr")
	def test_ju_mr_6(self):
		self.run_test("주", "{{ko-IPA}}", "chu", "mr")
	def test_ju_yr_6(self):
		self.run_test("주", "{{ko-IPA}}", "cwu", "yr")
	def test_ju_ipa_6(self):
		self.run_test("주", "{{ko-IPA}}", "[t͡ɕu]", "ipa")
	def test_ju_ph_7(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "주(ː)", "ph")
	def test_ju_rr_7(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "ju", "rr")
	def test_ju_rrr_7(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "ju", "rrr")
	def test_ju_mr_7(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "chu", "mr")
	def test_ju_yr_7(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "cwū", "yr")
	def test_ju_ipa_7(self):
		self.run_test("주", "{{ko-IPA|l=y}}", "[t͡ɕu(ː)]", "ipa")

	def test_jeong_ph(self):
		self.run_test("정", "{{ko-IPA}}", "정", "ph")
	def test_jeong_rr(self):
		self.run_test("정", "{{ko-IPA}}", "jeong", "rr")
	def test_jeong_rrr(self):
		self.run_test("정", "{{ko-IPA}}", "jeong", "rrr")
	def test_jeong_mr(self):
		self.run_test("정", "{{ko-IPA}}", "chŏng", "mr")
	def test_jeong_yr(self):
		self.run_test("정", "{{ko-IPA}}", "ceng", "yr")
	def test_jeong_ipa(self):
		self.run_test("정", "{{ko-IPA}}", "[t͡ɕʌ̹ŋ]", "ipa")

	def test_inhu_ph(self):
		self.run_test("인후", "{{ko-IPA}}", "인후", "ph")
	def test_inhu_rr(self):
		self.run_test("인후", "{{ko-IPA}}", "inhu", "rr")
	def test_inhu_rrr(self):
		self.run_test("인후", "{{ko-IPA}}", "inhu", "rrr")
	def test_inhu_mr(self):
		self.run_test("인후", "{{ko-IPA}}", "inhu", "mr")
	def test_inhu_yr(self):
		self.run_test("인후", "{{ko-IPA}}", "in.hwu", "yr")
	def test_inhu_ipa(self):
		self.run_test("인후", "{{ko-IPA}}", "[inβu]", "ipa")

	def test_hyeopgok_ph(self):
		self.run_test("협곡", "{{ko-IPA}}", "협꼭", "ph")
	def test_hyeopgok_rr(self):
		self.run_test("협곡", "{{ko-IPA}}", "hyeopgok", "rr")
	def test_hyeopgok_rrr(self):
		self.run_test("협곡", "{{ko-IPA}}", "hyeobgog", "rrr")
	def test_hyeopgok_mr(self):
		self.run_test("협곡", "{{ko-IPA}}", "hyŏpkok", "mr")
	def test_hyeopgok_yr(self):
		self.run_test("협곡", "{{ko-IPA}}", "hyepkok", "yr")
	def test_hyeopgok_ipa(self):
		self.run_test("협곡", "{{ko-IPA}}", "[çʌ̹p̚k͈o̞k̚]", "ipa")

	def test_hu_ph(self):
		self.run_test("후", "{{ko-ipa|l=y}}", "후(ː)", "ph")
	def test_hu_rr(self):
		self.run_test("후", "{{ko-ipa|l=y}}", "hu", "rr")
	def test_hu_rrr(self):
		self.run_test("후", "{{ko-ipa|l=y}}", "hu", "rrr")
	def test_hu_mr(self):
		self.run_test("후", "{{ko-ipa|l=y}}", "hu", "mr")
	def test_hu_yr(self):
		self.run_test("후", "{{ko-ipa|l=y}}", "hwū", "yr")
	def test_hu_ipa(self):
		self.run_test("후", "{{ko-ipa|l=y}}", "[ɸʷu(ː)]", "ipa")

	def test_du_ph(self):
		self.run_test("두", "{{ko-IPA|a=y|l=y}}", "두(ː)", "ph")
	def test_du_rr(self):
		self.run_test("두", "{{ko-IPA|a=y|l=y}}", "du", "rr")
	def test_du_rrr(self):
		self.run_test("두", "{{ko-IPA|a=y|l=y}}", "du", "rrr")
	def test_du_mr(self):
		self.run_test("두", "{{ko-IPA|a=y|l=y}}", "tu", "mr")
	def test_du_yr(self):
		self.run_test("두", "{{ko-IPA|a=y|l=y}}", "twū", "yr")
	def test_du_ipa(self):
		self.run_test("두", "{{ko-IPA|a=y|l=y}}", "[tu(ː)]", "ipa")
	def test_du_ph_1(self):
		self.run_test("두", "{{ko-IPA|a=y}}", "두", "ph")
	def test_du_rr_1(self):
		self.run_test("두", "{{ko-IPA|a=y}}", "du", "rr")
	def test_du_rrr_1(self):
		self.run_test("두", "{{ko-IPA|a=y}}", "du", "rrr")
	def test_du_mr_1(self):
		self.run_test("두", "{{ko-IPA|a=y}}", "tu", "mr")
	def test_du_yr_1(self):
		self.run_test("두", "{{ko-IPA|a=y}}", "twu", "yr")
	def test_du_ipa_1(self):
		self.run_test("두", "{{ko-IPA|a=y}}", "[tu]", "ipa")

	def test_kkotgaru_ph(self):
		self.run_test("꽃가루", "{{ko-IPA}}", "꼳까루", "ph")
	def test_kkotgaru_rr(self):
		self.run_test("꽃가루", "{{ko-IPA}}", "kkotgaru", "rr")
	def test_kkotgaru_rrr(self):
		self.run_test("꽃가루", "{{ko-IPA}}", "kkochgalu", "rrr")
	def test_kkotgaru_mr(self):
		self.run_test("꽃가루", "{{ko-IPA}}", "kkotkaru", "mr")
	def test_kkotgaru_yr(self):
		self.run_test("꽃가루", "{{ko-IPA}}", "kkochkalwu", "yr")
	def test_kkotgaru_ipa(self):
		self.run_test("꽃가루", "{{ko-IPA}}", "[k͈o̞t̚k͈a̠ɾu]", "ipa")

	def test_sikdo_ph(self):
		self.run_test("식도", "{{ko-IPA}}", "식또", "ph")
	def test_sikdo_rr(self):
		self.run_test("식도", "{{ko-IPA}}", "sikdo", "rr")
	def test_sikdo_rrr(self):
		self.run_test("식도", "{{ko-IPA}}", "sigdo", "rrr")
	def test_sikdo_mr(self):
		self.run_test("식도", "{{ko-IPA}}", "sikto", "mr")
	def test_sikdo_yr(self):
		self.run_test("식도", "{{ko-IPA}}", "sikto", "yr")
	def test_sikdo_ipa(self):
		self.run_test("식도", "{{ko-IPA}}", "[ɕʰik̚t͈o̞]", "ipa")
	def test_sikdo_ph_1(self):
		self.run_test("식도", "{{ko-IPA}}", "식또", "ph")
	def test_sikdo_rr_1(self):
		self.run_test("식도", "{{ko-IPA}}", "sikdo", "rr")
	def test_sikdo_rrr_1(self):
		self.run_test("식도", "{{ko-IPA}}", "sigdo", "rrr")
	def test_sikdo_mr_1(self):
		self.run_test("식도", "{{ko-IPA}}", "sikto", "mr")
	def test_sikdo_yr_1(self):
		self.run_test("식도", "{{ko-IPA}}", "sikto", "yr")
	def test_sikdo_ipa_1(self):
		self.run_test("식도", "{{ko-IPA}}", "[ɕʰik̚t͈o̞]", "ipa")
	def test_sikdo_ph_2(self):
		self.run_test("식도", "{{ko-IPA}}", "식또", "ph")
	def test_sikdo_rr_2(self):
		self.run_test("식도", "{{ko-IPA}}", "sikdo", "rr")
	def test_sikdo_rrr_2(self):
		self.run_test("식도", "{{ko-IPA}}", "sigdo", "rrr")
	def test_sikdo_mr_2(self):
		self.run_test("식도", "{{ko-IPA}}", "sikto", "mr")
	def test_sikdo_yr_2(self):
		self.run_test("식도", "{{ko-IPA}}", "sikto", "yr")
	def test_sikdo_ipa_2(self):
		self.run_test("식도", "{{ko-IPA}}", "[ɕʰik̚t͈o̞]", "ipa")

	def test_gigwan_ph(self):
		self.run_test("기관", "{{ko-ipa}}", "기관", "ph")
	def test_gigwan_rr(self):
		self.run_test("기관", "{{ko-ipa}}", "gigwan", "rr")
	def test_gigwan_rrr(self):
		self.run_test("기관", "{{ko-ipa}}", "gigwan", "rrr")
	def test_gigwan_mr(self):
		self.run_test("기관", "{{ko-ipa}}", "kigwan", "mr")
	def test_gigwan_yr(self):
		self.run_test("기관", "{{ko-ipa}}", "kikwan", "yr")
	def test_gigwan_ipa(self):
		self.run_test("기관", "{{ko-ipa}}", "[kiɡwa̠n]", "ipa")


	def test_gan_ph(self):
		self.run_test("간", "{{ko-IPA}}", "간", "ph")
	def test_gan_rr(self):
		self.run_test("간", "{{ko-IPA}}", "gan", "rr")
	def test_gan_rrr(self):
		self.run_test("간", "{{ko-IPA}}", "gan", "rrr")
	def test_gan_mr(self):
		self.run_test("간", "{{ko-IPA}}", "kan", "mr")
	def test_gan_yr(self):
		self.run_test("간", "{{ko-IPA}}", "kan", "yr")
	def test_gan_ipa(self):
		self.run_test("간", "{{ko-IPA}}", "[ka̠n]", "ipa")
	def test_gan_ph_1(self):
		self.run_test("간", "{{ko-IPA}}", "간", "ph")
	def test_gan_rr_1(self):
		self.run_test("간", "{{ko-IPA}}", "gan", "rr")
	def test_gan_rrr_1(self):
		self.run_test("간", "{{ko-IPA}}", "gan", "rrr")
	def test_gan_mr_1(self):
		self.run_test("간", "{{ko-IPA}}", "kan", "mr")
	def test_gan_yr_1(self):
		self.run_test("간", "{{ko-IPA}}", "kan", "yr")
	def test_gan_ipa_1(self):
		self.run_test("간", "{{ko-IPA}}", "[ka̠n]", "ipa")
	def test_gan_ph_2(self):
		self.run_test("간", "{{ko-IPA|l=y}}", "간(ː)", "ph")
	def test_gan_rr_2(self):
		self.run_test("간", "{{ko-IPA|l=y}}", "gan", "rr")
	def test_gan_rrr_2(self):
		self.run_test("간", "{{ko-IPA|l=y}}", "gan", "rrr")
	def test_gan_mr_2(self):
		self.run_test("간", "{{ko-IPA|l=y}}", "kan", "mr")
	def test_gan_yr_2(self):
		self.run_test("간", "{{ko-IPA|l=y}}", "kān", "yr")
	def test_gan_ipa_2(self):
		self.run_test("간", "{{ko-IPA|l=y}}", "[ka̠(ː)n]", "ipa")
	def test_gan_ph_3(self):
		self.run_test("간", "{{ko-IPA}}", "간", "ph")
	def test_gan_rr_3(self):
		self.run_test("간", "{{ko-IPA}}", "gan", "rr")
	def test_gan_rrr_3(self):
		self.run_test("간", "{{ko-IPA}}", "gan", "rrr")
	def test_gan_mr_3(self):
		self.run_test("간", "{{ko-IPA}}", "kan", "mr")
	def test_gan_yr_3(self):
		self.run_test("간", "{{ko-IPA}}", "kan", "yr")
	def test_gan_ipa_3(self):
		self.run_test("간", "{{ko-IPA}}", "[ka̠n]", "ipa")
	def test_gan_ph_4(self):
		self.run_test("간", "{{ko-IPA}}", "간", "ph")
	def test_gan_rr_4(self):
		self.run_test("간", "{{ko-IPA}}", "gan", "rr")
	def test_gan_rrr_4(self):
		self.run_test("간", "{{ko-IPA}}", "gan", "rrr")
	def test_gan_mr_4(self):
		self.run_test("간", "{{ko-IPA}}", "kan", "mr")
	def test_gan_yr_4(self):
		self.run_test("간", "{{ko-IPA}}", "kan", "yr")
	def test_gan_ipa_4(self):
		self.run_test("간", "{{ko-IPA}}", "[ka̠n]", "ipa")

	def test_sin_ph(self):
		self.run_test("신", "{{ko-IPA}}", "신", "ph")
	def test_sin_rr(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rr")
	def test_sin_rrr(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rrr")
	def test_sin_mr(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "mr")
	def test_sin_yr(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "yr")
	def test_sin_ipa(self):
		self.run_test("신", "{{ko-IPA}}", "[ɕʰin]", "ipa")
	def test_sin_ph_1(self):
		self.run_test("신", "{{ko-IPA}}", "신", "ph")
	def test_sin_rr_1(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rr")
	def test_sin_rrr_1(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rrr")
	def test_sin_mr_1(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "mr")
	def test_sin_yr_1(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "yr")
	def test_sin_ipa_1(self):
		self.run_test("신", "{{ko-IPA}}", "[ɕʰin]", "ipa")
	def test_sin_ph_2(self):
		self.run_test("신", "{{ko-IPA}}", "신", "ph")
	def test_sin_rr_2(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rr")
	def test_sin_rrr_2(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rrr")
	def test_sin_mr_2(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "mr")
	def test_sin_yr_2(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "yr")
	def test_sin_ipa_2(self):
		self.run_test("신", "{{ko-IPA}}", "[ɕʰin]", "ipa")
	def test_sin_ph_3(self):
		self.run_test("신", "{{ko-IPA}}", "신", "ph")
	def test_sin_rr_3(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rr")
	def test_sin_rrr_3(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rrr")
	def test_sin_mr_3(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "mr")
	def test_sin_yr_3(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "yr")
	def test_sin_ipa_3(self):
		self.run_test("신", "{{ko-IPA}}", "[ɕʰin]", "ipa")
	def test_sin_ph_4(self):
		self.run_test("신", "{{ko-IPA|com=0}}", "씬", "ph")
	def test_sin_rr_4(self):
		self.run_test("신", "{{ko-IPA|com=0}}", "sin", "rr")
	def test_sin_rrr_4(self):
		self.run_test("신", "{{ko-IPA|com=0}}", "sin", "rrr")
	def test_sin_mr_4(self):
		self.run_test("신", "{{ko-IPA|com=0}}", "ssin", "mr")
	def test_sin_yr_4(self):
		self.run_test("신", "{{ko-IPA|com=0}}", "qsin", "yr")
	def test_sin_ipa_4(self):
		self.run_test("신", "{{ko-IPA|com=0}}", "[ɕ͈in]", "ipa")
	def test_sin_ph_5(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "신(ː)", "ph")
	def test_sin_rr_5(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "sin", "rr")
	def test_sin_rrr_5(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "sin", "rrr")
	def test_sin_mr_5(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "sin", "mr")
	def test_sin_yr_5(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "sīn", "yr")
	def test_sin_ipa_5(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "[ɕʰi(ː)n]", "ipa")
	def test_sin_ph_6(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "신(ː)", "ph")
	def test_sin_rr_6(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "sin", "rr")
	def test_sin_rrr_6(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "sin", "rrr")
	def test_sin_mr_6(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "sin", "mr")
	def test_sin_yr_6(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "sīn", "yr")
	def test_sin_ipa_6(self):
		self.run_test("신", "{{ko-IPA|l=y}}", "[ɕʰi(ː)n]", "ipa")
	def test_sin_ph_7(self):
		self.run_test("신", "{{ko-IPA}}", "신", "ph")
	def test_sin_rr_7(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rr")
	def test_sin_rrr_7(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "rrr")
	def test_sin_mr_7(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "mr")
	def test_sin_yr_7(self):
		self.run_test("신", "{{ko-IPA}}", "sin", "yr")
	def test_sin_ipa_7(self):
		self.run_test("신", "{{ko-IPA}}", "[ɕʰin]", "ipa")

	def test_ganjang_ph(self):
		self.run_test("간장", "{{ko-IPA}}", "간장", "ph")
	def test_ganjang_rr(self):
		self.run_test("간장", "{{ko-IPA}}", "ganjang", "rr")
	def test_ganjang_rrr(self):
		self.run_test("간장", "{{ko-IPA}}", "ganjang", "rrr")
	def test_ganjang_mr(self):
		self.run_test("간장", "{{ko-IPA}}", "kanjang", "mr")
	def test_ganjang_yr(self):
		self.run_test("간장", "{{ko-IPA}}", "kan.cang", "yr")
	def test_ganjang_ipa(self):
		self.run_test("간장", "{{ko-IPA}}", "[ka̠ɲd͡ʑa̠ŋ]", "ipa")
	def test_ganjang_ph_1(self):
		self.run_test("간장", "{{ko-IPA|l=y}}", "간(ː)장", "ph")
	def test_ganjang_rr_1(self):
		self.run_test("간장", "{{ko-IPA|l=y}}", "ganjang", "rr")
	def test_ganjang_rrr_1(self):
		self.run_test("간장", "{{ko-IPA|l=y}}", "ganjang", "rrr")
	def test_ganjang_mr_1(self):
		self.run_test("간장", "{{ko-IPA|l=y}}", "kanjang", "mr")
	def test_ganjang_yr_1(self):
		self.run_test("간장", "{{ko-IPA|l=y}}", "kān.cang", "yr")
	def test_ganjang_ipa_1(self):
		self.run_test("간장", "{{ko-IPA|l=y}}", "[ˈka̠(ː)ɲd͡ʑa̠ŋ]", "ipa")

	def test_nyeon_ph(self):
		self.run_test("년", "{{ko-IPA}}", "년", "ph")
	def test_nyeon_rr(self):
		self.run_test("년", "{{ko-IPA}}", "nyeon", "rr")
	def test_nyeon_rrr(self):
		self.run_test("년", "{{ko-IPA}}", "nyeon", "rrr")
	def test_nyeon_mr(self):
		self.run_test("년", "{{ko-IPA}}", "nyŏn", "mr")
	def test_nyeon_yr(self):
		self.run_test("년", "{{ko-IPA}}", "nyen", "yr")
	def test_nyeon_ipa(self):
		self.run_test("년", "{{ko-IPA}}", "[ɲʌ̹n]", "ipa")

	def test_yeon_ph(self):
		self.run_test("연", "{{ko-IPA}}", "연", "ph")
	def test_yeon_rr(self):
		self.run_test("연", "{{ko-IPA}}", "yeon", "rr")
	def test_yeon_rrr(self):
		self.run_test("연", "{{ko-IPA}}", "yeon", "rrr")
	def test_yeon_mr(self):
		self.run_test("연", "{{ko-IPA}}", "yŏn", "mr")
	def test_yeon_yr(self):
		self.run_test("연", "{{ko-IPA}}", "yen", "yr")
	def test_yeon_ipa(self):
		self.run_test("연", "{{ko-IPA}}", "[jʌ̹n]", "ipa")

	def test_sopa_ph(self):
		self.run_test("소파", "{{ko-IPA|com=0}}", "쏘파", "ph")
	def test_sopa_rr(self):
		self.run_test("소파", "{{ko-IPA|com=0}}", "sopa", "rr")
	def test_sopa_rrr(self):
		self.run_test("소파", "{{ko-IPA|com=0}}", "sopa", "rrr")
	def test_sopa_mr(self):
		self.run_test("소파", "{{ko-IPA|com=0}}", "ssop'a", "mr")
	def test_sopa_yr(self):
		self.run_test("소파", "{{ko-IPA|com=0}}", "qso.pha", "yr")
	def test_sopa_ipa(self):
		self.run_test("소파", "{{ko-IPA|com=0}}", "[s͈o̞pʰa̠]", "ipa")

	def test_ne_ph(self):
		self.run_test("네", "{{ko-IPA|l=y}}", "네(ː)", "ph")
	def test_ne_rr(self):
		self.run_test("네", "{{ko-IPA|l=y}}", "ne", "rr")
	def test_ne_rrr(self):
		self.run_test("네", "{{ko-IPA|l=y}}", "ne", "rrr")
	def test_ne_mr(self):
		self.run_test("네", "{{ko-IPA|l=y}}", "ne", "mr")
	def test_ne_yr(self):
		self.run_test("네", "{{ko-IPA|l=y}}", "nēy", "yr")
	def test_ne_ipa(self):
		self.run_test("네", "{{ko-IPA|l=y}}", "[ne̞(ː)]", "ipa")
	def test_ne_ph_1(self):
		self.run_test("네", "{{ko-IPA}}", "네", "ph")
	def test_ne_rr_1(self):
		self.run_test("네", "{{ko-IPA}}", "ne", "rr")
	def test_ne_rrr_1(self):
		self.run_test("네", "{{ko-IPA}}", "ne", "rrr")
	def test_ne_mr_1(self):
		self.run_test("네", "{{ko-IPA}}", "ne", "mr")
	def test_ne_yr_1(self):
		self.run_test("네", "{{ko-IPA}}", "ney", "yr")
	def test_ne_ipa_1(self):
		self.run_test("네", "{{ko-IPA}}", "[ne̞]", "ipa")
	def test_ni_ne_ph_2(self):
		self.run_test("네", "{{ko-IPA|니|네}}", "니/네", "ph")
	def test_ni_ne_rr_2(self):
		self.run_test("네", "{{ko-IPA|니|네}}", "ni/ne", "rr")
	def test_ni_ne_rrr_2(self):
		self.run_test("네", "{{ko-IPA|니|네}}", "ni/ne", "rrr")
	def test_ni_ne_mr_2(self):
		self.run_test("네", "{{ko-IPA|니|네}}", "ni/ne", "mr")
	def test_ni_ne_yr_2(self):
		self.run_test("네", "{{ko-IPA|니|네}}", "ni/ney", "yr")
	def test_ni_ne_ipa_2(self):
		self.run_test("네", "{{ko-IPA|니|네}}", "[ni] ~ [ne̞]", "ipa")

	def test_don_ph(self):
		self.run_test("돈", "{{ko-IPA|l=y}}", "돈(ː)", "ph")
	def test_don_rr(self):
		self.run_test("돈", "{{ko-IPA|l=y}}", "don", "rr")
	def test_don_rrr(self):
		self.run_test("돈", "{{ko-IPA|l=y}}", "don", "rrr")
	def test_don_mr(self):
		self.run_test("돈", "{{ko-IPA|l=y}}", "ton", "mr")
	def test_don_yr(self):
		self.run_test("돈", "{{ko-IPA|l=y}}", "tōn", "yr")
	def test_don_ipa(self):
		self.run_test("돈", "{{ko-IPA|l=y}}", "[to̞(ː)n]", "ipa")

	def test_sonong_ph(self):
		self.run_test("소농", "{{ko-IPA|l=y}}", "소(ː)농", "ph")
	def test_sonong_rr(self):
		self.run_test("소농", "{{ko-IPA|l=y}}", "sonong", "rr")
	def test_sonong_rrr(self):
		self.run_test("소농", "{{ko-IPA|l=y}}", "sonong", "rrr")
	def test_sonong_mr(self):
		self.run_test("소농", "{{ko-IPA|l=y}}", "sonong", "mr")
	def test_sonong_yr(self):
		self.run_test("소농", "{{ko-IPA|l=y}}", "sōnong", "yr")
	def test_sonong_ipa(self):
		self.run_test("소농", "{{ko-IPA|l=y}}", "[ˈsʰo̞(ː)no̞ŋ]", "ipa")

	def test_jeungosim_ph(self):
		self.run_test("증오심", "{{ko-IPA}}", "증오심", "ph")
	def test_jeungosim_rr(self):
		self.run_test("증오심", "{{ko-IPA}}", "jeung'osim", "rr")
	def test_jeungosim_rrr(self):
		self.run_test("증오심", "{{ko-IPA}}", "jeung'osim", "rrr")
	def test_jeungosim_mr(self):
		self.run_test("증오심", "{{ko-IPA}}", "chŭngosim", "mr")
	def test_jeungosim_yr(self):
		self.run_test("증오심", "{{ko-IPA}}", "cungosim", "yr")
	def test_jeungosim_ipa(self):
		self.run_test("증오심", "{{ko-IPA}}", "[t͡ɕɯŋo̞ɕʰim]", "ipa")

	def test_bakwibeolle_ph(self):
		self.run_test("바퀴벌레", "{{ko-IPA}}", "바퀴벌레", "ph")
	def test_bakwibeolle_rr(self):
		self.run_test("바퀴벌레", "{{ko-IPA}}", "bakwibeolle", "rr")
	def test_bakwibeolle_rrr(self):
		self.run_test("바퀴벌레", "{{ko-IPA}}", "bakwibeolle", "rrr")
	def test_bakwibeolle_mr(self):
		self.run_test("바퀴벌레", "{{ko-IPA}}", "pak'wibŏlle", "mr")
	def test_bakwibeolle_yr(self):
		self.run_test("바퀴벌레", "{{ko-IPA}}", "pa.khwipelley", "yr")
	def test_bakwibeolle_ipa(self):
		self.run_test("바퀴벌레", "{{ko-IPA}}", "[pa̠kʰɥibʌ̹ɭɭe̞] ~ [pa̠kʰybʌ̹ɭɭe̞]", "ipa")

	def test_bumo_ph(self):
		self.run_test("부모", "{{ko-IPA}}", "부모", "ph")
	def test_bumo_rr(self):
		self.run_test("부모", "{{ko-IPA}}", "bumo", "rr")
	def test_bumo_rrr(self):
		self.run_test("부모", "{{ko-IPA}}", "bumo", "rrr")
	def test_bumo_mr(self):
		self.run_test("부모", "{{ko-IPA}}", "pumo", "mr")
	def test_bumo_yr(self):
		self.run_test("부모", "{{ko-IPA}}", "pumo", "yr")
	def test_bumo_ipa(self):
		self.run_test("부모", "{{ko-IPA}}", "[pumo̞]", "ipa")

	def test_ttal_ph(self):
		self.run_test("딸", "{{ko-IPA}}", "딸", "ph")
	def test_ttal_rr(self):
		self.run_test("딸", "{{ko-IPA}}", "ttal", "rr")
	def test_ttal_rrr(self):
		self.run_test("딸", "{{ko-IPA}}", "ttal", "rrr")
	def test_ttal_mr(self):
		self.run_test("딸", "{{ko-IPA}}", "ttal", "mr")
	def test_ttal_yr(self):
		self.run_test("딸", "{{ko-IPA}}", "ttal", "yr")
	def test_ttal_ipa(self):
		self.run_test("딸", "{{ko-IPA}}", "[t͈a̠ɭ]", "ipa")
	def test_ttal_ph_1(self):
		self.run_test("딸", "{{ko-IPA}}", "딸", "ph")
	def test_ttal_rr_1(self):
		self.run_test("딸", "{{ko-IPA}}", "ttal", "rr")
	def test_ttal_rrr_1(self):
		self.run_test("딸", "{{ko-IPA}}", "ttal", "rrr")
	def test_ttal_mr_1(self):
		self.run_test("딸", "{{ko-IPA}}", "ttal", "mr")
	def test_ttal_yr_1(self):
		self.run_test("딸", "{{ko-IPA}}", "ttal", "yr")
	def test_ttal_ipa_1(self):
		self.run_test("딸", "{{ko-IPA}}", "[t͈a̠ɭ]", "ipa")

	def test_gwon_ph(self):
		self.run_test("권", "{{ko-IPA}}", "권", "ph")
	def test_gwon_rr(self):
		self.run_test("권", "{{ko-IPA}}", "gwon", "rr")
	def test_gwon_rrr(self):
		self.run_test("권", "{{ko-IPA}}", "gwon", "rrr")
	def test_gwon_mr(self):
		self.run_test("권", "{{ko-IPA}}", "kwŏn", "mr")
	def test_gwon_yr(self):
		self.run_test("권", "{{ko-IPA}}", "kwen", "yr")
	def test_gwon_ipa(self):
		self.run_test("권", "{{ko-IPA}}", "[kwʌ̹n]", "ipa")

	def test_jeotgarak_ph(self):
		self.run_test("젓가락", "{{ko-IPA|nobc=1}}", "젇까락/저까락", "ph")
	def test_jeotgarak_rr(self):
		self.run_test("젓가락", "{{ko-IPA|nobc=1}}", "jeotgarak", "rr")
	def test_jeotgarak_rrr(self):
		self.run_test("젓가락", "{{ko-IPA|nobc=1}}", "jeosgalag", "rrr")
	def test_jeotgarak_mr(self):
		self.run_test("젓가락", "{{ko-IPA|nobc=1}}", "chŏtkarak", "mr")
	def test_jeotgarak_yr(self):
		self.run_test("젓가락", "{{ko-IPA|nobc=1}}", "ceskalak", "yr")
	def test_jeotgarak_ipa(self):
		self.run_test("젓가락", "{{ko-IPA|nobc=1}}", "[t͡ɕʌ̹t̚k͈a̠ɾa̠k̚] ~ [t͡ɕʌ̹k͈a̠ɾa̠k̚]", "ipa")

	def test_haegun_ph(self):
		self.run_test("해군", "{{ko-IPA|l=y}}", "해(ː)군/헤(ː)군", "ph")
	def test_haegun_rr(self):
		self.run_test("해군", "{{ko-IPA|l=y}}", "haegun", "rr")
	def test_haegun_rrr(self):
		self.run_test("해군", "{{ko-IPA|l=y}}", "haegun", "rrr")
	def test_haegun_mr(self):
		self.run_test("해군", "{{ko-IPA|l=y}}", "haegun", "mr")
	def test_haegun_yr(self):
		self.run_test("해군", "{{ko-IPA|l=y}}", "hāykwun", "yr")
	def test_haegun_ipa(self):
		self.run_test("해군", "{{ko-IPA|l=y}}", "[ˈhɛ(ː)ɡun] ~ [ˈhe̞(ː)ɡun]", "ipa")

	def test_haedo_ph(self):
		self.run_test("해도", "{{ko-IPA|l=y}}", "해(ː)도/헤(ː)도", "ph")
	def test_haedo_rr(self):
		self.run_test("해도", "{{ko-IPA|l=y}}", "haedo", "rr")
	def test_haedo_rrr(self):
		self.run_test("해도", "{{ko-IPA|l=y}}", "haedo", "rrr")
	def test_haedo_mr(self):
		self.run_test("해도", "{{ko-IPA|l=y}}", "haedo", "mr")
	def test_haedo_yr(self):
		self.run_test("해도", "{{ko-IPA|l=y}}", "hāyto", "yr")
	def test_haedo_ipa(self):
		self.run_test("해도", "{{ko-IPA|l=y}}", "[ˈhɛ(ː)do̞] ~ [ˈhe̞(ː)do̞]", "ipa")

	def test_haebal_ph(self):
		self.run_test("해발", "{{ko-IPA|l=y}}", "해(ː)발/헤(ː)발", "ph")
	def test_haebal_rr(self):
		self.run_test("해발", "{{ko-IPA|l=y}}", "haebal", "rr")
	def test_haebal_rrr(self):
		self.run_test("해발", "{{ko-IPA|l=y}}", "haebal", "rrr")
	def test_haebal_mr(self):
		self.run_test("해발", "{{ko-IPA|l=y}}", "haebal", "mr")
	def test_haebal_yr(self):
		self.run_test("해발", "{{ko-IPA|l=y}}", "hāypal", "yr")
	def test_haebal_ipa(self):
		self.run_test("해발", "{{ko-IPA|l=y}}", "[ˈhɛ(ː)ba̠ɭ] ~ [ˈhe̞(ː)ba̠ɭ]", "ipa")

	def test_bulgasari_ph(self):
		self.run_test("불가사리", "{{ko-IPA}}", "불가사리", "ph")
	def test_bulgasari_rr(self):
		self.run_test("불가사리", "{{ko-IPA}}", "bulgasari", "rr")
	def test_bulgasari_rrr(self):
		self.run_test("불가사리", "{{ko-IPA}}", "bulgasali", "rrr")
	def test_bulgasari_mr(self):
		self.run_test("불가사리", "{{ko-IPA}}", "pulgasari", "mr")
	def test_bulgasari_yr(self):
		self.run_test("불가사리", "{{ko-IPA}}", "pul.kasali", "yr")
	def test_bulgasari_ipa(self):
		self.run_test("불가사리", "{{ko-IPA}}", "[puɭɡa̠sʰa̠ɾi]", "ipa")

	def test_seong_ph(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "성(ː)", "ph")
	def test_seong_rr(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "seong", "rr")
	def test_seong_rrr(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "seong", "rrr")
	def test_seong_mr(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "sŏng", "mr")
	def test_seong_yr(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "sēng", "yr")
	def test_seong_ipa(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "[sʰɘ(ː)ŋ]", "ipa")
	def test_seong_ph_1(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "성(ː)", "ph")
	def test_seong_rr_1(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "seong", "rr")
	def test_seong_rrr_1(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "seong", "rrr")
	def test_seong_mr_1(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "sŏng", "mr")
	def test_seong_yr_1(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "sēng", "yr")
	def test_seong_ipa_1(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "[sʰɘ(ː)ŋ]", "ipa")
	def test_seong_ph_2(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "성(ː)", "ph")
	def test_seong_rr_2(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "seong", "rr")
	def test_seong_rrr_2(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "seong", "rrr")
	def test_seong_mr_2(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "sŏng", "mr")
	def test_seong_yr_2(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "sēng", "yr")
	def test_seong_ipa_2(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "[sʰɘ(ː)ŋ]", "ipa")
	def test_seong_ph_3(self):
		self.run_test("성", "{{ko-IPA}}", "성", "ph")
	def test_seong_rr_3(self):
		self.run_test("성", "{{ko-IPA}}", "seong", "rr")
	def test_seong_rrr_3(self):
		self.run_test("성", "{{ko-IPA}}", "seong", "rrr")
	def test_seong_mr_3(self):
		self.run_test("성", "{{ko-IPA}}", "sŏng", "mr")
	def test_seong_yr_3(self):
		self.run_test("성", "{{ko-IPA}}", "seng", "yr")
	def test_seong_ipa_3(self):
		self.run_test("성", "{{ko-IPA}}", "[sʰʌ̹ŋ]", "ipa")
	def test_seong_ph_4(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "성(ː)", "ph")
	def test_seong_rr_4(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "seong", "rr")
	def test_seong_rrr_4(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "seong", "rrr")
	def test_seong_mr_4(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "sŏng", "mr")
	def test_seong_yr_4(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "sēng", "yr")
	def test_seong_ipa_4(self):
		self.run_test("성", "{{ko-IPA|l=y}}", "[sʰɘ(ː)ŋ]", "ipa")
	def test_seong_ph_5(self):
		self.run_test("성", "{{ko-IPA}}", "성", "ph")
	def test_seong_rr_5(self):
		self.run_test("성", "{{ko-IPA}}", "seong", "rr")
	def test_seong_rrr_5(self):
		self.run_test("성", "{{ko-IPA}}", "seong", "rrr")
	def test_seong_mr_5(self):
		self.run_test("성", "{{ko-IPA}}", "sŏng", "mr")
	def test_seong_yr_5(self):
		self.run_test("성", "{{ko-IPA}}", "seng", "yr")
	def test_seong_ipa_5(self):
		self.run_test("성", "{{ko-IPA}}", "[sʰʌ̹ŋ]", "ipa")

	def test_arabiain_ph(self):
		self.run_test("아라비아인", "{{ko-IPA}}", "아라비아인", "ph")
	def test_arabiain_rr(self):
		self.run_test("아라비아인", "{{ko-IPA}}", "arabiain", "rr")
	def test_arabiain_rrr(self):
		self.run_test("아라비아인", "{{ko-IPA}}", "alabiain", "rrr")
	def test_arabiain_mr(self):
		self.run_test("아라비아인", "{{ko-IPA}}", "arabiain", "mr")
	def test_arabiain_yr(self):
		self.run_test("아라비아인", "{{ko-IPA}}", "alapiain", "yr")
	def test_arabiain_ipa(self):
		self.run_test("아라비아인", "{{ko-IPA}}", "[a̠ɾa̠bia̠in]", "ipa")

	def test_Arabia_ph(self):
		self.run_test("아라비아", "{{ko-IPA|cap=y}}", "아라비아", "ph")
	def test_Arabia_rr(self):
		self.run_test("아라비아", "{{ko-IPA|cap=y}}", "Arabia", "rr")
	def test_Arabia_rrr(self):
		self.run_test("아라비아", "{{ko-IPA|cap=y}}", "Alabia", "rrr")
	def test_Arabia_mr(self):
		self.run_test("아라비아", "{{ko-IPA|cap=y}}", "Arabia", "mr")
	def test_Arabia_yr(self):
		self.run_test("아라비아", "{{ko-IPA|cap=y}}", "alapia", "yr")
	def test_Arabia_ipa(self):
		self.run_test("아라비아", "{{ko-IPA|cap=y}}", "[a̠ɾa̠bia̠]", "ipa")

	def test_wonsungi_ph(self):
		self.run_test("원숭이", "{{ko-IPA|l=y}}", "원(ː)숭이", "ph")
	def test_wonsungi_rr(self):
		self.run_test("원숭이", "{{ko-IPA|l=y}}", "wonsung'i", "rr")
	def test_wonsungi_rrr(self):
		self.run_test("원숭이", "{{ko-IPA|l=y}}", "wonsung'i", "rrr")
	def test_wonsungi_mr(self):
		self.run_test("원숭이", "{{ko-IPA|l=y}}", "wŏnsungi", "mr")
	def test_wonsungi_yr(self):
		self.run_test("원숭이", "{{ko-IPA|l=y}}", "wēnswungi", "yr")
	def test_wonsungi_ipa(self):
		self.run_test("원숭이", "{{ko-IPA|l=y}}", "[ˈwɘ(ː)nsʰuŋi]", "ipa")

	def test_beonyeok_ph(self):
		self.run_test("번역", "{{ko-IPA}}", "버녁", "ph")
	def test_beonyeok_rr(self):
		self.run_test("번역", "{{ko-IPA}}", "beonyeok", "rr")
	def test_beonyeok_rrr(self):
		self.run_test("번역", "{{ko-IPA}}", "beon'yeog", "rrr")
	def test_beonyeok_mr(self):
		self.run_test("번역", "{{ko-IPA}}", "pŏnyŏk", "mr")
	def test_beonyeok_yr(self):
		self.run_test("번역", "{{ko-IPA}}", "pen.yek", "yr")
	def test_beonyeok_ipa(self):
		self.run_test("번역", "{{ko-IPA}}", "[pʌ̹ɲʌ̹k̚]", "ipa")

	def test_maek_ph(self):
		self.run_test("맥", "{{ko-IPA}}", "맥/멕", "ph")
	def test_maek_rr(self):
		self.run_test("맥", "{{ko-IPA}}", "maek", "rr")
	def test_maek_rrr(self):
		self.run_test("맥", "{{ko-IPA}}", "maeg", "rrr")
	def test_maek_mr(self):
		self.run_test("맥", "{{ko-IPA}}", "maek", "mr")
	def test_maek_yr(self):
		self.run_test("맥", "{{ko-IPA}}", "mayk", "yr")
	def test_maek_ipa(self):
		self.run_test("맥", "{{ko-IPA}}", "[mɛk̚] ~ [me̞k̚]", "ipa")

	def test_taegwondo_ph(self):
		self.run_test("태권도", "{{ko-IPA|com=1|a=태권도 발음.ogg}}", "태꿘도/테꿘도", "ph")
	def test_taegwondo_rr(self):
		self.run_test("태권도", "{{ko-IPA|com=1|a=태권도 발음.ogg}}", "taegwondo", "rr")
	def test_taegwondo_rrr(self):
		self.run_test("태권도", "{{ko-IPA|com=1|a=태권도 발음.ogg}}", "taegwondo", "rrr")
	def test_taegwondo_mr(self):
		self.run_test("태권도", "{{ko-IPA|com=1|a=태권도 발음.ogg}}", "t'aekwŏndo", "mr")
	def test_taegwondo_yr(self):
		self.run_test("태권도", "{{ko-IPA|com=1|a=태권도 발음.ogg}}", "thayqkwento", "yr")
	def test_taegwondo_ipa(self):
		self.run_test("태권도", "{{ko-IPA|com=1|a=태권도 발음.ogg}}", "[tʰɛk͈wʌ̹ndo̞] ~ [tʰe̞k͈wʌ̹ndo̞]", "ipa")

	def test_samwol_ph(self):
		self.run_test("삼월", "{{ko-IPA|a=Ko-삼월.ogg}}", "사뭘", "ph")
	def test_samwol_rr(self):
		self.run_test("삼월", "{{ko-IPA|a=Ko-삼월.ogg}}", "samwol", "rr")
	def test_samwol_rrr(self):
		self.run_test("삼월", "{{ko-IPA|a=Ko-삼월.ogg}}", "sam'wol", "rrr")
	def test_samwol_mr(self):
		self.run_test("삼월", "{{ko-IPA|a=Ko-삼월.ogg}}", "samwŏl", "mr")
	def test_samwol_yr(self):
		self.run_test("삼월", "{{ko-IPA|a=Ko-삼월.ogg}}", "sam.wel", "yr")
	def test_samwol_ipa(self):
		self.run_test("삼월", "{{ko-IPA|a=Ko-삼월.ogg}}", "[sʰa̠mwʌ̹ɭ]", "ipa")

	def test_geo_ph(self):
		self.run_test("거", "{{ko-IPA|a=y}}", "거", "ph")
	def test_geo_rr(self):
		self.run_test("거", "{{ko-IPA|a=y}}", "geo", "rr")
	def test_geo_rrr(self):
		self.run_test("거", "{{ko-IPA|a=y}}", "geo", "rrr")
	def test_geo_mr(self):
		self.run_test("거", "{{ko-IPA|a=y}}", "kŏ", "mr")
	def test_geo_yr(self):
		self.run_test("거", "{{ko-IPA|a=y}}", "ke", "yr")
	def test_geo_ipa(self):
		self.run_test("거", "{{ko-IPA|a=y}}", "[kʌ̹]", "ipa")

	def test_gil_ph(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "길", "ph")
	def test_gil_rr(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "gil", "rr")
	def test_gil_rrr(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "gil", "rrr")
	def test_gil_mr(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "kil", "mr")
	def test_gil_yr(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "kil", "yr")
	def test_gil_ipa(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "[kiɭ]", "ipa")
	def test_gil_ph_1(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "길", "ph")
	def test_gil_rr_1(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "gil", "rr")
	def test_gil_rrr_1(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "gil", "rrr")
	def test_gil_mr_1(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "kil", "mr")
	def test_gil_yr_1(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "kil", "yr")
	def test_gil_ipa_1(self):
		self.run_test("길", "{{ko-IPA|a=y}}", "[kiɭ]", "ipa")
	def test_gil_ph_2(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "길(ː)", "ph")
	def test_gil_rr_2(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "gil", "rr")
	def test_gil_rrr_2(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "gil", "rrr")
	def test_gil_mr_2(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "kil", "mr")
	def test_gil_yr_2(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "kīl", "yr")
	def test_gil_ipa_2(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "[ki(ː)ɭ]", "ipa")
	def test_gil_ph_3(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "길(ː)", "ph")
	def test_gil_rr_3(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "gil", "rr")
	def test_gil_rrr_3(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "gil", "rrr")
	def test_gil_mr_3(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "kil", "mr")
	def test_gil_yr_3(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "kīl", "yr")
	def test_gil_ipa_3(self):
		self.run_test("길", "{{ko-IPA|a=y|l=y}}", "[ki(ː)ɭ]", "ipa")
	def test_Gil_ph_4(self):
		self.run_test("길", "{{ko-IPA|a=y|cap=y}}", "길", "ph")
	def test_Gil_rr_4(self):
		self.run_test("길", "{{ko-IPA|a=y|cap=y}}", "Gil", "rr")
	def test_Gil_rrr_4(self):
		self.run_test("길", "{{ko-IPA|a=y|cap=y}}", "Gil", "rrr")
	def test_Gil_mr_4(self):
		self.run_test("길", "{{ko-IPA|a=y|cap=y}}", "Kil", "mr")
	def test_Gil_yr_4(self):
		self.run_test("길", "{{ko-IPA|a=y|cap=y}}", "kil", "yr")
	def test_Gil_ipa_4(self):
		self.run_test("길", "{{ko-IPA|a=y|cap=y}}", "[kiɭ]", "ipa")

	def test_hangeul_ph(self):
		self.run_test("한글", "{{ko-IPA|l=y}}", "한(ː)글", "ph")
	def test_hangeul_rr(self):
		self.run_test("한글", "{{ko-IPA|l=y}}", "han'geul", "rr")
	def test_hangeul_rrr(self):
		self.run_test("한글", "{{ko-IPA|l=y}}", "hangeul", "rrr")
	def test_hangeul_mr(self):
		self.run_test("한글", "{{ko-IPA|l=y}}", "han'gŭl", "mr")
	def test_hangeul_yr(self):
		self.run_test("한글", "{{ko-IPA|l=y}}", "hānkul", "yr")
	def test_hangeul_ipa(self):
		self.run_test("한글", "{{ko-IPA|l=y}}", "[ˈha̠(ː)nɡɯɭ]", "ipa")

	def test_son_ph(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "손", "ph")
	def test_son_rr(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "son", "rr")
	def test_son_rrr(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "son", "rrr")
	def test_son_mr(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "son", "mr")
	def test_son_yr(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "son", "yr")
	def test_son_ipa(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "[sʰo̞n]", "ipa")
	def test_son_ph_1(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "손", "ph")
	def test_son_rr_1(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "son", "rr")
	def test_son_rrr_1(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "son", "rrr")
	def test_son_mr_1(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "son", "mr")
	def test_son_yr_1(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "son", "yr")
	def test_son_ipa_1(self):
		self.run_test("손", "{{ko-IPA|a=y}}", "[sʰo̞n]", "ipa")
	def test_son_ph_2(self):
		self.run_test("손", "{{ko-IPA|l=y|a=y}}", "손(ː)", "ph")
	def test_son_rr_2(self):
		self.run_test("손", "{{ko-IPA|l=y|a=y}}", "son", "rr")
	def test_son_rrr_2(self):
		self.run_test("손", "{{ko-IPA|l=y|a=y}}", "son", "rrr")
	def test_son_mr_2(self):
		self.run_test("손", "{{ko-IPA|l=y|a=y}}", "son", "mr")
	def test_son_yr_2(self):
		self.run_test("손", "{{ko-IPA|l=y|a=y}}", "sōn", "yr")
	def test_son_ipa_2(self):
		self.run_test("손", "{{ko-IPA|l=y|a=y}}", "[sʰo̞(ː)n]", "ipa")

	def test_beom_ph(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "범(ː)", "ph")
	def test_beom_rr(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "beom", "rr")
	def test_beom_rrr(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "beom", "rrr")
	def test_beom_mr(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "pŏm", "mr")
	def test_beom_yr(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "pēm", "yr")
	def test_beom_ipa(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "[pɘ(ː)m]", "ipa")
	def test_beom_ph_1(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "범(ː)", "ph")
	def test_beom_rr_1(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "beom", "rr")
	def test_beom_rrr_1(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "beom", "rrr")
	def test_beom_mr_1(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "pŏm", "mr")
	def test_beom_yr_1(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "pēm", "yr")
	def test_beom_ipa_1(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "[pɘ(ː)m]", "ipa")
	def test_beom_ph_2(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "범(ː)", "ph")
	def test_beom_rr_2(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "beom", "rr")
	def test_beom_rrr_2(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "beom", "rrr")
	def test_beom_mr_2(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "pŏm", "mr")
	def test_beom_yr_2(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "pēm", "yr")
	def test_beom_ipa_2(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "[pɘ(ː)m]", "ipa")
	def test_beom_ph_3(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "범(ː)", "ph")
	def test_beom_rr_3(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "beom", "rr")
	def test_beom_rrr_3(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "beom", "rrr")
	def test_beom_mr_3(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "pŏm", "mr")
	def test_beom_yr_3(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "pēm", "yr")
	def test_beom_ipa_3(self):
		self.run_test("범", "{{ko-ipa|l=y}}", "[pɘ(ː)m]", "ipa")

	def test_dol_ph(self):
		self.run_test("돌", "{{ko-IPA|l=y}}", "돌(ː)", "ph")
	def test_dol_rr(self):
		self.run_test("돌", "{{ko-IPA|l=y}}", "dol", "rr")
	def test_dol_rrr(self):
		self.run_test("돌", "{{ko-IPA|l=y}}", "dol", "rrr")
	def test_dol_mr(self):
		self.run_test("돌", "{{ko-IPA|l=y}}", "tol", "mr")
	def test_dol_yr(self):
		self.run_test("돌", "{{ko-IPA|l=y}}", "tōl", "yr")
	def test_dol_ipa(self):
		self.run_test("돌", "{{ko-IPA|l=y}}", "[to̞(ː)ɭ]", "ipa")
	def test_dol_ph_1(self):
		self.run_test("돌", "{{ko-IPA}}", "돌", "ph")
	def test_dol_rr_1(self):
		self.run_test("돌", "{{ko-IPA}}", "dol", "rr")
	def test_dol_rrr_1(self):
		self.run_test("돌", "{{ko-IPA}}", "dol", "rrr")
	def test_dol_mr_1(self):
		self.run_test("돌", "{{ko-IPA}}", "tol", "mr")
	def test_dol_yr_1(self):
		self.run_test("돌", "{{ko-IPA}}", "tol", "yr")
	def test_dol_ipa_1(self):
		self.run_test("돌", "{{ko-IPA}}", "[to̞ɭ]", "ipa")
	def test_dol_ph_2(self):
		self.run_test("돌", "{{ko-IPA}}", "돌", "ph")
	def test_dol_rr_2(self):
		self.run_test("돌", "{{ko-IPA}}", "dol", "rr")
	def test_dol_rrr_2(self):
		self.run_test("돌", "{{ko-IPA}}", "dol", "rrr")
	def test_dol_mr_2(self):
		self.run_test("돌", "{{ko-IPA}}", "tol", "mr")
	def test_dol_yr_2(self):
		self.run_test("돌", "{{ko-IPA}}", "tol", "yr")
	def test_dol_ipa_2(self):
		self.run_test("돌", "{{ko-IPA}}", "[to̞ɭ]", "ipa")

	def test_sam_ph(self):
		self.run_test("삶", "{{ko-IPA|l=y|a=y}}", "삼(ː)", "ph")
	def test_sam_rr(self):
		self.run_test("삶", "{{ko-IPA|l=y|a=y}}", "sam", "rr")
	def test_sam_rrr(self):
		self.run_test("삶", "{{ko-IPA|l=y|a=y}}", "salm", "rrr")
	def test_sam_mr(self):
		self.run_test("삶", "{{ko-IPA|l=y|a=y}}", "sam", "mr")
	def test_sam_yr(self):
		self.run_test("삶", "{{ko-IPA|l=y|a=y}}", "sālm", "yr")
	def test_sam_ipa(self):
		self.run_test("삶", "{{ko-IPA|l=y|a=y}}", "[sʰa̠(ː)m]", "ipa")

	def test_neolda_ph(self):
		self.run_test("넓다", "{{ko-IPA}}", "널따", "ph")
	def test_neolda_rr(self):
		self.run_test("넓다", "{{ko-IPA}}", "neolda", "rr")
	def test_neolda_rrr(self):
		self.run_test("넓다", "{{ko-IPA}}", "neolbda", "rrr")
	def test_neolda_mr(self):
		self.run_test("넓다", "{{ko-IPA}}", "nŏlta", "mr")
	def test_neolda_yr(self):
		self.run_test("넓다", "{{ko-IPA}}", "nelpta", "yr")
	def test_neolda_ipa(self):
		self.run_test("넓다", "{{ko-IPA}}", "[nʌ̹ɭt͈a̠]", "ipa")

	def test_heuk_ph(self):
		self.run_test("흙", "{{ko-IPA}}", "흑", "ph")
	def test_heuk_rr(self):
		self.run_test("흙", "{{ko-IPA}}", "heuk", "rr")
	def test_heuk_rrr(self):
		self.run_test("흙", "{{ko-IPA}}", "heulg", "rrr")
	def test_heuk_mr(self):
		self.run_test("흙", "{{ko-IPA}}", "hŭk", "mr")
	def test_heuk_yr(self):
		self.run_test("흙", "{{ko-IPA}}", "hulk", "yr")
	def test_heuk_ipa(self):
		self.run_test("흙", "{{ko-IPA}}", "[xɯk̚]", "ipa")

	def test_dak_ph(self):
		self.run_test("닭", "{{ko-IPA}}", "닥", "ph")
	def test_dak_rr(self):
		self.run_test("닭", "{{ko-IPA}}", "dak", "rr")
	def test_dak_rrr(self):
		self.run_test("닭", "{{ko-IPA}}", "dalg", "rrr")
	def test_dak_mr(self):
		self.run_test("닭", "{{ko-IPA}}", "tak", "mr")
	def test_dak_yr(self):
		self.run_test("닭", "{{ko-IPA}}", "talk", "yr")
	def test_dak_ipa(self):
		self.run_test("닭", "{{ko-IPA}}", "[ta̠k̚]", "ipa")

	def test_eopda_ph(self):
		self.run_test("없다", "{{ko-IPA|l=y|a=Ko-없다.ogg}}", "업(ː)따", "ph")
	def test_eopda_rr(self):
		self.run_test("없다", "{{ko-IPA|l=y|a=Ko-없다.ogg}}", "eopda", "rr")
	def test_eopda_rrr(self):
		self.run_test("없다", "{{ko-IPA|l=y|a=Ko-없다.ogg}}", "eobsda", "rrr")
	def test_eopda_mr(self):
		self.run_test("없다", "{{ko-IPA|l=y|a=Ko-없다.ogg}}", "ŏpta", "mr")
	def test_eopda_yr(self):
		self.run_test("없다", "{{ko-IPA|l=y|a=Ko-없다.ogg}}", "ēpsta", "yr")
	def test_eopda_ipa(self):
		self.run_test("없다", "{{ko-IPA|l=y|a=Ko-없다.ogg}}", "[ˈɘ(ː)p̚t͈a̠]", "ipa")

	def test_kkulta_ph(self):
		self.run_test("꿇다", "{{ko-IPA}}", "꿀타", "ph")
	def test_kkulta_rr(self):
		self.run_test("꿇다", "{{ko-IPA}}", "kkulta", "rr")
	def test_kkulta_rrr(self):
		self.run_test("꿇다", "{{ko-IPA}}", "kkulhda", "rrr")
	def test_kkulta_mr(self):
		self.run_test("꿇다", "{{ko-IPA}}", "kkult'a", "mr")
	def test_kkulta_yr(self):
		self.run_test("꿇다", "{{ko-IPA}}", "kkwulhta", "yr")
	def test_kkulta_ipa(self):
		self.run_test("꿇다", "{{ko-IPA}}", "[k͈uɭtʰa̠]", "ipa")

	def test_Pyeongyang_ph(self):
		self.run_test("평양", "{{ko-IPA|cap=y|a=Ko-{{PAGENAME}}.oga}}", "평양", "ph")
	def test_Pyeongyang_rr(self):
		self.run_test("평양", "{{ko-IPA|cap=y|a=Ko-{{PAGENAME}}.oga}}", "Pyeong'yang", "rr")
	def test_Pyeongyang_rrr(self):
		self.run_test("평양", "{{ko-IPA|cap=y|a=Ko-{{PAGENAME}}.oga}}", "Pyeong'yang", "rrr")
	def test_Pyeongyang_mr(self):
		self.run_test("평양", "{{ko-IPA|cap=y|a=Ko-{{PAGENAME}}.oga}}", "P'yŏngyang", "mr")
	def test_Pyeongyang_yr(self):
		self.run_test("평양", "{{ko-IPA|cap=y|a=Ko-{{PAGENAME}}.oga}}", "phyengyang", "yr")
	def test_Pyeongyang_ipa(self):
		self.run_test("평양", "{{ko-IPA|cap=y|a=Ko-{{PAGENAME}}.oga}}", "[pʰjʌ̹ŋja̠ŋ]", "ipa")

	def test_soju_ph(self):
		self.run_test("소주", "{{ko-IPA|com=0}}", "쏘주", "ph")
	def test_soju_rr(self):
		self.run_test("소주", "{{ko-IPA|com=0}}", "soju", "rr")
	def test_soju_rrr(self):
		self.run_test("소주", "{{ko-IPA|com=0}}", "soju", "rrr")
	def test_soju_mr(self):
		self.run_test("소주", "{{ko-IPA|com=0}}", "ssoju", "mr")
	def test_soju_yr(self):
		self.run_test("소주", "{{ko-IPA|com=0}}", "qsocwu", "yr")
	def test_soju_ipa(self):
		self.run_test("소주", "{{ko-IPA|com=0}}", "[s͈o̞d͡ʑu]", "ipa")

	def test_illyu_ph(self):
		self.run_test("인류", "{{ko-IPA}}", "일류", "ph")
	def test_illyu_rr(self):
		self.run_test("인류", "{{ko-IPA}}", "illyu", "rr")
	def test_illyu_rrr(self):
		self.run_test("인류", "{{ko-IPA}}", "inlyu", "rrr")
	def test_illyu_mr(self):
		self.run_test("인류", "{{ko-IPA}}", "illyu", "mr")
	def test_illyu_yr(self):
		self.run_test("인류", "{{ko-IPA}}", "inlyu", "yr")
	def test_illyu_ipa(self):
		self.run_test("인류", "{{ko-IPA}}", "[iʎʎu]", "ipa")

	def test_cheon_ph(self):
		self.run_test("천", "{{ko-IPA|l=y}}", "천(ː)", "ph")
	def test_cheon_rr(self):
		self.run_test("천", "{{ko-IPA|l=y}}", "cheon", "rr")
	def test_cheon_rrr(self):
		self.run_test("천", "{{ko-IPA|l=y}}", "cheon", "rrr")
	def test_cheon_mr(self):
		self.run_test("천", "{{ko-IPA|l=y}}", "ch'ŏn", "mr")
	def test_cheon_yr(self):
		self.run_test("천", "{{ko-IPA|l=y}}", "chēn", "yr")
	def test_cheon_ipa(self):
		self.run_test("천", "{{ko-IPA|l=y}}", "[t͡ɕʰɘ(ː)n]", "ipa")
	def test_cheon_ph_1(self):
		self.run_test("천", "{{ko-ipa}}", "천", "ph")
	def test_cheon_rr_1(self):
		self.run_test("천", "{{ko-ipa}}", "cheon", "rr")
	def test_cheon_rrr_1(self):
		self.run_test("천", "{{ko-ipa}}", "cheon", "rrr")
	def test_cheon_mr_1(self):
		self.run_test("천", "{{ko-ipa}}", "ch'ŏn", "mr")
	def test_cheon_yr_1(self):
		self.run_test("천", "{{ko-ipa}}", "chen", "yr")
	def test_cheon_ipa_1(self):
		self.run_test("천", "{{ko-ipa}}", "[t͡ɕʰʌ̹n]", "ipa")
	def test_cheon_ph_2(self):
		self.run_test("천", "{{ko-ipa}}", "천", "ph")
	def test_cheon_rr_2(self):
		self.run_test("천", "{{ko-ipa}}", "cheon", "rr")
	def test_cheon_rrr_2(self):
		self.run_test("천", "{{ko-ipa}}", "cheon", "rrr")
	def test_cheon_mr_2(self):
		self.run_test("천", "{{ko-ipa}}", "ch'ŏn", "mr")
	def test_cheon_yr_2(self):
		self.run_test("천", "{{ko-ipa}}", "chen", "yr")
	def test_cheon_ipa_2(self):
		self.run_test("천", "{{ko-ipa}}", "[t͡ɕʰʌ̹n]", "ipa")

	def test_mu_ph(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "무(ː)", "ph")
	def test_mu_rr(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "rr")
	def test_mu_rrr(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "rrr")
	def test_mu_mr(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "mr")
	def test_mu_yr(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mū", "yr")
	def test_mu_ipa(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "[mu(ː)]", "ipa")
	def test_mu_ph_1(self):
		self.run_test("무", "{{ko-IPA}}", "무", "ph")
	def test_mu_rr_1(self):
		self.run_test("무", "{{ko-IPA}}", "mu", "rr")
	def test_mu_rrr_1(self):
		self.run_test("무", "{{ko-IPA}}", "mu", "rrr")
	def test_mu_mr_1(self):
		self.run_test("무", "{{ko-IPA}}", "mu", "mr")
	def test_mu_yr_1(self):
		self.run_test("무", "{{ko-IPA}}", "mu", "yr")
	def test_mu_ipa_1(self):
		self.run_test("무", "{{ko-IPA}}", "[mu]", "ipa")
	def test_mu_ph_2(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "무(ː)", "ph")
	def test_mu_rr_2(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "rr")
	def test_mu_rrr_2(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "rrr")
	def test_mu_mr_2(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "mr")
	def test_mu_yr_2(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mū", "yr")
	def test_mu_ipa_2(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "[mu(ː)]", "ipa")
	def test_mu_ph_3(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "무(ː)", "ph")
	def test_mu_rr_3(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "rr")
	def test_mu_rrr_3(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "rrr")
	def test_mu_mr_3(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "mr")
	def test_mu_yr_3(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mū", "yr")
	def test_mu_ipa_3(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "[mu(ː)]", "ipa")
	def test_mu_ph_4(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "무(ː)", "ph")
	def test_mu_rr_4(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "rr")
	def test_mu_rrr_4(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "rrr")
	def test_mu_mr_4(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mu", "mr")
	def test_mu_yr_4(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "mū", "yr")
	def test_mu_ipa_4(self):
		self.run_test("무", "{{ko-IPA|l=y}}", "[mu(ː)]", "ipa")
	def test_mu_ph_5(self):
		self.run_test("무", "{{ko-IPA}}", "무", "ph")
	def test_mu_rr_5(self):
		self.run_test("무", "{{ko-IPA}}", "mu", "rr")
	def test_mu_rrr_5(self):
		self.run_test("무", "{{ko-IPA}}", "mu", "rrr")
	def test_mu_mr_5(self):
		self.run_test("무", "{{ko-IPA}}", "mu", "mr")
	def test_mu_yr_5(self):
		self.run_test("무", "{{ko-IPA}}", "mu", "yr")
	def test_mu_ipa_5(self):
		self.run_test("무", "{{ko-IPA}}", "[mu]", "ipa")

	def test_bi_ph(self):
		self.run_test("비", "{{ko-ipa}}", "비", "ph")
	def test_bi_rr(self):
		self.run_test("비", "{{ko-ipa}}", "bi", "rr")
	def test_bi_rrr(self):
		self.run_test("비", "{{ko-ipa}}", "bi", "rrr")
	def test_bi_mr(self):
		self.run_test("비", "{{ko-ipa}}", "pi", "mr")
	def test_bi_yr(self):
		self.run_test("비", "{{ko-ipa}}", "pi", "yr")
	def test_bi_ipa(self):
		self.run_test("비", "{{ko-ipa}}", "[pi]", "ipa")
	def test_bi_ph_1(self):
		self.run_test("비", "{{ko-ipa}}", "비", "ph")
	def test_bi_rr_1(self):
		self.run_test("비", "{{ko-ipa}}", "bi", "rr")
	def test_bi_rrr_1(self):
		self.run_test("비", "{{ko-ipa}}", "bi", "rrr")
	def test_bi_mr_1(self):
		self.run_test("비", "{{ko-ipa}}", "pi", "mr")
	def test_bi_yr_1(self):
		self.run_test("비", "{{ko-ipa}}", "pi", "yr")
	def test_bi_ipa_1(self):
		self.run_test("비", "{{ko-ipa}}", "[pi]", "ipa")
	def test_bi_ph_2(self):
		self.run_test("비", "{{ko-IPA}}", "비", "ph")
	def test_bi_rr_2(self):
		self.run_test("비", "{{ko-IPA}}", "bi", "rr")
	def test_bi_rrr_2(self):
		self.run_test("비", "{{ko-IPA}}", "bi", "rrr")
	def test_bi_mr_2(self):
		self.run_test("비", "{{ko-IPA}}", "pi", "mr")
	def test_bi_yr_2(self):
		self.run_test("비", "{{ko-IPA}}", "pi", "yr")
	def test_bi_ipa_2(self):
		self.run_test("비", "{{ko-IPA}}", "[pi]", "ipa")
	def test_bi_ph_3(self):
		self.run_test("비", "{{ko-ipa}}", "비", "ph")
	def test_bi_rr_3(self):
		self.run_test("비", "{{ko-ipa}}", "bi", "rr")
	def test_bi_rrr_3(self):
		self.run_test("비", "{{ko-ipa}}", "bi", "rrr")
	def test_bi_mr_3(self):
		self.run_test("비", "{{ko-ipa}}", "pi", "mr")
	def test_bi_yr_3(self):
		self.run_test("비", "{{ko-ipa}}", "pi", "yr")
	def test_bi_ipa_3(self):
		self.run_test("비", "{{ko-ipa}}", "[pi]", "ipa")
	def test_bi_ph_4(self):
		self.run_test("비", "{{ko-IPA|l=y}}", "비(ː)", "ph")
	def test_bi_rr_4(self):
		self.run_test("비", "{{ko-IPA|l=y}}", "bi", "rr")
	def test_bi_rrr_4(self):
		self.run_test("비", "{{ko-IPA|l=y}}", "bi", "rrr")
	def test_bi_mr_4(self):
		self.run_test("비", "{{ko-IPA|l=y}}", "pi", "mr")
	def test_bi_yr_4(self):
		self.run_test("비", "{{ko-IPA|l=y}}", "pī", "yr")
	def test_bi_ipa_4(self):
		self.run_test("비", "{{ko-IPA|l=y}}", "[pi(ː)]", "ipa")

	def test_saram_ph(self):
		self.run_test("사람", "{{ko-IPA|l=y|a=y}}", "사(ː)람", "ph")
	def test_saram_rr(self):
		self.run_test("사람", "{{ko-IPA|l=y|a=y}}", "saram", "rr")
	def test_saram_rrr(self):
		self.run_test("사람", "{{ko-IPA|l=y|a=y}}", "salam", "rrr")
	def test_saram_mr(self):
		self.run_test("사람", "{{ko-IPA|l=y|a=y}}", "saram", "mr")
	def test_saram_yr(self):
		self.run_test("사람", "{{ko-IPA|l=y|a=y}}", "sālam", "yr")
	def test_saram_ipa(self):
		self.run_test("사람", "{{ko-IPA|l=y|a=y}}", "[ˈsʰa̠(ː)ɾa̠m]", "ipa")

	def test_neutinamu_ph(self):
		self.run_test("느티나무", "{{ko-IPA}}", "느티나무", "ph")
	def test_neutinamu_rr(self):
		self.run_test("느티나무", "{{ko-IPA}}", "neutinamu", "rr")
	def test_neutinamu_rrr(self):
		self.run_test("느티나무", "{{ko-IPA}}", "neutinamu", "rrr")
	def test_neutinamu_mr(self):
		self.run_test("느티나무", "{{ko-IPA}}", "nŭt'inamu", "mr")
	def test_neutinamu_yr(self):
		self.run_test("느티나무", "{{ko-IPA}}", "nu.thinamu", "yr")
	def test_neutinamu_ipa(self):
		self.run_test("느티나무", "{{ko-IPA}}", "[nɯtʰina̠mu]", "ipa")

	def test_na_ph(self):
		self.run_test("나", "{{ko-IPA|a=y}}", "나", "ph")
	def test_na_rr(self):
		self.run_test("나", "{{ko-IPA|a=y}}", "na", "rr")
	def test_na_rrr(self):
		self.run_test("나", "{{ko-IPA|a=y}}", "na", "rrr")
	def test_na_mr(self):
		self.run_test("나", "{{ko-IPA|a=y}}", "na", "mr")
	def test_na_yr(self):
		self.run_test("나", "{{ko-IPA|a=y}}", "na", "yr")
	def test_na_ipa(self):
		self.run_test("나", "{{ko-IPA|a=y}}", "[na̠]", "ipa")
	def test_na_ph_1(self):
		self.run_test("나", "{{ko-IPA|a=y|l=y}}", "나(ː)", "ph")
	def test_na_rr_1(self):
		self.run_test("나", "{{ko-IPA|a=y|l=y}}", "na", "rr")
	def test_na_rrr_1(self):
		self.run_test("나", "{{ko-IPA|a=y|l=y}}", "na", "rrr")
	def test_na_mr_1(self):
		self.run_test("나", "{{ko-IPA|a=y|l=y}}", "na", "mr")
	def test_na_yr_1(self):
		self.run_test("나", "{{ko-IPA|a=y|l=y}}", "nā", "yr")
	def test_na_ipa_1(self):
		self.run_test("나", "{{ko-IPA|a=y|l=y}}", "[na̠(ː)]", "ipa")

	def test_bareum_ph(self):
		self.run_test("발음", "{{ko-IPA}}", "바름", "ph")
	def test_bareum_rr(self):
		self.run_test("발음", "{{ko-IPA}}", "bareum", "rr")
	def test_bareum_rrr(self):
		self.run_test("발음", "{{ko-IPA}}", "bal'eum", "rrr")
	def test_bareum_mr(self):
		self.run_test("발음", "{{ko-IPA}}", "parŭm", "mr")
	def test_bareum_yr(self):
		self.run_test("발음", "{{ko-IPA}}", "pal.um", "yr")
	def test_bareum_ipa(self):
		self.run_test("발음", "{{ko-IPA}}", "[pa̠ɾɯm]", "ipa")

	def test_soksagim_ph(self):
		self.run_test("속삭임", "{{ko-IPA}}", "속싸김", "ph")
	def test_soksagim_rr(self):
		self.run_test("속삭임", "{{ko-IPA}}", "soksagim", "rr")
	def test_soksagim_rrr(self):
		self.run_test("속삭임", "{{ko-IPA}}", "sogsag'im", "rrr")
	def test_soksagim_mr(self):
		self.run_test("속삭임", "{{ko-IPA}}", "soksagim", "mr")
	def test_soksagim_yr(self):
		self.run_test("속삭임", "{{ko-IPA}}", "sok.sak.im", "yr")
	def test_soksagim_ipa(self):
		self.run_test("속삭임", "{{ko-IPA}}", "[sʰo̞ks͈a̠ɡim]", "ipa")


	def test_ppang_ph(self):
		self.run_test("빵", "{{ko-IPA}}", "빵", "ph")
	def test_ppang_rr(self):
		self.run_test("빵", "{{ko-IPA}}", "ppang", "rr")
	def test_ppang_rrr(self):
		self.run_test("빵", "{{ko-IPA}}", "ppang", "rrr")
	def test_ppang_mr(self):
		self.run_test("빵", "{{ko-IPA}}", "ppang", "mr")
	def test_ppang_yr(self):
		self.run_test("빵", "{{ko-IPA}}", "ppang", "yr")
	def test_ppang_ipa(self):
		self.run_test("빵", "{{ko-IPA}}", "[p͈a̠ŋ]", "ipa")

	def test_doseogwan_ph(self):
		self.run_test("도서관", "{{ko-IPA}}", "도서관", "ph")
	def test_doseogwan_rr(self):
		self.run_test("도서관", "{{ko-IPA}}", "doseogwan", "rr")
	def test_doseogwan_rrr(self):
		self.run_test("도서관", "{{ko-IPA}}", "doseogwan", "rrr")
	def test_doseogwan_mr(self):
		self.run_test("도서관", "{{ko-IPA}}", "tosŏgwan", "mr")
	def test_doseogwan_yr(self):
		self.run_test("도서관", "{{ko-IPA}}", "tosekwan", "yr")
	def test_doseogwan_ipa(self):
		self.run_test("도서관", "{{ko-IPA}}", "[to̞sʰʌ̹ɡwa̠n]", "ipa")

	def test_namja_ph(self):
		self.run_test("남자", "{{ko-IPA|a=y}}", "남자", "ph")
	def test_namja_rr(self):
		self.run_test("남자", "{{ko-IPA|a=y}}", "namja", "rr")
	def test_namja_rrr(self):
		self.run_test("남자", "{{ko-IPA|a=y}}", "namja", "rrr")
	def test_namja_mr(self):
		self.run_test("남자", "{{ko-IPA|a=y}}", "namja", "mr")
	def test_namja_yr(self):
		self.run_test("남자", "{{ko-IPA|a=y}}", "namca", "yr")
	def test_namja_ipa(self):
		self.run_test("남자", "{{ko-IPA|a=y}}", "[na̠md͡ʑa̠]", "ipa")

	def test_usan_ph(self):
		self.run_test("우산", "{{ko-IPA|l=y}}", "우(ː)산", "ph")
	def test_usan_rr(self):
		self.run_test("우산", "{{ko-IPA|l=y}}", "usan", "rr")
	def test_usan_rrr(self):
		self.run_test("우산", "{{ko-IPA|l=y}}", "usan", "rrr")
	def test_usan_mr(self):
		self.run_test("우산", "{{ko-IPA|l=y}}", "usan", "mr")
	def test_usan_yr(self):
		self.run_test("우산", "{{ko-IPA|l=y}}", "wūsan", "yr")
	def test_usan_ipa(self):
		self.run_test("우산", "{{ko-IPA|l=y}}", "[ˈu(ː)sʰa̠n]", "ipa")

	def test_yeomso_suyeom_ph(self):
		self.run_test("염소 수염", "{{ko-IPA}}", "염소 수염", "ph")
	def test_yeomso_suyeom_rr(self):
		self.run_test("염소 수염", "{{ko-IPA}}", "yeomso suyeom", "rr")
	def test_yeomso_suyeom_rrr(self):
		self.run_test("염소 수염", "{{ko-IPA}}", "yeomso suyeom", "rrr")
	def test_yeomso_suyeom_mr(self):
		self.run_test("염소 수염", "{{ko-IPA}}", "yŏmso suyŏm", "mr")
	def test_yeomso_suyeom_yr(self):
		self.run_test("염소 수염", "{{ko-IPA}}", "yemso swu.yem", "yr")
	def test_yeomso_suyeom_ipa(self):
		self.run_test("염소 수염", "{{ko-IPA}}", "[jʌ̹msʰo̞ sʰujʌ̹m]", "ipa")

	def test_suyeom_ph(self):
		self.run_test("수염", "{{ko-IPA}}", "수염", "ph")
	def test_suyeom_rr(self):
		self.run_test("수염", "{{ko-IPA}}", "suyeom", "rr")
	def test_suyeom_rrr(self):
		self.run_test("수염", "{{ko-IPA}}", "suyeom", "rrr")
	def test_suyeom_mr(self):
		self.run_test("수염", "{{ko-IPA}}", "suyŏm", "mr")
	def test_suyeom_yr(self):
		self.run_test("수염", "{{ko-IPA}}", "swu.yem", "yr")
	def test_suyeom_ipa(self):
		self.run_test("수염", "{{ko-IPA}}", "[sʰujʌ̹m]", "ipa")

	def test_sanyang_ph(self):
		self.run_test("산양", "{{ko-IPA}}", "사냥", "ph")
	def test_sanyang_rr(self):
		self.run_test("산양", "{{ko-IPA}}", "sanyang", "rr")
	def test_sanyang_rrr(self):
		self.run_test("산양", "{{ko-IPA}}", "san'yang", "rrr")
	def test_sanyang_mr(self):
		self.run_test("산양", "{{ko-IPA}}", "sanyang", "mr")
	def test_sanyang_yr(self):
		self.run_test("산양", "{{ko-IPA}}", "san.yang", "yr")
	def test_sanyang_ipa(self):
		self.run_test("산양", "{{ko-IPA}}", "[sʰa̠ɲa̠ŋ]", "ipa")

	def test_yeomso_ph(self):
		self.run_test("염소", "{{ko-IPA}}", "염소", "ph")
	def test_yeomso_rr(self):
		self.run_test("염소", "{{ko-IPA}}", "yeomso", "rr")
	def test_yeomso_rrr(self):
		self.run_test("염소", "{{ko-IPA}}", "yeomso", "rrr")
	def test_yeomso_mr(self):
		self.run_test("염소", "{{ko-IPA}}", "yŏmso", "mr")
	def test_yeomso_yr(self):
		self.run_test("염소", "{{ko-IPA}}", "yemso", "yr")
	def test_yeomso_ipa(self):
		self.run_test("염소", "{{ko-IPA}}", "[jʌ̹msʰo̞]", "ipa")

	def test_doseo_ph(self):
		self.run_test("도서", "{{ko-IPA}}", "도서", "ph")
	def test_doseo_rr(self):
		self.run_test("도서", "{{ko-IPA}}", "doseo", "rr")
	def test_doseo_rrr(self):
		self.run_test("도서", "{{ko-IPA}}", "doseo", "rrr")
	def test_doseo_mr(self):
		self.run_test("도서", "{{ko-IPA}}", "tosŏ", "mr")
	def test_doseo_yr(self):
		self.run_test("도서", "{{ko-IPA}}", "tose", "yr")
	def test_doseo_ipa(self):
		self.run_test("도서", "{{ko-IPA}}", "[to̞sʰʌ̹]", "ipa")


	def test_eun_ph(self):
		self.run_test("은", "{{ko-IPA}}", "은", "ph")
	def test_eun_rr(self):
		self.run_test("은", "{{ko-IPA}}", "eun", "rr")
	def test_eun_rrr(self):
		self.run_test("은", "{{ko-IPA}}", "eun", "rrr")
	def test_eun_mr(self):
		self.run_test("은", "{{ko-IPA}}", "ŭn", "mr")
	def test_eun_yr(self):
		self.run_test("은", "{{ko-IPA}}", "un", "yr")
	def test_eun_ipa(self):
		self.run_test("은", "{{ko-IPA}}", "[ɯn]", "ipa")

	def test_amado_ph(self):
		self.run_test("아마도", "{{ko-IPA}}", "아마도", "ph")
	def test_amado_rr(self):
		self.run_test("아마도", "{{ko-IPA}}", "amado", "rr")
	def test_amado_rrr(self):
		self.run_test("아마도", "{{ko-IPA}}", "amado", "rrr")
	def test_amado_mr(self):
		self.run_test("아마도", "{{ko-IPA}}", "amado", "mr")
	def test_amado_yr(self):
		self.run_test("아마도", "{{ko-IPA}}", "amato", "yr")
	def test_amado_ipa(self):
		self.run_test("아마도", "{{ko-IPA}}", "[a̠ma̠do̞]", "ipa")

	def test_ama_ph(self):
		self.run_test("아마", "{{ko-IPA}}", "아마", "ph")
	def test_ama_rr(self):
		self.run_test("아마", "{{ko-IPA}}", "ama", "rr")
	def test_ama_rrr(self):
		self.run_test("아마", "{{ko-IPA}}", "ama", "rrr")
	def test_ama_mr(self):
		self.run_test("아마", "{{ko-IPA}}", "ama", "mr")
	def test_ama_yr(self):
		self.run_test("아마", "{{ko-IPA}}", "ama", "yr")
	def test_ama_ipa(self):
		self.run_test("아마", "{{ko-IPA}}", "[a̠ma̠]", "ipa")

	def test_Wiki_nanmal_sajeon_ph(self):
		self.run_test("위키낱말사전", "{{ko-IPA|위키 낱말 사전|l=4|cap=y}}", "위키 난(ː)말 사전", "ph")
	def test_Wiki_nanmal_sajeon_rr(self):
		self.run_test("위키낱말사전", "{{ko-IPA|위키 낱말 사전|l=4|cap=y}}", "Wiki nanmal sajeon", "rr")
	def test_Wiki_nanmal_sajeon_rrr(self):
		self.run_test("위키낱말사전", "{{ko-IPA|위키 낱말 사전|l=4|cap=y}}", "Wiki natmal sajeon", "rrr")
	def test_Wiki_nanmal_sajeon_mr(self):
		self.run_test("위키낱말사전", "{{ko-IPA|위키 낱말 사전|l=4|cap=y}}", "Wik'i nanmal sajŏn", "mr")
	def test_Wiki_nanmal_sajeon_yr(self):
		self.run_test("위키낱말사전", "{{ko-IPA|위키 낱말 사전|l=4|cap=y}}", "wi.khi nāthmal sacen", "yr")
	def test_Wiki_nanmal_sajeon_ipa(self):
		self.run_test("위키낱말사전", "{{ko-IPA|위키 낱말 사전|l=4|cap=y}}", "[ɥicçi na̠(ː)nma̠ɭ sʰa̠d͡ʑʌ̹n] ~ [ycçi na̠(ː)nma̠ɭ sʰa̠d͡ʑʌ̹n]", "ipa")

	def test_moja_ph(self):
		self.run_test("모자", "{{ko-IPA}}", "모자", "ph")
	def test_moja_rr(self):
		self.run_test("모자", "{{ko-IPA}}", "moja", "rr")
	def test_moja_rrr(self):
		self.run_test("모자", "{{ko-IPA}}", "moja", "rrr")
	def test_moja_mr(self):
		self.run_test("모자", "{{ko-IPA}}", "moja", "mr")
	def test_moja_yr(self):
		self.run_test("모자", "{{ko-IPA}}", "moca", "yr")
	def test_moja_ipa(self):
		self.run_test("모자", "{{ko-IPA}}", "[mo̞d͡ʑa̠]", "ipa")
	def test_moja_ph_1(self):
		self.run_test("모자", "{{ko-IPA|l=y}}", "모(ː)자", "ph")
	def test_moja_rr_1(self):
		self.run_test("모자", "{{ko-IPA|l=y}}", "moja", "rr")
	def test_moja_rrr_1(self):
		self.run_test("모자", "{{ko-IPA|l=y}}", "moja", "rrr")
	def test_moja_mr_1(self):
		self.run_test("모자", "{{ko-IPA|l=y}}", "moja", "mr")
	def test_moja_yr_1(self):
		self.run_test("모자", "{{ko-IPA|l=y}}", "mōca", "yr")
	def test_moja_ipa_1(self):
		self.run_test("모자", "{{ko-IPA|l=y}}", "[ˈmo̞(ː)d͡ʑa̠]", "ipa")

	def test_igeot_ph(self):
		self.run_test("이것", "{{ko-IPA|a=y}}", "이걷", "ph")
	def test_igeot_rr(self):
		self.run_test("이것", "{{ko-IPA|a=y}}", "igeot", "rr")
	def test_igeot_rrr(self):
		self.run_test("이것", "{{ko-IPA|a=y}}", "igeos", "rrr")
	def test_igeot_mr(self):
		self.run_test("이것", "{{ko-IPA|a=y}}", "igŏt", "mr")
	def test_igeot_yr(self):
		self.run_test("이것", "{{ko-IPA|a=y}}", "ikes", "yr")
	def test_igeot_ipa(self):
		self.run_test("이것", "{{ko-IPA|a=y}}", "[iɡʌ̹t̚]", "ipa")

	def test_inhyeong_ph(self):
		self.run_test("인형", "{{ko-IPA}}", "인형", "ph")
	def test_inhyeong_rr(self):
		self.run_test("인형", "{{ko-IPA}}", "inhyeong", "rr")
	def test_inhyeong_rrr(self):
		self.run_test("인형", "{{ko-IPA}}", "inhyeong", "rrr")
	def test_inhyeong_mr(self):
		self.run_test("인형", "{{ko-IPA}}", "inhyŏng", "mr")
	def test_inhyeong_yr(self):
		self.run_test("인형", "{{ko-IPA}}", "in.hyeng", "yr")
	def test_inhyeong_ipa(self):
		self.run_test("인형", "{{ko-IPA}}", "[inʝʌ̹ŋ]", "ipa")

	def test_sagwa_ph(self):
		self.run_test("사과", "{{ko-IPA|l=ˈsʰa̠gwa̠}}", "사과", "ph")
	def test_sagwa_rr(self):
		self.run_test("사과", "{{ko-IPA|l=ˈsʰa̠gwa̠}}", "sagwa", "rr")
	def test_sagwa_rrr(self):
		self.run_test("사과", "{{ko-IPA|l=ˈsʰa̠gwa̠}}", "sagwa", "rrr")
	def test_sagwa_mr(self):
		self.run_test("사과", "{{ko-IPA|l=ˈsʰa̠gwa̠}}", "sagwa", "mr")
	def test_sagwa_yr(self):
		self.run_test("사과", "{{ko-IPA|l=ˈsʰa̠gwa̠}}", "sakwa", "yr")
	def test_sagwa_ipa(self):
		self.run_test("사과", "{{ko-IPA|l=ˈsʰa̠gwa̠}}", "[sʰa̠ɡwa̠]", "ipa")
	def test_sagwa_ph_1(self):
		self.run_test("사과", "{{ko-IPA|l=y}}", "사(ː)과", "ph")
	def test_sagwa_rr_1(self):
		self.run_test("사과", "{{ko-IPA|l=y}}", "sagwa", "rr")
	def test_sagwa_rrr_1(self):
		self.run_test("사과", "{{ko-IPA|l=y}}", "sagwa", "rrr")
	def test_sagwa_mr_1(self):
		self.run_test("사과", "{{ko-IPA|l=y}}", "sagwa", "mr")
	def test_sagwa_yr_1(self):
		self.run_test("사과", "{{ko-IPA|l=y}}", "sākwa", "yr")
	def test_sagwa_ipa_1(self):
		self.run_test("사과", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)ɡwa̠]", "ipa")

	def test_sinmun_ph(self):
		self.run_test("신문", "{{ko-IPA|a=y}}", "신문", "ph")
	def test_sinmun_rr(self):
		self.run_test("신문", "{{ko-IPA|a=y}}", "sinmun", "rr")
	def test_sinmun_rrr(self):
		self.run_test("신문", "{{ko-IPA|a=y}}", "sinmun", "rrr")
	def test_sinmun_mr(self):
		self.run_test("신문", "{{ko-IPA|a=y}}", "sinmun", "mr")
	def test_sinmun_yr(self):
		self.run_test("신문", "{{ko-IPA|a=y}}", "sinmun", "yr")
	def test_sinmun_ipa(self):
		self.run_test("신문", "{{ko-IPA|a=y}}", "[ɕʰinmun]", "ipa")

	def test_goyangi_ph(self):
		self.run_test("고양이", "{{ko-IPA}}", "고양이", "ph")
	def test_goyangi_rr(self):
		self.run_test("고양이", "{{ko-IPA}}", "goyang'i", "rr")
	def test_goyangi_rrr(self):
		self.run_test("고양이", "{{ko-IPA}}", "goyang'i", "rrr")
	def test_goyangi_mr(self):
		self.run_test("고양이", "{{ko-IPA}}", "koyangi", "mr")
	def test_goyangi_yr(self):
		self.run_test("고양이", "{{ko-IPA}}", "ko.yangi", "yr")
	def test_goyangi_ipa(self):
		self.run_test("고양이", "{{ko-IPA}}", "[ko̞ja̠ŋi]", "ipa")

	def test_gae_ph(self):
		self.run_test("개", "{{ko-IPA|l=y|a=y}}", "개(ː)/게(ː)", "ph")
	def test_gae_rr(self):
		self.run_test("개", "{{ko-IPA|l=y|a=y}}", "gae", "rr")
	def test_gae_rrr(self):
		self.run_test("개", "{{ko-IPA|l=y|a=y}}", "gae", "rrr")
	def test_gae_mr(self):
		self.run_test("개", "{{ko-IPA|l=y|a=y}}", "kae", "mr")
	def test_gae_yr(self):
		self.run_test("개", "{{ko-IPA|l=y|a=y}}", "kāy", "yr")
	def test_gae_ipa(self):
		self.run_test("개", "{{ko-IPA|l=y|a=y}}", "[kɛ(ː)] ~ [ke̞(ː)]", "ipa")
	def test_gae_ph_1(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "개/게", "ph")
	def test_gae_rr_1(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "gae", "rr")
	def test_gae_rrr_1(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "gae", "rrr")
	def test_gae_mr_1(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "kae", "mr")
	def test_gae_yr_1(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "kay", "yr")
	def test_gae_ipa_1(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "[kɛ] ~ [ke̞]", "ipa")
	def test_gae_ph_2(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "개/게", "ph")
	def test_gae_rr_2(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "gae", "rr")
	def test_gae_rrr_2(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "gae", "rrr")
	def test_gae_mr_2(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "kae", "mr")
	def test_gae_yr_2(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "kay", "yr")
	def test_gae_ipa_2(self):
		self.run_test("개", "{{ko-IPA|a=y}}", "[kɛ] ~ [ke̞]", "ipa")

	def test_jadongcha_ph(self):
		self.run_test("자동차", "{{ko-IPA}}", "자동차", "ph")
	def test_jadongcha_rr(self):
		self.run_test("자동차", "{{ko-IPA}}", "jadongcha", "rr")
	def test_jadongcha_rrr(self):
		self.run_test("자동차", "{{ko-IPA}}", "jadongcha", "rrr")
	def test_jadongcha_mr(self):
		self.run_test("자동차", "{{ko-IPA}}", "chadongch'a", "mr")
	def test_jadongcha_yr(self):
		self.run_test("자동차", "{{ko-IPA}}", "catongcha", "yr")
	def test_jadongcha_ipa(self):
		self.run_test("자동차", "{{ko-IPA}}", "[t͡ɕa̠do̞ŋt͡ɕʰa̠]", "ipa")

	def test_chaek_ph(self):
		self.run_test("책", "{{ko-IPA|a=y}}", "책/첵", "ph")
	def test_chaek_rr(self):
		self.run_test("책", "{{ko-IPA|a=y}}", "chaek", "rr")
	def test_chaek_rrr(self):
		self.run_test("책", "{{ko-IPA|a=y}}", "chaeg", "rrr")
	def test_chaek_mr(self):
		self.run_test("책", "{{ko-IPA|a=y}}", "ch'aek", "mr")
	def test_chaek_yr(self):
		self.run_test("책", "{{ko-IPA|a=y}}", "chayk", "yr")
	def test_chaek_ipa(self):
		self.run_test("책", "{{ko-IPA|a=y}}", "[t͡ɕʰɛk̚] ~ [t͡ɕʰe̞k̚]", "ipa")



	def test_yeoboseyo_ph(self):
		self.run_test("여보세요", "{{ko-IPA}}", "여보세요", "ph")
	def test_yeoboseyo_rr(self):
		self.run_test("여보세요", "{{ko-IPA}}", "yeoboseyo", "rr")
	def test_yeoboseyo_rrr(self):
		self.run_test("여보세요", "{{ko-IPA}}", "yeoboseyo", "rrr")
	def test_yeoboseyo_mr(self):
		self.run_test("여보세요", "{{ko-IPA}}", "yŏboseyo", "mr")
	def test_yeoboseyo_yr(self):
		self.run_test("여보세요", "{{ko-IPA}}", "yeposeyyo", "yr")
	def test_yeoboseyo_ipa(self):
		self.run_test("여보세요", "{{ko-IPA}}", "[jʌ̹bo̞sʰe̞jo]", "ipa")

	def test_Joseon_ph(self):
		self.run_test("조선", "{{ko-IPA|cap=y}}", "조선", "ph")
	def test_Joseon_rr(self):
		self.run_test("조선", "{{ko-IPA|cap=y}}", "Joseon", "rr")
	def test_Joseon_rrr(self):
		self.run_test("조선", "{{ko-IPA|cap=y}}", "Joseon", "rrr")
	def test_Joseon_mr(self):
		self.run_test("조선", "{{ko-IPA|cap=y}}", "Chosŏn", "mr")
	def test_Joseon_yr(self):
		self.run_test("조선", "{{ko-IPA|cap=y}}", "cosen", "yr")
	def test_Joseon_ipa(self):
		self.run_test("조선", "{{ko-IPA|cap=y}}", "[t͡ɕo̞sʰʌ̹n]", "ipa")
	def test_joseon_ph_1(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "조(ː)선", "ph")
	def test_joseon_rr_1(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "joseon", "rr")
	def test_joseon_rrr_1(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "joseon", "rrr")
	def test_joseon_mr_1(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "chosŏn", "mr")
	def test_joseon_yr_1(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "cōsen", "yr")
	def test_joseon_ipa_1(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)sʰʌ̹n]", "ipa")
	def test_joseon_ph_2(self):
		self.run_test("조선", "{{ko-IPA}}", "조선", "ph")
	def test_joseon_rr_2(self):
		self.run_test("조선", "{{ko-IPA}}", "joseon", "rr")
	def test_joseon_rrr_2(self):
		self.run_test("조선", "{{ko-IPA}}", "joseon", "rrr")
	def test_joseon_mr_2(self):
		self.run_test("조선", "{{ko-IPA}}", "chosŏn", "mr")
	def test_joseon_yr_2(self):
		self.run_test("조선", "{{ko-IPA}}", "cosen", "yr")
	def test_joseon_ipa_2(self):
		self.run_test("조선", "{{ko-IPA}}", "[t͡ɕo̞sʰʌ̹n]", "ipa")
	def test_joseon_ph_3(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "조(ː)선", "ph")
	def test_joseon_rr_3(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "joseon", "rr")
	def test_joseon_rrr_3(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "joseon", "rrr")
	def test_joseon_mr_3(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "chosŏn", "mr")
	def test_joseon_yr_3(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "cōsen", "yr")
	def test_joseon_ipa_3(self):
		self.run_test("조선", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)sʰʌ̹n]", "ipa")
	def test_joseon_ph_4(self):
		self.run_test("조선", "{{ko-IPA}}", "조선", "ph")
	def test_joseon_rr_4(self):
		self.run_test("조선", "{{ko-IPA}}", "joseon", "rr")
	def test_joseon_rrr_4(self):
		self.run_test("조선", "{{ko-IPA}}", "joseon", "rrr")
	def test_joseon_mr_4(self):
		self.run_test("조선", "{{ko-IPA}}", "chosŏn", "mr")
	def test_joseon_yr_4(self):
		self.run_test("조선", "{{ko-IPA}}", "cosen", "yr")
	def test_joseon_ipa_4(self):
		self.run_test("조선", "{{ko-IPA}}", "[t͡ɕo̞sʰʌ̹n]", "ipa")

	def test_seollongtang_ph(self):
		self.run_test("설농탕", "{{ko-IPA}}", "설롱탕", "ph")
	def test_seollongtang_rr(self):
		self.run_test("설농탕", "{{ko-IPA}}", "seollongtang", "rr")
	def test_seollongtang_rrr(self):
		self.run_test("설농탕", "{{ko-IPA}}", "seolnongtang", "rrr")
	def test_seollongtang_mr(self):
		self.run_test("설농탕", "{{ko-IPA}}", "sŏllongt'ang", "mr")
	def test_seollongtang_yr(self):
		self.run_test("설농탕", "{{ko-IPA}}", "selnongthang", "yr")
	def test_seollongtang_ipa(self):
		self.run_test("설농탕", "{{ko-IPA}}", "[sʰʌ̹ɭɭo̞ŋtʰa̠ŋ]", "ipa")

	def test_seolleongtang_ph(self):
		self.run_test("설렁탕", "{{ko-IPA}}", "설렁탕", "ph")
	def test_seolleongtang_rr(self):
		self.run_test("설렁탕", "{{ko-IPA}}", "seolleongtang", "rr")
	def test_seolleongtang_rrr(self):
		self.run_test("설렁탕", "{{ko-IPA}}", "seolleongtang", "rrr")
	def test_seolleongtang_mr(self):
		self.run_test("설렁탕", "{{ko-IPA}}", "sŏllŏngt'ang", "mr")
	def test_seolleongtang_yr(self):
		self.run_test("설렁탕", "{{ko-IPA}}", "sellengthang", "yr")
	def test_seolleongtang_ipa(self):
		self.run_test("설렁탕", "{{ko-IPA}}", "[sʰʌ̹ɭɭʌ̹ŋtʰa̠ŋ]", "ipa")

	def test_banju_ph(self):
		self.run_test("반주", "{{ko-IPA|l=y}}", "반(ː)주", "ph")
	def test_banju_rr(self):
		self.run_test("반주", "{{ko-IPA|l=y}}", "banju", "rr")
	def test_banju_rrr(self):
		self.run_test("반주", "{{ko-IPA|l=y}}", "banju", "rrr")
	def test_banju_mr(self):
		self.run_test("반주", "{{ko-IPA|l=y}}", "panju", "mr")
	def test_banju_yr(self):
		self.run_test("반주", "{{ko-IPA|l=y}}", "pān.cwu", "yr")
	def test_banju_ipa(self):
		self.run_test("반주", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)ɲd͡ʑu]", "ipa")

	def test_malhada_ph(self):
		self.run_test("말하다", "{{ko-IPA|l=y|a=y}}", "말(ː)하다", "ph")
	def test_malhada_rr(self):
		self.run_test("말하다", "{{ko-IPA|l=y|a=y}}", "malhada", "rr")
	def test_malhada_rrr(self):
		self.run_test("말하다", "{{ko-IPA|l=y|a=y}}", "malhada", "rrr")
	def test_malhada_mr(self):
		self.run_test("말하다", "{{ko-IPA|l=y|a=y}}", "marhada", "mr")
	def test_malhada_yr(self):
		self.run_test("말하다", "{{ko-IPA|l=y|a=y}}", "māl.hata", "yr")
	def test_malhada_ipa(self):
		self.run_test("말하다", "{{ko-IPA|l=y|a=y}}", "[ˈma̠(ː)ɾɦa̠da̠]", "ipa")

	def test_uyu_ph(self):
		self.run_test("우유", "{{ko-IPA}}", "우유", "ph")
	def test_uyu_rr(self):
		self.run_test("우유", "{{ko-IPA}}", "uyu", "rr")
	def test_uyu_rrr(self):
		self.run_test("우유", "{{ko-IPA}}", "uyu", "rrr")
	def test_uyu_mr(self):
		self.run_test("우유", "{{ko-IPA}}", "uyu", "mr")
	def test_uyu_yr(self):
		self.run_test("우유", "{{ko-IPA}}", "wu.yu", "yr")
	def test_uyu_ipa(self):
		self.run_test("우유", "{{ko-IPA}}", "[uju]", "ipa")

	def test_sijak_ph(self):
		self.run_test("시작", "{{ko-IPA|l=y}}", "시(ː)작", "ph")
	def test_sijak_rr(self):
		self.run_test("시작", "{{ko-IPA|l=y}}", "sijak", "rr")
	def test_sijak_rrr(self):
		self.run_test("시작", "{{ko-IPA|l=y}}", "sijag", "rrr")
	def test_sijak_mr(self):
		self.run_test("시작", "{{ko-IPA|l=y}}", "sijak", "mr")
	def test_sijak_yr(self):
		self.run_test("시작", "{{ko-IPA|l=y}}", "sīcak", "yr")
	def test_sijak_ipa(self):
		self.run_test("시작", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)d͡ʑa̠k̚]", "ipa")
	def test_sijak_ph_1(self):
		self.run_test("시작", "{{ko-IPA}}", "시작", "ph")
	def test_sijak_rr_1(self):
		self.run_test("시작", "{{ko-IPA}}", "sijak", "rr")
	def test_sijak_rrr_1(self):
		self.run_test("시작", "{{ko-IPA}}", "sijag", "rrr")
	def test_sijak_mr_1(self):
		self.run_test("시작", "{{ko-IPA}}", "sijak", "mr")
	def test_sijak_yr_1(self):
		self.run_test("시작", "{{ko-IPA}}", "sicak", "yr")
	def test_sijak_ipa_1(self):
		self.run_test("시작", "{{ko-IPA}}", "[ɕʰid͡ʑa̠k̚]", "ipa")

	def test_sereubiaeo_ph(self):
		self.run_test("세르비아어", "{{ko-IPA|com=1}}", "세르비아어", "ph")
	def test_sereubiaeo_rr(self):
		self.run_test("세르비아어", "{{ko-IPA|com=1}}", "sereubia'eo", "rr")
	def test_sereubiaeo_rrr(self):
		self.run_test("세르비아어", "{{ko-IPA|com=1}}", "seleubia'eo", "rrr")
	def test_sereubiaeo_mr(self):
		self.run_test("세르비아어", "{{ko-IPA|com=1}}", "serŭbiaŏ", "mr")
	def test_sereubiaeo_yr(self):
		self.run_test("세르비아어", "{{ko-IPA|com=1}}", "seyqlupiae", "yr")
	def test_sereubiaeo_ipa(self):
		self.run_test("세르비아어", "{{ko-IPA|com=1}}", "[sʰe̞ɾɯbia̠ʌ̹]", "ipa")

	def test_Tookyo_ph(self):
		self.run_test("토오쿄", "{{ko-IPA|cap=y}}", "토오쿄", "ph")
	def test_Tookyo_rr(self):
		self.run_test("토오쿄", "{{ko-IPA|cap=y}}", "Tookyo", "rr")
	def test_Tookyo_rrr(self):
		self.run_test("토오쿄", "{{ko-IPA|cap=y}}", "Tookyo", "rrr")
	def test_Tookyo_mr(self):
		self.run_test("토오쿄", "{{ko-IPA|cap=y}}", "T'ook'yo", "mr")
	def test_Tookyo_yr(self):
		self.run_test("토오쿄", "{{ko-IPA|cap=y}}", "thoo.khyo", "yr")
	def test_Tookyo_ipa(self):
		self.run_test("토오쿄", "{{ko-IPA|cap=y}}", "[tʰo̞o̞cço]", "ipa")

	def test_gada_ph(self):
		self.run_test("가다", "{{ko-IPA|a=y}}", "가다", "ph")
	def test_gada_rr(self):
		self.run_test("가다", "{{ko-IPA|a=y}}", "gada", "rr")
	def test_gada_rrr(self):
		self.run_test("가다", "{{ko-IPA|a=y}}", "gada", "rrr")
	def test_gada_mr(self):
		self.run_test("가다", "{{ko-IPA|a=y}}", "kada", "mr")
	def test_gada_yr(self):
		self.run_test("가다", "{{ko-IPA|a=y}}", "kata", "yr")
	def test_gada_ipa(self):
		self.run_test("가다", "{{ko-IPA|a=y}}", "[ka̠da̠]", "ipa")

	def test_joseongeul_ph(self):
		self.run_test("조선글", "{{ko-IPA}}", "조선글", "ph")
	def test_joseongeul_rr(self):
		self.run_test("조선글", "{{ko-IPA}}", "joseon'geul", "rr")
	def test_joseongeul_rrr(self):
		self.run_test("조선글", "{{ko-IPA}}", "joseongeul", "rrr")
	def test_joseongeul_mr(self):
		self.run_test("조선글", "{{ko-IPA}}", "chosŏn'gŭl", "mr")
	def test_joseongeul_yr(self):
		self.run_test("조선글", "{{ko-IPA}}", "cosenkul", "yr")
	def test_joseongeul_ipa(self):
		self.run_test("조선글", "{{ko-IPA}}", "[t͡ɕo̞sʰʌ̹nɡɯɭ]", "ipa")

	def test_bueok_ph(self):
		self.run_test("부엌", "{{ko-IPA}}", "부억", "ph")
	def test_bueok_rr(self):
		self.run_test("부엌", "{{ko-IPA}}", "bueok", "rr")
	def test_bueok_rrr(self):
		self.run_test("부엌", "{{ko-IPA}}", "bueok", "rrr")
	def test_bueok_mr(self):
		self.run_test("부엌", "{{ko-IPA}}", "puŏk", "mr")
	def test_bueok_yr(self):
		self.run_test("부엌", "{{ko-IPA}}", "puekh", "yr")
	def test_bueok_ipa(self):
		self.run_test("부엌", "{{ko-IPA}}", "[puʌ̹k̚]", "ipa")

	def test_jeo_ph(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "저", "ph")
	def test_jeo_rr(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "jeo", "rr")
	def test_jeo_rrr(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "jeo", "rrr")
	def test_jeo_mr(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "chŏ", "mr")
	def test_jeo_yr(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "ce", "yr")
	def test_jeo_ipa(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "[t͡ɕʌ̹]", "ipa")
	def test_jeo_ph_1(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "저", "ph")
	def test_jeo_rr_1(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "jeo", "rr")
	def test_jeo_rrr_1(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "jeo", "rrr")
	def test_jeo_mr_1(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "chŏ", "mr")
	def test_jeo_yr_1(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "ce", "yr")
	def test_jeo_ipa_1(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "[t͡ɕʌ̹]", "ipa")
	def test_jeo_ph_2(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "저", "ph")
	def test_jeo_rr_2(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "jeo", "rr")
	def test_jeo_rrr_2(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "jeo", "rrr")
	def test_jeo_mr_2(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "chŏ", "mr")
	def test_jeo_yr_2(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "ce", "yr")
	def test_jeo_ipa_2(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "[t͡ɕʌ̹]", "ipa")
	def test_jeo_ph_3(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "저(ː)", "ph")
	def test_jeo_rr_3(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "jeo", "rr")
	def test_jeo_rrr_3(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "jeo", "rrr")
	def test_jeo_mr_3(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "chŏ", "mr")
	def test_jeo_yr_3(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "cē", "yr")
	def test_jeo_ipa_3(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "[t͡ɕɘ(ː)]", "ipa")
	def test_jeo_ph_4(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "저(ː)", "ph")
	def test_jeo_rr_4(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "jeo", "rr")
	def test_jeo_rrr_4(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "jeo", "rrr")
	def test_jeo_mr_4(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "chŏ", "mr")
	def test_jeo_yr_4(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "cē", "yr")
	def test_jeo_ipa_4(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "[t͡ɕɘ(ː)]", "ipa")
	def test_jeo_ph_5(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "저(ː)", "ph")
	def test_jeo_rr_5(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "jeo", "rr")
	def test_jeo_rrr_5(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "jeo", "rrr")
	def test_jeo_mr_5(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "chŏ", "mr")
	def test_jeo_yr_5(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "cē", "yr")
	def test_jeo_ipa_5(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "[t͡ɕɘ(ː)]", "ipa")
	def test_jeo_ph_6(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "저", "ph")
	def test_jeo_rr_6(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "jeo", "rr")
	def test_jeo_rrr_6(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "jeo", "rrr")
	def test_jeo_mr_6(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "chŏ", "mr")
	def test_jeo_yr_6(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "ce", "yr")
	def test_jeo_ipa_6(self):
		self.run_test("저", "{{ko-IPA|a=y}}", "[t͡ɕʌ̹]", "ipa")
	def test_jeo_ph_7(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "저(ː)", "ph")
	def test_jeo_rr_7(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "jeo", "rr")
	def test_jeo_rrr_7(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "jeo", "rrr")
	def test_jeo_mr_7(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "chŏ", "mr")
	def test_jeo_yr_7(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "cē", "yr")
	def test_jeo_ipa_7(self):
		self.run_test("저", "{{ko-IPA|l=y|a=y}}", "[t͡ɕɘ(ː)]", "ipa")

	def test_meokda_ph(self):
		self.run_test("먹다", "{{ko-IPA|a=y}}", "먹따", "ph")
	def test_meokda_rr(self):
		self.run_test("먹다", "{{ko-IPA|a=y}}", "meokda", "rr")
	def test_meokda_rrr(self):
		self.run_test("먹다", "{{ko-IPA|a=y}}", "meogda", "rrr")
	def test_meokda_mr(self):
		self.run_test("먹다", "{{ko-IPA|a=y}}", "mŏkta", "mr")
	def test_meokda_yr(self):
		self.run_test("먹다", "{{ko-IPA|a=y}}", "mekta", "yr")
	def test_meokda_ipa(self):
		self.run_test("먹다", "{{ko-IPA|a=y}}", "[mʌ̹k̚t͈a̠]", "ipa")

	def test_oda_ph(self):
		self.run_test("오다", "{{ko-IPA|a=y}}", "오다", "ph")
	def test_oda_rr(self):
		self.run_test("오다", "{{ko-IPA|a=y}}", "oda", "rr")
	def test_oda_rrr(self):
		self.run_test("오다", "{{ko-IPA|a=y}}", "oda", "rrr")
	def test_oda_mr(self):
		self.run_test("오다", "{{ko-IPA|a=y}}", "oda", "mr")
	def test_oda_yr(self):
		self.run_test("오다", "{{ko-IPA|a=y}}", "ota", "yr")
	def test_oda_ipa(self):
		self.run_test("오다", "{{ko-IPA|a=y}}", "[o̞da̠]", "ipa")

	def test_mok_ph(self):
		self.run_test("목", "{{ko-IPA}}", "목", "ph")
	def test_mok_rr(self):
		self.run_test("목", "{{ko-IPA}}", "mok", "rr")
	def test_mok_rrr(self):
		self.run_test("목", "{{ko-IPA}}", "mog", "rrr")
	def test_mok_mr(self):
		self.run_test("목", "{{ko-IPA}}", "mok", "mr")
	def test_mok_yr(self):
		self.run_test("목", "{{ko-IPA}}", "mok", "yr")
	def test_mok_ipa(self):
		self.run_test("목", "{{ko-IPA}}", "[mo̞k̚]", "ipa")
	def test_mok_ph_1(self):
		self.run_test("목", "{{ko-IPA}}", "목", "ph")
	def test_mok_rr_1(self):
		self.run_test("목", "{{ko-IPA}}", "mok", "rr")
	def test_mok_rrr_1(self):
		self.run_test("목", "{{ko-IPA}}", "mog", "rrr")
	def test_mok_mr_1(self):
		self.run_test("목", "{{ko-IPA}}", "mok", "mr")
	def test_mok_yr_1(self):
		self.run_test("목", "{{ko-IPA}}", "mok", "yr")
	def test_mok_ipa_1(self):
		self.run_test("목", "{{ko-IPA}}", "[mo̞k̚]", "ipa")
	def test_mok_ph_2(self):
		self.run_test("목", "{{ko-IPA}}", "목", "ph")
	def test_mok_rr_2(self):
		self.run_test("목", "{{ko-IPA}}", "mok", "rr")
	def test_mok_rrr_2(self):
		self.run_test("목", "{{ko-IPA}}", "mog", "rrr")
	def test_mok_mr_2(self):
		self.run_test("목", "{{ko-IPA}}", "mok", "mr")
	def test_mok_yr_2(self):
		self.run_test("목", "{{ko-IPA}}", "mok", "yr")
	def test_mok_ipa_2(self):
		self.run_test("목", "{{ko-IPA}}", "[mo̞k̚]", "ipa")

	def test_Miguk_ph(self):
		self.run_test("미국", "{{ko-IPA|cap=y}}", "미국", "ph")
	def test_Miguk_rr(self):
		self.run_test("미국", "{{ko-IPA|cap=y}}", "Miguk", "rr")
	def test_Miguk_rrr(self):
		self.run_test("미국", "{{ko-IPA|cap=y}}", "Migug", "rrr")
	def test_Miguk_mr(self):
		self.run_test("미국", "{{ko-IPA|cap=y}}", "Miguk", "mr")
	def test_Miguk_yr(self):
		self.run_test("미국", "{{ko-IPA|cap=y}}", "mikwuk", "yr")
	def test_Miguk_ipa(self):
		self.run_test("미국", "{{ko-IPA|cap=y}}", "[miɡuk̚]", "ipa")

	def test_hwayoil_ph(self):
		self.run_test("화요일", "{{ko-IPA}}", "화요일", "ph")
	def test_hwayoil_rr(self):
		self.run_test("화요일", "{{ko-IPA}}", "hwayoil", "rr")
	def test_hwayoil_rrr(self):
		self.run_test("화요일", "{{ko-IPA}}", "hwayoil", "rrr")
	def test_hwayoil_mr(self):
		self.run_test("화요일", "{{ko-IPA}}", "hwayoil", "mr")
	def test_hwayoil_yr(self):
		self.run_test("화요일", "{{ko-IPA}}", "hwa.yoil", "yr")
	def test_hwayoil_ipa(self):
		self.run_test("화요일", "{{ko-IPA}}", "[ɸwa̠joiɭ]", "ipa")

	def test_Geumyoil_ph(self):
		self.run_test("금요일", "{{ko-IPA|cap=y}}", "그묘일", "ph")
	def test_Geumyoil_rr(self):
		self.run_test("금요일", "{{ko-IPA|cap=y}}", "Geumyoil", "rr")
	def test_Geumyoil_rrr(self):
		self.run_test("금요일", "{{ko-IPA|cap=y}}", "Geum'yoil", "rrr")
	def test_Geumyoil_mr(self):
		self.run_test("금요일", "{{ko-IPA|cap=y}}", "Kŭmyoil", "mr")
	def test_Geumyoil_yr(self):
		self.run_test("금요일", "{{ko-IPA|cap=y}}", "kum.yoil", "yr")
	def test_Geumyoil_ipa(self):
		self.run_test("금요일", "{{ko-IPA|cap=y}}", "[kɯmjoiɭ]", "ipa")

	def test_jeon_ph(self):
		self.run_test("전", "{{ko-IPA}}", "전", "ph")
	def test_jeon_rr(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rr")
	def test_jeon_rrr(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rrr")
	def test_jeon_mr(self):
		self.run_test("전", "{{ko-IPA}}", "chŏn", "mr")
	def test_jeon_yr(self):
		self.run_test("전", "{{ko-IPA}}", "cen", "yr")
	def test_jeon_ipa(self):
		self.run_test("전", "{{ko-IPA}}", "[t͡ɕʌ̹n]", "ipa")
	def test_jeon_ph_1(self):
		self.run_test("전", "{{ko-IPA|l=y}}", "전(ː)", "ph")
	def test_jeon_rr_1(self):
		self.run_test("전", "{{ko-IPA|l=y}}", "jeon", "rr")
	def test_jeon_rrr_1(self):
		self.run_test("전", "{{ko-IPA|l=y}}", "jeon", "rrr")
	def test_jeon_mr_1(self):
		self.run_test("전", "{{ko-IPA|l=y}}", "chŏn", "mr")
	def test_jeon_yr_1(self):
		self.run_test("전", "{{ko-IPA|l=y}}", "cēn", "yr")
	def test_jeon_ipa_1(self):
		self.run_test("전", "{{ko-IPA|l=y}}", "[t͡ɕɘ(ː)n]", "ipa")
	def test_jeon_ph_2(self):
		self.run_test("전", "{{ko-IPA}}", "전", "ph")
	def test_jeon_rr_2(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rr")
	def test_jeon_rrr_2(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rrr")
	def test_jeon_mr_2(self):
		self.run_test("전", "{{ko-IPA}}", "chŏn", "mr")
	def test_jeon_yr_2(self):
		self.run_test("전", "{{ko-IPA}}", "cen", "yr")
	def test_jeon_ipa_2(self):
		self.run_test("전", "{{ko-IPA}}", "[t͡ɕʌ̹n]", "ipa")
	def test_jeon_ph_3(self):
		self.run_test("전", "{{ko-IPA}}", "전", "ph")
	def test_jeon_rr_3(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rr")
	def test_jeon_rrr_3(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rrr")
	def test_jeon_mr_3(self):
		self.run_test("전", "{{ko-IPA}}", "chŏn", "mr")
	def test_jeon_yr_3(self):
		self.run_test("전", "{{ko-IPA}}", "cen", "yr")
	def test_jeon_ipa_3(self):
		self.run_test("전", "{{ko-IPA}}", "[t͡ɕʌ̹n]", "ipa")
	def test_jeon_ph_4(self):
		self.run_test("전", "{{ko-IPA}}", "전", "ph")
	def test_jeon_rr_4(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rr")
	def test_jeon_rrr_4(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rrr")
	def test_jeon_mr_4(self):
		self.run_test("전", "{{ko-IPA}}", "chŏn", "mr")
	def test_jeon_yr_4(self):
		self.run_test("전", "{{ko-IPA}}", "cen", "yr")
	def test_jeon_ipa_4(self):
		self.run_test("전", "{{ko-IPA}}", "[t͡ɕʌ̹n]", "ipa")
	def test_jeon_ph_5(self):
		self.run_test("전", "{{ko-IPA}}", "전", "ph")
	def test_jeon_rr_5(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rr")
	def test_jeon_rrr_5(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rrr")
	def test_jeon_mr_5(self):
		self.run_test("전", "{{ko-IPA}}", "chŏn", "mr")
	def test_jeon_yr_5(self):
		self.run_test("전", "{{ko-IPA}}", "cen", "yr")
	def test_jeon_ipa_5(self):
		self.run_test("전", "{{ko-IPA}}", "[t͡ɕʌ̹n]", "ipa")
	def test_jeon_ph_6(self):
		self.run_test("전", "{{ko-IPA}}", "전", "ph")
	def test_jeon_rr_6(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rr")
	def test_jeon_rrr_6(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rrr")
	def test_jeon_mr_6(self):
		self.run_test("전", "{{ko-IPA}}", "chŏn", "mr")
	def test_jeon_yr_6(self):
		self.run_test("전", "{{ko-IPA}}", "cen", "yr")
	def test_jeon_ipa_6(self):
		self.run_test("전", "{{ko-IPA}}", "[t͡ɕʌ̹n]", "ipa")
	def test_jeon_ph_7(self):
		self.run_test("전", "{{ko-IPA}}", "전", "ph")
	def test_jeon_rr_7(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rr")
	def test_jeon_rrr_7(self):
		self.run_test("전", "{{ko-IPA}}", "jeon", "rrr")
	def test_jeon_mr_7(self):
		self.run_test("전", "{{ko-IPA}}", "chŏn", "mr")
	def test_jeon_yr_7(self):
		self.run_test("전", "{{ko-IPA}}", "cen", "yr")
	def test_jeon_ipa_7(self):
		self.run_test("전", "{{ko-IPA}}", "[t͡ɕʌ̹n]", "ipa")

	def test_naui_ph(self):
		self.run_test("나의", "{{ko-IPA|ui=2}}", "나의/나이", "ph")
	def test_naui_rr(self):
		self.run_test("나의", "{{ko-IPA|ui=2}}", "naui", "rr")
	def test_naui_rrr(self):
		self.run_test("나의", "{{ko-IPA|ui=2}}", "naui", "rrr")
	def test_naui_mr(self):
		self.run_test("나의", "{{ko-IPA|ui=2}}", "naŭi", "mr")
	def test_naui_yr(self):
		self.run_test("나의", "{{ko-IPA|ui=2}}", "nauy", "yr")
	def test_naui_ipa(self):
		self.run_test("나의", "{{ko-IPA|ui=2}}", "[na̠ɰi] ~ [na̠i]", "ipa")


	def test_maeil_ph(self):
		self.run_test("매일", "{{ko-IPA|l=y}}", "매(ː)일/메(ː)일", "ph")
	def test_maeil_rr(self):
		self.run_test("매일", "{{ko-IPA|l=y}}", "maeil", "rr")
	def test_maeil_rrr(self):
		self.run_test("매일", "{{ko-IPA|l=y}}", "maeil", "rrr")
	def test_maeil_mr(self):
		self.run_test("매일", "{{ko-IPA|l=y}}", "maeil", "mr")
	def test_maeil_yr(self):
		self.run_test("매일", "{{ko-IPA|l=y}}", "māyil", "yr")
	def test_maeil_ipa(self):
		self.run_test("매일", "{{ko-IPA|l=y}}", "[ˈmɛ(ː)iɭ] ~ [ˈme̞(ː)iɭ]", "ipa")

	def test_gunin_ph(self):
		self.run_test("군인", "{{ko-IPA}}", "구닌", "ph")
	def test_gunin_rr(self):
		self.run_test("군인", "{{ko-IPA}}", "gunin", "rr")
	def test_gunin_rrr(self):
		self.run_test("군인", "{{ko-IPA}}", "gun'in", "rrr")
	def test_gunin_mr(self):
		self.run_test("군인", "{{ko-IPA}}", "kunin", "mr")
	def test_gunin_yr(self):
		self.run_test("군인", "{{ko-IPA}}", "kwun.in", "yr")
	def test_gunin_ipa(self):
		self.run_test("군인", "{{ko-IPA}}", "[kunin]", "ipa")

	def test_jeonguk_ph(self):
		self.run_test("전국", "{{ko-IPA}}", "전국", "ph")
	def test_jeonguk_rr(self):
		self.run_test("전국", "{{ko-IPA}}", "jeon'guk", "rr")
	def test_jeonguk_rrr(self):
		self.run_test("전국", "{{ko-IPA}}", "jeongug", "rrr")
	def test_jeonguk_mr(self):
		self.run_test("전국", "{{ko-IPA}}", "chŏn'guk", "mr")
	def test_jeonguk_yr(self):
		self.run_test("전국", "{{ko-IPA}}", "cenkwuk", "yr")
	def test_jeonguk_ipa(self):
		self.run_test("전국", "{{ko-IPA}}", "[t͡ɕʌ̹nɡuk̚]", "ipa")
	def test_jeonguk_ph_1(self):
		self.run_test("전국", "{{ko-IPA}}", "전국", "ph")
	def test_jeonguk_rr_1(self):
		self.run_test("전국", "{{ko-IPA}}", "jeon'guk", "rr")
	def test_jeonguk_rrr_1(self):
		self.run_test("전국", "{{ko-IPA}}", "jeongug", "rrr")
	def test_jeonguk_mr_1(self):
		self.run_test("전국", "{{ko-IPA}}", "chŏn'guk", "mr")
	def test_jeonguk_yr_1(self):
		self.run_test("전국", "{{ko-IPA}}", "cenkwuk", "yr")
	def test_jeonguk_ipa_1(self):
		self.run_test("전국", "{{ko-IPA}}", "[t͡ɕʌ̹nɡuk̚]", "ipa")
	def test_jeonguk_ph_2(self):
		self.run_test("전국", "{{ko-IPA}}", "전국", "ph")
	def test_jeonguk_rr_2(self):
		self.run_test("전국", "{{ko-IPA}}", "jeon'guk", "rr")
	def test_jeonguk_rrr_2(self):
		self.run_test("전국", "{{ko-IPA}}", "jeongug", "rrr")
	def test_jeonguk_mr_2(self):
		self.run_test("전국", "{{ko-IPA}}", "chŏn'guk", "mr")
	def test_jeonguk_yr_2(self):
		self.run_test("전국", "{{ko-IPA}}", "cenkwuk", "yr")
	def test_jeonguk_ipa_2(self):
		self.run_test("전국", "{{ko-IPA}}", "[t͡ɕʌ̹nɡuk̚]", "ipa")
	def test_jeonguk_ph_3(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "전(ː)국", "ph")
	def test_jeonguk_rr_3(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "jeon'guk", "rr")
	def test_jeonguk_rrr_3(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "jeongug", "rrr")
	def test_jeonguk_mr_3(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "chŏn'guk", "mr")
	def test_jeonguk_yr_3(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "cēnkwuk", "yr")
	def test_jeonguk_ipa_3(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)nɡuk̚]", "ipa")
	def test_jeonguk_ph_4(self):
		self.run_test("전국", "{{ko-IPA}}", "전국", "ph")
	def test_jeonguk_rr_4(self):
		self.run_test("전국", "{{ko-IPA}}", "jeon'guk", "rr")
	def test_jeonguk_rrr_4(self):
		self.run_test("전국", "{{ko-IPA}}", "jeongug", "rrr")
	def test_jeonguk_mr_4(self):
		self.run_test("전국", "{{ko-IPA}}", "chŏn'guk", "mr")
	def test_jeonguk_yr_4(self):
		self.run_test("전국", "{{ko-IPA}}", "cenkwuk", "yr")
	def test_jeonguk_ipa_4(self):
		self.run_test("전국", "{{ko-IPA}}", "[t͡ɕʌ̹nɡuk̚]", "ipa")
	def test_jeonguk_ph_5(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "전(ː)국", "ph")
	def test_jeonguk_rr_5(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "jeon'guk", "rr")
	def test_jeonguk_rrr_5(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "jeongug", "rrr")
	def test_jeonguk_mr_5(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "chŏn'guk", "mr")
	def test_jeonguk_yr_5(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "cēnkwuk", "yr")
	def test_jeonguk_ipa_5(self):
		self.run_test("전국", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)nɡuk̚]", "ipa")

	def test_jang_ph(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "장(ː)", "ph")
	def test_jang_rr(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "jang", "rr")
	def test_jang_rrr(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "jang", "rrr")
	def test_jang_mr(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "chang", "mr")
	def test_jang_yr(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "cāng", "yr")
	def test_jang_ipa(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "[t͡ɕa̠(ː)ŋ]", "ipa")
	def test_jang_ph_1(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "장(ː)", "ph")
	def test_jang_rr_1(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "jang", "rr")
	def test_jang_rrr_1(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "jang", "rrr")
	def test_jang_mr_1(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "chang", "mr")
	def test_jang_yr_1(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "cāng", "yr")
	def test_jang_ipa_1(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "[t͡ɕa̠(ː)ŋ]", "ipa")
	def test_jang_ph_2(self):
		self.run_test("장", "{{ko-ipa}}", "장", "ph")
	def test_jang_rr_2(self):
		self.run_test("장", "{{ko-ipa}}", "jang", "rr")
	def test_jang_rrr_2(self):
		self.run_test("장", "{{ko-ipa}}", "jang", "rrr")
	def test_jang_mr_2(self):
		self.run_test("장", "{{ko-ipa}}", "chang", "mr")
	def test_jang_yr_2(self):
		self.run_test("장", "{{ko-ipa}}", "cang", "yr")
	def test_jang_ipa_2(self):
		self.run_test("장", "{{ko-ipa}}", "[t͡ɕa̠ŋ]", "ipa")
	def test_jang_ph_3(self):
		self.run_test("장", "{{ko-ipa}}", "장", "ph")
	def test_jang_rr_3(self):
		self.run_test("장", "{{ko-ipa}}", "jang", "rr")
	def test_jang_rrr_3(self):
		self.run_test("장", "{{ko-ipa}}", "jang", "rrr")
	def test_jang_mr_3(self):
		self.run_test("장", "{{ko-ipa}}", "chang", "mr")
	def test_jang_yr_3(self):
		self.run_test("장", "{{ko-ipa}}", "cang", "yr")
	def test_jang_ipa_3(self):
		self.run_test("장", "{{ko-ipa}}", "[t͡ɕa̠ŋ]", "ipa")
	def test_jang_ph_4(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "장(ː)", "ph")
	def test_jang_rr_4(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "jang", "rr")
	def test_jang_rrr_4(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "jang", "rrr")
	def test_jang_mr_4(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "chang", "mr")
	def test_jang_yr_4(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "cāng", "yr")
	def test_jang_ipa_4(self):
		self.run_test("장", "{{ko-ipa|l=y}}", "[t͡ɕa̠(ː)ŋ]", "ipa")
	def test_Jang_ph_5(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "장", "ph")
	def test_Jang_rr_5(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "Jang", "rr")
	def test_Jang_rrr_5(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "Jang", "rrr")
	def test_Jang_mr_5(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "Chang", "mr")
	def test_Jang_yr_5(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "cang", "yr")
	def test_Jang_ipa_5(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "[t͡ɕa̠ŋ]", "ipa")
	def test_Jang_ph_6(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "장", "ph")
	def test_Jang_rr_6(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "Jang", "rr")
	def test_Jang_rrr_6(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "Jang", "rrr")
	def test_Jang_mr_6(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "Chang", "mr")
	def test_Jang_yr_6(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "cang", "yr")
	def test_Jang_ipa_6(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "[t͡ɕa̠ŋ]", "ipa")
	def test_Jang_ph_7(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "장", "ph")
	def test_Jang_rr_7(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "Jang", "rr")
	def test_Jang_rrr_7(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "Jang", "rrr")
	def test_Jang_mr_7(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "Chang", "mr")
	def test_Jang_yr_7(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "cang", "yr")
	def test_Jang_ipa_7(self):
		self.run_test("장", "{{ko-ipa|cap=y}}", "[t͡ɕa̠ŋ]", "ipa")
	def test_jang_ph_8(self):
		self.run_test("장", "{{ko-IPA}}", "장", "ph")
	def test_jang_rr_8(self):
		self.run_test("장", "{{ko-IPA}}", "jang", "rr")
	def test_jang_rrr_8(self):
		self.run_test("장", "{{ko-IPA}}", "jang", "rrr")
	def test_jang_mr_8(self):
		self.run_test("장", "{{ko-IPA}}", "chang", "mr")
	def test_jang_yr_8(self):
		self.run_test("장", "{{ko-IPA}}", "cang", "yr")
	def test_jang_ipa_8(self):
		self.run_test("장", "{{ko-IPA}}", "[t͡ɕa̠ŋ]", "ipa")
	def test_jang_ph_9(self):
		self.run_test("장", "{{ko-IPA}}", "장", "ph")
	def test_jang_rr_9(self):
		self.run_test("장", "{{ko-IPA}}", "jang", "rr")
	def test_jang_rrr_9(self):
		self.run_test("장", "{{ko-IPA}}", "jang", "rrr")
	def test_jang_mr_9(self):
		self.run_test("장", "{{ko-IPA}}", "chang", "mr")
	def test_jang_yr_9(self):
		self.run_test("장", "{{ko-IPA}}", "cang", "yr")
	def test_jang_ipa_9(self):
		self.run_test("장", "{{ko-IPA}}", "[t͡ɕa̠ŋ]", "ipa")


	def test_so_ph(self):
		self.run_test("소", "{{ko-ipa}}", "소", "ph")
	def test_so_rr(self):
		self.run_test("소", "{{ko-ipa}}", "so", "rr")
	def test_so_rrr(self):
		self.run_test("소", "{{ko-ipa}}", "so", "rrr")
	def test_so_mr(self):
		self.run_test("소", "{{ko-ipa}}", "so", "mr")
	def test_so_yr(self):
		self.run_test("소", "{{ko-ipa}}", "so", "yr")
	def test_so_ipa(self):
		self.run_test("소", "{{ko-ipa}}", "[sʰo̞]", "ipa")
	def test_so_ph_1(self):
		self.run_test("소", "{{ko-ipa|l=y}}", "소(ː)", "ph")
	def test_so_rr_1(self):
		self.run_test("소", "{{ko-ipa|l=y}}", "so", "rr")
	def test_so_rrr_1(self):
		self.run_test("소", "{{ko-ipa|l=y}}", "so", "rrr")
	def test_so_mr_1(self):
		self.run_test("소", "{{ko-ipa|l=y}}", "so", "mr")
	def test_so_yr_1(self):
		self.run_test("소", "{{ko-ipa|l=y}}", "sō", "yr")
	def test_so_ipa_1(self):
		self.run_test("소", "{{ko-ipa|l=y}}", "[sʰo̞(ː)]", "ipa")
	def test_so_ph_2(self):
		self.run_test("소", "{{ko-ipa}}", "소", "ph")
	def test_so_rr_2(self):
		self.run_test("소", "{{ko-ipa}}", "so", "rr")
	def test_so_rrr_2(self):
		self.run_test("소", "{{ko-ipa}}", "so", "rrr")
	def test_so_mr_2(self):
		self.run_test("소", "{{ko-ipa}}", "so", "mr")
	def test_so_yr_2(self):
		self.run_test("소", "{{ko-ipa}}", "so", "yr")
	def test_so_ipa_2(self):
		self.run_test("소", "{{ko-ipa}}", "[sʰo̞]", "ipa")

	def test_gagam_ph(self):
		self.run_test("가감", "{{ko-IPA}}", "가감", "ph")
	def test_gagam_rr(self):
		self.run_test("가감", "{{ko-IPA}}", "gagam", "rr")
	def test_gagam_rrr(self):
		self.run_test("가감", "{{ko-IPA}}", "gagam", "rrr")
	def test_gagam_mr(self):
		self.run_test("가감", "{{ko-IPA}}", "kagam", "mr")
	def test_gagam_yr(self):
		self.run_test("가감", "{{ko-IPA}}", "kakam", "yr")
	def test_gagam_ipa(self):
		self.run_test("가감", "{{ko-IPA}}", "[ka̠ɡa̠m]", "ipa")

	def test_gakkapda_ph(self):
		self.run_test("가깝다", "{{ko-IPA}}", "가깝따", "ph")
	def test_gakkapda_rr(self):
		self.run_test("가깝다", "{{ko-IPA}}", "gakkapda", "rr")
	def test_gakkapda_rrr(self):
		self.run_test("가깝다", "{{ko-IPA}}", "ga'kkabda", "rrr")
	def test_gakkapda_mr(self):
		self.run_test("가깝다", "{{ko-IPA}}", "kakkapta", "mr")
	def test_gakkapda_yr(self):
		self.run_test("가깝다", "{{ko-IPA}}", "ka.kkapta", "yr")
	def test_gakkapda_ipa(self):
		self.run_test("가깝다", "{{ko-IPA}}", "[ka̠k͈a̠p̚t͈a̠]", "ipa")

	def test_nabi_ph(self):
		self.run_test("나비", "{{ko-IPA}}", "나비", "ph")
	def test_nabi_rr(self):
		self.run_test("나비", "{{ko-IPA}}", "nabi", "rr")
	def test_nabi_rrr(self):
		self.run_test("나비", "{{ko-IPA}}", "nabi", "rrr")
	def test_nabi_mr(self):
		self.run_test("나비", "{{ko-IPA}}", "nabi", "mr")
	def test_nabi_yr(self):
		self.run_test("나비", "{{ko-IPA}}", "napi", "yr")
	def test_nabi_ipa(self):
		self.run_test("나비", "{{ko-IPA}}", "[na̠bi]", "ipa")
	def test_nabi_ph_1(self):
		self.run_test("나비", "{{ko-IPA}}", "나비", "ph")
	def test_nabi_rr_1(self):
		self.run_test("나비", "{{ko-IPA}}", "nabi", "rr")
	def test_nabi_rrr_1(self):
		self.run_test("나비", "{{ko-IPA}}", "nabi", "rrr")
	def test_nabi_mr_1(self):
		self.run_test("나비", "{{ko-IPA}}", "nabi", "mr")
	def test_nabi_yr_1(self):
		self.run_test("나비", "{{ko-IPA}}", "napi", "yr")
	def test_nabi_ipa_1(self):
		self.run_test("나비", "{{ko-IPA}}", "[na̠bi]", "ipa")

	def test_gachi_ph(self):
		self.run_test("같이", "{{ko-IPA}}", "가치", "ph")
	def test_gachi_rr(self):
		self.run_test("같이", "{{ko-IPA}}", "gachi", "rr")
	def test_gachi_rrr(self):
		self.run_test("같이", "{{ko-IPA}}", "gat'i", "rrr")
	def test_gachi_mr(self):
		self.run_test("같이", "{{ko-IPA}}", "kach'i", "mr")
	def test_gachi_yr(self):
		self.run_test("같이", "{{ko-IPA}}", "kath.i", "yr")
	def test_gachi_ipa(self):
		self.run_test("같이", "{{ko-IPA}}", "[ka̠t͡ɕʰi]", "ipa")

	def test_deo_ph(self):
		self.run_test("더", "{{ko-IPA|audio=y}}", "더", "ph")
	def test_deo_rr(self):
		self.run_test("더", "{{ko-IPA|audio=y}}", "deo", "rr")
	def test_deo_rrr(self):
		self.run_test("더", "{{ko-IPA|audio=y}}", "deo", "rrr")
	def test_deo_mr(self):
		self.run_test("더", "{{ko-IPA|audio=y}}", "tŏ", "mr")
	def test_deo_yr(self):
		self.run_test("더", "{{ko-IPA|audio=y}}", "te", "yr")
	def test_deo_ipa(self):
		self.run_test("더", "{{ko-IPA|audio=y}}", "[tʌ̹]", "ipa")

	def test_jal_ph(self):
		self.run_test("잘", "{{ko-IPA|a=Ko-잘-2.oga}}", "잘", "ph")
	def test_jal_rr(self):
		self.run_test("잘", "{{ko-IPA|a=Ko-잘-2.oga}}", "jal", "rr")
	def test_jal_rrr(self):
		self.run_test("잘", "{{ko-IPA|a=Ko-잘-2.oga}}", "jal", "rrr")
	def test_jal_mr(self):
		self.run_test("잘", "{{ko-IPA|a=Ko-잘-2.oga}}", "chal", "mr")
	def test_jal_yr(self):
		self.run_test("잘", "{{ko-IPA|a=Ko-잘-2.oga}}", "cal", "yr")
	def test_jal_ipa(self):
		self.run_test("잘", "{{ko-IPA|a=Ko-잘-2.oga}}", "[t͡ɕa̠ɭ]", "ipa")

	def test_jota_ph(self):
		self.run_test("좋다", "{{ko-IPA|l=y|a=y}}", "조(ː)타", "ph")
	def test_jota_rr(self):
		self.run_test("좋다", "{{ko-IPA|l=y|a=y}}", "jota", "rr")
	def test_jota_rrr(self):
		self.run_test("좋다", "{{ko-IPA|l=y|a=y}}", "johda", "rrr")
	def test_jota_mr(self):
		self.run_test("좋다", "{{ko-IPA|l=y|a=y}}", "chot'a", "mr")
	def test_jota_yr(self):
		self.run_test("좋다", "{{ko-IPA|l=y|a=y}}", "cōhta", "yr")
	def test_jota_ipa(self):
		self.run_test("좋다", "{{ko-IPA|l=y|a=y}}", "[ˈt͡ɕo̞(ː)tʰa̠]", "ipa")

	def test_chae_ph(self):
		self.run_test("채", "{{ko-IPA}}", "채/체", "ph")
	def test_chae_rr(self):
		self.run_test("채", "{{ko-IPA}}", "chae", "rr")
	def test_chae_rrr(self):
		self.run_test("채", "{{ko-IPA}}", "chae", "rrr")
	def test_chae_mr(self):
		self.run_test("채", "{{ko-IPA}}", "ch'ae", "mr")
	def test_chae_yr(self):
		self.run_test("채", "{{ko-IPA}}", "chay", "yr")
	def test_chae_ipa(self):
		self.run_test("채", "{{ko-IPA}}", "[t͡ɕʰɛ] ~ [t͡ɕʰe̞]", "ipa")
	def test_chae_ph_1(self):
		self.run_test("채", "{{ko-IPA|l=y}}", "채(ː)/체(ː)", "ph")
	def test_chae_rr_1(self):
		self.run_test("채", "{{ko-IPA|l=y}}", "chae", "rr")
	def test_chae_rrr_1(self):
		self.run_test("채", "{{ko-IPA|l=y}}", "chae", "rrr")
	def test_chae_mr_1(self):
		self.run_test("채", "{{ko-IPA|l=y}}", "ch'ae", "mr")
	def test_chae_yr_1(self):
		self.run_test("채", "{{ko-IPA|l=y}}", "chāy", "yr")
	def test_chae_ipa_1(self):
		self.run_test("채", "{{ko-IPA|l=y}}", "[t͡ɕʰɛ(ː)] ~ [t͡ɕʰe̞(ː)]", "ipa")
	def test_chae_ph_2(self):
		self.run_test("채", "{{ko-IPA}}", "채/체", "ph")
	def test_chae_rr_2(self):
		self.run_test("채", "{{ko-IPA}}", "chae", "rr")
	def test_chae_rrr_2(self):
		self.run_test("채", "{{ko-IPA}}", "chae", "rrr")
	def test_chae_mr_2(self):
		self.run_test("채", "{{ko-IPA}}", "ch'ae", "mr")
	def test_chae_yr_2(self):
		self.run_test("채", "{{ko-IPA}}", "chay", "yr")
	def test_chae_ipa_2(self):
		self.run_test("채", "{{ko-IPA}}", "[t͡ɕʰɛ] ~ [t͡ɕʰe̞]", "ipa")
	def test_chae_ph_3(self):
		self.run_test("채", "{{ko-IPA}}", "채/체", "ph")
	def test_chae_rr_3(self):
		self.run_test("채", "{{ko-IPA}}", "chae", "rr")
	def test_chae_rrr_3(self):
		self.run_test("채", "{{ko-IPA}}", "chae", "rrr")
	def test_chae_mr_3(self):
		self.run_test("채", "{{ko-IPA}}", "ch'ae", "mr")
	def test_chae_yr_3(self):
		self.run_test("채", "{{ko-IPA}}", "chay", "yr")
	def test_chae_ipa_3(self):
		self.run_test("채", "{{ko-IPA}}", "[t͡ɕʰɛ] ~ [t͡ɕʰe̞]", "ipa")
	def test_chae_ph_4(self):
		self.run_test("채", "{{ko-IPA}}", "채/체", "ph")
	def test_chae_rr_4(self):
		self.run_test("채", "{{ko-IPA}}", "chae", "rr")
	def test_chae_rrr_4(self):
		self.run_test("채", "{{ko-IPA}}", "chae", "rrr")
	def test_chae_mr_4(self):
		self.run_test("채", "{{ko-IPA}}", "ch'ae", "mr")
	def test_chae_yr_4(self):
		self.run_test("채", "{{ko-IPA}}", "chay", "yr")
	def test_chae_ipa_4(self):
		self.run_test("채", "{{ko-IPA}}", "[t͡ɕʰɛ] ~ [t͡ɕʰe̞]", "ipa")

	def test_doeda_ph(self):
		self.run_test("되다", "{{ko-IPA|a=Ko-되다.oga}}", "뒈다/되다", "ph")
	def test_doeda_rr(self):
		self.run_test("되다", "{{ko-IPA|a=Ko-되다.oga}}", "doeda", "rr")
	def test_doeda_rrr(self):
		self.run_test("되다", "{{ko-IPA|a=Ko-되다.oga}}", "doeda", "rrr")
	def test_doeda_mr(self):
		self.run_test("되다", "{{ko-IPA|a=Ko-되다.oga}}", "toeda", "mr")
	def test_doeda_yr(self):
		self.run_test("되다", "{{ko-IPA|a=Ko-되다.oga}}", "toyta", "yr")
	def test_doeda_ipa(self):
		self.run_test("되다", "{{ko-IPA|a=Ko-되다.oga}}", "[twe̞da̠] ~ [tø̞da̠]", "ipa")
	def test_doeda_ph_1(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "뒈(ː)다/되(ː)다", "ph")
	def test_doeda_rr_1(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "doeda", "rr")
	def test_doeda_rrr_1(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "doeda", "rrr")
	def test_doeda_mr_1(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "toeda", "mr")
	def test_doeda_yr_1(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "tōyta", "yr")
	def test_doeda_ipa_1(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "[ˈtwe̞(ː)da̠] ~ [ˈtø̞(ː)da̠]", "ipa")
	def test_doeda_ph_2(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "뒈(ː)다/되(ː)다", "ph")
	def test_doeda_rr_2(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "doeda", "rr")
	def test_doeda_rrr_2(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "doeda", "rrr")
	def test_doeda_mr_2(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "toeda", "mr")
	def test_doeda_yr_2(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "tōyta", "yr")
	def test_doeda_ipa_2(self):
		self.run_test("되다", "{{ko-IPA|l=y}}", "[ˈtwe̞(ː)da̠] ~ [ˈtø̞(ː)da̠]", "ipa")

	def test_neo_ph(self):
		self.run_test("너", "{{ko-IPA|a=y}}", "너", "ph")
	def test_neo_rr(self):
		self.run_test("너", "{{ko-IPA|a=y}}", "neo", "rr")
	def test_neo_rrr(self):
		self.run_test("너", "{{ko-IPA|a=y}}", "neo", "rrr")
	def test_neo_mr(self):
		self.run_test("너", "{{ko-IPA|a=y}}", "nŏ", "mr")
	def test_neo_yr(self):
		self.run_test("너", "{{ko-IPA|a=y}}", "ne", "yr")
	def test_neo_ipa(self):
		self.run_test("너", "{{ko-IPA|a=y}}", "[nʌ̹]", "ipa")
	def test_neo_ph_1(self):
		self.run_test("너", "{{ko-IPA|a=y|l=y}}", "너(ː)", "ph")
	def test_neo_rr_1(self):
		self.run_test("너", "{{ko-IPA|a=y|l=y}}", "neo", "rr")
	def test_neo_rrr_1(self):
		self.run_test("너", "{{ko-IPA|a=y|l=y}}", "neo", "rrr")
	def test_neo_mr_1(self):
		self.run_test("너", "{{ko-IPA|a=y|l=y}}", "nŏ", "mr")
	def test_neo_yr_1(self):
		self.run_test("너", "{{ko-IPA|a=y|l=y}}", "nē", "yr")
	def test_neo_ipa_1(self):
		self.run_test("너", "{{ko-IPA|a=y|l=y}}", "[nɘ(ː)]", "ipa")

	def test_geot_ph(self):
		self.run_test("것", "{{ko-IPA|a=Ko-것.oga}}", "걷", "ph")
	def test_geot_rr(self):
		self.run_test("것", "{{ko-IPA|a=Ko-것.oga}}", "geot", "rr")
	def test_geot_rrr(self):
		self.run_test("것", "{{ko-IPA|a=Ko-것.oga}}", "geos", "rrr")
	def test_geot_mr(self):
		self.run_test("것", "{{ko-IPA|a=Ko-것.oga}}", "kŏt", "mr")
	def test_geot_yr(self):
		self.run_test("것", "{{ko-IPA|a=Ko-것.oga}}", "kes", "yr")
	def test_geot_ipa(self):
		self.run_test("것", "{{ko-IPA|a=Ko-것.oga}}", "[kʌ̹t̚]", "ipa")

	def test_gaemi_ph(self):
		self.run_test("개미", "{{ko-IPA|l=y}}", "개(ː)미/게(ː)미", "ph")
	def test_gaemi_rr(self):
		self.run_test("개미", "{{ko-IPA|l=y}}", "gaemi", "rr")
	def test_gaemi_rrr(self):
		self.run_test("개미", "{{ko-IPA|l=y}}", "gaemi", "rrr")
	def test_gaemi_mr(self):
		self.run_test("개미", "{{ko-IPA|l=y}}", "kaemi", "mr")
	def test_gaemi_yr(self):
		self.run_test("개미", "{{ko-IPA|l=y}}", "kāymi", "yr")
	def test_gaemi_ipa(self):
		self.run_test("개미", "{{ko-IPA|l=y}}", "[ˈkɛ(ː)mi] ~ [ˈke̞(ː)mi]", "ipa")

	def test_cheoreom_ph(self):
		self.run_test("-처럼", "{{ko-IPA}}", "처럼", "ph")
	def test_cheoreom_rr(self):
		self.run_test("-처럼", "{{ko-IPA}}", "cheoreom", "rr")
	def test_cheoreom_rrr(self):
		self.run_test("-처럼", "{{ko-IPA}}", "cheoleom", "rrr")
	def test_cheoreom_mr(self):
		self.run_test("-처럼", "{{ko-IPA}}", "ch'ŏrŏm", "mr")
	def test_cheoreom_yr(self):
		self.run_test("-처럼", "{{ko-IPA}}", "chelem", "yr")
	def test_cheoreom_ipa(self):
		self.run_test("-처럼", "{{ko-IPA}}", "[t͡ɕʰʌ̹ɾʌ̹m]", "ipa")

	def test_gwi_ph(self):
		self.run_test("귀", "{{ko-IPA}}", "귀", "ph")
	def test_gwi_rr(self):
		self.run_test("귀", "{{ko-IPA}}", "gwi", "rr")
	def test_gwi_rrr(self):
		self.run_test("귀", "{{ko-IPA}}", "gwi", "rrr")
	def test_gwi_mr(self):
		self.run_test("귀", "{{ko-IPA}}", "kwi", "mr")
	def test_gwi_yr(self):
		self.run_test("귀", "{{ko-IPA}}", "kwi", "yr")
	def test_gwi_ipa(self):
		self.run_test("귀", "{{ko-IPA}}", "[kɥi] ~ [ky]", "ipa")

	def test_nara_ph(self):
		self.run_test("나라", "{{ko-IPA|a=y}}", "나라", "ph")
	def test_nara_rr(self):
		self.run_test("나라", "{{ko-IPA|a=y}}", "nara", "rr")
	def test_nara_rrr(self):
		self.run_test("나라", "{{ko-IPA|a=y}}", "nala", "rrr")
	def test_nara_mr(self):
		self.run_test("나라", "{{ko-IPA|a=y}}", "nara", "mr")
	def test_nara_yr(self):
		self.run_test("나라", "{{ko-IPA|a=y}}", "nala", "yr")
	def test_nara_ipa(self):
		self.run_test("나라", "{{ko-IPA|a=y}}", "[na̠ɾa̠]", "ipa")
	def test_Nara_ph_1(self):
		self.run_test("나라", "{{ko-IPA|a=y|cap=y}}", "나라", "ph")
	def test_Nara_rr_1(self):
		self.run_test("나라", "{{ko-IPA|a=y|cap=y}}", "Nara", "rr")
	def test_Nara_rrr_1(self):
		self.run_test("나라", "{{ko-IPA|a=y|cap=y}}", "Nala", "rrr")
	def test_Nara_mr_1(self):
		self.run_test("나라", "{{ko-IPA|a=y|cap=y}}", "Nara", "mr")
	def test_Nara_yr_1(self):
		self.run_test("나라", "{{ko-IPA|a=y|cap=y}}", "nala", "yr")
	def test_Nara_ipa_1(self):
		self.run_test("나라", "{{ko-IPA|a=y|cap=y}}", "[na̠ɾa̠]", "ipa")

	def test_nalgae_ph(self):
		self.run_test("날개", "{{ko-IPA}}", "날개/날게", "ph")
	def test_nalgae_rr(self):
		self.run_test("날개", "{{ko-IPA}}", "nalgae", "rr")
	def test_nalgae_rrr(self):
		self.run_test("날개", "{{ko-IPA}}", "nalgae", "rrr")
	def test_nalgae_mr(self):
		self.run_test("날개", "{{ko-IPA}}", "nalgae", "mr")
	def test_nalgae_yr(self):
		self.run_test("날개", "{{ko-IPA}}", "nal.kay", "yr")
	def test_nalgae_ipa(self):
		self.run_test("날개", "{{ko-IPA}}", "[na̠ɭɡɛ] ~ [na̠ɭɡe̞]", "ipa")

	def test_jamjari_ph(self):
		self.run_test("잠자리", "{{ko-IPA}}", "잠자리", "ph")
	def test_jamjari_rr(self):
		self.run_test("잠자리", "{{ko-IPA}}", "jamjari", "rr")
	def test_jamjari_rrr(self):
		self.run_test("잠자리", "{{ko-IPA}}", "jamjali", "rrr")
	def test_jamjari_mr(self):
		self.run_test("잠자리", "{{ko-IPA}}", "chamjari", "mr")
	def test_jamjari_yr(self):
		self.run_test("잠자리", "{{ko-IPA}}", "camcali", "yr")
	def test_jamjari_ipa(self):
		self.run_test("잠자리", "{{ko-IPA}}", "[t͡ɕa̠md͡ʑa̠ɾi]", "ipa")
	def test_jamjari_ph_1(self):
		self.run_test("잠자리", "{{ko-IPA|com=1}}", "잠짜리", "ph")
	def test_jamjari_rr_1(self):
		self.run_test("잠자리", "{{ko-IPA|com=1}}", "jamjari", "rr")
	def test_jamjari_rrr_1(self):
		self.run_test("잠자리", "{{ko-IPA|com=1}}", "jamjali", "rrr")
	def test_jamjari_mr_1(self):
		self.run_test("잠자리", "{{ko-IPA|com=1}}", "chamchari", "mr")
	def test_jamjari_yr_1(self):
		self.run_test("잠자리", "{{ko-IPA|com=1}}", "camqcali", "yr")
	def test_jamjari_ipa_1(self):
		self.run_test("잠자리", "{{ko-IPA|com=1}}", "[t͡ɕa̠mt͡ɕ͈a̠ɾi]", "ipa")

	def test_mulmangcho_ph(self):
		self.run_test("물망초", "{{ko-IPA}}", "물망초", "ph")
	def test_mulmangcho_rr(self):
		self.run_test("물망초", "{{ko-IPA}}", "mulmangcho", "rr")
	def test_mulmangcho_rrr(self):
		self.run_test("물망초", "{{ko-IPA}}", "mulmangcho", "rrr")
	def test_mulmangcho_mr(self):
		self.run_test("물망초", "{{ko-IPA}}", "mulmangch'o", "mr")
	def test_mulmangcho_yr(self):
		self.run_test("물망초", "{{ko-IPA}}", "mul.mangcho", "yr")
	def test_mulmangcho_ipa(self):
		self.run_test("물망초", "{{ko-IPA}}", "[muɭma̠ŋt͡ɕʰo̞]", "ipa")

	def test_uija_ph(self):
		self.run_test("의자", "{{ko-IPA}}", "의자", "ph")
	def test_uija_rr(self):
		self.run_test("의자", "{{ko-IPA}}", "uija", "rr")
	def test_uija_rrr(self):
		self.run_test("의자", "{{ko-IPA}}", "uija", "rrr")
	def test_uija_mr(self):
		self.run_test("의자", "{{ko-IPA}}", "ŭija", "mr")
	def test_uija_yr(self):
		self.run_test("의자", "{{ko-IPA}}", "uyca", "yr")
	def test_uija_ipa(self):
		self.run_test("의자", "{{ko-IPA}}", "[ɰid͡ʑa̠]", "ipa")

	def test_geunyeo_ph(self):
		self.run_test("그녀", "{{ko-IPA|a=y}}", "그녀", "ph")
	def test_geunyeo_rr(self):
		self.run_test("그녀", "{{ko-IPA|a=y}}", "geunyeo", "rr")
	def test_geunyeo_rrr(self):
		self.run_test("그녀", "{{ko-IPA|a=y}}", "geunyeo", "rrr")
	def test_geunyeo_mr(self):
		self.run_test("그녀", "{{ko-IPA|a=y}}", "kŭnyŏ", "mr")
	def test_geunyeo_yr(self):
		self.run_test("그녀", "{{ko-IPA|a=y}}", "kunye", "yr")
	def test_geunyeo_ipa(self):
		self.run_test("그녀", "{{ko-IPA|a=y}}", "[kɯɲʌ̹]", "ipa")

	def test_geureut_ph(self):
		self.run_test("그릇", "{{ko-IPA}}", "그륻", "ph")
	def test_geureut_rr(self):
		self.run_test("그릇", "{{ko-IPA}}", "geureut", "rr")
	def test_geureut_rrr(self):
		self.run_test("그릇", "{{ko-IPA}}", "geuleus", "rrr")
	def test_geureut_mr(self):
		self.run_test("그릇", "{{ko-IPA}}", "kŭrŭt", "mr")
	def test_geureut_yr(self):
		self.run_test("그릇", "{{ko-IPA}}", "kulus", "yr")
	def test_geureut_ipa(self):
		self.run_test("그릇", "{{ko-IPA}}", "[kɯɾɯt̚]", "ipa")
	def test_geureut_ph_1(self):
		self.run_test("그릇", "{{ko-IPA}}", "그륻", "ph")
	def test_geureut_rr_1(self):
		self.run_test("그릇", "{{ko-IPA}}", "geureut", "rr")
	def test_geureut_rrr_1(self):
		self.run_test("그릇", "{{ko-IPA}}", "geuleus", "rrr")
	def test_geureut_mr_1(self):
		self.run_test("그릇", "{{ko-IPA}}", "kŭrŭt", "mr")
	def test_geureut_yr_1(self):
		self.run_test("그릇", "{{ko-IPA}}", "kulus", "yr")
	def test_geureut_ipa_1(self):
		self.run_test("그릇", "{{ko-IPA}}", "[kɯɾɯt̚]", "ipa")

	def test_gogi_ph(self):
		self.run_test("고기", "{{ko-IPA}}", "고기", "ph")
	def test_gogi_rr(self):
		self.run_test("고기", "{{ko-IPA}}", "gogi", "rr")
	def test_gogi_rrr(self):
		self.run_test("고기", "{{ko-IPA}}", "gogi", "rrr")
	def test_gogi_mr(self):
		self.run_test("고기", "{{ko-IPA}}", "kogi", "mr")
	def test_gogi_yr(self):
		self.run_test("고기", "{{ko-IPA}}", "koki", "yr")
	def test_gogi_ipa(self):
		self.run_test("고기", "{{ko-IPA}}", "[ko̞ɡi]", "ipa")
	def test_gogi_ph_1(self):
		self.run_test("고기", "{{ko-IPA|l=y}}", "고(ː)기", "ph")
	def test_gogi_rr_1(self):
		self.run_test("고기", "{{ko-IPA|l=y}}", "gogi", "rr")
	def test_gogi_rrr_1(self):
		self.run_test("고기", "{{ko-IPA|l=y}}", "gogi", "rrr")
	def test_gogi_mr_1(self):
		self.run_test("고기", "{{ko-IPA|l=y}}", "kogi", "mr")
	def test_gogi_yr_1(self):
		self.run_test("고기", "{{ko-IPA|l=y}}", "kōki", "yr")
	def test_gogi_ipa_1(self):
		self.run_test("고기", "{{ko-IPA|l=y}}", "[ˈko̞(ː)ɡi]", "ipa")

	def test_gadeuk_ph(self):
		self.run_test("가득", "{{ko-IPA|a=y}}", "가득", "ph")
	def test_gadeuk_rr(self):
		self.run_test("가득", "{{ko-IPA|a=y}}", "gadeuk", "rr")
	def test_gadeuk_rrr(self):
		self.run_test("가득", "{{ko-IPA|a=y}}", "gadeug", "rrr")
	def test_gadeuk_mr(self):
		self.run_test("가득", "{{ko-IPA|a=y}}", "kadŭk", "mr")
	def test_gadeuk_yr(self):
		self.run_test("가득", "{{ko-IPA|a=y}}", "katuk", "yr")
	def test_gadeuk_ipa(self):
		self.run_test("가득", "{{ko-IPA|a=y}}", "[ka̠dɯk̚]", "ipa")

	def test_kapein_ph(self):
		self.run_test("카페인", "{{ko-IPA}}", "카페인", "ph")
	def test_kapein_rr(self):
		self.run_test("카페인", "{{ko-IPA}}", "kapein", "rr")
	def test_kapein_rrr(self):
		self.run_test("카페인", "{{ko-IPA}}", "kapein", "rrr")
	def test_kapein_mr(self):
		self.run_test("카페인", "{{ko-IPA}}", "k'ap'ein", "mr")
	def test_kapein_yr(self):
		self.run_test("카페인", "{{ko-IPA}}", "kha.pheyin", "yr")
	def test_kapein_ipa(self):
		self.run_test("카페인", "{{ko-IPA}}", "[kʰa̠pʰe̞in]", "ipa")

	def test_gugeo_ph(self):
		self.run_test("국어", "{{ko-IPA|a=Ko-국어.oga}}", "구거", "ph")
	def test_gugeo_rr(self):
		self.run_test("국어", "{{ko-IPA|a=Ko-국어.oga}}", "gugeo", "rr")
	def test_gugeo_rrr(self):
		self.run_test("국어", "{{ko-IPA|a=Ko-국어.oga}}", "gug'eo", "rrr")
	def test_gugeo_mr(self):
		self.run_test("국어", "{{ko-IPA|a=Ko-국어.oga}}", "kugŏ", "mr")
	def test_gugeo_yr(self):
		self.run_test("국어", "{{ko-IPA|a=Ko-국어.oga}}", "kwuk.e", "yr")
	def test_gugeo_ipa(self):
		self.run_test("국어", "{{ko-IPA|a=Ko-국어.oga}}", "[kuɡʌ̹]", "ipa")

	def test_nan_ph(self):
		self.run_test("난", "{{ko-IPA}}", "난", "ph")
	def test_nan_rr(self):
		self.run_test("난", "{{ko-IPA}}", "nan", "rr")
	def test_nan_rrr(self):
		self.run_test("난", "{{ko-IPA}}", "nan", "rrr")
	def test_nan_mr(self):
		self.run_test("난", "{{ko-IPA}}", "nan", "mr")
	def test_nan_yr(self):
		self.run_test("난", "{{ko-IPA}}", "nan", "yr")
	def test_nan_ipa(self):
		self.run_test("난", "{{ko-IPA}}", "[na̠n]", "ipa")

	def test_saranghada_ph(self):
		self.run_test("사랑하다", "{{ko-IPA|a=Ko-사랑하다.oga}}", "사랑하다", "ph")
	def test_saranghada_rr(self):
		self.run_test("사랑하다", "{{ko-IPA|a=Ko-사랑하다.oga}}", "saranghada", "rr")
	def test_saranghada_rrr(self):
		self.run_test("사랑하다", "{{ko-IPA|a=Ko-사랑하다.oga}}", "salanghada", "rrr")
	def test_saranghada_mr(self):
		self.run_test("사랑하다", "{{ko-IPA|a=Ko-사랑하다.oga}}", "saranghada", "mr")
	def test_saranghada_yr(self):
		self.run_test("사랑하다", "{{ko-IPA|a=Ko-사랑하다.oga}}", "salanghata", "yr")
	def test_saranghada_ipa(self):
		self.run_test("사랑하다", "{{ko-IPA|a=Ko-사랑하다.oga}}", "[sʰa̠ɾa̠ŋɦa̠da̠]", "ipa")

	def test_eonje_ph(self):
		self.run_test("언제", "{{ko-IPA|l=y}}", "언(ː)제", "ph")
	def test_eonje_rr(self):
		self.run_test("언제", "{{ko-IPA|l=y}}", "eonje", "rr")
	def test_eonje_rrr(self):
		self.run_test("언제", "{{ko-IPA|l=y}}", "eonje", "rrr")
	def test_eonje_mr(self):
		self.run_test("언제", "{{ko-IPA|l=y}}", "ŏnje", "mr")
	def test_eonje_yr(self):
		self.run_test("언제", "{{ko-IPA|l=y}}", "ēn.cey", "yr")
	def test_eonje_ipa(self):
		self.run_test("언제", "{{ko-IPA|l=y}}", "[ˈɘ(ː)ɲd͡ʑe̞]", "ipa")

	def test_gaeguri_ph(self):
		self.run_test("개구리", "{{ko-IPA}}", "개구리/게구리", "ph")
	def test_gaeguri_rr(self):
		self.run_test("개구리", "{{ko-IPA}}", "gaeguri", "rr")
	def test_gaeguri_rrr(self):
		self.run_test("개구리", "{{ko-IPA}}", "gaeguli", "rrr")
	def test_gaeguri_mr(self):
		self.run_test("개구리", "{{ko-IPA}}", "kaeguri", "mr")
	def test_gaeguri_yr(self):
		self.run_test("개구리", "{{ko-IPA}}", "kaykwuli", "yr")
	def test_gaeguri_ipa(self):
		self.run_test("개구리", "{{ko-IPA}}", "[kɛɡuɾi] ~ [ke̞ɡuɾi]", "ipa")

	def test_itda_ph(self):
		self.run_test("있다", "{{ko-IPA|a=y}}", "읻따", "ph")
	def test_itda_rr(self):
		self.run_test("있다", "{{ko-IPA|a=y}}", "itda", "rr")
	def test_itda_rrr(self):
		self.run_test("있다", "{{ko-IPA|a=y}}", "issda", "rrr")
	def test_itda_mr(self):
		self.run_test("있다", "{{ko-IPA|a=y}}", "itta", "mr")
	def test_itda_yr(self):
		self.run_test("있다", "{{ko-IPA|a=y}}", "issta", "yr")
	def test_itda_ipa(self):
		self.run_test("있다", "{{ko-IPA|a=y}}", "[it̚t͈a̠]", "ipa")

	def test_gwail_ph(self):
		self.run_test("과일", "{{ko-IPA|l=y}}", "과(ː)일", "ph")
	def test_gwail_rr(self):
		self.run_test("과일", "{{ko-IPA|l=y}}", "gwail", "rr")
	def test_gwail_rrr(self):
		self.run_test("과일", "{{ko-IPA|l=y}}", "gwail", "rrr")
	def test_gwail_mr(self):
		self.run_test("과일", "{{ko-IPA|l=y}}", "kwail", "mr")
	def test_gwail_yr(self):
		self.run_test("과일", "{{ko-IPA|l=y}}", "kwāil", "yr")
	def test_gwail_ipa(self):
		self.run_test("과일", "{{ko-IPA|l=y}}", "[ˈkwa̠(ː)iɭ]", "ipa")

	def test_geongang_ph(self):
		self.run_test("건강", "{{ko-IPA|l=y}}", "건(ː)강", "ph")
	def test_geongang_rr(self):
		self.run_test("건강", "{{ko-IPA|l=y}}", "geon'gang", "rr")
	def test_geongang_rrr(self):
		self.run_test("건강", "{{ko-IPA|l=y}}", "geongang", "rrr")
	def test_geongang_mr(self):
		self.run_test("건강", "{{ko-IPA|l=y}}", "kŏn'gang", "mr")
	def test_geongang_yr(self):
		self.run_test("건강", "{{ko-IPA|l=y}}", "kēnkang", "yr")
	def test_geongang_ipa(self):
		self.run_test("건강", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)nɡa̠ŋ]", "ipa")

	def test_natda_ph(self):
		self.run_test("낮다", "{{ko-IPA}}", "낟따", "ph")
	def test_natda_rr(self):
		self.run_test("낮다", "{{ko-IPA}}", "natda", "rr")
	def test_natda_rrr(self):
		self.run_test("낮다", "{{ko-IPA}}", "najda", "rrr")
	def test_natda_mr(self):
		self.run_test("낮다", "{{ko-IPA}}", "natta", "mr")
	def test_natda_yr(self):
		self.run_test("낮다", "{{ko-IPA}}", "nacta", "yr")
	def test_natda_ipa(self):
		self.run_test("낮다", "{{ko-IPA}}", "[na̠t̚t͈a̠]", "ipa")

	def test_neurin_ph(self):
		self.run_test("느린", "{{ko-IPA}}", "느린", "ph")
	def test_neurin_rr(self):
		self.run_test("느린", "{{ko-IPA}}", "neurin", "rr")
	def test_neurin_rrr(self):
		self.run_test("느린", "{{ko-IPA}}", "neulin", "rrr")
	def test_neurin_mr(self):
		self.run_test("느린", "{{ko-IPA}}", "nŭrin", "mr")
	def test_neurin_yr(self):
		self.run_test("느린", "{{ko-IPA}}", "nulin", "yr")
	def test_neurin_ipa(self):
		self.run_test("느린", "{{ko-IPA}}", "[nɯɾin]", "ipa")

	def test_neukdae_ph(self):
		self.run_test("늑대", "{{ko-IPA}}", "늑때/늑떼", "ph")
	def test_neukdae_rr(self):
		self.run_test("늑대", "{{ko-IPA}}", "neukdae", "rr")
	def test_neukdae_rrr(self):
		self.run_test("늑대", "{{ko-IPA}}", "neugdae", "rrr")
	def test_neukdae_mr(self):
		self.run_test("늑대", "{{ko-IPA}}", "nŭktae", "mr")
	def test_neukdae_yr(self):
		self.run_test("늑대", "{{ko-IPA}}", "nuktay", "yr")
	def test_neukdae_ipa(self):
		self.run_test("늑대", "{{ko-IPA}}", "[nɯk̚t͈ɛ] ~ [nɯk̚t͈e̞]", "ipa")

	def test_beol_ph(self):
		self.run_test("벌", "{{ko-IPA|l=y}}", "벌(ː)", "ph")
	def test_beol_rr(self):
		self.run_test("벌", "{{ko-IPA|l=y}}", "beol", "rr")
	def test_beol_rrr(self):
		self.run_test("벌", "{{ko-IPA|l=y}}", "beol", "rrr")
	def test_beol_mr(self):
		self.run_test("벌", "{{ko-IPA|l=y}}", "pŏl", "mr")
	def test_beol_yr(self):
		self.run_test("벌", "{{ko-IPA|l=y}}", "pēl", "yr")
	def test_beol_ipa(self):
		self.run_test("벌", "{{ko-IPA|l=y}}", "[pɘ(ː)ɭ]", "ipa")
	def test_beol_ph_1(self):
		self.run_test("벌", "{{ko-IPA}}", "벌", "ph")
	def test_beol_rr_1(self):
		self.run_test("벌", "{{ko-IPA}}", "beol", "rr")
	def test_beol_rrr_1(self):
		self.run_test("벌", "{{ko-IPA}}", "beol", "rrr")
	def test_beol_mr_1(self):
		self.run_test("벌", "{{ko-IPA}}", "pŏl", "mr")
	def test_beol_yr_1(self):
		self.run_test("벌", "{{ko-IPA}}", "pel", "yr")
	def test_beol_ipa_1(self):
		self.run_test("벌", "{{ko-IPA}}", "[pʌ̹ɭ]", "ipa")
	def test_beol_ph_2(self):
		self.run_test("벌", "{{ko-IPA}}", "벌", "ph")
	def test_beol_rr_2(self):
		self.run_test("벌", "{{ko-IPA}}", "beol", "rr")
	def test_beol_rrr_2(self):
		self.run_test("벌", "{{ko-IPA}}", "beol", "rrr")
	def test_beol_mr_2(self):
		self.run_test("벌", "{{ko-IPA}}", "pŏl", "mr")
	def test_beol_yr_2(self):
		self.run_test("벌", "{{ko-IPA}}", "pel", "yr")
	def test_beol_ipa_2(self):
		self.run_test("벌", "{{ko-IPA}}", "[pʌ̹ɭ]", "ipa")
	def test_beol_ph_3(self):
		self.run_test("벌", "{{ko-IPA}}", "벌", "ph")
	def test_beol_rr_3(self):
		self.run_test("벌", "{{ko-IPA}}", "beol", "rr")
	def test_beol_rrr_3(self):
		self.run_test("벌", "{{ko-IPA}}", "beol", "rrr")
	def test_beol_mr_3(self):
		self.run_test("벌", "{{ko-IPA}}", "pŏl", "mr")
	def test_beol_yr_3(self):
		self.run_test("벌", "{{ko-IPA}}", "pel", "yr")
	def test_beol_ipa_3(self):
		self.run_test("벌", "{{ko-IPA}}", "[pʌ̹ɭ]", "ipa")

	def test_manta_ph(self):
		self.run_test("많다", "{{ko-IPA|l=y|a=y}}", "만(ː)타", "ph")
	def test_manta_rr(self):
		self.run_test("많다", "{{ko-IPA|l=y|a=y}}", "manta", "rr")
	def test_manta_rrr(self):
		self.run_test("많다", "{{ko-IPA|l=y|a=y}}", "manhda", "rrr")
	def test_manta_mr(self):
		self.run_test("많다", "{{ko-IPA|l=y|a=y}}", "mant'a", "mr")
	def test_manta_yr(self):
		self.run_test("많다", "{{ko-IPA|l=y|a=y}}", "mānhta", "yr")
	def test_manta_ipa(self):
		self.run_test("많다", "{{ko-IPA|l=y|a=y}}", "[ˈma̠(ː)ntʰa̠]", "ipa")

	def test_da_ph(self):
		self.run_test("다", "{{ko-IPA|l=y}}", "다(ː)", "ph")
	def test_da_rr(self):
		self.run_test("다", "{{ko-IPA|l=y}}", "da", "rr")
	def test_da_rrr(self):
		self.run_test("다", "{{ko-IPA|l=y}}", "da", "rrr")
	def test_da_mr(self):
		self.run_test("다", "{{ko-IPA|l=y}}", "ta", "mr")
	def test_da_yr(self):
		self.run_test("다", "{{ko-IPA|l=y}}", "tā", "yr")
	def test_da_ipa(self):
		self.run_test("다", "{{ko-IPA|l=y}}", "[ta̠(ː)]", "ipa")
	def test_da_ph_1(self):
		self.run_test("다", "{{ko-IPA}}", "다", "ph")
	def test_da_rr_1(self):
		self.run_test("다", "{{ko-IPA}}", "da", "rr")
	def test_da_rrr_1(self):
		self.run_test("다", "{{ko-IPA}}", "da", "rrr")
	def test_da_mr_1(self):
		self.run_test("다", "{{ko-IPA}}", "ta", "mr")
	def test_da_yr_1(self):
		self.run_test("다", "{{ko-IPA}}", "ta", "yr")
	def test_da_ipa_1(self):
		self.run_test("다", "{{ko-IPA}}", "[ta̠]", "ipa")
	def test_da_ph_2(self):
		self.run_test("다", "{{ko-IPA}}", "다", "ph")
	def test_da_rr_2(self):
		self.run_test("다", "{{ko-IPA}}", "da", "rr")
	def test_da_rrr_2(self):
		self.run_test("다", "{{ko-IPA}}", "da", "rrr")
	def test_da_mr_2(self):
		self.run_test("다", "{{ko-IPA}}", "ta", "mr")
	def test_da_yr_2(self):
		self.run_test("다", "{{ko-IPA}}", "ta", "yr")
	def test_da_ipa_2(self):
		self.run_test("다", "{{ko-IPA}}", "[ta̠]", "ipa")
	def test_da_ph_3(self):
		self.run_test("다", "{{ko-IPA}}", "다", "ph")
	def test_da_rr_3(self):
		self.run_test("다", "{{ko-IPA}}", "da", "rr")
	def test_da_rrr_3(self):
		self.run_test("다", "{{ko-IPA}}", "da", "rrr")
	def test_da_mr_3(self):
		self.run_test("다", "{{ko-IPA}}", "ta", "mr")
	def test_da_yr_3(self):
		self.run_test("다", "{{ko-IPA}}", "ta", "yr")
	def test_da_ipa_3(self):
		self.run_test("다", "{{ko-IPA}}", "[ta̠]", "ipa")

	def test_yu_ph(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "유(ː)", "ph")
	def test_yu_rr(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "yu", "rr")
	def test_yu_rrr(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "yu", "rrr")
	def test_yu_mr(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "yu", "mr")
	def test_yu_yr(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "yū", "yr")
	def test_yu_ipa(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "[ju(ː)]", "ipa")
	def test_yu_ph_1(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "유(ː)", "ph")
	def test_yu_rr_1(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "yu", "rr")
	def test_yu_rrr_1(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "yu", "rrr")
	def test_yu_mr_1(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "yu", "mr")
	def test_yu_yr_1(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "yū", "yr")
	def test_yu_ipa_1(self):
		self.run_test("유", "{{ko-IPA|l=y}}", "[ju(ː)]", "ipa")
	def test_yu_ph_2(self):
		self.run_test("유", "{{ko-IPA}}", "유", "ph")
	def test_yu_rr_2(self):
		self.run_test("유", "{{ko-IPA}}", "yu", "rr")
	def test_yu_rrr_2(self):
		self.run_test("유", "{{ko-IPA}}", "yu", "rrr")
	def test_yu_mr_2(self):
		self.run_test("유", "{{ko-IPA}}", "yu", "mr")
	def test_yu_yr_2(self):
		self.run_test("유", "{{ko-IPA}}", "yu", "yr")
	def test_yu_ipa_2(self):
		self.run_test("유", "{{ko-IPA}}", "[ju]", "ipa")

	def test_non_ph(self):
		self.run_test("논", "{{ko-IPA}}", "논", "ph")
	def test_non_rr(self):
		self.run_test("논", "{{ko-IPA}}", "non", "rr")
	def test_non_rrr(self):
		self.run_test("논", "{{ko-IPA}}", "non", "rrr")
	def test_non_mr(self):
		self.run_test("논", "{{ko-IPA}}", "non", "mr")
	def test_non_yr(self):
		self.run_test("논", "{{ko-IPA}}", "non", "yr")
	def test_non_ipa(self):
		self.run_test("논", "{{ko-IPA}}", "[no̞n]", "ipa")
	def test_non_ph_1(self):
		self.run_test("논", "{{ko-IPA}}", "논", "ph")
	def test_non_rr_1(self):
		self.run_test("논", "{{ko-IPA}}", "non", "rr")
	def test_non_rrr_1(self):
		self.run_test("논", "{{ko-IPA}}", "non", "rrr")
	def test_non_mr_1(self):
		self.run_test("논", "{{ko-IPA}}", "non", "mr")
	def test_non_yr_1(self):
		self.run_test("논", "{{ko-IPA}}", "non", "yr")
	def test_non_ipa_1(self):
		self.run_test("논", "{{ko-IPA}}", "[no̞n]", "ipa")

	def test_baji_ph(self):
		self.run_test("바지", "{{ko-IPA}}", "바지", "ph")
	def test_baji_rr(self):
		self.run_test("바지", "{{ko-IPA}}", "baji", "rr")
	def test_baji_rrr(self):
		self.run_test("바지", "{{ko-IPA}}", "baji", "rrr")
	def test_baji_mr(self):
		self.run_test("바지", "{{ko-IPA}}", "paji", "mr")
	def test_baji_yr(self):
		self.run_test("바지", "{{ko-IPA}}", "paci", "yr")
	def test_baji_ipa(self):
		self.run_test("바지", "{{ko-IPA}}", "[pa̠d͡ʑi]", "ipa")

	def test_gukto_ph(self):
		self.run_test("국토", "{{ko-IPA}}", "국토", "ph")
	def test_gukto_rr(self):
		self.run_test("국토", "{{ko-IPA}}", "gukto", "rr")
	def test_gukto_rrr(self):
		self.run_test("국토", "{{ko-IPA}}", "gugto", "rrr")
	def test_gukto_mr(self):
		self.run_test("국토", "{{ko-IPA}}", "kukt'o", "mr")
	def test_gukto_yr(self):
		self.run_test("국토", "{{ko-IPA}}", "kwuktho", "yr")
	def test_gukto_ipa(self):
		self.run_test("국토", "{{ko-IPA}}", "[kuk̚tʰo̞]", "ipa")

	def test_jeoreon_ph(self):
		self.run_test("저런", "{{ko-IPA}}", "저런", "ph")
	def test_jeoreon_rr(self):
		self.run_test("저런", "{{ko-IPA}}", "jeoreon", "rr")
	def test_jeoreon_rrr(self):
		self.run_test("저런", "{{ko-IPA}}", "jeoleon", "rrr")
	def test_jeoreon_mr(self):
		self.run_test("저런", "{{ko-IPA}}", "chŏrŏn", "mr")
	def test_jeoreon_yr(self):
		self.run_test("저런", "{{ko-IPA}}", "celen", "yr")
	def test_jeoreon_ipa(self):
		self.run_test("저런", "{{ko-IPA}}", "[t͡ɕʌ̹ɾʌ̹n]", "ipa")

	def test_kkum_ph(self):
		self.run_test("꿈", "{{ko-IPA}}", "꿈", "ph")
	def test_kkum_rr(self):
		self.run_test("꿈", "{{ko-IPA}}", "kkum", "rr")
	def test_kkum_rrr(self):
		self.run_test("꿈", "{{ko-IPA}}", "kkum", "rrr")
	def test_kkum_mr(self):
		self.run_test("꿈", "{{ko-IPA}}", "kkum", "mr")
	def test_kkum_yr(self):
		self.run_test("꿈", "{{ko-IPA}}", "kkwum", "yr")
	def test_kkum_ipa(self):
		self.run_test("꿈", "{{ko-IPA}}", "[k͈um]", "ipa")

	def test_boda_ph(self):
		self.run_test("보다", "{{ko-IPA|a=y}}", "보다", "ph")
	def test_boda_rr(self):
		self.run_test("보다", "{{ko-IPA|a=y}}", "boda", "rr")
	def test_boda_rrr(self):
		self.run_test("보다", "{{ko-IPA|a=y}}", "boda", "rrr")
	def test_boda_mr(self):
		self.run_test("보다", "{{ko-IPA|a=y}}", "poda", "mr")
	def test_boda_yr(self):
		self.run_test("보다", "{{ko-IPA|a=y}}", "pota", "yr")
	def test_boda_ipa(self):
		self.run_test("보다", "{{ko-IPA|a=y}}", "[po̞da̠]", "ipa")

	def test_nanuda_ph(self):
		self.run_test("나누다", "{{ko-IPA|a=y}}", "나누다", "ph")
	def test_nanuda_rr(self):
		self.run_test("나누다", "{{ko-IPA|a=y}}", "nanuda", "rr")
	def test_nanuda_rrr(self):
		self.run_test("나누다", "{{ko-IPA|a=y}}", "nanuda", "rrr")
	def test_nanuda_mr(self):
		self.run_test("나누다", "{{ko-IPA|a=y}}", "nanuda", "mr")
	def test_nanuda_yr(self):
		self.run_test("나누다", "{{ko-IPA|a=y}}", "nanwuta", "yr")
	def test_nanuda_ipa(self):
		self.run_test("나누다", "{{ko-IPA|a=y}}", "[na̠nuda̠]", "ipa")

	def test_jot_ph(self):
		self.run_test("좆", "{{ko-IPA}}", "졷", "ph")
	def test_jot_rr(self):
		self.run_test("좆", "{{ko-IPA}}", "jot", "rr")
	def test_jot_rrr(self):
		self.run_test("좆", "{{ko-IPA}}", "joj", "rrr")
	def test_jot_mr(self):
		self.run_test("좆", "{{ko-IPA}}", "chot", "mr")
	def test_jot_yr(self):
		self.run_test("좆", "{{ko-IPA}}", "coc", "yr")
	def test_jot_ipa(self):
		self.run_test("좆", "{{ko-IPA}}", "[t͡ɕo̞t̚]", "ipa")

	def test_jwi_ph(self):
		self.run_test("쥐", "{{ko-IPA}}", "쥐", "ph")
	def test_jwi_rr(self):
		self.run_test("쥐", "{{ko-IPA}}", "jwi", "rr")
	def test_jwi_rrr(self):
		self.run_test("쥐", "{{ko-IPA}}", "jwi", "rrr")
	def test_jwi_mr(self):
		self.run_test("쥐", "{{ko-IPA}}", "chwi", "mr")
	def test_jwi_yr(self):
		self.run_test("쥐", "{{ko-IPA}}", "cwi", "yr")
	def test_jwi_ipa(self):
		self.run_test("쥐", "{{ko-IPA}}", "[t͡ɕɥi] ~ [t͡ɕy]", "ipa")

	def test_mandeulda_ph(self):
		self.run_test("만들다", "{{ko-IPA|a=y}}", "만들다", "ph")
	def test_mandeulda_rr(self):
		self.run_test("만들다", "{{ko-IPA|a=y}}", "mandeulda", "rr")
	def test_mandeulda_rrr(self):
		self.run_test("만들다", "{{ko-IPA|a=y}}", "mandeulda", "rrr")
	def test_mandeulda_mr(self):
		self.run_test("만들다", "{{ko-IPA|a=y}}", "mandŭlda", "mr")
	def test_mandeulda_yr(self):
		self.run_test("만들다", "{{ko-IPA|a=y}}", "mantulta", "yr")
	def test_mandeulda_ipa(self):
		self.run_test("만들다", "{{ko-IPA|a=y}}", "[ma̠ndɯɭda̠]", "ipa")

	def test_nuna_ph(self):
		self.run_test("누나", "{{ko-IPA|l=y}}", "누(ː)나", "ph")
	def test_nuna_rr(self):
		self.run_test("누나", "{{ko-IPA|l=y}}", "nuna", "rr")
	def test_nuna_rrr(self):
		self.run_test("누나", "{{ko-IPA|l=y}}", "nuna", "rrr")
	def test_nuna_mr(self):
		self.run_test("누나", "{{ko-IPA|l=y}}", "nuna", "mr")
	def test_nuna_yr(self):
		self.run_test("누나", "{{ko-IPA|l=y}}", "nwūna", "yr")
	def test_nuna_ipa(self):
		self.run_test("누나", "{{ko-IPA|l=y}}", "[ˈnu(ː)na̠]", "ipa")

	def test_gaesaekki_ph(self):
		self.run_test("개새끼", "{{ko-IPA|l=y}}", "개(ː)새끼/게(ː)세끼", "ph")
	def test_gaesaekki_rr(self):
		self.run_test("개새끼", "{{ko-IPA|l=y}}", "gaesaekki", "rr")
	def test_gaesaekki_rrr(self):
		self.run_test("개새끼", "{{ko-IPA|l=y}}", "gaesae'kki", "rrr")
	def test_gaesaekki_mr(self):
		self.run_test("개새끼", "{{ko-IPA|l=y}}", "kaesaekki", "mr")
	def test_gaesaekki_yr(self):
		self.run_test("개새끼", "{{ko-IPA|l=y}}", "kāysay.kki", "yr")
	def test_gaesaekki_ipa(self):
		self.run_test("개새끼", "{{ko-IPA|l=y}}", "[ˈkɛ(ː)sʰɛk͈i] ~ [ˈke̞(ː)sʰe̞k͈i]", "ipa")

	def test_sanso_ph(self):
		self.run_test("산소", "{{ko-IPA}}", "산소", "ph")
	def test_sanso_rr(self):
		self.run_test("산소", "{{ko-IPA}}", "sanso", "rr")
	def test_sanso_rrr(self):
		self.run_test("산소", "{{ko-IPA}}", "sanso", "rrr")
	def test_sanso_mr(self):
		self.run_test("산소", "{{ko-IPA}}", "sanso", "mr")
	def test_sanso_yr(self):
		self.run_test("산소", "{{ko-IPA}}", "sanso", "yr")
	def test_sanso_ipa(self):
		self.run_test("산소", "{{ko-IPA}}", "[sʰa̠nsʰo̞]", "ipa")
	def test_sanso_ph_1(self):
		self.run_test("산소", "{{ko-IPA}}", "산소", "ph")
	def test_sanso_rr_1(self):
		self.run_test("산소", "{{ko-IPA}}", "sanso", "rr")
	def test_sanso_rrr_1(self):
		self.run_test("산소", "{{ko-IPA}}", "sanso", "rrr")
	def test_sanso_mr_1(self):
		self.run_test("산소", "{{ko-IPA}}", "sanso", "mr")
	def test_sanso_yr_1(self):
		self.run_test("산소", "{{ko-IPA}}", "sanso", "yr")
	def test_sanso_ipa_1(self):
		self.run_test("산소", "{{ko-IPA}}", "[sʰa̠nsʰo̞]", "ipa")

	def test_pari_ph(self):
		self.run_test("파리", "{{ko-IPA|l=y}}", "파(ː)리", "ph")
	def test_pari_rr(self):
		self.run_test("파리", "{{ko-IPA|l=y}}", "pari", "rr")
	def test_pari_rrr(self):
		self.run_test("파리", "{{ko-IPA|l=y}}", "pali", "rrr")
	def test_pari_mr(self):
		self.run_test("파리", "{{ko-IPA|l=y}}", "p'ari", "mr")
	def test_pari_yr(self):
		self.run_test("파리", "{{ko-IPA|l=y}}", "phāli", "yr")
	def test_pari_ipa(self):
		self.run_test("파리", "{{ko-IPA|l=y}}", "[ˈpʰa̠(ː)ɾi]", "ipa")
	def test_Pari_ph_1(self):
		self.run_test("파리", "{{ko-IPA|cap=y}}", "파리", "ph")
	def test_Pari_rr_1(self):
		self.run_test("파리", "{{ko-IPA|cap=y}}", "Pari", "rr")
	def test_Pari_rrr_1(self):
		self.run_test("파리", "{{ko-IPA|cap=y}}", "Pali", "rrr")
	def test_Pari_mr_1(self):
		self.run_test("파리", "{{ko-IPA|cap=y}}", "P'ari", "mr")
	def test_Pari_yr_1(self):
		self.run_test("파리", "{{ko-IPA|cap=y}}", "phali", "yr")
	def test_Pari_ipa_1(self):
		self.run_test("파리", "{{ko-IPA|cap=y}}", "[pʰa̠ɾi]", "ipa")
	def test_pari_ph_2(self):
		self.run_test("파리", "{{ko-IPA}}", "파리", "ph")
	def test_pari_rr_2(self):
		self.run_test("파리", "{{ko-IPA}}", "pari", "rr")
	def test_pari_rrr_2(self):
		self.run_test("파리", "{{ko-IPA}}", "pali", "rrr")
	def test_pari_mr_2(self):
		self.run_test("파리", "{{ko-IPA}}", "p'ari", "mr")
	def test_pari_yr_2(self):
		self.run_test("파리", "{{ko-IPA}}", "phali", "yr")
	def test_pari_ipa_2(self):
		self.run_test("파리", "{{ko-IPA}}", "[pʰa̠ɾi]", "ipa")

	def test_mogi_ph(self):
		self.run_test("모기", "{{ko-IPA|l=y}}", "모(ː)기", "ph")
	def test_mogi_rr(self):
		self.run_test("모기", "{{ko-IPA|l=y}}", "mogi", "rr")
	def test_mogi_rrr(self):
		self.run_test("모기", "{{ko-IPA|l=y}}", "mogi", "rrr")
	def test_mogi_mr(self):
		self.run_test("모기", "{{ko-IPA|l=y}}", "mogi", "mr")
	def test_mogi_yr(self):
		self.run_test("모기", "{{ko-IPA|l=y}}", "mōki", "yr")
	def test_mogi_ipa(self):
		self.run_test("모기", "{{ko-IPA|l=y}}", "[ˈmo̞(ː)ɡi]", "ipa")

	def test_eoryeopda_ph(self):
		self.run_test("어렵다", "{{ko-IPA|a=y}}", "어렵따", "ph")
	def test_eoryeopda_rr(self):
		self.run_test("어렵다", "{{ko-IPA|a=y}}", "eoryeopda", "rr")
	def test_eoryeopda_rrr(self):
		self.run_test("어렵다", "{{ko-IPA|a=y}}", "eolyeobda", "rrr")
	def test_eoryeopda_mr(self):
		self.run_test("어렵다", "{{ko-IPA|a=y}}", "ŏryŏpta", "mr")
	def test_eoryeopda_yr(self):
		self.run_test("어렵다", "{{ko-IPA|a=y}}", "elyepta", "yr")
	def test_eoryeopda_ipa(self):
		self.run_test("어렵다", "{{ko-IPA|a=y}}", "[ʌ̹ɾjʌ̹p̚t͈a̠]", "ipa")

	def test_sokda_ph(self):
		self.run_test("속다", "{{ko-IPA}}", "속따", "ph")
	def test_sokda_rr(self):
		self.run_test("속다", "{{ko-IPA}}", "sokda", "rr")
	def test_sokda_rrr(self):
		self.run_test("속다", "{{ko-IPA}}", "sogda", "rrr")
	def test_sokda_mr(self):
		self.run_test("속다", "{{ko-IPA}}", "sokta", "mr")
	def test_sokda_yr(self):
		self.run_test("속다", "{{ko-IPA}}", "sokta", "yr")
	def test_sokda_ipa(self):
		self.run_test("속다", "{{ko-IPA}}", "[sʰo̞k̚t͈a̠]", "ipa")

	def test_daedanhi_ph(self):
		self.run_test("대단히", "{{ko-IPA|l=y}}", "대(ː)단히/데(ː)단히", "ph")
	def test_daedanhi_rr(self):
		self.run_test("대단히", "{{ko-IPA|l=y}}", "daedanhi", "rr")
	def test_daedanhi_rrr(self):
		self.run_test("대단히", "{{ko-IPA|l=y}}", "daedanhi", "rrr")
	def test_daedanhi_mr(self):
		self.run_test("대단히", "{{ko-IPA|l=y}}", "taedanhi", "mr")
	def test_daedanhi_yr(self):
		self.run_test("대단히", "{{ko-IPA|l=y}}", "tāytan.hi", "yr")
	def test_daedanhi_ipa(self):
		self.run_test("대단히", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)da̠nʝi] ~ [ˈte̞(ː)da̠nʝi]", "ipa")

	def test_kkeom_ph(self):
		self.run_test("껌", "{{ko-IPA}}", "껌", "ph")
	def test_kkeom_rr(self):
		self.run_test("껌", "{{ko-IPA}}", "kkeom", "rr")
	def test_kkeom_rrr(self):
		self.run_test("껌", "{{ko-IPA}}", "kkeom", "rrr")
	def test_kkeom_mr(self):
		self.run_test("껌", "{{ko-IPA}}", "kkŏm", "mr")
	def test_kkeom_yr(self):
		self.run_test("껌", "{{ko-IPA}}", "kkem", "yr")
	def test_kkeom_ipa(self):
		self.run_test("껌", "{{ko-IPA}}", "[k͈ʌ̹m]", "ipa")

	def test_geop_ph(self):
		self.run_test("겁", "{{ko-IPA}}", "겁", "ph")
	def test_geop_rr(self):
		self.run_test("겁", "{{ko-IPA}}", "geop", "rr")
	def test_geop_rrr(self):
		self.run_test("겁", "{{ko-IPA}}", "geob", "rrr")
	def test_geop_mr(self):
		self.run_test("겁", "{{ko-IPA}}", "kŏp", "mr")
	def test_geop_yr(self):
		self.run_test("겁", "{{ko-IPA}}", "kep", "yr")
	def test_geop_ipa(self):
		self.run_test("겁", "{{ko-IPA}}", "[kʌ̹p̚]", "ipa")

	def test_keuda_ph(self):
		self.run_test("크다", "{{ko-IPA|a=y}}", "크다", "ph")
	def test_keuda_rr(self):
		self.run_test("크다", "{{ko-IPA|a=y}}", "keuda", "rr")
	def test_keuda_rrr(self):
		self.run_test("크다", "{{ko-IPA|a=y}}", "keuda", "rrr")
	def test_keuda_mr(self):
		self.run_test("크다", "{{ko-IPA|a=y}}", "k'ŭda", "mr")
	def test_keuda_yr(self):
		self.run_test("크다", "{{ko-IPA|a=y}}", "khuta", "yr")
	def test_keuda_ipa(self):
		self.run_test("크다", "{{ko-IPA|a=y}}", "[kxɯda̠]", "ipa")

	def test_samchon_ph(self):
		self.run_test("삼촌", "{{ko-IPA}}", "삼촌", "ph")
	def test_samchon_rr(self):
		self.run_test("삼촌", "{{ko-IPA}}", "samchon", "rr")
	def test_samchon_rrr(self):
		self.run_test("삼촌", "{{ko-IPA}}", "samchon", "rrr")
	def test_samchon_mr(self):
		self.run_test("삼촌", "{{ko-IPA}}", "samch'on", "mr")
	def test_samchon_yr(self):
		self.run_test("삼촌", "{{ko-IPA}}", "samchon", "yr")
	def test_samchon_ipa(self):
		self.run_test("삼촌", "{{ko-IPA}}", "[sʰa̠mt͡ɕʰo̞n]", "ipa")

	def test_bojogae_ph(self):
		self.run_test("보조개", "{{ko-IPA}}", "보조개/보조게", "ph")
	def test_bojogae_rr(self):
		self.run_test("보조개", "{{ko-IPA}}", "bojogae", "rr")
	def test_bojogae_rrr(self):
		self.run_test("보조개", "{{ko-IPA}}", "bojogae", "rrr")
	def test_bojogae_mr(self):
		self.run_test("보조개", "{{ko-IPA}}", "pojogae", "mr")
	def test_bojogae_yr(self):
		self.run_test("보조개", "{{ko-IPA}}", "pocokay", "yr")
	def test_bojogae_ipa(self):
		self.run_test("보조개", "{{ko-IPA}}", "[po̞d͡ʑo̞ɡɛ] ~ [po̞d͡ʑo̞ɡe̞]", "ipa")

	def test_mae_ph(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "매(ː)/메(ː)", "ph")
	def test_mae_rr(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "mae", "rr")
	def test_mae_rrr(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "mae", "rrr")
	def test_mae_mr(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "mae", "mr")
	def test_mae_yr(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "māy", "yr")
	def test_mae_ipa(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "[mɛ(ː)] ~ [me̞(ː)]", "ipa")
	def test_mae_ph_1(self):
		self.run_test("매", "{{ko-IPA}}", "매/메", "ph")
	def test_mae_rr_1(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "rr")
	def test_mae_rrr_1(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "rrr")
	def test_mae_mr_1(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "mr")
	def test_mae_yr_1(self):
		self.run_test("매", "{{ko-IPA}}", "may", "yr")
	def test_mae_ipa_1(self):
		self.run_test("매", "{{ko-IPA}}", "[mɛ] ~ [me̞]", "ipa")
	def test_mae_ph_2(self):
		self.run_test("매", "{{ko-IPA}}", "매/메", "ph")
	def test_mae_rr_2(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "rr")
	def test_mae_rrr_2(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "rrr")
	def test_mae_mr_2(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "mr")
	def test_mae_yr_2(self):
		self.run_test("매", "{{ko-IPA}}", "may", "yr")
	def test_mae_ipa_2(self):
		self.run_test("매", "{{ko-IPA}}", "[mɛ] ~ [me̞]", "ipa")
	def test_mae_ph_3(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "매(ː)/메(ː)", "ph")
	def test_mae_rr_3(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "mae", "rr")
	def test_mae_rrr_3(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "mae", "rrr")
	def test_mae_mr_3(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "mae", "mr")
	def test_mae_yr_3(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "māy", "yr")
	def test_mae_ipa_3(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "[mɛ(ː)] ~ [me̞(ː)]", "ipa")
	def test_mae_ph_4(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "매(ː)/메(ː)", "ph")
	def test_mae_rr_4(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "mae", "rr")
	def test_mae_rrr_4(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "mae", "rrr")
	def test_mae_mr_4(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "mae", "mr")
	def test_mae_yr_4(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "māy", "yr")
	def test_mae_ipa_4(self):
		self.run_test("매", "{{ko-IPA|l=y}}", "[mɛ(ː)] ~ [me̞(ː)]", "ipa")
	def test_mae_ph_5(self):
		self.run_test("매", "{{ko-IPA}}", "매/메", "ph")
	def test_mae_rr_5(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "rr")
	def test_mae_rrr_5(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "rrr")
	def test_mae_mr_5(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "mr")
	def test_mae_yr_5(self):
		self.run_test("매", "{{ko-IPA}}", "may", "yr")
	def test_mae_ipa_5(self):
		self.run_test("매", "{{ko-IPA}}", "[mɛ] ~ [me̞]", "ipa")
	def test_mae_ph_6(self):
		self.run_test("매", "{{ko-IPA}}", "매/메", "ph")
	def test_mae_rr_6(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "rr")
	def test_mae_rrr_6(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "rrr")
	def test_mae_mr_6(self):
		self.run_test("매", "{{ko-IPA}}", "mae", "mr")
	def test_mae_yr_6(self):
		self.run_test("매", "{{ko-IPA}}", "may", "yr")
	def test_mae_ipa_6(self):
		self.run_test("매", "{{ko-IPA}}", "[mɛ] ~ [me̞]", "ipa")

	def test_baneul_ph(self):
		self.run_test("바늘", "{{ko-IPA}}", "바늘", "ph")
	def test_baneul_rr(self):
		self.run_test("바늘", "{{ko-IPA}}", "baneul", "rr")
	def test_baneul_rrr(self):
		self.run_test("바늘", "{{ko-IPA}}", "baneul", "rrr")
	def test_baneul_mr(self):
		self.run_test("바늘", "{{ko-IPA}}", "panŭl", "mr")
	def test_baneul_yr(self):
		self.run_test("바늘", "{{ko-IPA}}", "panul", "yr")
	def test_baneul_ipa(self):
		self.run_test("바늘", "{{ko-IPA}}", "[pa̠nɯɭ]", "ipa")

	def test_baguni_ph(self):
		self.run_test("바구니", "{{ko-IPA}}", "바구니", "ph")
	def test_baguni_rr(self):
		self.run_test("바구니", "{{ko-IPA}}", "baguni", "rr")
	def test_baguni_rrr(self):
		self.run_test("바구니", "{{ko-IPA}}", "baguni", "rrr")
	def test_baguni_mr(self):
		self.run_test("바구니", "{{ko-IPA}}", "paguni", "mr")
	def test_baguni_yr(self):
		self.run_test("바구니", "{{ko-IPA}}", "pakwuni", "yr")
	def test_baguni_ipa(self):
		self.run_test("바구니", "{{ko-IPA}}", "[pa̠ɡuni]", "ipa")

	def test_bada_ph(self):
		self.run_test("바다", "{{ko-IPA}}", "바다", "ph")
	def test_bada_rr(self):
		self.run_test("바다", "{{ko-IPA}}", "bada", "rr")
	def test_bada_rrr(self):
		self.run_test("바다", "{{ko-IPA}}", "bada", "rrr")
	def test_bada_mr(self):
		self.run_test("바다", "{{ko-IPA}}", "pada", "mr")
	def test_bada_yr(self):
		self.run_test("바다", "{{ko-IPA}}", "pata", "yr")
	def test_bada_ipa(self):
		self.run_test("바다", "{{ko-IPA}}", "[pa̠da̠]", "ipa")

	def test_woryoil_ph(self):
		self.run_test("월요일", "{{ko-IPA}}", "워료일", "ph")
	def test_woryoil_rr(self):
		self.run_test("월요일", "{{ko-IPA}}", "woryoil", "rr")
	def test_woryoil_rrr(self):
		self.run_test("월요일", "{{ko-IPA}}", "wol'yoil", "rrr")
	def test_woryoil_mr(self):
		self.run_test("월요일", "{{ko-IPA}}", "wŏryoil", "mr")
	def test_woryoil_yr(self):
		self.run_test("월요일", "{{ko-IPA}}", "wel.yoil", "yr")
	def test_woryoil_ipa(self):
		self.run_test("월요일", "{{ko-IPA}}", "[wʌ̹ɾjoiɭ]", "ipa")

	def test_suyoil_ph(self):
		self.run_test("수요일", "{{ko-IPA}}", "수요일", "ph")
	def test_suyoil_rr(self):
		self.run_test("수요일", "{{ko-IPA}}", "suyoil", "rr")
	def test_suyoil_rrr(self):
		self.run_test("수요일", "{{ko-IPA}}", "suyoil", "rrr")
	def test_suyoil_mr(self):
		self.run_test("수요일", "{{ko-IPA}}", "suyoil", "mr")
	def test_suyoil_yr(self):
		self.run_test("수요일", "{{ko-IPA}}", "swu.yoil", "yr")
	def test_suyoil_ipa(self):
		self.run_test("수요일", "{{ko-IPA}}", "[sʰujoiɭ]", "ipa")

	def test_toyoil_ph(self):
		self.run_test("토요일", "{{ko-IPA}}", "토요일", "ph")
	def test_toyoil_rr(self):
		self.run_test("토요일", "{{ko-IPA}}", "toyoil", "rr")
	def test_toyoil_rrr(self):
		self.run_test("토요일", "{{ko-IPA}}", "toyoil", "rrr")
	def test_toyoil_mr(self):
		self.run_test("토요일", "{{ko-IPA}}", "t'oyoil", "mr")
	def test_toyoil_yr(self):
		self.run_test("토요일", "{{ko-IPA}}", "tho.yoil", "yr")
	def test_toyoil_ipa(self):
		self.run_test("토요일", "{{ko-IPA}}", "[tʰo̞joiɭ]", "ipa")

	def test_iryoil_ph(self):
		self.run_test("일요일", "{{ko-IPA}}", "이료일", "ph")
	def test_iryoil_rr(self):
		self.run_test("일요일", "{{ko-IPA}}", "iryoil", "rr")
	def test_iryoil_rrr(self):
		self.run_test("일요일", "{{ko-IPA}}", "il'yoil", "rrr")
	def test_iryoil_mr(self):
		self.run_test("일요일", "{{ko-IPA}}", "iryoil", "mr")
	def test_iryoil_yr(self):
		self.run_test("일요일", "{{ko-IPA}}", "il.yoil", "yr")
	def test_iryoil_ipa(self):
		self.run_test("일요일", "{{ko-IPA}}", "[iɾjoiɭ]", "ipa")

	def test_mogyoil_ph(self):
		self.run_test("목요일", "{{ko-IPA}}", "모교일", "ph")
	def test_mogyoil_rr(self):
		self.run_test("목요일", "{{ko-IPA}}", "mogyoil", "rr")
	def test_mogyoil_rrr(self):
		self.run_test("목요일", "{{ko-IPA}}", "mog'yoil", "rrr")
	def test_mogyoil_mr(self):
		self.run_test("목요일", "{{ko-IPA}}", "mogyoil", "mr")
	def test_mogyoil_yr(self):
		self.run_test("목요일", "{{ko-IPA}}", "mok.yoil", "yr")
	def test_mogyoil_ipa(self):
		self.run_test("목요일", "{{ko-IPA}}", "[mo̞ɡjoiɭ]", "ipa")

	def test_gudeogi_ph(self):
		self.run_test("구더기", "{{ko-IPA}}", "구더기", "ph")
	def test_gudeogi_rr(self):
		self.run_test("구더기", "{{ko-IPA}}", "gudeogi", "rr")
	def test_gudeogi_rrr(self):
		self.run_test("구더기", "{{ko-IPA}}", "gudeogi", "rrr")
	def test_gudeogi_mr(self):
		self.run_test("구더기", "{{ko-IPA}}", "kudŏgi", "mr")
	def test_gudeogi_yr(self):
		self.run_test("구더기", "{{ko-IPA}}", "kwuteki", "yr")
	def test_gudeogi_ipa(self):
		self.run_test("구더기", "{{ko-IPA}}", "[kudʌ̹ɡi]", "ipa")

	def test_yeogwon_ph(self):
		self.run_test("여권", "{{ko-IPA|com=1}}", "여꿘", "ph")
	def test_yeogwon_rr(self):
		self.run_test("여권", "{{ko-IPA|com=1}}", "yeogwon", "rr")
	def test_yeogwon_rrr(self):
		self.run_test("여권", "{{ko-IPA|com=1}}", "yeogwon", "rrr")
	def test_yeogwon_mr(self):
		self.run_test("여권", "{{ko-IPA|com=1}}", "yŏkwŏn", "mr")
	def test_yeogwon_yr(self):
		self.run_test("여권", "{{ko-IPA|com=1}}", "yeqkwen", "yr")
	def test_yeogwon_ipa(self):
		self.run_test("여권", "{{ko-IPA|com=1}}", "[jʌ̹k͈wʌ̹n]", "ipa")
	def test_yeogwon_ph_1(self):
		self.run_test("여권", "{{ko-IPA|com=1|l=y}}", "여(ː)꿘", "ph")
	def test_yeogwon_rr_1(self):
		self.run_test("여권", "{{ko-IPA|com=1|l=y}}", "yeogwon", "rr")
	def test_yeogwon_rrr_1(self):
		self.run_test("여권", "{{ko-IPA|com=1|l=y}}", "yeogwon", "rrr")
	def test_yeogwon_mr_1(self):
		self.run_test("여권", "{{ko-IPA|com=1|l=y}}", "yŏkwŏn", "mr")
	def test_yeogwon_yr_1(self):
		self.run_test("여권", "{{ko-IPA|com=1|l=y}}", "yēqkwen", "yr")
	def test_yeogwon_ipa_1(self):
		self.run_test("여권", "{{ko-IPA|com=1|l=y}}", "[ˈjɘ(ː)k͈wʌ̹n]", "ipa")

	def test_kokkiri_ph(self):
		self.run_test("코끼리", "{{ko-IPA}}", "코끼리", "ph")
	def test_kokkiri_rr(self):
		self.run_test("코끼리", "{{ko-IPA}}", "kokkiri", "rr")
	def test_kokkiri_rrr(self):
		self.run_test("코끼리", "{{ko-IPA}}", "ko'kkili", "rrr")
	def test_kokkiri_mr(self):
		self.run_test("코끼리", "{{ko-IPA}}", "k'okkiri", "mr")
	def test_kokkiri_yr(self):
		self.run_test("코끼리", "{{ko-IPA}}", "kho.kkili", "yr")
	def test_kokkiri_ipa(self):
		self.run_test("코끼리", "{{ko-IPA}}", "[kʰo̞k͈iɾi]", "ipa")

	def test_Bureo_ph(self):
		self.run_test("불어", "{{ko-IPA|cap=y}}", "부러", "ph")
	def test_Bureo_rr(self):
		self.run_test("불어", "{{ko-IPA|cap=y}}", "Bureo", "rr")
	def test_Bureo_rrr(self):
		self.run_test("불어", "{{ko-IPA|cap=y}}", "Bul'eo", "rrr")
	def test_Bureo_mr(self):
		self.run_test("불어", "{{ko-IPA|cap=y}}", "Purŏ", "mr")
	def test_Bureo_yr(self):
		self.run_test("불어", "{{ko-IPA|cap=y}}", "pul.e", "yr")
	def test_Bureo_ipa(self):
		self.run_test("불어", "{{ko-IPA|cap=y}}", "[puɾʌ̹]", "ipa")

	def test_yeongeo_ph(self):
		self.run_test("영어", "{{ko-IPA}}", "영어", "ph")
	def test_yeongeo_rr(self):
		self.run_test("영어", "{{ko-IPA}}", "yeong'eo", "rr")
	def test_yeongeo_rrr(self):
		self.run_test("영어", "{{ko-IPA}}", "yeong'eo", "rrr")
	def test_yeongeo_mr(self):
		self.run_test("영어", "{{ko-IPA}}", "yŏngŏ", "mr")
	def test_yeongeo_yr(self):
		self.run_test("영어", "{{ko-IPA}}", "yenge", "yr")
	def test_yeongeo_ipa(self):
		self.run_test("영어", "{{ko-IPA}}", "[jʌ̹ŋʌ̹]", "ipa")

	def test_dogireo_ph(self):
		self.run_test("독일어", "{{ko-IPA}}", "도기러", "ph")
	def test_dogireo_rr(self):
		self.run_test("독일어", "{{ko-IPA}}", "dogireo", "rr")
	def test_dogireo_rrr(self):
		self.run_test("독일어", "{{ko-IPA}}", "dog'il'eo", "rrr")
	def test_dogireo_mr(self):
		self.run_test("독일어", "{{ko-IPA}}", "togirŏ", "mr")
	def test_dogireo_yr(self):
		self.run_test("독일어", "{{ko-IPA}}", "tok.il.e", "yr")
	def test_dogireo_ipa(self):
		self.run_test("독일어", "{{ko-IPA}}", "[to̞ɡiɾʌ̹]", "ipa")

	def test_olchaengi_ph(self):
		self.run_test("올챙이", "{{ko-IPA}}", "올챙이/올쳉이", "ph")
	def test_olchaengi_rr(self):
		self.run_test("올챙이", "{{ko-IPA}}", "olchaeng'i", "rr")
	def test_olchaengi_rrr(self):
		self.run_test("올챙이", "{{ko-IPA}}", "olchaeng'i", "rrr")
	def test_olchaengi_mr(self):
		self.run_test("올챙이", "{{ko-IPA}}", "olch'aengi", "mr")
	def test_olchaengi_yr(self):
		self.run_test("올챙이", "{{ko-IPA}}", "olchayngi", "yr")
	def test_olchaengi_ipa(self):
		self.run_test("올챙이", "{{ko-IPA}}", "[o̞ʎt͡ɕʰɛŋi] ~ [o̞ʎt͡ɕʰe̞ŋi]", "ipa")

	def test_pal_ph(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "팔", "ph")
	def test_pal_rr(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "pal", "rr")
	def test_pal_rrr(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "pal", "rrr")
	def test_pal_mr(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "p'al", "mr")
	def test_pal_yr(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "phal", "yr")
	def test_pal_ipa(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "[pʰa̠ɭ]", "ipa")
	def test_pal_ph_1(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "팔", "ph")
	def test_pal_rr_1(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "pal", "rr")
	def test_pal_rrr_1(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "pal", "rrr")
	def test_pal_mr_1(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "p'al", "mr")
	def test_pal_yr_1(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "phal", "yr")
	def test_pal_ipa_1(self):
		self.run_test("팔", "{{ko-IPA|a=y}}", "[pʰa̠ɭ]", "ipa")

	def test_moreuda_ph(self):
		self.run_test("모르다", "{{ko-IPA|l=y|a=y}}", "모(ː)르다", "ph")
	def test_moreuda_rr(self):
		self.run_test("모르다", "{{ko-IPA|l=y|a=y}}", "moreuda", "rr")
	def test_moreuda_rrr(self):
		self.run_test("모르다", "{{ko-IPA|l=y|a=y}}", "moleuda", "rrr")
	def test_moreuda_mr(self):
		self.run_test("모르다", "{{ko-IPA|l=y|a=y}}", "morŭda", "mr")
	def test_moreuda_yr(self):
		self.run_test("모르다", "{{ko-IPA|l=y|a=y}}", "mōluta", "yr")
	def test_moreuda_ipa(self):
		self.run_test("모르다", "{{ko-IPA|l=y|a=y}}", "[ˈmo̞(ː)ɾɯda̠]", "ipa")

	def test_Daehanminguk_ph(self):
		self.run_test("대한민국", "{{ko-IPA|l=y|cap=y|a=Ko-대한민국.oga}}", "대(ː)한민국/데(ː)한민국", "ph")
	def test_Daehanminguk_rr(self):
		self.run_test("대한민국", "{{ko-IPA|l=y|cap=y|a=Ko-대한민국.oga}}", "Daehanmin'guk", "rr")
	def test_Daehanminguk_rrr(self):
		self.run_test("대한민국", "{{ko-IPA|l=y|cap=y|a=Ko-대한민국.oga}}", "Daehanmingug", "rrr")
	def test_Daehanminguk_mr(self):
		self.run_test("대한민국", "{{ko-IPA|l=y|cap=y|a=Ko-대한민국.oga}}", "Taehanmin'guk", "mr")
	def test_Daehanminguk_yr(self):
		self.run_test("대한민국", "{{ko-IPA|l=y|cap=y|a=Ko-대한민국.oga}}", "tāyhanminkwuk", "yr")
	def test_Daehanminguk_ipa(self):
		self.run_test("대한민국", "{{ko-IPA|l=y|cap=y|a=Ko-대한민국.oga}}", "[ˈtɛ(ː)ɦa̠nminɡuk̚] ~ [ˈte̞(ː)ɦa̠nminɡuk̚]", "ipa")

	def test_gakkeum_ph(self):
		self.run_test("가끔", "{{ko-IPA}}", "가끔", "ph")
	def test_gakkeum_rr(self):
		self.run_test("가끔", "{{ko-IPA}}", "gakkeum", "rr")
	def test_gakkeum_rrr(self):
		self.run_test("가끔", "{{ko-IPA}}", "ga'kkeum", "rrr")
	def test_gakkeum_mr(self):
		self.run_test("가끔", "{{ko-IPA}}", "kakkŭm", "mr")
	def test_gakkeum_yr(self):
		self.run_test("가끔", "{{ko-IPA}}", "ka.kkum", "yr")
	def test_gakkeum_ipa(self):
		self.run_test("가끔", "{{ko-IPA}}", "[ka̠k͈ɯm]", "ipa")

	def test_geolda_ph(self):
		self.run_test("걸다", "{{ko-IPA|l=y}}", "걸(ː)다", "ph")
	def test_geolda_rr(self):
		self.run_test("걸다", "{{ko-IPA|l=y}}", "geolda", "rr")
	def test_geolda_rrr(self):
		self.run_test("걸다", "{{ko-IPA|l=y}}", "geolda", "rrr")
	def test_geolda_mr(self):
		self.run_test("걸다", "{{ko-IPA|l=y}}", "kŏlda", "mr")
	def test_geolda_yr(self):
		self.run_test("걸다", "{{ko-IPA|l=y}}", "kēlta", "yr")
	def test_geolda_ipa(self):
		self.run_test("걸다", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)ɭda̠]", "ipa")

	def test_geotda_ph(self):
		self.run_test("걷다", "{{ko-IPA|l=y}}", "걷(ː)따", "ph")
	def test_geotda_rr(self):
		self.run_test("걷다", "{{ko-IPA|l=y}}", "geotda", "rr")
	def test_geotda_rrr(self):
		self.run_test("걷다", "{{ko-IPA|l=y}}", "geodda", "rrr")
	def test_geotda_mr(self):
		self.run_test("걷다", "{{ko-IPA|l=y}}", "kŏtta", "mr")
	def test_geotda_yr(self):
		self.run_test("걷다", "{{ko-IPA|l=y}}", "kēt.ta", "yr")
	def test_geotda_ipa(self):
		self.run_test("걷다", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)t̚t͈a̠]", "ipa")
	def test_geotda_ph_1(self):
		self.run_test("걷다", "{{ko-IPA}}", "걷따", "ph")
	def test_geotda_rr_1(self):
		self.run_test("걷다", "{{ko-IPA}}", "geotda", "rr")
	def test_geotda_rrr_1(self):
		self.run_test("걷다", "{{ko-IPA}}", "geodda", "rrr")
	def test_geotda_mr_1(self):
		self.run_test("걷다", "{{ko-IPA}}", "kŏtta", "mr")
	def test_geotda_yr_1(self):
		self.run_test("걷다", "{{ko-IPA}}", "ket.ta", "yr")
	def test_geotda_ipa_1(self):
		self.run_test("걷다", "{{ko-IPA}}", "[kʌ̹t̚t͈a̠]", "ipa")
	def test_geotda_ph_2(self):
		self.run_test("걷다", "{{ko-IPA}}", "걷따", "ph")
	def test_geotda_rr_2(self):
		self.run_test("걷다", "{{ko-IPA}}", "geotda", "rr")
	def test_geotda_rrr_2(self):
		self.run_test("걷다", "{{ko-IPA}}", "geodda", "rrr")
	def test_geotda_mr_2(self):
		self.run_test("걷다", "{{ko-IPA}}", "kŏtta", "mr")
	def test_geotda_yr_2(self):
		self.run_test("걷다", "{{ko-IPA}}", "ket.ta", "yr")
	def test_geotda_ipa_2(self):
		self.run_test("걷다", "{{ko-IPA}}", "[kʌ̹t̚t͈a̠]", "ipa")

	def test_georeo_ph(self):
		self.run_test("걸어", "{{ko-IPA}}", "거러", "ph")
	def test_georeo_rr(self):
		self.run_test("걸어", "{{ko-IPA}}", "georeo", "rr")
	def test_georeo_rrr(self):
		self.run_test("걸어", "{{ko-IPA}}", "geol'eo", "rrr")
	def test_georeo_mr(self):
		self.run_test("걸어", "{{ko-IPA}}", "kŏrŏ", "mr")
	def test_georeo_yr(self):
		self.run_test("걸어", "{{ko-IPA}}", "kel.e", "yr")
	def test_georeo_ipa(self):
		self.run_test("걸어", "{{ko-IPA}}", "[kʌ̹ɾʌ̹]", "ipa")

	def test_deungnamu_ph(self):
		self.run_test("등나무", "{{ko-IPA}}", "등나무", "ph")
	def test_deungnamu_rr(self):
		self.run_test("등나무", "{{ko-IPA}}", "deungnamu", "rr")
	def test_deungnamu_rrr(self):
		self.run_test("등나무", "{{ko-IPA}}", "deungnamu", "rrr")
	def test_deungnamu_mr(self):
		self.run_test("등나무", "{{ko-IPA}}", "tŭngnamu", "mr")
	def test_deungnamu_yr(self):
		self.run_test("등나무", "{{ko-IPA}}", "tungnamu", "yr")
	def test_deungnamu_ipa(self):
		self.run_test("등나무", "{{ko-IPA}}", "[tɯŋna̠mu]", "ipa")

	def test_remon_ph(self):
		self.run_test("레몬", "{{ko-IPA}}", "레몬", "ph")
	def test_remon_rr(self):
		self.run_test("레몬", "{{ko-IPA}}", "remon", "rr")
	def test_remon_rrr(self):
		self.run_test("레몬", "{{ko-IPA}}", "lemon", "rrr")
	def test_remon_mr(self):
		self.run_test("레몬", "{{ko-IPA}}", "remon", "mr")
	def test_remon_yr(self):
		self.run_test("레몬", "{{ko-IPA}}", "leymon", "yr")
	def test_remon_ipa(self):
		self.run_test("레몬", "{{ko-IPA}}", "[ɾe̞mo̞n]", "ipa")

	def test_ori_ph(self):
		self.run_test("오리", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-오리.wav}}", "오(ː)리", "ph")
	def test_ori_rr(self):
		self.run_test("오리", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-오리.wav}}", "ori", "rr")
	def test_ori_rrr(self):
		self.run_test("오리", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-오리.wav}}", "oli", "rrr")
	def test_ori_mr(self):
		self.run_test("오리", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-오리.wav}}", "ori", "mr")
	def test_ori_yr(self):
		self.run_test("오리", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-오리.wav}}", "ōli", "yr")
	def test_ori_ipa(self):
		self.run_test("오리", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-오리.wav}}", "[ˈo̞(ː)ɾi]", "ipa")

	def test_more_ph(self):
		self.run_test("모레", "{{ko-IPA|l=y}}", "모(ː)레", "ph")
	def test_more_rr(self):
		self.run_test("모레", "{{ko-IPA|l=y}}", "more", "rr")
	def test_more_rrr(self):
		self.run_test("모레", "{{ko-IPA|l=y}}", "mole", "rrr")
	def test_more_mr(self):
		self.run_test("모레", "{{ko-IPA|l=y}}", "more", "mr")
	def test_more_yr(self):
		self.run_test("모레", "{{ko-IPA|l=y}}", "mōley", "yr")
	def test_more_ipa(self):
		self.run_test("모레", "{{ko-IPA|l=y}}", "[ˈmo̞(ː)ɾe̞]", "ipa")

	def test_geureutdoeda_ph(self):
		self.run_test("그릇되다", "{{ko-IPA}}", "그륻뛔다/그륻뙤다", "ph")
	def test_geureutdoeda_rr(self):
		self.run_test("그릇되다", "{{ko-IPA}}", "geureutdoeda", "rr")
	def test_geureutdoeda_rrr(self):
		self.run_test("그릇되다", "{{ko-IPA}}", "geuleusdoeda", "rrr")
	def test_geureutdoeda_mr(self):
		self.run_test("그릇되다", "{{ko-IPA}}", "kŭrŭttoeda", "mr")
	def test_geureutdoeda_yr(self):
		self.run_test("그릇되다", "{{ko-IPA}}", "kulustoyta", "yr")
	def test_geureutdoeda_ipa(self):
		self.run_test("그릇되다", "{{ko-IPA}}", "[kɯɾɯt̚t͈we̞da̠] ~ [kɯɾɯt̚t͈ø̞da̠]", "ipa")

	def test_buk_ph(self):
		self.run_test("북", "{{ko-IPA}}", "북", "ph")
	def test_buk_rr(self):
		self.run_test("북", "{{ko-IPA}}", "buk", "rr")
	def test_buk_rrr(self):
		self.run_test("북", "{{ko-IPA}}", "bug", "rrr")
	def test_buk_mr(self):
		self.run_test("북", "{{ko-IPA}}", "puk", "mr")
	def test_buk_yr(self):
		self.run_test("북", "{{ko-IPA}}", "puk", "yr")
	def test_buk_ipa(self):
		self.run_test("북", "{{ko-IPA}}", "[puk̚]", "ipa")

	def test_gananhada_ph(self):
		self.run_test("가난하다", "{{ko-IPA}}", "가난하다", "ph")
	def test_gananhada_rr(self):
		self.run_test("가난하다", "{{ko-IPA}}", "gananhada", "rr")
	def test_gananhada_rrr(self):
		self.run_test("가난하다", "{{ko-IPA}}", "gananhada", "rrr")
	def test_gananhada_mr(self):
		self.run_test("가난하다", "{{ko-IPA}}", "kananhada", "mr")
	def test_gananhada_yr(self):
		self.run_test("가난하다", "{{ko-IPA}}", "kanan.hata", "yr")
	def test_gananhada_ipa(self):
		self.run_test("가난하다", "{{ko-IPA}}", "[ka̠na̠nɦa̠da̠]", "ipa")

	def test_seupai_ph(self):
		self.run_test("스파이", "{{ko-IPA}}", "스파이", "ph")
	def test_seupai_rr(self):
		self.run_test("스파이", "{{ko-IPA}}", "seupai", "rr")
	def test_seupai_rrr(self):
		self.run_test("스파이", "{{ko-IPA}}", "seupai", "rrr")
	def test_seupai_mr(self):
		self.run_test("스파이", "{{ko-IPA}}", "sŭp'ai", "mr")
	def test_seupai_yr(self):
		self.run_test("스파이", "{{ko-IPA}}", "su.phai", "yr")
	def test_seupai_ipa(self):
		self.run_test("스파이", "{{ko-IPA}}", "[sʰɯpʰa̠i]", "ipa")

	def test_sukae_ph(self):
		self.run_test("수캐", "{{ko-IPA}}", "수캐/수케", "ph")
	def test_sukae_rr(self):
		self.run_test("수캐", "{{ko-IPA}}", "sukae", "rr")
	def test_sukae_rrr(self):
		self.run_test("수캐", "{{ko-IPA}}", "sukae", "rrr")
	def test_sukae_mr(self):
		self.run_test("수캐", "{{ko-IPA}}", "suk'ae", "mr")
	def test_sukae_yr(self):
		self.run_test("수캐", "{{ko-IPA}}", "swu.khay", "yr")
	def test_sukae_ipa(self):
		self.run_test("수캐", "{{ko-IPA}}", "[sʰukʰɛ] ~ [sʰukʰe̞]", "ipa")

	def test_amkae_ph(self):
		self.run_test("암캐", "{{ko-IPA}}", "암캐/암케", "ph")
	def test_amkae_rr(self):
		self.run_test("암캐", "{{ko-IPA}}", "amkae", "rr")
	def test_amkae_rrr(self):
		self.run_test("암캐", "{{ko-IPA}}", "amkae", "rrr")
	def test_amkae_mr(self):
		self.run_test("암캐", "{{ko-IPA}}", "amk'ae", "mr")
	def test_amkae_yr(self):
		self.run_test("암캐", "{{ko-IPA}}", "amkhay", "yr")
	def test_amkae_ipa(self):
		self.run_test("암캐", "{{ko-IPA}}", "[a̠mkʰɛ] ~ [a̠mkʰe̞]", "ipa")

	def test_geuraem_ph(self):
		self.run_test("그램", "{{ko-IPA}}", "그램/그렘", "ph")
	def test_geuraem_rr(self):
		self.run_test("그램", "{{ko-IPA}}", "geuraem", "rr")
	def test_geuraem_rrr(self):
		self.run_test("그램", "{{ko-IPA}}", "geulaem", "rrr")
	def test_geuraem_mr(self):
		self.run_test("그램", "{{ko-IPA}}", "kŭraem", "mr")
	def test_geuraem_yr(self):
		self.run_test("그램", "{{ko-IPA}}", "kulaym", "yr")
	def test_geuraem_ipa(self):
		self.run_test("그램", "{{ko-IPA}}", "[kɯɾɛm] ~ [kɯɾe̞m]", "ipa")


	def test_killogeuraem_ph(self):
		self.run_test("킬로그램", "{{ko-IPA}}", "킬로그램/킬로그렘", "ph")
	def test_killogeuraem_rr(self):
		self.run_test("킬로그램", "{{ko-IPA}}", "killogeuraem", "rr")
	def test_killogeuraem_rrr(self):
		self.run_test("킬로그램", "{{ko-IPA}}", "killogeulaem", "rrr")
	def test_killogeuraem_mr(self):
		self.run_test("킬로그램", "{{ko-IPA}}", "k'illogŭraem", "mr")
	def test_killogeuraem_yr(self):
		self.run_test("킬로그램", "{{ko-IPA}}", "khillokulaym", "yr")
	def test_killogeuraem_ipa(self):
		self.run_test("킬로그램", "{{ko-IPA}}", "[cçiɭɭo̞ɡɯɾɛm] ~ [cçiɭɭo̞ɡɯɾe̞m]", "ipa")

	def test_killo_ph(self):
		self.run_test("킬로", "{{ko-ipa}}", "킬로", "ph")
	def test_killo_rr(self):
		self.run_test("킬로", "{{ko-ipa}}", "killo", "rr")
	def test_killo_rrr(self):
		self.run_test("킬로", "{{ko-ipa}}", "killo", "rrr")
	def test_killo_mr(self):
		self.run_test("킬로", "{{ko-ipa}}", "k'illo", "mr")
	def test_killo_yr(self):
		self.run_test("킬로", "{{ko-ipa}}", "khillo", "yr")
	def test_killo_ipa(self):
		self.run_test("킬로", "{{ko-ipa}}", "[cçiɭɭo̞]", "ipa")


	def test_geojinmal_ph(self):
		self.run_test("거짓말", "{{ko-IPA|l=y}}", "거(ː)진말", "ph")
	def test_geojinmal_rr(self):
		self.run_test("거짓말", "{{ko-IPA|l=y}}", "geojinmal", "rr")
	def test_geojinmal_rrr(self):
		self.run_test("거짓말", "{{ko-IPA|l=y}}", "geojismal", "rrr")
	def test_geojinmal_mr(self):
		self.run_test("거짓말", "{{ko-IPA|l=y}}", "kŏjinmal", "mr")
	def test_geojinmal_yr(self):
		self.run_test("거짓말", "{{ko-IPA|l=y}}", "kēcismal", "yr")
	def test_geojinmal_ipa(self):
		self.run_test("거짓말", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)d͡ʑinma̠ɭ]", "ipa")

	def test_geumgyul_ph(self):
		self.run_test("금귤", "{{ko-IPA}}", "금귤", "ph")
	def test_geumgyul_rr(self):
		self.run_test("금귤", "{{ko-IPA}}", "geumgyul", "rr")
	def test_geumgyul_rrr(self):
		self.run_test("금귤", "{{ko-IPA}}", "geumgyul", "rrr")
	def test_geumgyul_mr(self):
		self.run_test("금귤", "{{ko-IPA}}", "kŭmgyul", "mr")
	def test_geumgyul_yr(self):
		self.run_test("금귤", "{{ko-IPA}}", "kumkyul", "yr")
	def test_geumgyul_ipa(self):
		self.run_test("금귤", "{{ko-IPA}}", "[kɯmɡjuɭ]", "ipa")

	def test_subak_ph(self):
		self.run_test("수박", "{{ko-IPA|l=y}}", "수(ː)박", "ph")
	def test_subak_rr(self):
		self.run_test("수박", "{{ko-IPA|l=y}}", "subak", "rr")
	def test_subak_rrr(self):
		self.run_test("수박", "{{ko-IPA|l=y}}", "subag", "rrr")
	def test_subak_mr(self):
		self.run_test("수박", "{{ko-IPA|l=y}}", "subak", "mr")
	def test_subak_yr(self):
		self.run_test("수박", "{{ko-IPA|l=y}}", "swūpak", "yr")
	def test_subak_ipa(self):
		self.run_test("수박", "{{ko-IPA|l=y}}", "[ˈsʰu(ː)ba̠k̚]", "ipa")

	def test_tomato_ph(self):
		self.run_test("토마토", "{{ko-IPA}}", "토마토", "ph")
	def test_tomato_rr(self):
		self.run_test("토마토", "{{ko-IPA}}", "tomato", "rr")
	def test_tomato_rrr(self):
		self.run_test("토마토", "{{ko-IPA}}", "tomato", "rrr")
	def test_tomato_mr(self):
		self.run_test("토마토", "{{ko-IPA}}", "t'omat'o", "mr")
	def test_tomato_yr(self):
		self.run_test("토마토", "{{ko-IPA}}", "thoma.tho", "yr")
	def test_tomato_ipa(self):
		self.run_test("토마토", "{{ko-IPA}}", "[tʰo̞ma̠tʰo̞]", "ipa")

	def test_beojji_ph(self):
		self.run_test("버찌", "{{ko-IPA}}", "버찌", "ph")
	def test_beojji_rr(self):
		self.run_test("버찌", "{{ko-IPA}}", "beojji", "rr")
	def test_beojji_rrr(self):
		self.run_test("버찌", "{{ko-IPA}}", "beo'jji", "rrr")
	def test_beojji_mr(self):
		self.run_test("버찌", "{{ko-IPA}}", "pŏtchi", "mr")
	def test_beojji_yr(self):
		self.run_test("버찌", "{{ko-IPA}}", "pe.cci", "yr")
	def test_beojji_ipa(self):
		self.run_test("버찌", "{{ko-IPA}}", "[pʌ̹t͡ɕ͈i]", "ipa")

	def test_boksunga_ph(self):
		self.run_test("복숭아", "{{ko-IPA}}", "복쑹아", "ph")
	def test_boksunga_rr(self):
		self.run_test("복숭아", "{{ko-IPA}}", "boksung'a", "rr")
	def test_boksunga_rrr(self):
		self.run_test("복숭아", "{{ko-IPA}}", "bogsung'a", "rrr")
	def test_boksunga_mr(self):
		self.run_test("복숭아", "{{ko-IPA}}", "poksunga", "mr")
	def test_boksunga_yr(self):
		self.run_test("복숭아", "{{ko-IPA}}", "pok.swunga", "yr")
	def test_boksunga_ipa(self):
		self.run_test("복숭아", "{{ko-IPA}}", "[po̞ks͈uŋa̠]", "ipa")

	def test_banana_ppanana_ph(self):
		self.run_test("바나나", "{{ko-IPA|바나나|빠나나}}", "바나나/빠나나", "ph")
	def test_banana_ppanana_rr(self):
		self.run_test("바나나", "{{ko-IPA|바나나|빠나나}}", "banana/ppanana", "rr")
	def test_banana_ppanana_rrr(self):
		self.run_test("바나나", "{{ko-IPA|바나나|빠나나}}", "banana/ppanana", "rrr")
	def test_banana_ppanana_mr(self):
		self.run_test("바나나", "{{ko-IPA|바나나|빠나나}}", "panana/ppanana", "mr")
	def test_banana_ppanana_yr(self):
		self.run_test("바나나", "{{ko-IPA|바나나|빠나나}}", "panana/ppanana", "yr")
	def test_banana_ppanana_ipa(self):
		self.run_test("바나나", "{{ko-IPA|바나나|빠나나}}", "[pa̠na̠na̠] ~ [p͈a̠na̠na̠]", "ipa")

	def test_ttalgi_ph(self):
		self.run_test("딸기", "{{ko-IPA|l=y}}", "딸(ː)기", "ph")
	def test_ttalgi_rr(self):
		self.run_test("딸기", "{{ko-IPA|l=y}}", "ttalgi", "rr")
	def test_ttalgi_rrr(self):
		self.run_test("딸기", "{{ko-IPA|l=y}}", "ttalgi", "rrr")
	def test_ttalgi_mr(self):
		self.run_test("딸기", "{{ko-IPA|l=y}}", "ttalgi", "mr")
	def test_ttalgi_yr(self):
		self.run_test("딸기", "{{ko-IPA|l=y}}", "ttāl.ki", "yr")
	def test_ttalgi_ipa(self):
		self.run_test("딸기", "{{ko-IPA|l=y}}", "[ˈt͈a̠(ː)ɭɡi]", "ipa")

	def test_nalda_ph(self):
		self.run_test("날다", "{{ko-IPA}}", "날다", "ph")
	def test_nalda_rr(self):
		self.run_test("날다", "{{ko-IPA}}", "nalda", "rr")
	def test_nalda_rrr(self):
		self.run_test("날다", "{{ko-IPA}}", "nalda", "rrr")
	def test_nalda_mr(self):
		self.run_test("날다", "{{ko-IPA}}", "nalda", "mr")
	def test_nalda_yr(self):
		self.run_test("날다", "{{ko-IPA}}", "nalta", "yr")
	def test_nalda_ipa(self):
		self.run_test("날다", "{{ko-IPA}}", "[na̠ɭda̠]", "ipa")

	def test_saegin_ph(self):
		self.run_test("색인", "{{ko-IPA}}", "새긴/세긴", "ph")
	def test_saegin_rr(self):
		self.run_test("색인", "{{ko-IPA}}", "saegin", "rr")
	def test_saegin_rrr(self):
		self.run_test("색인", "{{ko-IPA}}", "saeg'in", "rrr")
	def test_saegin_mr(self):
		self.run_test("색인", "{{ko-IPA}}", "saegin", "mr")
	def test_saegin_yr(self):
		self.run_test("색인", "{{ko-IPA}}", "sayk.in", "yr")
	def test_saegin_ipa(self):
		self.run_test("색인", "{{ko-IPA}}", "[sʰɛɡin] ~ [sʰe̞ɡin]", "ipa")

	def test_al_ph(self):
		self.run_test("알", "{{ko-IPA}}", "알", "ph")
	def test_al_rr(self):
		self.run_test("알", "{{ko-IPA}}", "al", "rr")
	def test_al_rrr(self):
		self.run_test("알", "{{ko-IPA}}", "al", "rrr")
	def test_al_mr(self):
		self.run_test("알", "{{ko-IPA}}", "al", "mr")
	def test_al_yr(self):
		self.run_test("알", "{{ko-IPA}}", "al", "yr")
	def test_al_ipa(self):
		self.run_test("알", "{{ko-IPA}}", "[a̠ɭ]", "ipa")

	def test_bom_ph(self):
		self.run_test("봄", "{{ko-IPA}}", "봄", "ph")
	def test_bom_rr(self):
		self.run_test("봄", "{{ko-IPA}}", "bom", "rr")
	def test_bom_rrr(self):
		self.run_test("봄", "{{ko-IPA}}", "bom", "rrr")
	def test_bom_mr(self):
		self.run_test("봄", "{{ko-IPA}}", "pom", "mr")
	def test_bom_yr(self):
		self.run_test("봄", "{{ko-IPA}}", "pom", "yr")
	def test_bom_ipa(self):
		self.run_test("봄", "{{ko-IPA}}", "[po̞m]", "ipa")

	def test_yeoreum_ph(self):
		self.run_test("여름", "{{ko-IPA}}", "여름", "ph")
	def test_yeoreum_rr(self):
		self.run_test("여름", "{{ko-IPA}}", "yeoreum", "rr")
	def test_yeoreum_rrr(self):
		self.run_test("여름", "{{ko-IPA}}", "yeoleum", "rrr")
	def test_yeoreum_mr(self):
		self.run_test("여름", "{{ko-IPA}}", "yŏrŭm", "mr")
	def test_yeoreum_yr(self):
		self.run_test("여름", "{{ko-IPA}}", "yelum", "yr")
	def test_yeoreum_ipa(self):
		self.run_test("여름", "{{ko-IPA}}", "[jʌ̹ɾɯm]", "ipa")

	def test_gaeul_ph(self):
		self.run_test("가을", "{{ko-IPA}}", "가을", "ph")
	def test_gaeul_rr(self):
		self.run_test("가을", "{{ko-IPA}}", "ga'eul", "rr")
	def test_gaeul_rrr(self):
		self.run_test("가을", "{{ko-IPA}}", "ga'eul", "rrr")
	def test_gaeul_mr(self):
		self.run_test("가을", "{{ko-IPA}}", "kaŭl", "mr")
	def test_gaeul_yr(self):
		self.run_test("가을", "{{ko-IPA}}", "kaul", "yr")
	def test_gaeul_ipa(self):
		self.run_test("가을", "{{ko-IPA}}", "[ka̠ɯɭ]", "ipa")

	def test_gyeoul_ph(self):
		self.run_test("겨울", "{{ko-IPA}}", "겨울", "ph")
	def test_gyeoul_rr(self):
		self.run_test("겨울", "{{ko-IPA}}", "gyeoul", "rr")
	def test_gyeoul_rrr(self):
		self.run_test("겨울", "{{ko-IPA}}", "gyeoul", "rrr")
	def test_gyeoul_mr(self):
		self.run_test("겨울", "{{ko-IPA}}", "kyŏul", "mr")
	def test_gyeoul_yr(self):
		self.run_test("겨울", "{{ko-IPA}}", "kyewul", "yr")
	def test_gyeoul_ipa(self):
		self.run_test("겨울", "{{ko-IPA}}", "[kjʌ̹uɭ]", "ipa")

	def test_kkul_ph(self):
		self.run_test("꿀", "{{ko-IPA}}", "꿀", "ph")
	def test_kkul_rr(self):
		self.run_test("꿀", "{{ko-IPA}}", "kkul", "rr")
	def test_kkul_rrr(self):
		self.run_test("꿀", "{{ko-IPA}}", "kkul", "rrr")
	def test_kkul_mr(self):
		self.run_test("꿀", "{{ko-IPA}}", "kkul", "mr")
	def test_kkul_yr(self):
		self.run_test("꿀", "{{ko-IPA}}", "kkwul", "yr")
	def test_kkul_ipa(self):
		self.run_test("꿀", "{{ko-IPA}}", "[k͈uɭ]", "ipa")

	def test_cheol_ph(self):
		self.run_test("철", "{{ko-ipa}}", "철", "ph")
	def test_cheol_rr(self):
		self.run_test("철", "{{ko-ipa}}", "cheol", "rr")
	def test_cheol_rrr(self):
		self.run_test("철", "{{ko-ipa}}", "cheol", "rrr")
	def test_cheol_mr(self):
		self.run_test("철", "{{ko-ipa}}", "ch'ŏl", "mr")
	def test_cheol_yr(self):
		self.run_test("철", "{{ko-ipa}}", "chel", "yr")
	def test_cheol_ipa(self):
		self.run_test("철", "{{ko-ipa}}", "[t͡ɕʰʌ̹ɭ]", "ipa")
	def test_cheol_ph_1(self):
		self.run_test("철", "{{ko-ipa}}", "철", "ph")
	def test_cheol_rr_1(self):
		self.run_test("철", "{{ko-ipa}}", "cheol", "rr")
	def test_cheol_rrr_1(self):
		self.run_test("철", "{{ko-ipa}}", "cheol", "rrr")
	def test_cheol_mr_1(self):
		self.run_test("철", "{{ko-ipa}}", "ch'ŏl", "mr")
	def test_cheol_yr_1(self):
		self.run_test("철", "{{ko-ipa}}", "chel", "yr")
	def test_cheol_ipa_1(self):
		self.run_test("철", "{{ko-ipa}}", "[t͡ɕʰʌ̹ɭ]", "ipa")
	def test_cheol_ph_2(self):
		self.run_test("철", "{{ko-ipa}}", "철", "ph")
	def test_cheol_rr_2(self):
		self.run_test("철", "{{ko-ipa}}", "cheol", "rr")
	def test_cheol_rrr_2(self):
		self.run_test("철", "{{ko-ipa}}", "cheol", "rrr")
	def test_cheol_mr_2(self):
		self.run_test("철", "{{ko-ipa}}", "ch'ŏl", "mr")
	def test_cheol_yr_2(self):
		self.run_test("철", "{{ko-ipa}}", "chel", "yr")
	def test_cheol_ipa_2(self):
		self.run_test("철", "{{ko-ipa}}", "[t͡ɕʰʌ̹ɭ]", "ipa")

	def test_sille_ph(self):
		self.run_test("실례", "{{ko-IPA|실레}}", "실레", "ph")
	def test_sille_rr(self):
		self.run_test("실례", "{{ko-IPA|실레}}", "sille", "rr")
	def test_sille_rrr(self):
		self.run_test("실례", "{{ko-IPA|실레}}", "sille", "rrr")
	def test_sille_mr(self):
		self.run_test("실례", "{{ko-IPA|실레}}", "sille", "mr")
	def test_sille_yr(self):
		self.run_test("실례", "{{ko-IPA|실레}}", "silley", "yr")
	def test_sille_ipa(self):
		self.run_test("실례", "{{ko-IPA|실레}}", "[ɕʰiɭɭe̞]", "ipa")

	def test_gamgi_ph(self):
		self.run_test("감기", "{{ko-IPA|l=y}}", "감(ː)기", "ph")
	def test_gamgi_rr(self):
		self.run_test("감기", "{{ko-IPA|l=y}}", "gamgi", "rr")
	def test_gamgi_rrr(self):
		self.run_test("감기", "{{ko-IPA|l=y}}", "gamgi", "rrr")
	def test_gamgi_mr(self):
		self.run_test("감기", "{{ko-IPA|l=y}}", "kamgi", "mr")
	def test_gamgi_yr(self):
		self.run_test("감기", "{{ko-IPA|l=y}}", "kāmki", "yr")
	def test_gamgi_ipa(self):
		self.run_test("감기", "{{ko-IPA|l=y}}", "[ˈka̠(ː)mɡi]", "ipa")

	def test_gwanjeoryeom_ph(self):
		self.run_test("관절염", "{{ko-IPA}}", "관저렴", "ph")
	def test_gwanjeoryeom_rr(self):
		self.run_test("관절염", "{{ko-IPA}}", "gwanjeoryeom", "rr")
	def test_gwanjeoryeom_rrr(self):
		self.run_test("관절염", "{{ko-IPA}}", "gwanjeol'yeom", "rrr")
	def test_gwanjeoryeom_mr(self):
		self.run_test("관절염", "{{ko-IPA}}", "kwanjŏryŏm", "mr")
	def test_gwanjeoryeom_yr(self):
		self.run_test("관절염", "{{ko-IPA}}", "kwan.cel.yem", "yr")
	def test_gwanjeoryeom_ipa(self):
		self.run_test("관절염", "{{ko-IPA}}", "[kwa̠ɲd͡ʑʌ̹ɾjʌ̹m]", "ipa")

	def test_gwangubyeong_ph(self):
		self.run_test("광우병", "{{ko-IPA|com=2}}", "광우뼝", "ph")
	def test_gwangubyeong_rr(self):
		self.run_test("광우병", "{{ko-IPA|com=2}}", "gwang'ubyeong", "rr")
	def test_gwangubyeong_rrr(self):
		self.run_test("광우병", "{{ko-IPA|com=2}}", "gwang'ubyeong", "rrr")
	def test_gwangubyeong_mr(self):
		self.run_test("광우병", "{{ko-IPA|com=2}}", "kwangupyŏng", "mr")
	def test_gwangubyeong_yr(self):
		self.run_test("광우병", "{{ko-IPA|com=2}}", "kwangwuqpyeng", "yr")
	def test_gwangubyeong_ipa(self):
		self.run_test("광우병", "{{ko-IPA|com=2}}", "[kwa̠ŋup͈jʌ̹ŋ]", "ipa")

	def test_gwanggyeonbyeong_ph(self):
		self.run_test("광견병", "{{ko-IPA|com=2}}", "광견뼝", "ph")
	def test_gwanggyeonbyeong_rr(self):
		self.run_test("광견병", "{{ko-IPA|com=2}}", "gwanggyeonbyeong", "rr")
	def test_gwanggyeonbyeong_rrr(self):
		self.run_test("광견병", "{{ko-IPA|com=2}}", "gwanggyeonbyeong", "rrr")
	def test_gwanggyeonbyeong_mr(self):
		self.run_test("광견병", "{{ko-IPA|com=2}}", "kwanggyŏnpyŏng", "mr")
	def test_gwanggyeonbyeong_yr(self):
		self.run_test("광견병", "{{ko-IPA|com=2}}", "kwangkyenqpyeng", "yr")
	def test_gwanggyeonbyeong_ipa(self):
		self.run_test("광견병", "{{ko-IPA|com=2}}", "[kwa̠ŋɡjʌ̹np͈jʌ̹ŋ]", "ipa")

	def test_jilbyeong_ph(self):
		self.run_test("질병", "{{ko-IPA}}", "질병", "ph")
	def test_jilbyeong_rr(self):
		self.run_test("질병", "{{ko-IPA}}", "jilbyeong", "rr")
	def test_jilbyeong_rrr(self):
		self.run_test("질병", "{{ko-IPA}}", "jilbyeong", "rrr")
	def test_jilbyeong_mr(self):
		self.run_test("질병", "{{ko-IPA}}", "chilbyŏng", "mr")
	def test_jilbyeong_yr(self):
		self.run_test("질병", "{{ko-IPA}}", "cil.pyeng", "yr")
	def test_jilbyeong_ipa(self):
		self.run_test("질병", "{{ko-IPA}}", "[t͡ɕiɭbjʌ̹ŋ]", "ipa")

	def test_am_ph(self):
		self.run_test("암", "{{ko-ipa|l=y}}", "암(ː)", "ph")
	def test_am_rr(self):
		self.run_test("암", "{{ko-ipa|l=y}}", "am", "rr")
	def test_am_rrr(self):
		self.run_test("암", "{{ko-ipa|l=y}}", "am", "rrr")
	def test_am_mr(self):
		self.run_test("암", "{{ko-ipa|l=y}}", "am", "mr")
	def test_am_yr(self):
		self.run_test("암", "{{ko-ipa|l=y}}", "ām", "yr")
	def test_am_ipa(self):
		self.run_test("암", "{{ko-ipa|l=y}}", "[a̠(ː)m]", "ipa")
	def test_am_ph_1(self):
		self.run_test("암", "{{ko-IPA}}", "암", "ph")
	def test_am_rr_1(self):
		self.run_test("암", "{{ko-IPA}}", "am", "rr")
	def test_am_rrr_1(self):
		self.run_test("암", "{{ko-IPA}}", "am", "rrr")
	def test_am_mr_1(self):
		self.run_test("암", "{{ko-IPA}}", "am", "mr")
	def test_am_yr_1(self):
		self.run_test("암", "{{ko-IPA}}", "am", "yr")
	def test_am_ipa_1(self):
		self.run_test("암", "{{ko-IPA}}", "[a̠m]", "ipa")

	def test_bolgeori_ph(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "볼꺼리", "ph")
	def test_bolgeori_rr(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "bolgeori", "rr")
	def test_bolgeori_rrr(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "bolgeoli", "rrr")
	def test_bolgeori_mr(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "polkŏri", "mr")
	def test_bolgeori_yr(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "polqkeli", "yr")
	def test_bolgeori_ipa(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "[po̞ɭk͈ʌ̹ɾi]", "ipa")
	def test_bolgeori_ph_1(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "볼꺼리", "ph")
	def test_bolgeori_rr_1(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "bolgeori", "rr")
	def test_bolgeori_rrr_1(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "bolgeoli", "rrr")
	def test_bolgeori_mr_1(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "polkŏri", "mr")
	def test_bolgeori_yr_1(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "polqkeli", "yr")
	def test_bolgeori_ipa_1(self):
		self.run_test("볼거리", "{{ko-IPA|com=1}}", "[po̞ɭk͈ʌ̹ɾi]", "ipa")

	def test_yuhaengseong_ihaseonyeom_ph(self):
		self.run_test("유행성 이하선염", "{{ko-IPA}}", "유행성 이하서념/유헹성 이하서념", "ph")
	def test_yuhaengseong_ihaseonyeom_rr(self):
		self.run_test("유행성 이하선염", "{{ko-IPA}}", "yuhaengseong ihaseonyeom", "rr")
	def test_yuhaengseong_ihaseonyeom_rrr(self):
		self.run_test("유행성 이하선염", "{{ko-IPA}}", "yuhaengseong ihaseon'yeom", "rrr")
	def test_yuhaengseong_ihaseonyeom_mr(self):
		self.run_test("유행성 이하선염", "{{ko-IPA}}", "yuhaengsŏng ihasŏnyŏm", "mr")
	def test_yuhaengseong_ihaseonyeom_yr(self):
		self.run_test("유행성 이하선염", "{{ko-IPA}}", "yuhayngseng ihasen.yem", "yr")
	def test_yuhaengseong_ihaseonyeom_ipa(self):
		self.run_test("유행성 이하선염", "{{ko-IPA}}", "[juɦɛŋsʰʌ̹ŋ iɦa̠sʰʌ̹ɲʌ̹m] ~ [juɦe̞ŋsʰʌ̹ŋ iɦa̠sʰʌ̹ɲʌ̹m]", "ipa")


	def test_sikjungdok_ph(self):
		self.run_test("식중독", "{{ko-IPA}}", "식쭝독", "ph")
	def test_sikjungdok_rr(self):
		self.run_test("식중독", "{{ko-IPA}}", "sikjungdok", "rr")
	def test_sikjungdok_rrr(self):
		self.run_test("식중독", "{{ko-IPA}}", "sigjungdog", "rrr")
	def test_sikjungdok_mr(self):
		self.run_test("식중독", "{{ko-IPA}}", "sikchungdok", "mr")
	def test_sikjungdok_yr(self):
		self.run_test("식중독", "{{ko-IPA}}", "sikcwungtok", "yr")
	def test_sikjungdok_ipa(self):
		self.run_test("식중독", "{{ko-IPA}}", "[ɕʰik̚t͡ɕ͈uŋdo̞k̚]", "ipa")

	def test_hucheonseongmyeonyeokgyeolpipjeung_ph(self):
		self.run_test("후천성면역결핍증", "{{ko-IPA}}", "후천성며녁껼핍쯩", "ph")
	def test_hucheonseongmyeonyeokgyeolpipjeung_rr(self):
		self.run_test("후천성면역결핍증", "{{ko-IPA}}", "hucheonseongmyeonyeokgyeolpipjeung", "rr")
	def test_hucheonseongmyeonyeokgyeolpipjeung_rrr(self):
		self.run_test("후천성면역결핍증", "{{ko-IPA}}", "hucheonseongmyeon'yeoggyeolpibjeung", "rrr")
	def test_hucheonseongmyeonyeokgyeolpipjeung_mr(self):
		self.run_test("후천성면역결핍증", "{{ko-IPA}}", "huch'ŏnsŏngmyŏnyŏkkyŏlp'ipchŭng", "mr")
	def test_hucheonseongmyeonyeokgyeolpipjeung_yr(self):
		self.run_test("후천성면역결핍증", "{{ko-IPA}}", "hwu.chensengmyen.yek.kyel.phipcung", "yr")
	def test_hucheonseongmyeonyeokgyeolpipjeung_ipa(self):
		self.run_test("후천성면역결핍증", "{{ko-IPA}}", "[ɸʷut͡ɕʰʌ̹nsʰʌ̹ŋmjʌ̹ɲʌ̹k̚k͈jʌ̹ɭpʰip̚t͡ɕ͈ɯŋ]", "ipa")

	def test_eijeu_ph(self):
		self.run_test("에이즈", "{{ko-IPA}}", "에이즈", "ph")
	def test_eijeu_rr(self):
		self.run_test("에이즈", "{{ko-IPA}}", "eijeu", "rr")
	def test_eijeu_rrr(self):
		self.run_test("에이즈", "{{ko-IPA}}", "eijeu", "rrr")
	def test_eijeu_mr(self):
		self.run_test("에이즈", "{{ko-IPA}}", "eijŭ", "mr")
	def test_eijeu_yr(self):
		self.run_test("에이즈", "{{ko-IPA}}", "eyicu", "yr")
	def test_eijeu_ipa(self):
		self.run_test("에이즈", "{{ko-IPA}}", "[e̞id͡ʑɯ]", "ipa")

	def test_sigeumchi_ph(self):
		self.run_test("시금치", "{{ko-IPA}}", "시금치", "ph")
	def test_sigeumchi_rr(self):
		self.run_test("시금치", "{{ko-IPA}}", "sigeumchi", "rr")
	def test_sigeumchi_rrr(self):
		self.run_test("시금치", "{{ko-IPA}}", "sigeumchi", "rrr")
	def test_sigeumchi_mr(self):
		self.run_test("시금치", "{{ko-IPA}}", "sigŭmch'i", "mr")
	def test_sigeumchi_yr(self):
		self.run_test("시금치", "{{ko-IPA}}", "sikumchi", "yr")
	def test_sigeumchi_ipa(self):
		self.run_test("시금치", "{{ko-IPA}}", "[ɕʰiɡɯmt͡ɕʰi]", "ipa")

	def test_gamja_ph(self):
		self.run_test("감자", "{{ko-IPA}}", "감자", "ph")
	def test_gamja_rr(self):
		self.run_test("감자", "{{ko-IPA}}", "gamja", "rr")
	def test_gamja_rrr(self):
		self.run_test("감자", "{{ko-IPA}}", "gamja", "rrr")
	def test_gamja_mr(self):
		self.run_test("감자", "{{ko-IPA}}", "kamja", "mr")
	def test_gamja_yr(self):
		self.run_test("감자", "{{ko-IPA}}", "kamca", "yr")
	def test_gamja_ipa(self):
		self.run_test("감자", "{{ko-IPA}}", "[ka̠md͡ʑa̠]", "ipa")
	def test_gamja_ph_1(self):
		self.run_test("감자", "{{ko-IPA|com=1}}", "감짜", "ph")
	def test_gamja_rr_1(self):
		self.run_test("감자", "{{ko-IPA|com=1}}", "gamja", "rr")
	def test_gamja_rrr_1(self):
		self.run_test("감자", "{{ko-IPA|com=1}}", "gamja", "rrr")
	def test_gamja_mr_1(self):
		self.run_test("감자", "{{ko-IPA|com=1}}", "kamcha", "mr")
	def test_gamja_yr_1(self):
		self.run_test("감자", "{{ko-IPA|com=1}}", "kamqca", "yr")
	def test_gamja_ipa_1(self):
		self.run_test("감자", "{{ko-IPA|com=1}}", "[ka̠mt͡ɕ͈a̠]", "ipa")

	def test_danggeun_ph(self):
		self.run_test("당근", "{{ko-IPA}}", "당근", "ph")
	def test_danggeun_rr(self):
		self.run_test("당근", "{{ko-IPA}}", "danggeun", "rr")
	def test_danggeun_rrr(self):
		self.run_test("당근", "{{ko-IPA}}", "danggeun", "rrr")
	def test_danggeun_mr(self):
		self.run_test("당근", "{{ko-IPA}}", "tanggŭn", "mr")
	def test_danggeun_yr(self):
		self.run_test("당근", "{{ko-IPA}}", "tangkun", "yr")
	def test_danggeun_ipa(self):
		self.run_test("당근", "{{ko-IPA}}", "[ta̠ŋɡɯn]", "ipa")

	def test_oi_ph(self):
		self.run_test("오이", "{{ko-IPA}}", "오이", "ph")
	def test_oi_rr(self):
		self.run_test("오이", "{{ko-IPA}}", "oi", "rr")
	def test_oi_rrr(self):
		self.run_test("오이", "{{ko-IPA}}", "oi", "rrr")
	def test_oi_mr(self):
		self.run_test("오이", "{{ko-IPA}}", "oi", "mr")
	def test_oi_yr(self):
		self.run_test("오이", "{{ko-IPA}}", "oi", "yr")
	def test_oi_ipa(self):
		self.run_test("오이", "{{ko-IPA}}", "[o̞i]", "ipa")

	def test_kong_ph(self):
		self.run_test("콩", "{{ko-IPA}}", "콩", "ph")
	def test_kong_rr(self):
		self.run_test("콩", "{{ko-IPA}}", "kong", "rr")
	def test_kong_rrr(self):
		self.run_test("콩", "{{ko-IPA}}", "kong", "rrr")
	def test_kong_mr(self):
		self.run_test("콩", "{{ko-IPA}}", "k'ong", "mr")
	def test_kong_yr(self):
		self.run_test("콩", "{{ko-IPA}}", "khong", "yr")
	def test_kong_ipa(self):
		self.run_test("콩", "{{ko-IPA}}", "[kʰo̞ŋ]", "ipa")

	def test_yangpa_ph(self):
		self.run_test("양파", "{{ko-IPA}}", "양파", "ph")
	def test_yangpa_rr(self):
		self.run_test("양파", "{{ko-IPA}}", "yangpa", "rr")
	def test_yangpa_rrr(self):
		self.run_test("양파", "{{ko-IPA}}", "yangpa", "rrr")
	def test_yangpa_mr(self):
		self.run_test("양파", "{{ko-IPA}}", "yangp'a", "mr")
	def test_yangpa_yr(self):
		self.run_test("양파", "{{ko-IPA}}", "yangpha", "yr")
	def test_yangpa_ipa(self):
		self.run_test("양파", "{{ko-IPA}}", "[ja̠ŋpʰa̠]", "ipa")

	def test_selleori_ph(self):
		self.run_test("셀러리", "{{ko-IPA}}", "셀러리", "ph")
	def test_selleori_rr(self):
		self.run_test("셀러리", "{{ko-IPA}}", "selleori", "rr")
	def test_selleori_rrr(self):
		self.run_test("셀러리", "{{ko-IPA}}", "selleoli", "rrr")
	def test_selleori_mr(self):
		self.run_test("셀러리", "{{ko-IPA}}", "sellŏri", "mr")
	def test_selleori_yr(self):
		self.run_test("셀러리", "{{ko-IPA}}", "seylleli", "yr")
	def test_selleori_ipa(self):
		self.run_test("셀러리", "{{ko-IPA}}", "[sʰe̞ɭɭʌ̹ɾi]", "ipa")

	def test_mulgogi_ph(self):
		self.run_test("물고기", "{{ko-IPA|com=1}}", "물꼬기", "ph")
	def test_mulgogi_rr(self):
		self.run_test("물고기", "{{ko-IPA|com=1}}", "mulgogi", "rr")
	def test_mulgogi_rrr(self):
		self.run_test("물고기", "{{ko-IPA|com=1}}", "mulgogi", "rrr")
	def test_mulgogi_mr(self):
		self.run_test("물고기", "{{ko-IPA|com=1}}", "mulkogi", "mr")
	def test_mulgogi_yr(self):
		self.run_test("물고기", "{{ko-IPA|com=1}}", "mulqkoki", "yr")
	def test_mulgogi_ipa(self):
		self.run_test("물고기", "{{ko-IPA|com=1}}", "[muɭk͈o̞ɡi]", "ipa")

	def test_jebi_ph(self):
		self.run_test("제비", "{{ko-IPA|l=y}}", "제(ː)비", "ph")
	def test_jebi_rr(self):
		self.run_test("제비", "{{ko-IPA|l=y}}", "jebi", "rr")
	def test_jebi_rrr(self):
		self.run_test("제비", "{{ko-IPA|l=y}}", "jebi", "rrr")
	def test_jebi_mr(self):
		self.run_test("제비", "{{ko-IPA|l=y}}", "chebi", "mr")
	def test_jebi_yr(self):
		self.run_test("제비", "{{ko-IPA|l=y}}", "cēypi", "yr")
	def test_jebi_ipa(self):
		self.run_test("제비", "{{ko-IPA|l=y}}", "[ˈt͡ɕe̞(ː)bi]", "ipa")

	def test_kkwong_ph(self):
		self.run_test("꿩", "{{ko-IPA}}", "꿩", "ph")
	def test_kkwong_rr(self):
		self.run_test("꿩", "{{ko-IPA}}", "kkwong", "rr")
	def test_kkwong_rrr(self):
		self.run_test("꿩", "{{ko-IPA}}", "kkwong", "rrr")
	def test_kkwong_mr(self):
		self.run_test("꿩", "{{ko-IPA}}", "kkwŏng", "mr")
	def test_kkwong_yr(self):
		self.run_test("꿩", "{{ko-IPA}}", "kkweng", "yr")
	def test_kkwong_ipa(self):
		self.run_test("꿩", "{{ko-IPA}}", "[k͈wʌ̹ŋ]", "ipa")
	def test_kkwong_ph_1(self):
		self.run_test("꿩", "{{ko-IPA}}", "꿩", "ph")
	def test_kkwong_rr_1(self):
		self.run_test("꿩", "{{ko-IPA}}", "kkwong", "rr")
	def test_kkwong_rrr_1(self):
		self.run_test("꿩", "{{ko-IPA}}", "kkwong", "rrr")
	def test_kkwong_mr_1(self):
		self.run_test("꿩", "{{ko-IPA}}", "kkwŏng", "mr")
	def test_kkwong_yr_1(self):
		self.run_test("꿩", "{{ko-IPA}}", "kkweng", "yr")
	def test_kkwong_ipa_1(self):
		self.run_test("꿩", "{{ko-IPA}}", "[k͈wʌ̹ŋ]", "ipa")

	def test_doksuri_ph(self):
		self.run_test("독수리", "{{ko-IPA}}", "독쑤리", "ph")
	def test_doksuri_rr(self):
		self.run_test("독수리", "{{ko-IPA}}", "doksuri", "rr")
	def test_doksuri_rrr(self):
		self.run_test("독수리", "{{ko-IPA}}", "dogsuli", "rrr")
	def test_doksuri_mr(self):
		self.run_test("독수리", "{{ko-IPA}}", "toksuri", "mr")
	def test_doksuri_yr(self):
		self.run_test("독수리", "{{ko-IPA}}", "tok.swuli", "yr")
	def test_doksuri_ipa(self):
		self.run_test("독수리", "{{ko-IPA}}", "[to̞ks͈uɾi]", "ipa")

	def test_bidulgi_ph(self):
		self.run_test("비둘기", "{{ko-IPA}}", "비둘기", "ph")
	def test_bidulgi_rr(self):
		self.run_test("비둘기", "{{ko-IPA}}", "bidulgi", "rr")
	def test_bidulgi_rrr(self):
		self.run_test("비둘기", "{{ko-IPA}}", "bidulgi", "rrr")
	def test_bidulgi_mr(self):
		self.run_test("비둘기", "{{ko-IPA}}", "pidulgi", "mr")
	def test_bidulgi_yr(self):
		self.run_test("비둘기", "{{ko-IPA}}", "pitwul.ki", "yr")
	def test_bidulgi_ipa(self):
		self.run_test("비둘기", "{{ko-IPA}}", "[piduɭɡi]", "ipa")

	def test_baekjo_ph(self):
		self.run_test("백조", "{{ko-IPA}}", "백쪼/벡쪼", "ph")
	def test_baekjo_rr(self):
		self.run_test("백조", "{{ko-IPA}}", "baekjo", "rr")
	def test_baekjo_rrr(self):
		self.run_test("백조", "{{ko-IPA}}", "baegjo", "rrr")
	def test_baekjo_mr(self):
		self.run_test("백조", "{{ko-IPA}}", "paekcho", "mr")
	def test_baekjo_yr(self):
		self.run_test("백조", "{{ko-IPA}}", "paykco", "yr")
	def test_baekjo_ipa(self):
		self.run_test("백조", "{{ko-IPA}}", "[pɛk̚t͡ɕ͈o̞] ~ [pe̞k̚t͡ɕ͈o̞]", "ipa")

	def test_goni_ph(self):
		self.run_test("고니", "{{ko-IPA}}", "고니", "ph")
	def test_goni_rr(self):
		self.run_test("고니", "{{ko-IPA}}", "goni", "rr")
	def test_goni_rrr(self):
		self.run_test("고니", "{{ko-IPA}}", "goni", "rrr")
	def test_goni_mr(self):
		self.run_test("고니", "{{ko-IPA}}", "koni", "mr")
	def test_goni_yr(self):
		self.run_test("고니", "{{ko-IPA}}", "koni", "yr")
	def test_goni_ipa(self):
		self.run_test("고니", "{{ko-IPA}}", "[ko̞ni]", "ipa")

	def test_chamsae_ph(self):
		self.run_test("참새", "{{ko-IPA}}", "참새/참세", "ph")
	def test_chamsae_rr(self):
		self.run_test("참새", "{{ko-IPA}}", "chamsae", "rr")
	def test_chamsae_rrr(self):
		self.run_test("참새", "{{ko-IPA}}", "chamsae", "rrr")
	def test_chamsae_mr(self):
		self.run_test("참새", "{{ko-IPA}}", "ch'amsae", "mr")
	def test_chamsae_yr(self):
		self.run_test("참새", "{{ko-IPA}}", "chamsay", "yr")
	def test_chamsae_ipa(self):
		self.run_test("참새", "{{ko-IPA}}", "[t͡ɕʰa̠msʰɛ] ~ [t͡ɕʰa̠msʰe̞]", "ipa")

	def test_beongeori_ph(self):
		self.run_test("벙어리", "{{ko-IPA}}", "벙어리", "ph")
	def test_beongeori_rr(self):
		self.run_test("벙어리", "{{ko-IPA}}", "beong'eori", "rr")
	def test_beongeori_rrr(self):
		self.run_test("벙어리", "{{ko-IPA}}", "beong'eoli", "rrr")
	def test_beongeori_mr(self):
		self.run_test("벙어리", "{{ko-IPA}}", "pŏngŏri", "mr")
	def test_beongeori_yr(self):
		self.run_test("벙어리", "{{ko-IPA}}", "pengeli", "yr")
	def test_beongeori_ipa(self):
		self.run_test("벙어리", "{{ko-IPA}}", "[pʌ̹ŋʌ̹ɾi]", "ipa")

	def test_ppeokkugi_ph(self):
		self.run_test("뻐꾸기", "{{ko-IPA}}", "뻐꾸기", "ph")
	def test_ppeokkugi_rr(self):
		self.run_test("뻐꾸기", "{{ko-IPA}}", "ppeokkugi", "rr")
	def test_ppeokkugi_rrr(self):
		self.run_test("뻐꾸기", "{{ko-IPA}}", "ppeo'kkugi", "rrr")
	def test_ppeokkugi_mr(self):
		self.run_test("뻐꾸기", "{{ko-IPA}}", "ppŏkkugi", "mr")
	def test_ppeokkugi_yr(self):
		self.run_test("뻐꾸기", "{{ko-IPA}}", "ppe.kkwuki", "yr")
	def test_ppeokkugi_ipa(self):
		self.run_test("뻐꾸기", "{{ko-IPA}}", "[p͈ʌ̹k͈uɡi]", "ipa")

	def test_aengmusae_ph(self):
		self.run_test("앵무새", "{{ko-IPA}}", "앵무새/엥무세", "ph")
	def test_aengmusae_rr(self):
		self.run_test("앵무새", "{{ko-IPA}}", "aengmusae", "rr")
	def test_aengmusae_rrr(self):
		self.run_test("앵무새", "{{ko-IPA}}", "aengmusae", "rrr")
	def test_aengmusae_mr(self):
		self.run_test("앵무새", "{{ko-IPA}}", "aengmusae", "mr")
	def test_aengmusae_yr(self):
		self.run_test("앵무새", "{{ko-IPA}}", "ayngmusay", "yr")
	def test_aengmusae_ipa(self):
		self.run_test("앵무새", "{{ko-IPA}}", "[ɛŋmusʰɛ] ~ [e̞ŋmusʰe̞]", "ipa")

	def test_heukgoni_ph(self):
		self.run_test("흑고니", "{{ko-IPA}}", "흑꼬니", "ph")
	def test_heukgoni_rr(self):
		self.run_test("흑고니", "{{ko-IPA}}", "heukgoni", "rr")
	def test_heukgoni_rrr(self):
		self.run_test("흑고니", "{{ko-IPA}}", "heuggoni", "rrr")
	def test_heukgoni_mr(self):
		self.run_test("흑고니", "{{ko-IPA}}", "hŭkkoni", "mr")
	def test_heukgoni_yr(self):
		self.run_test("흑고니", "{{ko-IPA}}", "huk.koni", "yr")
	def test_heukgoni_ipa(self):
		self.run_test("흑고니", "{{ko-IPA}}", "[xɯk̚k͈o̞ni]", "ipa")

	def test_nagwi_ph(self):
		self.run_test("나귀", "{{ko-IPA}}", "나귀", "ph")
	def test_nagwi_rr(self):
		self.run_test("나귀", "{{ko-IPA}}", "nagwi", "rr")
	def test_nagwi_rrr(self):
		self.run_test("나귀", "{{ko-IPA}}", "nagwi", "rrr")
	def test_nagwi_mr(self):
		self.run_test("나귀", "{{ko-IPA}}", "nagwi", "mr")
	def test_nagwi_yr(self):
		self.run_test("나귀", "{{ko-IPA}}", "nakwi", "yr")
	def test_nagwi_ipa(self):
		self.run_test("나귀", "{{ko-IPA}}", "[na̠ɡɥi] ~ [na̠ɡy]", "ipa")

	def test_yeou_ph(self):
		self.run_test("여우", "{{ko-IPA}}", "여우", "ph")
	def test_yeou_rr(self):
		self.run_test("여우", "{{ko-IPA}}", "yeou", "rr")
	def test_yeou_rrr(self):
		self.run_test("여우", "{{ko-IPA}}", "yeou", "rrr")
	def test_yeou_mr(self):
		self.run_test("여우", "{{ko-IPA}}", "yŏu", "mr")
	def test_yeou_yr(self):
		self.run_test("여우", "{{ko-IPA}}", "yewu", "yr")
	def test_yeou_ipa(self):
		self.run_test("여우", "{{ko-IPA}}", "[jʌ̹u]", "ipa")

	def test_daramjwi_ph(self):
		self.run_test("다람쥐", "{{ko-IPA}}", "다람쥐", "ph")
	def test_daramjwi_rr(self):
		self.run_test("다람쥐", "{{ko-IPA}}", "daramjwi", "rr")
	def test_daramjwi_rrr(self):
		self.run_test("다람쥐", "{{ko-IPA}}", "dalamjwi", "rrr")
	def test_daramjwi_mr(self):
		self.run_test("다람쥐", "{{ko-IPA}}", "taramjwi", "mr")
	def test_daramjwi_yr(self):
		self.run_test("다람쥐", "{{ko-IPA}}", "talamcwi", "yr")
	def test_daramjwi_ipa(self):
		self.run_test("다람쥐", "{{ko-IPA}}", "[ta̠ɾa̠md͡ʑɥi] ~ [ta̠ɾa̠md͡ʑy]", "ipa")

	def test_nosae_ph(self):
		self.run_test("노새", "{{ko-IPA}}", "노새/노세", "ph")
	def test_nosae_rr(self):
		self.run_test("노새", "{{ko-IPA}}", "nosae", "rr")
	def test_nosae_rrr(self):
		self.run_test("노새", "{{ko-IPA}}", "nosae", "rrr")
	def test_nosae_mr(self):
		self.run_test("노새", "{{ko-IPA}}", "nosae", "mr")
	def test_nosae_yr(self):
		self.run_test("노새", "{{ko-IPA}}", "nosay", "yr")
	def test_nosae_ipa(self):
		self.run_test("노새", "{{ko-IPA}}", "[no̞sʰɛ] ~ [no̞sʰe̞]", "ipa")

	def test_noru_ph(self):
		self.run_test("노루", "{{ko-IPA}}", "노루", "ph")
	def test_noru_rr(self):
		self.run_test("노루", "{{ko-IPA}}", "noru", "rr")
	def test_noru_rrr(self):
		self.run_test("노루", "{{ko-IPA}}", "nolu", "rrr")
	def test_noru_mr(self):
		self.run_test("노루", "{{ko-IPA}}", "noru", "mr")
	def test_noru_yr(self):
		self.run_test("노루", "{{ko-IPA}}", "nolwu", "yr")
	def test_noru_ipa(self):
		self.run_test("노루", "{{ko-IPA}}", "[no̞ɾu]", "ipa")

	def test_nabang_ph(self):
		self.run_test("나방", "{{ko-IPA}}", "나방", "ph")
	def test_nabang_rr(self):
		self.run_test("나방", "{{ko-IPA}}", "nabang", "rr")
	def test_nabang_rrr(self):
		self.run_test("나방", "{{ko-IPA}}", "nabang", "rrr")
	def test_nabang_mr(self):
		self.run_test("나방", "{{ko-IPA}}", "nabang", "mr")
	def test_nabang_yr(self):
		self.run_test("나방", "{{ko-IPA}}", "napang", "yr")
	def test_nabang_ipa(self):
		self.run_test("나방", "{{ko-IPA}}", "[na̠ba̠ŋ]", "ipa")

	def test_kkachi_ph(self):
		self.run_test("까치", "{{ko-IPA|l=y}}", "까(ː)치", "ph")
	def test_kkachi_rr(self):
		self.run_test("까치", "{{ko-IPA|l=y}}", "kkachi", "rr")
	def test_kkachi_rrr(self):
		self.run_test("까치", "{{ko-IPA|l=y}}", "kkachi", "rrr")
	def test_kkachi_mr(self):
		self.run_test("까치", "{{ko-IPA|l=y}}", "kkach'i", "mr")
	def test_kkachi_yr(self):
		self.run_test("까치", "{{ko-IPA|l=y}}", "kkā.chi", "yr")
	def test_kkachi_ipa(self):
		self.run_test("까치", "{{ko-IPA|l=y}}", "[ˈk͈a̠(ː)t͡ɕʰi]", "ipa")

	def test_kkamagwi_ph(self):
		self.run_test("까마귀", "{{ko-IPA}}", "까마귀", "ph")
	def test_kkamagwi_rr(self):
		self.run_test("까마귀", "{{ko-IPA}}", "kkamagwi", "rr")
	def test_kkamagwi_rrr(self):
		self.run_test("까마귀", "{{ko-IPA}}", "kkamagwi", "rrr")
	def test_kkamagwi_mr(self):
		self.run_test("까마귀", "{{ko-IPA}}", "kkamagwi", "mr")
	def test_kkamagwi_yr(self):
		self.run_test("까마귀", "{{ko-IPA}}", "kkamakwi", "yr")
	def test_kkamagwi_ipa(self):
		self.run_test("까마귀", "{{ko-IPA}}", "[k͈a̠ma̠ɡɥi] ~ [k͈a̠ma̠ɡy]", "ipa")

	def test_jangmi_ph(self):
		self.run_test("장미", "{{ko-IPA}}", "장미", "ph")
	def test_jangmi_rr(self):
		self.run_test("장미", "{{ko-IPA}}", "jangmi", "rr")
	def test_jangmi_rrr(self):
		self.run_test("장미", "{{ko-IPA}}", "jangmi", "rrr")
	def test_jangmi_mr(self):
		self.run_test("장미", "{{ko-IPA}}", "changmi", "mr")
	def test_jangmi_yr(self):
		self.run_test("장미", "{{ko-IPA}}", "cangmi", "yr")
	def test_jangmi_ipa(self):
		self.run_test("장미", "{{ko-IPA}}", "[t͡ɕa̠ŋmi]", "ipa")
	def test_jangmi_ph_1(self):
		self.run_test("장미", "{{ko-IPA|l=y}}", "장(ː)미", "ph")
	def test_jangmi_rr_1(self):
		self.run_test("장미", "{{ko-IPA|l=y}}", "jangmi", "rr")
	def test_jangmi_rrr_1(self):
		self.run_test("장미", "{{ko-IPA|l=y}}", "jangmi", "rrr")
	def test_jangmi_mr_1(self):
		self.run_test("장미", "{{ko-IPA|l=y}}", "changmi", "mr")
	def test_jangmi_yr_1(self):
		self.run_test("장미", "{{ko-IPA|l=y}}", "cāngmi", "yr")
	def test_jangmi_ipa_1(self):
		self.run_test("장미", "{{ko-IPA|l=y}}", "[ˈt͡ɕa̠(ː)ŋmi]", "ipa")

	def test_gaenari_ph(self):
		self.run_test("개나리", "{{ko-IPA|l=y|a=Ko-개나리.oga}}", "개(ː)나리/게(ː)나리", "ph")
	def test_gaenari_rr(self):
		self.run_test("개나리", "{{ko-IPA|l=y|a=Ko-개나리.oga}}", "gaenari", "rr")
	def test_gaenari_rrr(self):
		self.run_test("개나리", "{{ko-IPA|l=y|a=Ko-개나리.oga}}", "gaenali", "rrr")
	def test_gaenari_mr(self):
		self.run_test("개나리", "{{ko-IPA|l=y|a=Ko-개나리.oga}}", "kaenari", "mr")
	def test_gaenari_yr(self):
		self.run_test("개나리", "{{ko-IPA|l=y|a=Ko-개나리.oga}}", "kāynali", "yr")
	def test_gaenari_ipa(self):
		self.run_test("개나리", "{{ko-IPA|l=y|a=Ko-개나리.oga}}", "[ˈkɛ(ː)na̠ɾi] ~ [ˈke̞(ː)na̠ɾi]", "ipa")

	def test_dae_ph(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "대(ː)/데(ː)", "ph")
	def test_dae_rr(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "dae", "rr")
	def test_dae_rrr(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "dae", "rrr")
	def test_dae_mr(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "tae", "mr")
	def test_dae_yr(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "tāy", "yr")
	def test_dae_ipa(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "[tɛ(ː)] ~ [te̞(ː)]", "ipa")
	def test_dae_ph_1(self):
		self.run_test("대", "{{ko-IPA}}", "대/데", "ph")
	def test_dae_rr_1(self):
		self.run_test("대", "{{ko-IPA}}", "dae", "rr")
	def test_dae_rrr_1(self):
		self.run_test("대", "{{ko-IPA}}", "dae", "rrr")
	def test_dae_mr_1(self):
		self.run_test("대", "{{ko-IPA}}", "tae", "mr")
	def test_dae_yr_1(self):
		self.run_test("대", "{{ko-IPA}}", "tay", "yr")
	def test_dae_ipa_1(self):
		self.run_test("대", "{{ko-IPA}}", "[tɛ] ~ [te̞]", "ipa")
	def test_dae_ph_2(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "대(ː)/데(ː)", "ph")
	def test_dae_rr_2(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "dae", "rr")
	def test_dae_rrr_2(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "dae", "rrr")
	def test_dae_mr_2(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "tae", "mr")
	def test_dae_yr_2(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "tāy", "yr")
	def test_dae_ipa_2(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "[tɛ(ː)] ~ [te̞(ː)]", "ipa")
	def test_dae_ph_3(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "대(ː)/데(ː)", "ph")
	def test_dae_rr_3(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "dae", "rr")
	def test_dae_rrr_3(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "dae", "rrr")
	def test_dae_mr_3(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "tae", "mr")
	def test_dae_yr_3(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "tāy", "yr")
	def test_dae_ipa_3(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "[tɛ(ː)] ~ [te̞(ː)]", "ipa")
	def test_dae_ph_4(self):
		self.run_test("대", "{{ko-IPA}}", "대/데", "ph")
	def test_dae_rr_4(self):
		self.run_test("대", "{{ko-IPA}}", "dae", "rr")
	def test_dae_rrr_4(self):
		self.run_test("대", "{{ko-IPA}}", "dae", "rrr")
	def test_dae_mr_4(self):
		self.run_test("대", "{{ko-IPA}}", "tae", "mr")
	def test_dae_yr_4(self):
		self.run_test("대", "{{ko-IPA}}", "tay", "yr")
	def test_dae_ipa_4(self):
		self.run_test("대", "{{ko-IPA}}", "[tɛ] ~ [te̞]", "ipa")
	def test_dae_ph_5(self):
		self.run_test("대", "{{ko-IPA}}", "대/데", "ph")
	def test_dae_rr_5(self):
		self.run_test("대", "{{ko-IPA}}", "dae", "rr")
	def test_dae_rrr_5(self):
		self.run_test("대", "{{ko-IPA}}", "dae", "rrr")
	def test_dae_mr_5(self):
		self.run_test("대", "{{ko-IPA}}", "tae", "mr")
	def test_dae_yr_5(self):
		self.run_test("대", "{{ko-IPA}}", "tay", "yr")
	def test_dae_ipa_5(self):
		self.run_test("대", "{{ko-IPA}}", "[tɛ] ~ [te̞]", "ipa")
	def test_dae_ph_6(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "대(ː)/데(ː)", "ph")
	def test_dae_rr_6(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "dae", "rr")
	def test_dae_rrr_6(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "dae", "rrr")
	def test_dae_mr_6(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "tae", "mr")
	def test_dae_yr_6(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "tāy", "yr")
	def test_dae_ipa_6(self):
		self.run_test("대", "{{ko-IPA|l=y}}", "[tɛ(ː)] ~ [te̞(ː)]", "ipa")

	def test_jaji_ph(self):
		self.run_test("자지", "{{ko-ipa|l=y}}", "자(ː)지", "ph")
	def test_jaji_rr(self):
		self.run_test("자지", "{{ko-ipa|l=y}}", "jaji", "rr")
	def test_jaji_rrr(self):
		self.run_test("자지", "{{ko-ipa|l=y}}", "jaji", "rrr")
	def test_jaji_mr(self):
		self.run_test("자지", "{{ko-ipa|l=y}}", "chaji", "mr")
	def test_jaji_yr(self):
		self.run_test("자지", "{{ko-ipa|l=y}}", "cāci", "yr")
	def test_jaji_ipa(self):
		self.run_test("자지", "{{ko-ipa|l=y}}", "[ˈt͡ɕa̠(ː)d͡ʑi]", "ipa")

	def test_nae_ph(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "내(ː)/네(ː)", "ph")
	def test_nae_rr(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nae", "rr")
	def test_nae_rrr(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nae", "rrr")
	def test_nae_mr(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nae", "mr")
	def test_nae_yr(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nāy", "yr")
	def test_nae_ipa(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "[nɛ(ː)] ~ [ne̞(ː)]", "ipa")
	def test_nae_ph_1(self):
		self.run_test("내", "{{ko-IPA}}", "내/네", "ph")
	def test_nae_rr_1(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "rr")
	def test_nae_rrr_1(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "rrr")
	def test_nae_mr_1(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "mr")
	def test_nae_yr_1(self):
		self.run_test("내", "{{ko-IPA}}", "nay", "yr")
	def test_nae_ipa_1(self):
		self.run_test("내", "{{ko-IPA}}", "[nɛ] ~ [ne̞]", "ipa")
	def test_nae_ph_2(self):
		self.run_test("내", "{{ko-IPA}}", "내/네", "ph")
	def test_nae_rr_2(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "rr")
	def test_nae_rrr_2(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "rrr")
	def test_nae_mr_2(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "mr")
	def test_nae_yr_2(self):
		self.run_test("내", "{{ko-IPA}}", "nay", "yr")
	def test_nae_ipa_2(self):
		self.run_test("내", "{{ko-IPA}}", "[nɛ] ~ [ne̞]", "ipa")
	def test_nae_ph_3(self):
		self.run_test("내", "{{ko-IPA}}", "내/네", "ph")
	def test_nae_rr_3(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "rr")
	def test_nae_rrr_3(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "rrr")
	def test_nae_mr_3(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "mr")
	def test_nae_yr_3(self):
		self.run_test("내", "{{ko-IPA}}", "nay", "yr")
	def test_nae_ipa_3(self):
		self.run_test("내", "{{ko-IPA}}", "[nɛ] ~ [ne̞]", "ipa")
	def test_nae_ph_4(self):
		self.run_test("내", "{{ko-IPA}}", "내/네", "ph")
	def test_nae_rr_4(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "rr")
	def test_nae_rrr_4(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "rrr")
	def test_nae_mr_4(self):
		self.run_test("내", "{{ko-IPA}}", "nae", "mr")
	def test_nae_yr_4(self):
		self.run_test("내", "{{ko-IPA}}", "nay", "yr")
	def test_nae_ipa_4(self):
		self.run_test("내", "{{ko-IPA}}", "[nɛ] ~ [ne̞]", "ipa")
	def test_nae_ph_5(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "내(ː)/네(ː)", "ph")
	def test_nae_rr_5(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nae", "rr")
	def test_nae_rrr_5(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nae", "rrr")
	def test_nae_mr_5(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nae", "mr")
	def test_nae_yr_5(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nāy", "yr")
	def test_nae_ipa_5(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "[nɛ(ː)] ~ [ne̞(ː)]", "ipa")
	def test_nae_ph_6(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "내(ː)/네(ː)", "ph")
	def test_nae_rr_6(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nae", "rr")
	def test_nae_rrr_6(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nae", "rrr")
	def test_nae_mr_6(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nae", "mr")
	def test_nae_yr_6(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "nāy", "yr")
	def test_nae_ipa_6(self):
		self.run_test("내", "{{ko-IPA|l=y}}", "[nɛ(ː)] ~ [ne̞(ː)]", "ipa")

	def test_namul_ph(self):
		self.run_test("나물", "{{ko-IPA}}", "나물", "ph")
	def test_namul_rr(self):
		self.run_test("나물", "{{ko-IPA}}", "namul", "rr")
	def test_namul_rrr(self):
		self.run_test("나물", "{{ko-IPA}}", "namul", "rrr")
	def test_namul_mr(self):
		self.run_test("나물", "{{ko-IPA}}", "namul", "mr")
	def test_namul_yr(self):
		self.run_test("나물", "{{ko-IPA}}", "namul", "yr")
	def test_namul_ipa(self):
		self.run_test("나물", "{{ko-IPA}}", "[na̠muɭ]", "ipa")

	def test_nagada_ph(self):
		self.run_test("나가다", "{{ko-IPA|a=y}}", "나가다", "ph")
	def test_nagada_rr(self):
		self.run_test("나가다", "{{ko-IPA|a=y}}", "nagada", "rr")
	def test_nagada_rrr(self):
		self.run_test("나가다", "{{ko-IPA|a=y}}", "nagada", "rrr")
	def test_nagada_mr(self):
		self.run_test("나가다", "{{ko-IPA|a=y}}", "nagada", "mr")
	def test_nagada_yr(self):
		self.run_test("나가다", "{{ko-IPA|a=y}}", "nakata", "yr")
	def test_nagada_ipa(self):
		self.run_test("나가다", "{{ko-IPA|a=y}}", "[na̠ɡa̠da̠]", "ipa")

	def test_piryo_ph(self):
		self.run_test("필요", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-필요.wav}}", "피료", "ph")
	def test_piryo_rr(self):
		self.run_test("필요", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-필요.wav}}", "piryo", "rr")
	def test_piryo_rrr(self):
		self.run_test("필요", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-필요.wav}}", "pil'yo", "rrr")
	def test_piryo_mr(self):
		self.run_test("필요", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-필요.wav}}", "p'iryo", "mr")
	def test_piryo_yr(self):
		self.run_test("필요", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-필요.wav}}", "phil.yo", "yr")
	def test_piryo_ipa(self):
		self.run_test("필요", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-필요.wav}}", "[pʰiɾjo]", "ipa")

	def test_gabyeopda_ph(self):
		self.run_test("가볍다", "{{ko-IPA}}", "가볍따", "ph")
	def test_gabyeopda_rr(self):
		self.run_test("가볍다", "{{ko-IPA}}", "gabyeopda", "rr")
	def test_gabyeopda_rrr(self):
		self.run_test("가볍다", "{{ko-IPA}}", "gabyeobda", "rrr")
	def test_gabyeopda_mr(self):
		self.run_test("가볍다", "{{ko-IPA}}", "kabyŏpta", "mr")
	def test_gabyeopda_yr(self):
		self.run_test("가볍다", "{{ko-IPA}}", "kapyepta", "yr")
	def test_gabyeopda_ipa(self):
		self.run_test("가볍다", "{{ko-IPA}}", "[ka̠bjʌ̹p̚t͈a̠]", "ipa")

	def test_ganeulda_ph(self):
		self.run_test("가늘다", "{{ko-IPA}}", "가늘다", "ph")
	def test_ganeulda_rr(self):
		self.run_test("가늘다", "{{ko-IPA}}", "ganeulda", "rr")
	def test_ganeulda_rrr(self):
		self.run_test("가늘다", "{{ko-IPA}}", "ganeulda", "rrr")
	def test_ganeulda_mr(self):
		self.run_test("가늘다", "{{ko-IPA}}", "kanŭlda", "mr")
	def test_ganeulda_yr(self):
		self.run_test("가늘다", "{{ko-IPA}}", "kanulta", "yr")
	def test_ganeulda_ipa(self):
		self.run_test("가늘다", "{{ko-IPA}}", "[ka̠nɯɭda̠]", "ipa")

	def test_bigye_ph(self):
		self.run_test("비계", "{{ko-IPA}}", "비계/비게", "ph")
	def test_bigye_rr(self):
		self.run_test("비계", "{{ko-IPA}}", "bigye", "rr")
	def test_bigye_rrr(self):
		self.run_test("비계", "{{ko-IPA}}", "bigye", "rrr")
	def test_bigye_mr(self):
		self.run_test("비계", "{{ko-IPA}}", "pigye", "mr")
	def test_bigye_yr(self):
		self.run_test("비계", "{{ko-IPA}}", "pikyey", "yr")
	def test_bigye_ipa(self):
		self.run_test("비계", "{{ko-IPA}}", "[piɡje̞] ~ [piɡe̞]", "ipa")

	def test_golpeu_ph(self):
		self.run_test("골프", "{{ko-IPA|com=0}}", "꼴프", "ph")
	def test_golpeu_rr(self):
		self.run_test("골프", "{{ko-IPA|com=0}}", "golpeu", "rr")
	def test_golpeu_rrr(self):
		self.run_test("골프", "{{ko-IPA|com=0}}", "golpeu", "rrr")
	def test_golpeu_mr(self):
		self.run_test("골프", "{{ko-IPA|com=0}}", "kolp'ŭ", "mr")
	def test_golpeu_yr(self):
		self.run_test("골프", "{{ko-IPA|com=0}}", "qkol.phu", "yr")
	def test_golpeu_ipa(self):
		self.run_test("골프", "{{ko-IPA|com=0}}", "[k͈o̞ɭpʰɯ]", "ipa")

	def test_chukgu_ph(self):
		self.run_test("축구", "{{ko-IPA}}", "축꾸", "ph")
	def test_chukgu_rr(self):
		self.run_test("축구", "{{ko-IPA}}", "chukgu", "rr")
	def test_chukgu_rrr(self):
		self.run_test("축구", "{{ko-IPA}}", "chuggu", "rrr")
	def test_chukgu_mr(self):
		self.run_test("축구", "{{ko-IPA}}", "ch'ukku", "mr")
	def test_chukgu_yr(self):
		self.run_test("축구", "{{ko-IPA}}", "chwuk.kwu", "yr")
	def test_chukgu_ipa(self):
		self.run_test("축구", "{{ko-IPA}}", "[t͡ɕʰuk̚k͈u]", "ipa")

	def test_takgu_ph(self):
		self.run_test("탁구", "{{ko-IPA}}", "탁꾸", "ph")
	def test_takgu_rr(self):
		self.run_test("탁구", "{{ko-IPA}}", "takgu", "rr")
	def test_takgu_rrr(self):
		self.run_test("탁구", "{{ko-IPA}}", "taggu", "rrr")
	def test_takgu_mr(self):
		self.run_test("탁구", "{{ko-IPA}}", "t'akku", "mr")
	def test_takgu_yr(self):
		self.run_test("탁구", "{{ko-IPA}}", "thak.kwu", "yr")
	def test_takgu_ipa(self):
		self.run_test("탁구", "{{ko-IPA}}", "[tʰa̠k̚k͈u]", "ipa")

	def test_yeokdo_ph(self):
		self.run_test("역도", "{{ko-IPA}}", "역또", "ph")
	def test_yeokdo_rr(self):
		self.run_test("역도", "{{ko-IPA}}", "yeokdo", "rr")
	def test_yeokdo_rrr(self):
		self.run_test("역도", "{{ko-IPA}}", "yeogdo", "rrr")
	def test_yeokdo_mr(self):
		self.run_test("역도", "{{ko-IPA}}", "yŏkto", "mr")
	def test_yeokdo_yr(self):
		self.run_test("역도", "{{ko-IPA}}", "yekto", "yr")
	def test_yeokdo_ipa(self):
		self.run_test("역도", "{{ko-IPA}}", "[jʌ̹k̚t͈o̞]", "ipa")

	def test_yagu_ph(self):
		self.run_test("야구", "{{ko-IPA|l=y}}", "야(ː)구", "ph")
	def test_yagu_rr(self):
		self.run_test("야구", "{{ko-IPA|l=y}}", "yagu", "rr")
	def test_yagu_rrr(self):
		self.run_test("야구", "{{ko-IPA|l=y}}", "yagu", "rrr")
	def test_yagu_mr(self):
		self.run_test("야구", "{{ko-IPA|l=y}}", "yagu", "mr")
	def test_yagu_yr(self):
		self.run_test("야구", "{{ko-IPA|l=y}}", "yākwu", "yr")
	def test_yagu_ipa(self):
		self.run_test("야구", "{{ko-IPA|l=y}}", "[ˈja̠(ː)ɡu]", "ipa")

	def test_teniseu_ph(self):
		self.run_test("테니스", "{{ko-IPA|com=2}}", "테니쓰", "ph")
	def test_teniseu_rr(self):
		self.run_test("테니스", "{{ko-IPA|com=2}}", "teniseu", "rr")
	def test_teniseu_rrr(self):
		self.run_test("테니스", "{{ko-IPA|com=2}}", "teniseu", "rrr")
	def test_teniseu_mr(self):
		self.run_test("테니스", "{{ko-IPA|com=2}}", "t'enissŭ", "mr")
	def test_teniseu_yr(self):
		self.run_test("테니스", "{{ko-IPA|com=2}}", "theyniqsu", "yr")
	def test_teniseu_ipa(self):
		self.run_test("테니스", "{{ko-IPA|com=2}}", "[tʰe̞nis͈ɯ]", "ipa")

	def test_jeonggu_ph(self):
		self.run_test("정구", "{{ko-IPA}}", "정구", "ph")
	def test_jeonggu_rr(self):
		self.run_test("정구", "{{ko-IPA}}", "jeonggu", "rr")
	def test_jeonggu_rrr(self):
		self.run_test("정구", "{{ko-IPA}}", "jeonggu", "rrr")
	def test_jeonggu_mr(self):
		self.run_test("정구", "{{ko-IPA}}", "chŏnggu", "mr")
	def test_jeonggu_yr(self):
		self.run_test("정구", "{{ko-IPA}}", "cengkwu", "yr")
	def test_jeonggu_ipa(self):
		self.run_test("정구", "{{ko-IPA}}", "[t͡ɕʌ̹ŋɡu]", "ipa")

	def test_gom_ph(self):
		self.run_test("곰", "{{ko-ipa|l=y|a=곰.wav}}", "곰(ː)", "ph")
	def test_gom_rr(self):
		self.run_test("곰", "{{ko-ipa|l=y|a=곰.wav}}", "gom", "rr")
	def test_gom_rrr(self):
		self.run_test("곰", "{{ko-ipa|l=y|a=곰.wav}}", "gom", "rrr")
	def test_gom_mr(self):
		self.run_test("곰", "{{ko-ipa|l=y|a=곰.wav}}", "kom", "mr")
	def test_gom_yr(self):
		self.run_test("곰", "{{ko-ipa|l=y|a=곰.wav}}", "kōm", "yr")
	def test_gom_ipa(self):
		self.run_test("곰", "{{ko-ipa|l=y|a=곰.wav}}", "[ko̞(ː)m]", "ipa")

	def test_haneul_ph(self):
		self.run_test("하늘", "{{ko-IPA|a=y}}", "하늘", "ph")
	def test_haneul_rr(self):
		self.run_test("하늘", "{{ko-IPA|a=y}}", "haneul", "rr")
	def test_haneul_rrr(self):
		self.run_test("하늘", "{{ko-IPA|a=y}}", "haneul", "rrr")
	def test_haneul_mr(self):
		self.run_test("하늘", "{{ko-IPA|a=y}}", "hanŭl", "mr")
	def test_haneul_yr(self):
		self.run_test("하늘", "{{ko-IPA|a=y}}", "hanul", "yr")
	def test_haneul_ipa(self):
		self.run_test("하늘", "{{ko-IPA|a=y}}", "[ha̠nɯɭ]", "ipa")

	def test_sutgarak_ph(self):
		self.run_test("숟가락", "{{ko-IPA}}", "숟까락", "ph")
	def test_sutgarak_rr(self):
		self.run_test("숟가락", "{{ko-IPA}}", "sutgarak", "rr")
	def test_sutgarak_rrr(self):
		self.run_test("숟가락", "{{ko-IPA}}", "sudgalag", "rrr")
	def test_sutgarak_mr(self):
		self.run_test("숟가락", "{{ko-IPA}}", "sutkarak", "mr")
	def test_sutgarak_yr(self):
		self.run_test("숟가락", "{{ko-IPA}}", "swutkalak", "yr")
	def test_sutgarak_ipa(self):
		self.run_test("숟가락", "{{ko-IPA}}", "[sʰut̚k͈a̠ɾa̠k̚]", "ipa")

	def test_haema_ph(self):
		self.run_test("해마", "{{ko-ipa|l=y}}", "해(ː)마/헤(ː)마", "ph")
	def test_haema_rr(self):
		self.run_test("해마", "{{ko-ipa|l=y}}", "haema", "rr")
	def test_haema_rrr(self):
		self.run_test("해마", "{{ko-ipa|l=y}}", "haema", "rrr")
	def test_haema_mr(self):
		self.run_test("해마", "{{ko-ipa|l=y}}", "haema", "mr")
	def test_haema_yr(self):
		self.run_test("해마", "{{ko-ipa|l=y}}", "hāyma", "yr")
	def test_haema_ipa(self):
		self.run_test("해마", "{{ko-ipa|l=y}}", "[ˈhɛ(ː)ma̠] ~ [ˈhe̞(ː)ma̠]", "ipa")

	def test_ingeo_ph(self):
		self.run_test("잉어", "{{ko-IPA|l=y}}", "잉(ː)어", "ph")
	def test_ingeo_rr(self):
		self.run_test("잉어", "{{ko-IPA|l=y}}", "ing'eo", "rr")
	def test_ingeo_rrr(self):
		self.run_test("잉어", "{{ko-IPA|l=y}}", "ing'eo", "rrr")
	def test_ingeo_mr(self):
		self.run_test("잉어", "{{ko-IPA|l=y}}", "ingŏ", "mr")
	def test_ingeo_yr(self):
		self.run_test("잉어", "{{ko-IPA|l=y}}", "īnge", "yr")
	def test_ingeo_ipa(self):
		self.run_test("잉어", "{{ko-IPA|l=y}}", "[ˈi(ː)ŋʌ̹]", "ipa")

	def test_Yeongguk_ph(self):
		self.run_test("영국", "{{ko-IPA|cap=y}}", "영국", "ph")
	def test_Yeongguk_rr(self):
		self.run_test("영국", "{{ko-IPA|cap=y}}", "Yeongguk", "rr")
	def test_Yeongguk_rrr(self):
		self.run_test("영국", "{{ko-IPA|cap=y}}", "Yeonggug", "rrr")
	def test_Yeongguk_mr(self):
		self.run_test("영국", "{{ko-IPA|cap=y}}", "Yŏngguk", "mr")
	def test_Yeongguk_yr(self):
		self.run_test("영국", "{{ko-IPA|cap=y}}", "yengkwuk", "yr")
	def test_Yeongguk_ipa(self):
		self.run_test("영국", "{{ko-IPA|cap=y}}", "[jʌ̹ŋɡuk̚]", "ipa")

	def test_ohu_ph(self):
		self.run_test("오후", "{{ko-IPA|l=y}}", "오(ː)후", "ph")
	def test_ohu_rr(self):
		self.run_test("오후", "{{ko-IPA|l=y}}", "ohu", "rr")
	def test_ohu_rrr(self):
		self.run_test("오후", "{{ko-IPA|l=y}}", "ohu", "rrr")
	def test_ohu_mr(self):
		self.run_test("오후", "{{ko-IPA|l=y}}", "ohu", "mr")
	def test_ohu_yr(self):
		self.run_test("오후", "{{ko-IPA|l=y}}", "ōhwu", "yr")
	def test_ohu_ipa(self):
		self.run_test("오후", "{{ko-IPA|l=y}}", "[ˈo̞(ː)βu]", "ipa")

	def test_ojeon_ph(self):
		self.run_test("오전", "{{ko-IPA|l=y}}", "오(ː)전", "ph")
	def test_ojeon_rr(self):
		self.run_test("오전", "{{ko-IPA|l=y}}", "ojeon", "rr")
	def test_ojeon_rrr(self):
		self.run_test("오전", "{{ko-IPA|l=y}}", "ojeon", "rrr")
	def test_ojeon_mr(self):
		self.run_test("오전", "{{ko-IPA|l=y}}", "ojŏn", "mr")
	def test_ojeon_yr(self):
		self.run_test("오전", "{{ko-IPA|l=y}}", "ōcen", "yr")
	def test_ojeon_ipa(self):
		self.run_test("오전", "{{ko-IPA|l=y}}", "[ˈo̞(ː)d͡ʑʌ̹n]", "ipa")

	def test_achim_ph(self):
		self.run_test("아침", "{{ko-IPA|a=y}}", "아침", "ph")
	def test_achim_rr(self):
		self.run_test("아침", "{{ko-IPA|a=y}}", "achim", "rr")
	def test_achim_rrr(self):
		self.run_test("아침", "{{ko-IPA|a=y}}", "achim", "rrr")
	def test_achim_mr(self):
		self.run_test("아침", "{{ko-IPA|a=y}}", "ach'im", "mr")
	def test_achim_yr(self):
		self.run_test("아침", "{{ko-IPA|a=y}}", "a.chim", "yr")
	def test_achim_ipa(self):
		self.run_test("아침", "{{ko-IPA|a=y}}", "[a̠t͡ɕʰim]", "ipa")

	def test_Geuriseueo_ph(self):
		self.run_test("그리스어", "{{ko-IPA|cap=y}}", "그리스어", "ph")
	def test_Geuriseueo_rr(self):
		self.run_test("그리스어", "{{ko-IPA|cap=y}}", "Geuriseueo", "rr")
	def test_Geuriseueo_rrr(self):
		self.run_test("그리스어", "{{ko-IPA|cap=y}}", "Geuliseueo", "rrr")
	def test_Geuriseueo_mr(self):
		self.run_test("그리스어", "{{ko-IPA|cap=y}}", "Kŭrisŭŏ", "mr")
	def test_Geuriseueo_yr(self):
		self.run_test("그리스어", "{{ko-IPA|cap=y}}", "kulisue", "yr")
	def test_Geuriseueo_ipa(self):
		self.run_test("그리스어", "{{ko-IPA|cap=y}}", "[kɯɾisʰɯʌ̹]", "ipa")

	def test_tochageo_ph(self):
		self.run_test("토착어", "{{ko-IPA}}", "토차거", "ph")
	def test_tochageo_rr(self):
		self.run_test("토착어", "{{ko-IPA}}", "tochageo", "rr")
	def test_tochageo_rrr(self):
		self.run_test("토착어", "{{ko-IPA}}", "tochag'eo", "rrr")
	def test_tochageo_mr(self):
		self.run_test("토착어", "{{ko-IPA}}", "t'och'agŏ", "mr")
	def test_tochageo_yr(self):
		self.run_test("토착어", "{{ko-IPA}}", "tho.chak.e", "yr")
	def test_tochageo_ipa(self):
		self.run_test("토착어", "{{ko-IPA}}", "[tʰo̞t͡ɕʰa̠ɡʌ̹]", "ipa")


	def test_byeong_ph(self):
		self.run_test("병", "{{ko-IPA}}", "병", "ph")
	def test_byeong_rr(self):
		self.run_test("병", "{{ko-IPA}}", "byeong", "rr")
	def test_byeong_rrr(self):
		self.run_test("병", "{{ko-IPA}}", "byeong", "rrr")
	def test_byeong_mr(self):
		self.run_test("병", "{{ko-IPA}}", "pyŏng", "mr")
	def test_byeong_yr(self):
		self.run_test("병", "{{ko-IPA}}", "pyeng", "yr")
	def test_byeong_ipa(self):
		self.run_test("병", "{{ko-IPA}}", "[pjʌ̹ŋ]", "ipa")
	def test_byeong_ph_1(self):
		self.run_test("병", "{{ko-IPA|l=y}}", "병(ː)", "ph")
	def test_byeong_rr_1(self):
		self.run_test("병", "{{ko-IPA|l=y}}", "byeong", "rr")
	def test_byeong_rrr_1(self):
		self.run_test("병", "{{ko-IPA|l=y}}", "byeong", "rrr")
	def test_byeong_mr_1(self):
		self.run_test("병", "{{ko-IPA|l=y}}", "pyŏng", "mr")
	def test_byeong_yr_1(self):
		self.run_test("병", "{{ko-IPA|l=y}}", "pyēng", "yr")
	def test_byeong_ipa_1(self):
		self.run_test("병", "{{ko-IPA|l=y}}", "[pjɘ(ː)ŋ]", "ipa")
	def test_byeong_ph_2(self):
		self.run_test("병", "{{ko-IPA}}", "병", "ph")
	def test_byeong_rr_2(self):
		self.run_test("병", "{{ko-IPA}}", "byeong", "rr")
	def test_byeong_rrr_2(self):
		self.run_test("병", "{{ko-IPA}}", "byeong", "rrr")
	def test_byeong_mr_2(self):
		self.run_test("병", "{{ko-IPA}}", "pyŏng", "mr")
	def test_byeong_yr_2(self):
		self.run_test("병", "{{ko-IPA}}", "pyeng", "yr")
	def test_byeong_ipa_2(self):
		self.run_test("병", "{{ko-IPA}}", "[pjʌ̹ŋ]", "ipa")

	def test_nonggu_ph(self):
		self.run_test("농구", "{{ko-IPA}}", "농구", "ph")
	def test_nonggu_rr(self):
		self.run_test("농구", "{{ko-IPA}}", "nonggu", "rr")
	def test_nonggu_rrr(self):
		self.run_test("농구", "{{ko-IPA}}", "nonggu", "rrr")
	def test_nonggu_mr(self):
		self.run_test("농구", "{{ko-IPA}}", "nonggu", "mr")
	def test_nonggu_yr(self):
		self.run_test("농구", "{{ko-IPA}}", "nongkwu", "yr")
	def test_nonggu_ipa(self):
		self.run_test("농구", "{{ko-IPA}}", "[no̞ŋɡu]", "ipa")

	def test_baegu_ph(self):
		self.run_test("배구", "{{ko-IPA}}", "배구/베구", "ph")
	def test_baegu_rr(self):
		self.run_test("배구", "{{ko-IPA}}", "baegu", "rr")
	def test_baegu_rrr(self):
		self.run_test("배구", "{{ko-IPA}}", "baegu", "rrr")
	def test_baegu_mr(self):
		self.run_test("배구", "{{ko-IPA}}", "paegu", "mr")
	def test_baegu_yr(self):
		self.run_test("배구", "{{ko-IPA}}", "paykwu", "yr")
	def test_baegu_ipa(self):
		self.run_test("배구", "{{ko-IPA}}", "[pɛɡu] ~ [pe̞ɡu]", "ipa")

	def test_gwontu_ph(self):
		self.run_test("권투", "{{ko-IPA}}", "권투", "ph")
	def test_gwontu_rr(self):
		self.run_test("권투", "{{ko-IPA}}", "gwontu", "rr")
	def test_gwontu_rrr(self):
		self.run_test("권투", "{{ko-IPA}}", "gwontu", "rrr")
	def test_gwontu_mr(self):
		self.run_test("권투", "{{ko-IPA}}", "kwŏnt'u", "mr")
	def test_gwontu_yr(self):
		self.run_test("권투", "{{ko-IPA}}", "kwenthwu", "yr")
	def test_gwontu_ipa(self):
		self.run_test("권투", "{{ko-IPA}}", "[kwʌ̹ntʰu]", "ipa")

	def test_boksing_ph(self):
		self.run_test("복싱", "{{ko-IPA}}", "복씽", "ph")
	def test_boksing_rr(self):
		self.run_test("복싱", "{{ko-IPA}}", "boksing", "rr")
	def test_boksing_rrr(self):
		self.run_test("복싱", "{{ko-IPA}}", "bogsing", "rrr")
	def test_boksing_mr(self):
		self.run_test("복싱", "{{ko-IPA}}", "poksing", "mr")
	def test_boksing_yr(self):
		self.run_test("복싱", "{{ko-IPA}}", "pok.sing", "yr")
	def test_boksing_ipa(self):
		self.run_test("복싱", "{{ko-IPA}}", "[po̞kɕ͈iŋ]", "ipa")

	def test_reseulling_ph(self):
		self.run_test("레슬링", "{{ko-IPA|com=1}}", "레쓸링", "ph")
	def test_reseulling_rr(self):
		self.run_test("레슬링", "{{ko-IPA|com=1}}", "reseulling", "rr")
	def test_reseulling_rrr(self):
		self.run_test("레슬링", "{{ko-IPA|com=1}}", "leseulling", "rrr")
	def test_reseulling_mr(self):
		self.run_test("레슬링", "{{ko-IPA|com=1}}", "ressŭlling", "mr")
	def test_reseulling_yr(self):
		self.run_test("레슬링", "{{ko-IPA|com=1}}", "leyqsulling", "yr")
	def test_reseulling_ipa(self):
		self.run_test("레슬링", "{{ko-IPA|com=1}}", "[ɾe̞s͈ɯʎʎiŋ]", "ipa")

	def test_songgu_ph(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "송(ː)구", "ph")
	def test_songgu_rr(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "songgu", "rr")
	def test_songgu_rrr(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "songgu", "rrr")
	def test_songgu_mr(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "songgu", "mr")
	def test_songgu_yr(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "sōngkwu", "yr")
	def test_songgu_ipa(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "[ˈsʰo̞(ː)ŋɡu]", "ipa")
	def test_songgu_ph_1(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "송(ː)구", "ph")
	def test_songgu_rr_1(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "songgu", "rr")
	def test_songgu_rrr_1(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "songgu", "rrr")
	def test_songgu_mr_1(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "songgu", "mr")
	def test_songgu_yr_1(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "sōngkwu", "yr")
	def test_songgu_ipa_1(self):
		self.run_test("송구", "{{ko-IPA|l=y}}", "[ˈsʰo̞(ː)ŋɡu]", "ipa")

	def test_bangmangi_ph(self):
		self.run_test("방망이", "{{ko-IPA}}", "방망이", "ph")
	def test_bangmangi_rr(self):
		self.run_test("방망이", "{{ko-IPA}}", "bangmang'i", "rr")
	def test_bangmangi_rrr(self):
		self.run_test("방망이", "{{ko-IPA}}", "bangmang'i", "rrr")
	def test_bangmangi_mr(self):
		self.run_test("방망이", "{{ko-IPA}}", "pangmangi", "mr")
	def test_bangmangi_yr(self):
		self.run_test("방망이", "{{ko-IPA}}", "pangmangi", "yr")
	def test_bangmangi_ipa(self):
		self.run_test("방망이", "{{ko-IPA}}", "[pa̠ŋma̠ŋi]", "ipa")

	def test_haendeubol_ph(self):
		self.run_test("핸드볼", "{{ko-IPA}}", "핸드볼/헨드볼", "ph")
	def test_haendeubol_rr(self):
		self.run_test("핸드볼", "{{ko-IPA}}", "haendeubol", "rr")
	def test_haendeubol_rrr(self):
		self.run_test("핸드볼", "{{ko-IPA}}", "haendeubol", "rrr")
	def test_haendeubol_mr(self):
		self.run_test("핸드볼", "{{ko-IPA}}", "haendŭbol", "mr")
	def test_haendeubol_yr(self):
		self.run_test("핸드볼", "{{ko-IPA}}", "hayntupol", "yr")
	def test_haendeubol_ipa(self):
		self.run_test("핸드볼", "{{ko-IPA}}", "[hɛndɯbo̞ɭ] ~ [he̞ndɯbo̞ɭ]", "ipa")

	def test_suyeong_ph(self):
		self.run_test("수영", "{{ko-IPA}}", "수영", "ph")
	def test_suyeong_rr(self):
		self.run_test("수영", "{{ko-IPA}}", "suyeong", "rr")
	def test_suyeong_rrr(self):
		self.run_test("수영", "{{ko-IPA}}", "suyeong", "rrr")
	def test_suyeong_mr(self):
		self.run_test("수영", "{{ko-IPA}}", "suyŏng", "mr")
	def test_suyeong_yr(self):
		self.run_test("수영", "{{ko-IPA}}", "swu.yeng", "yr")
	def test_suyeong_ipa(self):
		self.run_test("수영", "{{ko-IPA}}", "[sʰujʌ̹ŋ]", "ipa")

	def test_haki_ph(self):
		self.run_test("하키", "{{ko-IPA}}", "하키", "ph")
	def test_haki_rr(self):
		self.run_test("하키", "{{ko-IPA}}", "haki", "rr")
	def test_haki_rrr(self):
		self.run_test("하키", "{{ko-IPA}}", "haki", "rrr")
	def test_haki_mr(self):
		self.run_test("하키", "{{ko-IPA}}", "hak'i", "mr")
	def test_haki_yr(self):
		self.run_test("하키", "{{ko-IPA}}", "ha.khi", "yr")
	def test_haki_ipa(self):
		self.run_test("하키", "{{ko-IPA}}", "[ha̠cçi]", "ipa")

	def test_pildeuhaki_ph(self):
		self.run_test("필드하키", "{{ko-IPA}}", "필드하키", "ph")
	def test_pildeuhaki_rr(self):
		self.run_test("필드하키", "{{ko-IPA}}", "pildeuhaki", "rr")
	def test_pildeuhaki_rrr(self):
		self.run_test("필드하키", "{{ko-IPA}}", "pildeuhaki", "rrr")
	def test_pildeuhaki_mr(self):
		self.run_test("필드하키", "{{ko-IPA}}", "p'ildŭhak'i", "mr")
	def test_pildeuhaki_yr(self):
		self.run_test("필드하키", "{{ko-IPA}}", "philtuha.khi", "yr")
	def test_pildeuhaki_ipa(self):
		self.run_test("필드하키", "{{ko-IPA}}", "[pʰiɭdɯɦa̠cçi]", "ipa")

	def test_yudo_ph(self):
		self.run_test("유도", "{{ko-IPA}}", "유도", "ph")
	def test_yudo_rr(self):
		self.run_test("유도", "{{ko-IPA}}", "yudo", "rr")
	def test_yudo_rrr(self):
		self.run_test("유도", "{{ko-IPA}}", "yudo", "rrr")
	def test_yudo_mr(self):
		self.run_test("유도", "{{ko-IPA}}", "yudo", "mr")
	def test_yudo_yr(self):
		self.run_test("유도", "{{ko-IPA}}", "yuto", "yr")
	def test_yudo_ipa(self):
		self.run_test("유도", "{{ko-IPA}}", "[judo̞]", "ipa")

	def test_gumeong_ph(self):
		self.run_test("구멍", "{{ko-IPA}}", "구멍", "ph")
	def test_gumeong_rr(self):
		self.run_test("구멍", "{{ko-IPA}}", "gumeong", "rr")
	def test_gumeong_rrr(self):
		self.run_test("구멍", "{{ko-IPA}}", "gumeong", "rrr")
	def test_gumeong_mr(self):
		self.run_test("구멍", "{{ko-IPA}}", "kumŏng", "mr")
	def test_gumeong_yr(self):
		self.run_test("구멍", "{{ko-IPA}}", "kwumeng", "yr")
	def test_gumeong_ipa(self):
		self.run_test("구멍", "{{ko-IPA}}", "[kumʌ̹ŋ]", "ipa")

	def test_gongjja_ph(self):
		self.run_test("공짜", "{{ko-IPA}}", "공짜", "ph")
	def test_gongjja_rr(self):
		self.run_test("공짜", "{{ko-IPA}}", "gongjja", "rr")
	def test_gongjja_rrr(self):
		self.run_test("공짜", "{{ko-IPA}}", "gongjja", "rrr")
	def test_gongjja_mr(self):
		self.run_test("공짜", "{{ko-IPA}}", "kongtcha", "mr")
	def test_gongjja_yr(self):
		self.run_test("공짜", "{{ko-IPA}}", "kongcca", "yr")
	def test_gongjja_ipa(self):
		self.run_test("공짜", "{{ko-IPA}}", "[ko̞ŋt͡ɕ͈a̠]", "ipa")

	def test_jumeoni_ph(self):
		self.run_test("주머니", "{{ko-IPA}}", "주머니", "ph")
	def test_jumeoni_rr(self):
		self.run_test("주머니", "{{ko-IPA}}", "jumeoni", "rr")
	def test_jumeoni_rrr(self):
		self.run_test("주머니", "{{ko-IPA}}", "jumeoni", "rrr")
	def test_jumeoni_mr(self):
		self.run_test("주머니", "{{ko-IPA}}", "chumŏni", "mr")
	def test_jumeoni_yr(self):
		self.run_test("주머니", "{{ko-IPA}}", "cwumeni", "yr")
	def test_jumeoni_ipa(self):
		self.run_test("주머니", "{{ko-IPA}}", "[t͡ɕumʌ̹ni]", "ipa")

	def test_dakssaum_ph(self):
		self.run_test("닭싸움", "{{ko-IPA}}", "닥싸움", "ph")
	def test_dakssaum_rr(self):
		self.run_test("닭싸움", "{{ko-IPA}}", "dakssaum", "rr")
	def test_dakssaum_rrr(self):
		self.run_test("닭싸움", "{{ko-IPA}}", "dalgssaum", "rrr")
	def test_dakssaum_mr(self):
		self.run_test("닭싸움", "{{ko-IPA}}", "takssaum", "mr")
	def test_dakssaum_yr(self):
		self.run_test("닭싸움", "{{ko-IPA}}", "talkssawum", "yr")
	def test_dakssaum_ipa(self):
		self.run_test("닭싸움", "{{ko-IPA}}", "[ta̠ks͈a̠um]", "ipa")

	def test_dalpaengi_ph(self):
		self.run_test("달팽이", "{{ko-IPA}}", "달팽이/달펭이", "ph")
	def test_dalpaengi_rr(self):
		self.run_test("달팽이", "{{ko-IPA}}", "dalpaeng'i", "rr")
	def test_dalpaengi_rrr(self):
		self.run_test("달팽이", "{{ko-IPA}}", "dalpaeng'i", "rrr")
	def test_dalpaengi_mr(self):
		self.run_test("달팽이", "{{ko-IPA}}", "talp'aengi", "mr")
	def test_dalpaengi_yr(self):
		self.run_test("달팽이", "{{ko-IPA}}", "tal.phayngi", "yr")
	def test_dalpaengi_ipa(self):
		self.run_test("달팽이", "{{ko-IPA}}", "[ta̠ɭpʰɛŋi] ~ [ta̠ɭpʰe̞ŋi]", "ipa")

	def test_ojingeo_ph(self):
		self.run_test("오징어", "{{ko-IPA}}", "오징어", "ph")
	def test_ojingeo_rr(self):
		self.run_test("오징어", "{{ko-IPA}}", "ojing'eo", "rr")
	def test_ojingeo_rrr(self):
		self.run_test("오징어", "{{ko-IPA}}", "ojing'eo", "rrr")
	def test_ojingeo_mr(self):
		self.run_test("오징어", "{{ko-IPA}}", "ojingŏ", "mr")
	def test_ojingeo_yr(self):
		self.run_test("오징어", "{{ko-IPA}}", "ocinge", "yr")
	def test_ojingeo_ipa(self):
		self.run_test("오징어", "{{ko-IPA}}", "[o̞d͡ʑiŋʌ̹]", "ipa")

	def test_nakji_ph(self):
		self.run_test("낙지", "{{ko-IPA}}", "낙찌", "ph")
	def test_nakji_rr(self):
		self.run_test("낙지", "{{ko-IPA}}", "nakji", "rr")
	def test_nakji_rrr(self):
		self.run_test("낙지", "{{ko-IPA}}", "nagji", "rrr")
	def test_nakji_mr(self):
		self.run_test("낙지", "{{ko-IPA}}", "nakchi", "mr")
	def test_nakji_yr(self):
		self.run_test("낙지", "{{ko-IPA}}", "nakci", "yr")
	def test_nakji_ipa(self):
		self.run_test("낙지", "{{ko-IPA}}", "[na̠k̚t͡ɕ͈i]", "ipa")

	def test_honghap_ph(self):
		self.run_test("홍합", "{{ko-IPA}}", "홍합", "ph")
	def test_honghap_rr(self):
		self.run_test("홍합", "{{ko-IPA}}", "honghap", "rr")
	def test_honghap_rrr(self):
		self.run_test("홍합", "{{ko-IPA}}", "honghab", "rrr")
	def test_honghap_mr(self):
		self.run_test("홍합", "{{ko-IPA}}", "honghap", "mr")
	def test_honghap_yr(self):
		self.run_test("홍합", "{{ko-IPA}}", "honghap", "yr")
	def test_honghap_ipa(self):
		self.run_test("홍합", "{{ko-IPA}}", "[ɸʷo̞ŋɦa̠p̚]", "ipa")

	def test_honghak_ph(self):
		self.run_test("홍학", "{{ko-IPA}}", "홍학", "ph")
	def test_honghak_rr(self):
		self.run_test("홍학", "{{ko-IPA}}", "honghak", "rr")
	def test_honghak_rrr(self):
		self.run_test("홍학", "{{ko-IPA}}", "honghag", "rrr")
	def test_honghak_mr(self):
		self.run_test("홍학", "{{ko-IPA}}", "honghak", "mr")
	def test_honghak_yr(self):
		self.run_test("홍학", "{{ko-IPA}}", "honghak", "yr")
	def test_honghak_ipa(self):
		self.run_test("홍학", "{{ko-IPA}}", "[ɸʷo̞ŋɦa̠k̚]", "ipa")

	def test_jogae_ph(self):
		self.run_test("조개", "{{ko-IPA}}", "조개/조게", "ph")
	def test_jogae_rr(self):
		self.run_test("조개", "{{ko-IPA}}", "jogae", "rr")
	def test_jogae_rrr(self):
		self.run_test("조개", "{{ko-IPA}}", "jogae", "rrr")
	def test_jogae_mr(self):
		self.run_test("조개", "{{ko-IPA}}", "chogae", "mr")
	def test_jogae_yr(self):
		self.run_test("조개", "{{ko-IPA}}", "cokay", "yr")
	def test_jogae_ipa(self):
		self.run_test("조개", "{{ko-IPA}}", "[t͡ɕo̞ɡɛ] ~ [t͡ɕo̞ɡe̞]", "ipa")

	def test_meonji_ph(self):
		self.run_test("먼지", "{{ko-IPA}}", "먼지", "ph")
	def test_meonji_rr(self):
		self.run_test("먼지", "{{ko-IPA}}", "meonji", "rr")
	def test_meonji_rrr(self):
		self.run_test("먼지", "{{ko-IPA}}", "meonji", "rrr")
	def test_meonji_mr(self):
		self.run_test("먼지", "{{ko-IPA}}", "mŏnji", "mr")
	def test_meonji_yr(self):
		self.run_test("먼지", "{{ko-IPA}}", "men.ci", "yr")
	def test_meonji_ipa(self):
		self.run_test("먼지", "{{ko-IPA}}", "[mʌ̹ɲd͡ʑi]", "ipa")

	def test_keoteun_ph(self):
		self.run_test("커튼", "{{ko-IPA}}", "커튼", "ph")
	def test_keoteun_rr(self):
		self.run_test("커튼", "{{ko-IPA}}", "keoteun", "rr")
	def test_keoteun_rrr(self):
		self.run_test("커튼", "{{ko-IPA}}", "keoteun", "rrr")
	def test_keoteun_mr(self):
		self.run_test("커튼", "{{ko-IPA}}", "k'ŏt'ŭn", "mr")
	def test_keoteun_yr(self):
		self.run_test("커튼", "{{ko-IPA}}", "khe.thun", "yr")
	def test_keoteun_ipa(self):
		self.run_test("커튼", "{{ko-IPA}}", "[kʰʌ̹tʰɯn]", "ipa")

	def test_segyun_ph(self):
		self.run_test("세균", "{{ko-IPA|l=y}}", "세(ː)균", "ph")
	def test_segyun_rr(self):
		self.run_test("세균", "{{ko-IPA|l=y}}", "segyun", "rr")
	def test_segyun_rrr(self):
		self.run_test("세균", "{{ko-IPA|l=y}}", "segyun", "rrr")
	def test_segyun_mr(self):
		self.run_test("세균", "{{ko-IPA|l=y}}", "segyun", "mr")
	def test_segyun_yr(self):
		self.run_test("세균", "{{ko-IPA|l=y}}", "sēykyun", "yr")
	def test_segyun_ipa(self):
		self.run_test("세균", "{{ko-IPA|l=y}}", "[ˈsʰe̞(ː)ɡjun]", "ipa")

	def test_danpung_ph(self):
		self.run_test("단풍", "{{ko-IPA}}", "단풍", "ph")
	def test_danpung_rr(self):
		self.run_test("단풍", "{{ko-IPA}}", "danpung", "rr")
	def test_danpung_rrr(self):
		self.run_test("단풍", "{{ko-IPA}}", "danpung", "rrr")
	def test_danpung_mr(self):
		self.run_test("단풍", "{{ko-IPA}}", "tanp'ung", "mr")
	def test_danpung_yr(self):
		self.run_test("단풍", "{{ko-IPA}}", "tanphung", "yr")
	def test_danpung_ipa(self):
		self.run_test("단풍", "{{ko-IPA}}", "[ta̠npʰuŋ]", "ipa")

	def test_danpungnamu_ph(self):
		self.run_test("단풍나무", "{{ko-IPA}}", "단풍나무", "ph")
	def test_danpungnamu_rr(self):
		self.run_test("단풍나무", "{{ko-IPA}}", "danpungnamu", "rr")
	def test_danpungnamu_rrr(self):
		self.run_test("단풍나무", "{{ko-IPA}}", "danpungnamu", "rrr")
	def test_danpungnamu_mr(self):
		self.run_test("단풍나무", "{{ko-IPA}}", "tanp'ungnamu", "mr")
	def test_danpungnamu_yr(self):
		self.run_test("단풍나무", "{{ko-IPA}}", "tanphungnamu", "yr")
	def test_danpungnamu_ipa(self):
		self.run_test("단풍나무", "{{ko-IPA}}", "[ta̠npʰuŋna̠mu]", "ipa")

	def test_nari_ph(self):
		self.run_test("나리", "{{ko-IPA|l=y}}", "나(ː)리", "ph")
	def test_nari_rr(self):
		self.run_test("나리", "{{ko-IPA|l=y}}", "nari", "rr")
	def test_nari_rrr(self):
		self.run_test("나리", "{{ko-IPA|l=y}}", "nali", "rrr")
	def test_nari_mr(self):
		self.run_test("나리", "{{ko-IPA|l=y}}", "nari", "mr")
	def test_nari_yr(self):
		self.run_test("나리", "{{ko-IPA|l=y}}", "nāli", "yr")
	def test_nari_ipa(self):
		self.run_test("나리", "{{ko-IPA|l=y}}", "[ˈna̠(ː)ɾi]", "ipa")
	def test_nari_ph_1(self):
		self.run_test("나리", "{{ko-IPA}}", "나리", "ph")
	def test_nari_rr_1(self):
		self.run_test("나리", "{{ko-IPA}}", "nari", "rr")
	def test_nari_rrr_1(self):
		self.run_test("나리", "{{ko-IPA}}", "nali", "rrr")
	def test_nari_mr_1(self):
		self.run_test("나리", "{{ko-IPA}}", "nari", "mr")
	def test_nari_yr_1(self):
		self.run_test("나리", "{{ko-IPA}}", "nali", "yr")
	def test_nari_ipa_1(self):
		self.run_test("나리", "{{ko-IPA}}", "[na̠ɾi]", "ipa")

	def test_bam_ph(self):
		self.run_test("밤", "{{ko-IPA|a=Ko-밤(단음).ogg}}", "밤", "ph")
	def test_bam_rr(self):
		self.run_test("밤", "{{ko-IPA|a=Ko-밤(단음).ogg}}", "bam", "rr")
	def test_bam_rrr(self):
		self.run_test("밤", "{{ko-IPA|a=Ko-밤(단음).ogg}}", "bam", "rrr")
	def test_bam_mr(self):
		self.run_test("밤", "{{ko-IPA|a=Ko-밤(단음).ogg}}", "pam", "mr")
	def test_bam_yr(self):
		self.run_test("밤", "{{ko-IPA|a=Ko-밤(단음).ogg}}", "pam", "yr")
	def test_bam_ipa(self):
		self.run_test("밤", "{{ko-IPA|a=Ko-밤(단음).ogg}}", "[pa̠m]", "ipa")
	def test_bam_ph_1(self):
		self.run_test("밤", "{{ko-IPA|l=y|a=Ko-밤(장음).ogg}}", "밤(ː)", "ph")
	def test_bam_rr_1(self):
		self.run_test("밤", "{{ko-IPA|l=y|a=Ko-밤(장음).ogg}}", "bam", "rr")
	def test_bam_rrr_1(self):
		self.run_test("밤", "{{ko-IPA|l=y|a=Ko-밤(장음).ogg}}", "bam", "rrr")
	def test_bam_mr_1(self):
		self.run_test("밤", "{{ko-IPA|l=y|a=Ko-밤(장음).ogg}}", "pam", "mr")
	def test_bam_yr_1(self):
		self.run_test("밤", "{{ko-IPA|l=y|a=Ko-밤(장음).ogg}}", "pām", "yr")
	def test_bam_ipa_1(self):
		self.run_test("밤", "{{ko-IPA|l=y|a=Ko-밤(장음).ogg}}", "[pa̠(ː)m]", "ipa")

	def test_gyeongwa_ph(self):
		self.run_test("견과", "{{ko-IPA}}", "견과", "ph")
	def test_gyeongwa_rr(self):
		self.run_test("견과", "{{ko-IPA}}", "gyeon'gwa", "rr")
	def test_gyeongwa_rrr(self):
		self.run_test("견과", "{{ko-IPA}}", "gyeongwa", "rrr")
	def test_gyeongwa_mr(self):
		self.run_test("견과", "{{ko-IPA}}", "kyŏn'gwa", "mr")
	def test_gyeongwa_yr(self):
		self.run_test("견과", "{{ko-IPA}}", "kyenkwa", "yr")
	def test_gyeongwa_ipa(self):
		self.run_test("견과", "{{ko-IPA}}", "[kjʌ̹nɡwa̠]", "ipa")

	def test_do_ph(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "도(ː)", "ph")
	def test_do_rr(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "do", "rr")
	def test_do_rrr(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "do", "rrr")
	def test_do_mr(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "to", "mr")
	def test_do_yr(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "tō", "yr")
	def test_do_ipa(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "[to̞(ː)]", "ipa")
	def test_do_ph_1(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "도(ː)", "ph")
	def test_do_rr_1(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "do", "rr")
	def test_do_rrr_1(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "do", "rrr")
	def test_do_mr_1(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "to", "mr")
	def test_do_yr_1(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "tō", "yr")
	def test_do_ipa_1(self):
		self.run_test("도", "{{ko-IPA|l=y}}", "[to̞(ː)]", "ipa")
	def test_do_ph_2(self):
		self.run_test("도", "{{ko-IPA}}", "도", "ph")
	def test_do_rr_2(self):
		self.run_test("도", "{{ko-IPA}}", "do", "rr")
	def test_do_rrr_2(self):
		self.run_test("도", "{{ko-IPA}}", "do", "rrr")
	def test_do_mr_2(self):
		self.run_test("도", "{{ko-IPA}}", "to", "mr")
	def test_do_yr_2(self):
		self.run_test("도", "{{ko-IPA}}", "to", "yr")
	def test_do_ipa_2(self):
		self.run_test("도", "{{ko-IPA}}", "[to̞]", "ipa")

	def test_amu_ph(self):
		self.run_test("아무", "{{ko-IPA|l=y}}", "아(ː)무", "ph")
	def test_amu_rr(self):
		self.run_test("아무", "{{ko-IPA|l=y}}", "amu", "rr")
	def test_amu_rrr(self):
		self.run_test("아무", "{{ko-IPA|l=y}}", "amu", "rrr")
	def test_amu_mr(self):
		self.run_test("아무", "{{ko-IPA|l=y}}", "amu", "mr")
	def test_amu_yr(self):
		self.run_test("아무", "{{ko-IPA|l=y}}", "āmu", "yr")
	def test_amu_ipa(self):
		self.run_test("아무", "{{ko-IPA|l=y}}", "[ˈa̠(ː)mu]", "ipa")

	def test_ttae_ph(self):
		self.run_test("때", "{{ko-IPA|a=y}}", "때/떼", "ph")
	def test_ttae_rr(self):
		self.run_test("때", "{{ko-IPA|a=y}}", "ttae", "rr")
	def test_ttae_rrr(self):
		self.run_test("때", "{{ko-IPA|a=y}}", "ttae", "rrr")
	def test_ttae_mr(self):
		self.run_test("때", "{{ko-IPA|a=y}}", "ttae", "mr")
	def test_ttae_yr(self):
		self.run_test("때", "{{ko-IPA|a=y}}", "ttay", "yr")
	def test_ttae_ipa(self):
		self.run_test("때", "{{ko-IPA|a=y}}", "[t͈ɛ] ~ [t͈e̞]", "ipa")

	def test_eomma_ph(self):
		self.run_test("엄마", "{{ko-IPA|a=y}}", "엄마", "ph")
	def test_eomma_rr(self):
		self.run_test("엄마", "{{ko-IPA|a=y}}", "eomma", "rr")
	def test_eomma_rrr(self):
		self.run_test("엄마", "{{ko-IPA|a=y}}", "eomma", "rrr")
	def test_eomma_mr(self):
		self.run_test("엄마", "{{ko-IPA|a=y}}", "ŏmma", "mr")
	def test_eomma_yr(self):
		self.run_test("엄마", "{{ko-IPA|a=y}}", "emma", "yr")
	def test_eomma_ipa(self):
		self.run_test("엄마", "{{ko-IPA|a=y}}", "[ʌ̹mma̠]", "ipa")

	def test_eonni_ph(self):
		self.run_test("언니", "{{ko-IPA|a=y}}", "언니", "ph")
	def test_eonni_rr(self):
		self.run_test("언니", "{{ko-IPA|a=y}}", "eonni", "rr")
	def test_eonni_rrr(self):
		self.run_test("언니", "{{ko-IPA|a=y}}", "eonni", "rrr")
	def test_eonni_mr(self):
		self.run_test("언니", "{{ko-IPA|a=y}}", "ŏnni", "mr")
	def test_eonni_yr(self):
		self.run_test("언니", "{{ko-IPA|a=y}}", "enni", "yr")
	def test_eonni_ipa(self):
		self.run_test("언니", "{{ko-IPA|a=y}}", "[ʌ̹nni]", "ipa")

	def test_oppa_ph(self):
		self.run_test("오빠", "{{ko-IPA}}", "오빠", "ph")
	def test_oppa_rr(self):
		self.run_test("오빠", "{{ko-IPA}}", "oppa", "rr")
	def test_oppa_rrr(self):
		self.run_test("오빠", "{{ko-IPA}}", "o'ppa", "rrr")
	def test_oppa_mr(self):
		self.run_test("오빠", "{{ko-IPA}}", "oppa", "mr")
	def test_oppa_yr(self):
		self.run_test("오빠", "{{ko-IPA}}", "o.ppa", "yr")
	def test_oppa_ipa(self):
		self.run_test("오빠", "{{ko-IPA}}", "[o̞p͈a̠]", "ipa")

	def test_appa_ph(self):
		self.run_test("아빠", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-아빠.wav}}", "아빠", "ph")
	def test_appa_rr(self):
		self.run_test("아빠", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-아빠.wav}}", "appa", "rr")
	def test_appa_rrr(self):
		self.run_test("아빠", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-아빠.wav}}", "a'ppa", "rrr")
	def test_appa_mr(self):
		self.run_test("아빠", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-아빠.wav}}", "appa", "mr")
	def test_appa_yr(self):
		self.run_test("아빠", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-아빠.wav}}", "a.ppa", "yr")
	def test_appa_ipa(self):
		self.run_test("아빠", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-아빠.wav}}", "[a̠p͈a̠]", "ipa")

	def test_gajok_ph(self):
		self.run_test("가족", "{{ko-IPA}}", "가족", "ph")
	def test_gajok_rr(self):
		self.run_test("가족", "{{ko-IPA}}", "gajok", "rr")
	def test_gajok_rrr(self):
		self.run_test("가족", "{{ko-IPA}}", "gajog", "rrr")
	def test_gajok_mr(self):
		self.run_test("가족", "{{ko-IPA}}", "kajok", "mr")
	def test_gajok_yr(self):
		self.run_test("가족", "{{ko-IPA}}", "kacok", "yr")
	def test_gajok_ipa(self):
		self.run_test("가족", "{{ko-IPA}}", "[ka̠d͡ʑo̞k̚]", "ipa")

	def test_adeul_ph(self):
		self.run_test("아들", "{{ko-IPA|a=y}}", "아들", "ph")
	def test_adeul_rr(self):
		self.run_test("아들", "{{ko-IPA|a=y}}", "adeul", "rr")
	def test_adeul_rrr(self):
		self.run_test("아들", "{{ko-IPA|a=y}}", "adeul", "rrr")
	def test_adeul_mr(self):
		self.run_test("아들", "{{ko-IPA|a=y}}", "adŭl", "mr")
	def test_adeul_yr(self):
		self.run_test("아들", "{{ko-IPA|a=y}}", "atul", "yr")
	def test_adeul_ipa(self):
		self.run_test("아들", "{{ko-IPA|a=y}}", "[a̠dɯɭ]", "ipa")

	def test_harabeoji_ph(self):
		self.run_test("할아버지", "{{ko-IPA}}", "하라버지", "ph")
	def test_harabeoji_rr(self):
		self.run_test("할아버지", "{{ko-IPA}}", "harabeoji", "rr")
	def test_harabeoji_rrr(self):
		self.run_test("할아버지", "{{ko-IPA}}", "hal'abeoji", "rrr")
	def test_harabeoji_mr(self):
		self.run_test("할아버지", "{{ko-IPA}}", "harabŏji", "mr")
	def test_harabeoji_yr(self):
		self.run_test("할아버지", "{{ko-IPA}}", "hal.apeci", "yr")
	def test_harabeoji_ipa(self):
		self.run_test("할아버지", "{{ko-IPA}}", "[ha̠ɾa̠bʌ̹d͡ʑi]", "ipa")

	def test_sonja_ph(self):
		self.run_test("손자", "{{ko-IPA}}", "손자", "ph")
	def test_sonja_rr(self):
		self.run_test("손자", "{{ko-IPA}}", "sonja", "rr")
	def test_sonja_rrr(self):
		self.run_test("손자", "{{ko-IPA}}", "sonja", "rrr")
	def test_sonja_mr(self):
		self.run_test("손자", "{{ko-IPA}}", "sonja", "mr")
	def test_sonja_yr(self):
		self.run_test("손자", "{{ko-IPA}}", "son.ca", "yr")
	def test_sonja_ipa(self):
		self.run_test("손자", "{{ko-IPA}}", "[sʰo̞ɲd͡ʑa̠]", "ipa")

	def test_haetbit_ph(self):
		self.run_test("햇빛", "{{ko-IPA|nobc=1}}", "핻삗/해삗/헫삗/헤삗", "ph")
	def test_haetbit_rr(self):
		self.run_test("햇빛", "{{ko-IPA|nobc=1}}", "haetbit", "rr")
	def test_haetbit_rrr(self):
		self.run_test("햇빛", "{{ko-IPA|nobc=1}}", "haesbich", "rrr")
	def test_haetbit_mr(self):
		self.run_test("햇빛", "{{ko-IPA|nobc=1}}", "haetpit", "mr")
	def test_haetbit_yr(self):
		self.run_test("햇빛", "{{ko-IPA|nobc=1}}", "hayspich", "yr")
	def test_haetbit_ipa(self):
		self.run_test("햇빛", "{{ko-IPA|nobc=1}}", "[hɛt̚p͈it̚] ~ [hɛp͈it̚] ~ [he̞t̚p͈it̚] ~ [he̞p͈it̚]", "ipa")

	def test_bit_ph(self):
		self.run_test("빛", "{{ko-IPA}}", "빋", "ph")
	def test_bit_rr(self):
		self.run_test("빛", "{{ko-IPA}}", "bit", "rr")
	def test_bit_rrr(self):
		self.run_test("빛", "{{ko-IPA}}", "bich", "rrr")
	def test_bit_mr(self):
		self.run_test("빛", "{{ko-IPA}}", "pit", "mr")
	def test_bit_yr(self):
		self.run_test("빛", "{{ko-IPA}}", "pich", "yr")
	def test_bit_ipa(self):
		self.run_test("빛", "{{ko-IPA}}", "[pit̚]", "ipa")

	def test_joka_ph(self):
		self.run_test("조카", "{{ko-IPA}}", "조카", "ph")
	def test_joka_rr(self):
		self.run_test("조카", "{{ko-IPA}}", "joka", "rr")
	def test_joka_rrr(self):
		self.run_test("조카", "{{ko-IPA}}", "joka", "rrr")
	def test_joka_mr(self):
		self.run_test("조카", "{{ko-IPA}}", "chok'a", "mr")
	def test_joka_yr(self):
		self.run_test("조카", "{{ko-IPA}}", "co.kha", "yr")
	def test_joka_ipa(self):
		self.run_test("조카", "{{ko-IPA}}", "[t͡ɕo̞kʰa̠]", "ipa")

	def test_imo_ph(self):
		self.run_test("이모", "{{ko-IPA}}", "이모", "ph")
	def test_imo_rr(self):
		self.run_test("이모", "{{ko-IPA}}", "imo", "rr")
	def test_imo_rrr(self):
		self.run_test("이모", "{{ko-IPA}}", "imo", "rrr")
	def test_imo_mr(self):
		self.run_test("이모", "{{ko-IPA}}", "imo", "mr")
	def test_imo_yr(self):
		self.run_test("이모", "{{ko-IPA}}", "imo", "yr")
	def test_imo_ipa(self):
		self.run_test("이모", "{{ko-IPA}}", "[imo̞]", "ipa")
	def test_imo_ph_1(self):
		self.run_test("이모", "{{ko-IPA|l=y}}", "이(ː)모", "ph")
	def test_imo_rr_1(self):
		self.run_test("이모", "{{ko-IPA|l=y}}", "imo", "rr")
	def test_imo_rrr_1(self):
		self.run_test("이모", "{{ko-IPA|l=y}}", "imo", "rrr")
	def test_imo_mr_1(self):
		self.run_test("이모", "{{ko-IPA|l=y}}", "imo", "mr")
	def test_imo_yr_1(self):
		self.run_test("이모", "{{ko-IPA|l=y}}", "īmo", "yr")
	def test_imo_ipa_1(self):
		self.run_test("이모", "{{ko-IPA|l=y}}", "[ˈi(ː)mo̞]", "ipa")
	def test_imo_ph_2(self):
		self.run_test("이모", "{{ko-IPA}}", "이모", "ph")
	def test_imo_rr_2(self):
		self.run_test("이모", "{{ko-IPA}}", "imo", "rr")
	def test_imo_rrr_2(self):
		self.run_test("이모", "{{ko-IPA}}", "imo", "rrr")
	def test_imo_mr_2(self):
		self.run_test("이모", "{{ko-IPA}}", "imo", "mr")
	def test_imo_yr_2(self):
		self.run_test("이모", "{{ko-IPA}}", "imo", "yr")
	def test_imo_ipa_2(self):
		self.run_test("이모", "{{ko-IPA}}", "[imo̞]", "ipa")

	def test_badak_ph(self):
		self.run_test("바닥", "{{ko-IPA}}", "바닥", "ph")
	def test_badak_rr(self):
		self.run_test("바닥", "{{ko-IPA}}", "badak", "rr")
	def test_badak_rrr(self):
		self.run_test("바닥", "{{ko-IPA}}", "badag", "rrr")
	def test_badak_mr(self):
		self.run_test("바닥", "{{ko-IPA}}", "padak", "mr")
	def test_badak_yr(self):
		self.run_test("바닥", "{{ko-IPA}}", "patak", "yr")
	def test_badak_ipa(self):
		self.run_test("바닥", "{{ko-IPA}}", "[pa̠da̠k̚]", "ipa")

	def test_bae_ph(self):
		self.run_test("배", "{{ko-IPA}}", "배/베", "ph")
	def test_bae_rr(self):
		self.run_test("배", "{{ko-IPA}}", "bae", "rr")
	def test_bae_rrr(self):
		self.run_test("배", "{{ko-IPA}}", "bae", "rrr")
	def test_bae_mr(self):
		self.run_test("배", "{{ko-IPA}}", "pae", "mr")
	def test_bae_yr(self):
		self.run_test("배", "{{ko-IPA}}", "pay", "yr")
	def test_bae_ipa(self):
		self.run_test("배", "{{ko-IPA}}", "[pɛ] ~ [pe̞]", "ipa")
	def test_bae_ph_1(self):
		self.run_test("배", "{{ko-IPA}}", "배/베", "ph")
	def test_bae_rr_1(self):
		self.run_test("배", "{{ko-IPA}}", "bae", "rr")
	def test_bae_rrr_1(self):
		self.run_test("배", "{{ko-IPA}}", "bae", "rrr")
	def test_bae_mr_1(self):
		self.run_test("배", "{{ko-IPA}}", "pae", "mr")
	def test_bae_yr_1(self):
		self.run_test("배", "{{ko-IPA}}", "pay", "yr")
	def test_bae_ipa_1(self):
		self.run_test("배", "{{ko-IPA}}", "[pɛ] ~ [pe̞]", "ipa")
	def test_bae_ph_2(self):
		self.run_test("배", "{{ko-IPA}}", "배/베", "ph")
	def test_bae_rr_2(self):
		self.run_test("배", "{{ko-IPA}}", "bae", "rr")
	def test_bae_rrr_2(self):
		self.run_test("배", "{{ko-IPA}}", "bae", "rrr")
	def test_bae_mr_2(self):
		self.run_test("배", "{{ko-IPA}}", "pae", "mr")
	def test_bae_yr_2(self):
		self.run_test("배", "{{ko-IPA}}", "pay", "yr")
	def test_bae_ipa_2(self):
		self.run_test("배", "{{ko-IPA}}", "[pɛ] ~ [pe̞]", "ipa")
	def test_bae_ph_3(self):
		self.run_test("배", "{{ko-IPA|l=y}}", "배(ː)/베(ː)", "ph")
	def test_bae_rr_3(self):
		self.run_test("배", "{{ko-IPA|l=y}}", "bae", "rr")
	def test_bae_rrr_3(self):
		self.run_test("배", "{{ko-IPA|l=y}}", "bae", "rrr")
	def test_bae_mr_3(self):
		self.run_test("배", "{{ko-IPA|l=y}}", "pae", "mr")
	def test_bae_yr_3(self):
		self.run_test("배", "{{ko-IPA|l=y}}", "pāy", "yr")
	def test_bae_ipa_3(self):
		self.run_test("배", "{{ko-IPA|l=y}}", "[pɛ(ː)] ~ [pe̞(ː)]", "ipa")
	def test_bae_ph_4(self):
		self.run_test("배", "{{ko-IPA}}", "배/베", "ph")
	def test_bae_rr_4(self):
		self.run_test("배", "{{ko-IPA}}", "bae", "rr")
	def test_bae_rrr_4(self):
		self.run_test("배", "{{ko-IPA}}", "bae", "rrr")
	def test_bae_mr_4(self):
		self.run_test("배", "{{ko-IPA}}", "pae", "mr")
	def test_bae_yr_4(self):
		self.run_test("배", "{{ko-IPA}}", "pay", "yr")
	def test_bae_ipa_4(self):
		self.run_test("배", "{{ko-IPA}}", "[pɛ] ~ [pe̞]", "ipa")

	def test_baegopeuda_ph(self):
		self.run_test("배고프다", "{{ko-IPA}}", "배고프다/베고프다", "ph")
	def test_baegopeuda_rr(self):
		self.run_test("배고프다", "{{ko-IPA}}", "baegopeuda", "rr")
	def test_baegopeuda_rrr(self):
		self.run_test("배고프다", "{{ko-IPA}}", "baegopeuda", "rrr")
	def test_baegopeuda_mr(self):
		self.run_test("배고프다", "{{ko-IPA}}", "paegop'ŭda", "mr")
	def test_baegopeuda_yr(self):
		self.run_test("배고프다", "{{ko-IPA}}", "payko.phuta", "yr")
	def test_baegopeuda_ipa(self):
		self.run_test("배고프다", "{{ko-IPA}}", "[pɛɡo̞pʰɯda̠] ~ [pe̞ɡo̞pʰɯda̠]", "ipa")

	def test_baeuja_ph(self):
		self.run_test("배우자", "{{ko-IPA|l=y}}", "배(ː)우자/베(ː)우자", "ph")
	def test_baeuja_rr(self):
		self.run_test("배우자", "{{ko-IPA|l=y}}", "bae'uja", "rr")
	def test_baeuja_rrr(self):
		self.run_test("배우자", "{{ko-IPA|l=y}}", "bae'uja", "rrr")
	def test_baeuja_mr(self):
		self.run_test("배우자", "{{ko-IPA|l=y}}", "paeuja", "mr")
	def test_baeuja_yr(self):
		self.run_test("배우자", "{{ko-IPA|l=y}}", "pāywuca", "yr")
	def test_baeuja_ipa(self):
		self.run_test("배우자", "{{ko-IPA|l=y}}", "[ˈpɛ(ː)ud͡ʑa̠] ~ [ˈpe̞(ː)ud͡ʑa̠]", "ipa")

	def test_halmeoni_ph(self):
		self.run_test("할머니", "{{ko-IPA}}", "할머니", "ph")
	def test_halmeoni_rr(self):
		self.run_test("할머니", "{{ko-IPA}}", "halmeoni", "rr")
	def test_halmeoni_rrr(self):
		self.run_test("할머니", "{{ko-IPA}}", "halmeoni", "rrr")
	def test_halmeoni_mr(self):
		self.run_test("할머니", "{{ko-IPA}}", "halmŏni", "mr")
	def test_halmeoni_yr(self):
		self.run_test("할머니", "{{ko-IPA}}", "hal.meni", "yr")
	def test_halmeoni_ipa(self):
		self.run_test("할머니", "{{ko-IPA}}", "[ha̠ɭmʌ̹ni]", "ipa")

	def test_abeoji_ph(self):
		self.run_test("아버지", "{{ko-IPA|a=y}}", "아버지", "ph")
	def test_abeoji_rr(self):
		self.run_test("아버지", "{{ko-IPA|a=y}}", "abeoji", "rr")
	def test_abeoji_rrr(self):
		self.run_test("아버지", "{{ko-IPA|a=y}}", "abeoji", "rrr")
	def test_abeoji_mr(self):
		self.run_test("아버지", "{{ko-IPA|a=y}}", "abŏji", "mr")
	def test_abeoji_yr(self):
		self.run_test("아버지", "{{ko-IPA|a=y}}", "apeci", "yr")
	def test_abeoji_ipa(self):
		self.run_test("아버지", "{{ko-IPA|a=y}}", "[a̠bʌ̹d͡ʑi]", "ipa")

	def test_bakkuda_ph(self):
		self.run_test("바꾸다", "{{ko-IPA}}", "바꾸다", "ph")
	def test_bakkuda_rr(self):
		self.run_test("바꾸다", "{{ko-IPA}}", "bakkuda", "rr")
	def test_bakkuda_rrr(self):
		self.run_test("바꾸다", "{{ko-IPA}}", "ba'kkuda", "rrr")
	def test_bakkuda_mr(self):
		self.run_test("바꾸다", "{{ko-IPA}}", "pakkuda", "mr")
	def test_bakkuda_yr(self):
		self.run_test("바꾸다", "{{ko-IPA}}", "pa.kkwuta", "yr")
	def test_bakkuda_ipa(self):
		self.run_test("바꾸다", "{{ko-IPA}}", "[pa̠k͈uda̠]", "ipa")

	def test_yangseoryu_ph(self):
		self.run_test("양서류", "{{ko-IPA|l=y}}", "양(ː)서류", "ph")
	def test_yangseoryu_rr(self):
		self.run_test("양서류", "{{ko-IPA|l=y}}", "yangseoryu", "rr")
	def test_yangseoryu_rrr(self):
		self.run_test("양서류", "{{ko-IPA|l=y}}", "yangseolyu", "rrr")
	def test_yangseoryu_mr(self):
		self.run_test("양서류", "{{ko-IPA|l=y}}", "yangsŏryu", "mr")
	def test_yangseoryu_yr(self):
		self.run_test("양서류", "{{ko-IPA|l=y}}", "yāngselyu", "yr")
	def test_yangseoryu_ipa(self):
		self.run_test("양서류", "{{ko-IPA|l=y}}", "[ˈja̠(ː)ŋsʰʌ̹ɾju]", "ipa")

	def test_binyeo_ph(self):
		self.run_test("비녀", "{{ko-IPA}}", "비녀", "ph")
	def test_binyeo_rr(self):
		self.run_test("비녀", "{{ko-IPA}}", "binyeo", "rr")
	def test_binyeo_rrr(self):
		self.run_test("비녀", "{{ko-IPA}}", "binyeo", "rrr")
	def test_binyeo_mr(self):
		self.run_test("비녀", "{{ko-IPA}}", "pinyŏ", "mr")
	def test_binyeo_yr(self):
		self.run_test("비녀", "{{ko-IPA}}", "pinye", "yr")
	def test_binyeo_ipa(self):
		self.run_test("비녀", "{{ko-IPA}}", "[piɲʌ̹]", "ipa")

	def test_mokgeori_ph(self):
		self.run_test("목걸이", "{{ko-IPA}}", "목꺼리", "ph")
	def test_mokgeori_rr(self):
		self.run_test("목걸이", "{{ko-IPA}}", "mokgeori", "rr")
	def test_mokgeori_rrr(self):
		self.run_test("목걸이", "{{ko-IPA}}", "moggeol'i", "rrr")
	def test_mokgeori_mr(self):
		self.run_test("목걸이", "{{ko-IPA}}", "mokkŏri", "mr")
	def test_mokgeori_yr(self):
		self.run_test("목걸이", "{{ko-IPA}}", "mok.kel.i", "yr")
	def test_mokgeori_ipa(self):
		self.run_test("목걸이", "{{ko-IPA}}", "[mo̞k̚k͈ʌ̹ɾi]", "ipa")

	def test_banji_ph(self):
		self.run_test("반지", "{{ko-IPA}}", "반지", "ph")
	def test_banji_rr(self):
		self.run_test("반지", "{{ko-IPA}}", "banji", "rr")
	def test_banji_rrr(self):
		self.run_test("반지", "{{ko-IPA}}", "banji", "rrr")
	def test_banji_mr(self):
		self.run_test("반지", "{{ko-IPA}}", "panji", "mr")
	def test_banji_yr(self):
		self.run_test("반지", "{{ko-IPA}}", "pan.ci", "yr")
	def test_banji_ipa(self):
		self.run_test("반지", "{{ko-IPA}}", "[pa̠ɲd͡ʑi]", "ipa")

	def test_paljji_ph(self):
		self.run_test("팔찌", "{{ko-IPA}}", "팔찌", "ph")
	def test_paljji_rr(self):
		self.run_test("팔찌", "{{ko-IPA}}", "paljji", "rr")
	def test_paljji_rrr(self):
		self.run_test("팔찌", "{{ko-IPA}}", "paljji", "rrr")
	def test_paljji_mr(self):
		self.run_test("팔찌", "{{ko-IPA}}", "p'altchi", "mr")
	def test_paljji_yr(self):
		self.run_test("팔찌", "{{ko-IPA}}", "phalcci", "yr")
	def test_paljji_ipa(self):
		self.run_test("팔찌", "{{ko-IPA}}", "[pʰa̠ʎt͡ɕ͈i]", "ipa")

	def test_garakji_ph(self):
		self.run_test("가락지", "{{ko-IPA}}", "가락찌", "ph")
	def test_garakji_rr(self):
		self.run_test("가락지", "{{ko-IPA}}", "garakji", "rr")
	def test_garakji_rrr(self):
		self.run_test("가락지", "{{ko-IPA}}", "galagji", "rrr")
	def test_garakji_mr(self):
		self.run_test("가락지", "{{ko-IPA}}", "karakchi", "mr")
	def test_garakji_yr(self):
		self.run_test("가락지", "{{ko-IPA}}", "kalakci", "yr")
	def test_garakji_ipa(self):
		self.run_test("가락지", "{{ko-IPA}}", "[ka̠ɾa̠k̚t͡ɕ͈i]", "ipa")

	def test_Dogil_ph(self):
		self.run_test("독일", "{{ko-IPA|cap=y}}", "도길", "ph")
	def test_Dogil_rr(self):
		self.run_test("독일", "{{ko-IPA|cap=y}}", "Dogil", "rr")
	def test_Dogil_rrr(self):
		self.run_test("독일", "{{ko-IPA|cap=y}}", "Dog'il", "rrr")
	def test_Dogil_mr(self):
		self.run_test("독일", "{{ko-IPA|cap=y}}", "Togil", "mr")
	def test_Dogil_yr(self):
		self.run_test("독일", "{{ko-IPA|cap=y}}", "tok.il", "yr")
	def test_Dogil_ipa(self):
		self.run_test("독일", "{{ko-IPA|cap=y}}", "[to̞ɡiɭ]", "ipa")

	def test_Jungguk_ph(self):
		self.run_test("중국", "{{ko-IPA|cap=y}}", "중국", "ph")
	def test_Jungguk_rr(self):
		self.run_test("중국", "{{ko-IPA|cap=y}}", "Jungguk", "rr")
	def test_Jungguk_rrr(self):
		self.run_test("중국", "{{ko-IPA|cap=y}}", "Junggug", "rrr")
	def test_Jungguk_mr(self):
		self.run_test("중국", "{{ko-IPA|cap=y}}", "Chungguk", "mr")
	def test_Jungguk_yr(self):
		self.run_test("중국", "{{ko-IPA|cap=y}}", "cwungkwuk", "yr")
	def test_Jungguk_ipa(self):
		self.run_test("중국", "{{ko-IPA|cap=y}}", "[t͡ɕuŋɡuk̚]", "ipa")

	def test_sajeon_ph(self):
		self.run_test("사전", "{{ko-IPA}}", "사전", "ph")
	def test_sajeon_rr(self):
		self.run_test("사전", "{{ko-IPA}}", "sajeon", "rr")
	def test_sajeon_rrr(self):
		self.run_test("사전", "{{ko-IPA}}", "sajeon", "rrr")
	def test_sajeon_mr(self):
		self.run_test("사전", "{{ko-IPA}}", "sajŏn", "mr")
	def test_sajeon_yr(self):
		self.run_test("사전", "{{ko-IPA}}", "sacen", "yr")
	def test_sajeon_ipa(self):
		self.run_test("사전", "{{ko-IPA}}", "[sʰa̠d͡ʑʌ̹n]", "ipa")
	def test_sajeon_ph_1(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "사(ː)전", "ph")
	def test_sajeon_rr_1(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sajeon", "rr")
	def test_sajeon_rrr_1(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sajeon", "rrr")
	def test_sajeon_mr_1(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sajŏn", "mr")
	def test_sajeon_yr_1(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sācen", "yr")
	def test_sajeon_ipa_1(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)d͡ʑʌ̹n]", "ipa")
	def test_sajeon_ph_2(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "사(ː)전", "ph")
	def test_sajeon_rr_2(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sajeon", "rr")
	def test_sajeon_rrr_2(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sajeon", "rrr")
	def test_sajeon_mr_2(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sajŏn", "mr")
	def test_sajeon_yr_2(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sācen", "yr")
	def test_sajeon_ipa_2(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)d͡ʑʌ̹n]", "ipa")
	def test_sajeon_ph_3(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "사(ː)전", "ph")
	def test_sajeon_rr_3(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sajeon", "rr")
	def test_sajeon_rrr_3(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sajeon", "rrr")
	def test_sajeon_mr_3(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sajŏn", "mr")
	def test_sajeon_yr_3(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "sācen", "yr")
	def test_sajeon_ipa_3(self):
		self.run_test("사전", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)d͡ʑʌ̹n]", "ipa")

	def test_baengman_ph(self):
		self.run_test("백만", "{{ko-IPA}}", "뱅만/벵만", "ph")
	def test_baengman_rr(self):
		self.run_test("백만", "{{ko-IPA}}", "baengman", "rr")
	def test_baengman_rrr(self):
		self.run_test("백만", "{{ko-IPA}}", "baegman", "rrr")
	def test_baengman_mr(self):
		self.run_test("백만", "{{ko-IPA}}", "paengman", "mr")
	def test_baengman_yr(self):
		self.run_test("백만", "{{ko-IPA}}", "paykman", "yr")
	def test_baengman_ipa(self):
		self.run_test("백만", "{{ko-IPA}}", "[pɛŋma̠n] ~ [pe̞ŋma̠n]", "ipa")

	def test_taeeonada_ph(self):
		self.run_test("태어나다", "{{ko-IPA}}", "태어나다/테어나다", "ph")
	def test_taeeonada_rr(self):
		self.run_test("태어나다", "{{ko-IPA}}", "taeeonada", "rr")
	def test_taeeonada_rrr(self):
		self.run_test("태어나다", "{{ko-IPA}}", "taeeonada", "rrr")
	def test_taeeonada_mr(self):
		self.run_test("태어나다", "{{ko-IPA}}", "t'aeŏnada", "mr")
	def test_taeeonada_yr(self):
		self.run_test("태어나다", "{{ko-IPA}}", "thay.enata", "yr")
	def test_taeeonada_ipa(self):
		self.run_test("태어나다", "{{ko-IPA}}", "[tʰɛʌ̹na̠da̠] ~ [tʰe̞ʌ̹na̠da̠]", "ipa")

	def test_chamchi_ph(self):
		self.run_test("참치", "{{ko-IPA}}", "참치", "ph")
	def test_chamchi_rr(self):
		self.run_test("참치", "{{ko-IPA}}", "chamchi", "rr")
	def test_chamchi_rrr(self):
		self.run_test("참치", "{{ko-IPA}}", "chamchi", "rrr")
	def test_chamchi_mr(self):
		self.run_test("참치", "{{ko-IPA}}", "ch'amch'i", "mr")
	def test_chamchi_yr(self):
		self.run_test("참치", "{{ko-IPA}}", "chamchi", "yr")
	def test_chamchi_ipa(self):
		self.run_test("참치", "{{ko-IPA}}", "[t͡ɕʰa̠mt͡ɕʰi]", "ipa")
	def test_chamchi_ph_1(self):
		self.run_test("참치", "{{ko-IPA}}", "참치", "ph")
	def test_chamchi_rr_1(self):
		self.run_test("참치", "{{ko-IPA}}", "chamchi", "rr")
	def test_chamchi_rrr_1(self):
		self.run_test("참치", "{{ko-IPA}}", "chamchi", "rrr")
	def test_chamchi_mr_1(self):
		self.run_test("참치", "{{ko-IPA}}", "ch'amch'i", "mr")
	def test_chamchi_yr_1(self):
		self.run_test("참치", "{{ko-IPA}}", "chamchi", "yr")
	def test_chamchi_ipa_1(self):
		self.run_test("참치", "{{ko-IPA}}", "[t͡ɕʰa̠mt͡ɕʰi]", "ipa")

	def test_darangeo_ph(self):
		self.run_test("다랑어", "{{ko-IPA}}", "다랑어", "ph")
	def test_darangeo_rr(self):
		self.run_test("다랑어", "{{ko-IPA}}", "darang'eo", "rr")
	def test_darangeo_rrr(self):
		self.run_test("다랑어", "{{ko-IPA}}", "dalang'eo", "rrr")
	def test_darangeo_mr(self):
		self.run_test("다랑어", "{{ko-IPA}}", "tarangŏ", "mr")
	def test_darangeo_yr(self):
		self.run_test("다랑어", "{{ko-IPA}}", "talange", "yr")
	def test_darangeo_ipa(self):
		self.run_test("다랑어", "{{ko-IPA}}", "[ta̠ɾa̠ŋʌ̹]", "ipa")

	def test_godeungeo_ph(self):
		self.run_test("고등어", "{{ko-IPA}}", "고등어", "ph")
	def test_godeungeo_rr(self):
		self.run_test("고등어", "{{ko-IPA}}", "godeung'eo", "rr")
	def test_godeungeo_rrr(self):
		self.run_test("고등어", "{{ko-IPA}}", "godeung'eo", "rrr")
	def test_godeungeo_mr(self):
		self.run_test("고등어", "{{ko-IPA}}", "kodŭngŏ", "mr")
	def test_godeungeo_yr(self):
		self.run_test("고등어", "{{ko-IPA}}", "kotunge", "yr")
	def test_godeungeo_ipa(self):
		self.run_test("고등어", "{{ko-IPA}}", "[ko̞dɯŋʌ̹]", "ipa")


	def test_nundarangeo_ph(self):
		self.run_test("눈다랑어", "{{ko-IPA}}", "눈다랑어", "ph")
	def test_nundarangeo_rr(self):
		self.run_test("눈다랑어", "{{ko-IPA}}", "nundarang'eo", "rr")
	def test_nundarangeo_rrr(self):
		self.run_test("눈다랑어", "{{ko-IPA}}", "nundalang'eo", "rrr")
	def test_nundarangeo_mr(self):
		self.run_test("눈다랑어", "{{ko-IPA}}", "nundarangŏ", "mr")
	def test_nundarangeo_yr(self):
		self.run_test("눈다랑어", "{{ko-IPA}}", "nwuntalange", "yr")
	def test_nundarangeo_ipa(self):
		self.run_test("눈다랑어", "{{ko-IPA}}", "[nunda̠ɾa̠ŋʌ̹]", "ipa")

	def test_buchaeseoninjang_ph(self):
		self.run_test("부채선인장", "{{ko-IPA}}", "부채서닌장/부체서닌장", "ph")
	def test_buchaeseoninjang_rr(self):
		self.run_test("부채선인장", "{{ko-IPA}}", "buchaeseoninjang", "rr")
	def test_buchaeseoninjang_rrr(self):
		self.run_test("부채선인장", "{{ko-IPA}}", "buchaeseon'injang", "rrr")
	def test_buchaeseoninjang_mr(self):
		self.run_test("부채선인장", "{{ko-IPA}}", "puch'aesŏninjang", "mr")
	def test_buchaeseoninjang_yr(self):
		self.run_test("부채선인장", "{{ko-IPA}}", "pu.chaysen.in.cang", "yr")
	def test_buchaeseoninjang_ipa(self):
		self.run_test("부채선인장", "{{ko-IPA}}", "[put͡ɕʰɛsʰʌ̹niɲd͡ʑa̠ŋ] ~ [put͡ɕʰe̞sʰʌ̹niɲd͡ʑa̠ŋ]", "ipa")

	def test_seoninjang_ph(self):
		self.run_test("선인장", "{{ko-IPA}}", "서닌장", "ph")
	def test_seoninjang_rr(self):
		self.run_test("선인장", "{{ko-IPA}}", "seoninjang", "rr")
	def test_seoninjang_rrr(self):
		self.run_test("선인장", "{{ko-IPA}}", "seon'injang", "rrr")
	def test_seoninjang_mr(self):
		self.run_test("선인장", "{{ko-IPA}}", "sŏninjang", "mr")
	def test_seoninjang_yr(self):
		self.run_test("선인장", "{{ko-IPA}}", "sen.in.cang", "yr")
	def test_seoninjang_ipa(self):
		self.run_test("선인장", "{{ko-IPA}}", "[sʰʌ̹niɲd͡ʑa̠ŋ]", "ipa")

	def test_huindonggari_ph(self):
		self.run_test("흰동가리", "{{ko-IPA}}", "힌동가리", "ph")
	def test_huindonggari_rr(self):
		self.run_test("흰동가리", "{{ko-IPA}}", "huindonggari", "rr")
	def test_huindonggari_rrr(self):
		self.run_test("흰동가리", "{{ko-IPA}}", "huindonggali", "rrr")
	def test_huindonggari_mr(self):
		self.run_test("흰동가리", "{{ko-IPA}}", "hŭindonggari", "mr")
	def test_huindonggari_yr(self):
		self.run_test("흰동가리", "{{ko-IPA}}", "huyntongkali", "yr")
	def test_huindonggari_ipa(self):
		self.run_test("흰동가리", "{{ko-IPA}}", "[çindo̞ŋɡa̠ɾi]", "ipa")

	def test_jangeo_ph(self):
		self.run_test("장어", "{{ko-IPA}}", "장어", "ph")
	def test_jangeo_rr(self):
		self.run_test("장어", "{{ko-IPA}}", "jang'eo", "rr")
	def test_jangeo_rrr(self):
		self.run_test("장어", "{{ko-IPA}}", "jang'eo", "rrr")
	def test_jangeo_mr(self):
		self.run_test("장어", "{{ko-IPA}}", "changŏ", "mr")
	def test_jangeo_yr(self):
		self.run_test("장어", "{{ko-IPA}}", "cange", "yr")
	def test_jangeo_ipa(self):
		self.run_test("장어", "{{ko-IPA}}", "[t͡ɕa̠ŋʌ̹]", "ipa")

	def test_myeolchi_ph(self):
		self.run_test("멸치", "{{ko-IPA}}", "멸치", "ph")
	def test_myeolchi_rr(self):
		self.run_test("멸치", "{{ko-IPA}}", "myeolchi", "rr")
	def test_myeolchi_rrr(self):
		self.run_test("멸치", "{{ko-IPA}}", "myeolchi", "rrr")
	def test_myeolchi_mr(self):
		self.run_test("멸치", "{{ko-IPA}}", "myŏlch'i", "mr")
	def test_myeolchi_yr(self):
		self.run_test("멸치", "{{ko-IPA}}", "myelchi", "yr")
	def test_myeolchi_ipa(self):
		self.run_test("멸치", "{{ko-IPA}}", "[mjʌ̹ʎt͡ɕʰi]", "ipa")

	def test_kising_gurami_ph(self):
		self.run_test("키싱 구라미", "{{ko-IPA}}", "키싱 구라미", "ph")
	def test_kising_gurami_rr(self):
		self.run_test("키싱 구라미", "{{ko-IPA}}", "kising gurami", "rr")
	def test_kising_gurami_rrr(self):
		self.run_test("키싱 구라미", "{{ko-IPA}}", "kising gulami", "rrr")
	def test_kising_gurami_mr(self):
		self.run_test("키싱 구라미", "{{ko-IPA}}", "k'ising kurami", "mr")
	def test_kising_gurami_yr(self):
		self.run_test("키싱 구라미", "{{ko-IPA}}", "khising kwulami", "yr")
	def test_kising_gurami_ipa(self):
		self.run_test("키싱 구라미", "{{ko-IPA}}", "[cçiɕʰiŋ kuɾa̠mi]", "ipa")

	def test_podo_ph(self):
		self.run_test("포도", "{{ko-IPA}}", "포도", "ph")
	def test_podo_rr(self):
		self.run_test("포도", "{{ko-IPA}}", "podo", "rr")
	def test_podo_rrr(self):
		self.run_test("포도", "{{ko-IPA}}", "podo", "rrr")
	def test_podo_mr(self):
		self.run_test("포도", "{{ko-IPA}}", "p'odo", "mr")
	def test_podo_yr(self):
		self.run_test("포도", "{{ko-IPA}}", "photo", "yr")
	def test_podo_ipa(self):
		self.run_test("포도", "{{ko-IPA}}", "[pʰo̞do̞]", "ipa")

	def test_naeil_ph(self):
		self.run_test("내일", "{{ko-IPA}}", "내일/네일", "ph")
	def test_naeil_rr(self):
		self.run_test("내일", "{{ko-IPA}}", "naeil", "rr")
	def test_naeil_rrr(self):
		self.run_test("내일", "{{ko-IPA}}", "naeil", "rrr")
	def test_naeil_mr(self):
		self.run_test("내일", "{{ko-IPA}}", "naeil", "mr")
	def test_naeil_yr(self):
		self.run_test("내일", "{{ko-IPA}}", "nayil", "yr")
	def test_naeil_ipa(self):
		self.run_test("내일", "{{ko-IPA}}", "[nɛiɭ] ~ [ne̞iɭ]", "ipa")

	def test_tyullip_ph(self):
		self.run_test("튤립", "{{ko-IPA}}", "튤립", "ph")
	def test_tyullip_rr(self):
		self.run_test("튤립", "{{ko-IPA}}", "tyullip", "rr")
	def test_tyullip_rrr(self):
		self.run_test("튤립", "{{ko-IPA}}", "tyullib", "rrr")
	def test_tyullip_mr(self):
		self.run_test("튤립", "{{ko-IPA}}", "t'yullip", "mr")
	def test_tyullip_yr(self):
		self.run_test("튤립", "{{ko-IPA}}", "thyullip", "yr")
	def test_tyullip_ipa(self):
		self.run_test("튤립", "{{ko-IPA}}", "[tʰjuʎʎip̚]", "ipa")

	def test_bihaengjang_ph(self):
		self.run_test("비행장", "{{ko-IPA}}", "비행장/비헹장", "ph")
	def test_bihaengjang_rr(self):
		self.run_test("비행장", "{{ko-IPA}}", "bihaengjang", "rr")
	def test_bihaengjang_rrr(self):
		self.run_test("비행장", "{{ko-IPA}}", "bihaengjang", "rrr")
	def test_bihaengjang_mr(self):
		self.run_test("비행장", "{{ko-IPA}}", "pihaengjang", "mr")
	def test_bihaengjang_yr(self):
		self.run_test("비행장", "{{ko-IPA}}", "pihayngcang", "yr")
	def test_bihaengjang_ipa(self):
		self.run_test("비행장", "{{ko-IPA}}", "[piɦɛŋd͡ʑa̠ŋ] ~ [piɦe̞ŋd͡ʑa̠ŋ]", "ipa")

	def test_gonghang_ph(self):
		self.run_test("공항", "{{ko-IPA}}", "공항", "ph")
	def test_gonghang_rr(self):
		self.run_test("공항", "{{ko-IPA}}", "gonghang", "rr")
	def test_gonghang_rrr(self):
		self.run_test("공항", "{{ko-IPA}}", "gonghang", "rrr")
	def test_gonghang_mr(self):
		self.run_test("공항", "{{ko-IPA}}", "konghang", "mr")
	def test_gonghang_yr(self):
		self.run_test("공항", "{{ko-IPA}}", "konghang", "yr")
	def test_gonghang_ipa(self):
		self.run_test("공항", "{{ko-IPA}}", "[ko̞ŋɦa̠ŋ]", "ipa")

	def test_sseuda_ph(self):
		self.run_test("쓰다", "{{ko-IPA}}", "쓰다", "ph")
	def test_sseuda_rr(self):
		self.run_test("쓰다", "{{ko-IPA}}", "sseuda", "rr")
	def test_sseuda_rrr(self):
		self.run_test("쓰다", "{{ko-IPA}}", "sseuda", "rrr")
	def test_sseuda_mr(self):
		self.run_test("쓰다", "{{ko-IPA}}", "ssŭda", "mr")
	def test_sseuda_yr(self):
		self.run_test("쓰다", "{{ko-IPA}}", "ssuta", "yr")
	def test_sseuda_ipa(self):
		self.run_test("쓰다", "{{ko-IPA}}", "[s͈ɯda̠]", "ipa")

	def test_jumeonikal_ph(self):
		self.run_test("주머니칼", "{{ko-IPA}}", "주머니칼", "ph")
	def test_jumeonikal_rr(self):
		self.run_test("주머니칼", "{{ko-IPA}}", "jumeonikal", "rr")
	def test_jumeonikal_rrr(self):
		self.run_test("주머니칼", "{{ko-IPA}}", "jumeonikal", "rrr")
	def test_jumeonikal_mr(self):
		self.run_test("주머니칼", "{{ko-IPA}}", "chumŏnik'al", "mr")
	def test_jumeonikal_yr(self):
		self.run_test("주머니칼", "{{ko-IPA}}", "cwumeni.khal", "yr")
	def test_jumeonikal_ipa(self):
		self.run_test("주머니칼", "{{ko-IPA}}", "[t͡ɕumʌ̹nikʰa̠ɭ]", "ipa")

	def test_imsin_ph(self):
		self.run_test("임신", "{{ko-IPA|l=y}}", "임(ː)신", "ph")
	def test_imsin_rr(self):
		self.run_test("임신", "{{ko-IPA|l=y}}", "imsin", "rr")
	def test_imsin_rrr(self):
		self.run_test("임신", "{{ko-IPA|l=y}}", "imsin", "rrr")
	def test_imsin_mr(self):
		self.run_test("임신", "{{ko-IPA|l=y}}", "imsin", "mr")
	def test_imsin_yr(self):
		self.run_test("임신", "{{ko-IPA|l=y}}", "īmsin", "yr")
	def test_imsin_ipa(self):
		self.run_test("임신", "{{ko-IPA|l=y}}", "[ˈi(ː)mɕʰin]", "ipa")
	def test_Imsin_ph_1(self):
		self.run_test("임신", "{{ko-IPA|cap=y}}", "임신", "ph")
	def test_Imsin_rr_1(self):
		self.run_test("임신", "{{ko-IPA|cap=y}}", "Imsin", "rr")
	def test_Imsin_rrr_1(self):
		self.run_test("임신", "{{ko-IPA|cap=y}}", "Imsin", "rrr")
	def test_Imsin_mr_1(self):
		self.run_test("임신", "{{ko-IPA|cap=y}}", "Imsin", "mr")
	def test_Imsin_yr_1(self):
		self.run_test("임신", "{{ko-IPA|cap=y}}", "imsin", "yr")
	def test_Imsin_ipa_1(self):
		self.run_test("임신", "{{ko-IPA|cap=y}}", "[imɕʰin]", "ipa")

	def test_budam_ph(self):
		self.run_test("부담", "{{ko-IPA|l=y}}", "부(ː)담", "ph")
	def test_budam_rr(self):
		self.run_test("부담", "{{ko-IPA|l=y}}", "budam", "rr")
	def test_budam_rrr(self):
		self.run_test("부담", "{{ko-IPA|l=y}}", "budam", "rrr")
	def test_budam_mr(self):
		self.run_test("부담", "{{ko-IPA|l=y}}", "pudam", "mr")
	def test_budam_yr(self):
		self.run_test("부담", "{{ko-IPA|l=y}}", "pūtam", "yr")
	def test_budam_ipa(self):
		self.run_test("부담", "{{ko-IPA|l=y}}", "[ˈpu(ː)da̠m]", "ipa")

	def test_jilmeojida_ph(self):
		self.run_test("짊어지다", "{{ko-IPA}}", "질머지다", "ph")
	def test_jilmeojida_rr(self):
		self.run_test("짊어지다", "{{ko-IPA}}", "jilmeojida", "rr")
	def test_jilmeojida_rrr(self):
		self.run_test("짊어지다", "{{ko-IPA}}", "jilm'eojida", "rrr")
	def test_jilmeojida_mr(self):
		self.run_test("짊어지다", "{{ko-IPA}}", "chilmŏjida", "mr")
	def test_jilmeojida_yr(self):
		self.run_test("짊어지다", "{{ko-IPA}}", "cilm.ecita", "yr")
	def test_jilmeojida_ipa(self):
		self.run_test("짊어지다", "{{ko-IPA}}", "[t͡ɕiɭmʌ̹d͡ʑida̠]", "ipa")

	def test_bottari_ph(self):
		self.run_test("보따리", "{{ko-IPA}}", "보따리", "ph")
	def test_bottari_rr(self):
		self.run_test("보따리", "{{ko-IPA}}", "bottari", "rr")
	def test_bottari_rrr(self):
		self.run_test("보따리", "{{ko-IPA}}", "bo'ttali", "rrr")
	def test_bottari_mr(self):
		self.run_test("보따리", "{{ko-IPA}}", "pottari", "mr")
	def test_bottari_yr(self):
		self.run_test("보따리", "{{ko-IPA}}", "po.ttali", "yr")
	def test_bottari_ipa(self):
		self.run_test("보따리", "{{ko-IPA}}", "[po̞t͈a̠ɾi]", "ipa")

	def test_hama_ph(self):
		self.run_test("하마", "{{ko-IPA}}", "하마", "ph")
	def test_hama_rr(self):
		self.run_test("하마", "{{ko-IPA}}", "hama", "rr")
	def test_hama_rrr(self):
		self.run_test("하마", "{{ko-IPA}}", "hama", "rrr")
	def test_hama_mr(self):
		self.run_test("하마", "{{ko-IPA}}", "hama", "mr")
	def test_hama_yr(self):
		self.run_test("하마", "{{ko-IPA}}", "hama", "yr")
	def test_hama_ipa(self):
		self.run_test("하마", "{{ko-IPA}}", "[ha̠ma̠]", "ipa")

	def test_suso_ph(self):
		self.run_test("수소", "{{ko-ipa}}", "수소", "ph")
	def test_suso_rr(self):
		self.run_test("수소", "{{ko-ipa}}", "suso", "rr")
	def test_suso_rrr(self):
		self.run_test("수소", "{{ko-ipa}}", "suso", "rrr")
	def test_suso_mr(self):
		self.run_test("수소", "{{ko-ipa}}", "suso", "mr")
	def test_suso_yr(self):
		self.run_test("수소", "{{ko-ipa}}", "swuso", "yr")
	def test_suso_ipa(self):
		self.run_test("수소", "{{ko-ipa}}", "[sʰusʰo̞]", "ipa")

	def test_hellyum_ph(self):
		self.run_test("헬륨", "{{ko-IPA}}", "헬륨", "ph")
	def test_hellyum_rr(self):
		self.run_test("헬륨", "{{ko-IPA}}", "hellyum", "rr")
	def test_hellyum_rrr(self):
		self.run_test("헬륨", "{{ko-IPA}}", "hellyum", "rrr")
	def test_hellyum_mr(self):
		self.run_test("헬륨", "{{ko-IPA}}", "hellyum", "mr")
	def test_hellyum_yr(self):
		self.run_test("헬륨", "{{ko-IPA}}", "heyllyum", "yr")
	def test_hellyum_ipa(self):
		self.run_test("헬륨", "{{ko-IPA}}", "[he̞ʎʎum]", "ipa")

	def test_tanso_ph(self):
		self.run_test("탄소", "{{ko-IPA|l=y}}", "탄(ː)소", "ph")
	def test_tanso_rr(self):
		self.run_test("탄소", "{{ko-IPA|l=y}}", "tanso", "rr")
	def test_tanso_rrr(self):
		self.run_test("탄소", "{{ko-IPA|l=y}}", "tanso", "rrr")
	def test_tanso_mr(self):
		self.run_test("탄소", "{{ko-IPA|l=y}}", "t'anso", "mr")
	def test_tanso_yr(self):
		self.run_test("탄소", "{{ko-IPA|l=y}}", "thānso", "yr")
	def test_tanso_ipa(self):
		self.run_test("탄소", "{{ko-IPA|l=y}}", "[ˈtʰa̠(ː)nsʰo̞]", "ipa")

	def test_jilso_ph(self):
		self.run_test("질소", "{{ko-IPA}}", "질소", "ph")
	def test_jilso_rr(self):
		self.run_test("질소", "{{ko-IPA}}", "jilso", "rr")
	def test_jilso_rrr(self):
		self.run_test("질소", "{{ko-IPA}}", "jilso", "rrr")
	def test_jilso_mr(self):
		self.run_test("질소", "{{ko-IPA}}", "chilso", "mr")
	def test_jilso_yr(self):
		self.run_test("질소", "{{ko-IPA}}", "cil.so", "yr")
	def test_jilso_ipa(self):
		self.run_test("질소", "{{ko-IPA}}", "[t͡ɕiɭsʰo̞]", "ipa")

	def test_peulluoreu_ph(self):
		self.run_test("플루오르", "{{ko-IPA}}", "플루오르", "ph")
	def test_peulluoreu_rr(self):
		self.run_test("플루오르", "{{ko-IPA}}", "peulluoreu", "rr")
	def test_peulluoreu_rrr(self):
		self.run_test("플루오르", "{{ko-IPA}}", "peulluoleu", "rrr")
	def test_peulluoreu_mr(self):
		self.run_test("플루오르", "{{ko-IPA}}", "p'ŭlluorŭ", "mr")
	def test_peulluoreu_yr(self):
		self.run_test("플루오르", "{{ko-IPA}}", "phullwuolu", "yr")
	def test_peulluoreu_ipa(self):
		self.run_test("플루오르", "{{ko-IPA}}", "[pʰɯɭɭuo̞ɾɯ]", "ipa")

	def test_doduk_ph(self):
		self.run_test("도둑", "{{ko-IPA}}", "도둑", "ph")
	def test_doduk_rr(self):
		self.run_test("도둑", "{{ko-IPA}}", "doduk", "rr")
	def test_doduk_rrr(self):
		self.run_test("도둑", "{{ko-IPA}}", "dodug", "rrr")
	def test_doduk_mr(self):
		self.run_test("도둑", "{{ko-IPA}}", "toduk", "mr")
	def test_doduk_yr(self):
		self.run_test("도둑", "{{ko-IPA}}", "totwuk", "yr")
	def test_doduk_ipa(self):
		self.run_test("도둑", "{{ko-IPA}}", "[to̞duk̚]", "ipa")

	def test_mueot_ph(self):
		self.run_test("무엇", "{{ko-IPA|a=y}}", "무얻", "ph")
	def test_mueot_rr(self):
		self.run_test("무엇", "{{ko-IPA|a=y}}", "mueot", "rr")
	def test_mueot_rrr(self):
		self.run_test("무엇", "{{ko-IPA|a=y}}", "mueos", "rrr")
	def test_mueot_mr(self):
		self.run_test("무엇", "{{ko-IPA|a=y}}", "muŏt", "mr")
	def test_mueot_yr(self):
		self.run_test("무엇", "{{ko-IPA|a=y}}", "mues", "yr")
	def test_mueot_ipa(self):
		self.run_test("무엇", "{{ko-IPA|a=y}}", "[muʌ̹t̚]", "ipa")

	def test_geu_ph(self):
		self.run_test("그", "{{ko-IPA|a=y}}", "그", "ph")
	def test_geu_rr(self):
		self.run_test("그", "{{ko-IPA|a=y}}", "geu", "rr")
	def test_geu_rrr(self):
		self.run_test("그", "{{ko-IPA|a=y}}", "geu", "rrr")
	def test_geu_mr(self):
		self.run_test("그", "{{ko-IPA|a=y}}", "kŭ", "mr")
	def test_geu_yr(self):
		self.run_test("그", "{{ko-IPA|a=y}}", "ku", "yr")
	def test_geu_ipa(self):
		self.run_test("그", "{{ko-IPA|a=y}}", "[kɯ]", "ipa")

	def test_an_ph(self):
		self.run_test("안", "{{ko-IPA}}", "안", "ph")
	def test_an_rr(self):
		self.run_test("안", "{{ko-IPA}}", "an", "rr")
	def test_an_rrr(self):
		self.run_test("안", "{{ko-IPA}}", "an", "rrr")
	def test_an_mr(self):
		self.run_test("안", "{{ko-IPA}}", "an", "mr")
	def test_an_yr(self):
		self.run_test("안", "{{ko-IPA}}", "an", "yr")
	def test_an_ipa(self):
		self.run_test("안", "{{ko-IPA}}", "[a̠n]", "ipa")
	def test_an_ph_1(self):
		self.run_test("안", "{{ko-IPA}}", "안", "ph")
	def test_an_rr_1(self):
		self.run_test("안", "{{ko-IPA}}", "an", "rr")
	def test_an_rrr_1(self):
		self.run_test("안", "{{ko-IPA}}", "an", "rrr")
	def test_an_mr_1(self):
		self.run_test("안", "{{ko-IPA}}", "an", "mr")
	def test_an_yr_1(self):
		self.run_test("안", "{{ko-IPA}}", "an", "yr")
	def test_an_ipa_1(self):
		self.run_test("안", "{{ko-IPA}}", "[a̠n]", "ipa")
	def test_an_ph_2(self):
		self.run_test("안", "{{ko-IPA|l=y}}", "안(ː)", "ph")
	def test_an_rr_2(self):
		self.run_test("안", "{{ko-IPA|l=y}}", "an", "rr")
	def test_an_rrr_2(self):
		self.run_test("안", "{{ko-IPA|l=y}}", "an", "rrr")
	def test_an_mr_2(self):
		self.run_test("안", "{{ko-IPA|l=y}}", "an", "mr")
	def test_an_yr_2(self):
		self.run_test("안", "{{ko-IPA|l=y}}", "ān", "yr")
	def test_an_ipa_2(self):
		self.run_test("안", "{{ko-IPA|l=y}}", "[a̠(ː)n]", "ipa")

	def test_geurae_ph(self):
		self.run_test("그래", "{{ko-IPA|a=y}}", "그래/그레", "ph")
	def test_geurae_rr(self):
		self.run_test("그래", "{{ko-IPA|a=y}}", "geurae", "rr")
	def test_geurae_rrr(self):
		self.run_test("그래", "{{ko-IPA|a=y}}", "geulae", "rrr")
	def test_geurae_mr(self):
		self.run_test("그래", "{{ko-IPA|a=y}}", "kŭrae", "mr")
	def test_geurae_yr(self):
		self.run_test("그래", "{{ko-IPA|a=y}}", "kulay", "yr")
	def test_geurae_ipa(self):
		self.run_test("그래", "{{ko-IPA|a=y}}", "[kɯɾɛ] ~ [kɯɾe̞]", "ipa")

	def test_tto_ph(self):
		self.run_test("또", "{{ko-IPA}}", "또", "ph")
	def test_tto_rr(self):
		self.run_test("또", "{{ko-IPA}}", "tto", "rr")
	def test_tto_rrr(self):
		self.run_test("또", "{{ko-IPA}}", "tto", "rrr")
	def test_tto_mr(self):
		self.run_test("또", "{{ko-IPA}}", "tto", "mr")
	def test_tto_yr(self):
		self.run_test("또", "{{ko-IPA}}", "tto", "yr")
	def test_tto_ipa(self):
		self.run_test("또", "{{ko-IPA}}", "[t͈o̞]", "ipa")

	def test_sawol_ph(self):
		self.run_test("사월", "{{ko-IPA|l=y|a=Ko-사월.ogg}}", "사(ː)월", "ph")
	def test_sawol_rr(self):
		self.run_test("사월", "{{ko-IPA|l=y|a=Ko-사월.ogg}}", "sawol", "rr")
	def test_sawol_rrr(self):
		self.run_test("사월", "{{ko-IPA|l=y|a=Ko-사월.ogg}}", "sawol", "rrr")
	def test_sawol_mr(self):
		self.run_test("사월", "{{ko-IPA|l=y|a=Ko-사월.ogg}}", "sawŏl", "mr")
	def test_sawol_yr(self):
		self.run_test("사월", "{{ko-IPA|l=y|a=Ko-사월.ogg}}", "sāwel", "yr")
	def test_sawol_ipa(self):
		self.run_test("사월", "{{ko-IPA|l=y|a=Ko-사월.ogg}}", "[ˈsʰa̠(ː)wʌ̹ɭ]", "ipa")

	def test_owol_ph(self):
		self.run_test("오월", "{{ko-IPA|l=y|a=Ko-오월.ogg}}", "오(ː)월", "ph")
	def test_owol_rr(self):
		self.run_test("오월", "{{ko-IPA|l=y|a=Ko-오월.ogg}}", "owol", "rr")
	def test_owol_rrr(self):
		self.run_test("오월", "{{ko-IPA|l=y|a=Ko-오월.ogg}}", "owol", "rrr")
	def test_owol_mr(self):
		self.run_test("오월", "{{ko-IPA|l=y|a=Ko-오월.ogg}}", "owŏl", "mr")
	def test_owol_yr(self):
		self.run_test("오월", "{{ko-IPA|l=y|a=Ko-오월.ogg}}", "ōwel", "yr")
	def test_owol_ipa(self):
		self.run_test("오월", "{{ko-IPA|l=y|a=Ko-오월.ogg}}", "[ˈo̞(ː)wʌ̹ɭ]", "ipa")

	def test_yuwol_ph(self):
		self.run_test("유월", "{{ko-IPA|a=Ko-유월.ogg}}", "유월", "ph")
	def test_yuwol_rr(self):
		self.run_test("유월", "{{ko-IPA|a=Ko-유월.ogg}}", "yuwol", "rr")
	def test_yuwol_rrr(self):
		self.run_test("유월", "{{ko-IPA|a=Ko-유월.ogg}}", "yuwol", "rrr")
	def test_yuwol_mr(self):
		self.run_test("유월", "{{ko-IPA|a=Ko-유월.ogg}}", "yuwŏl", "mr")
	def test_yuwol_yr(self):
		self.run_test("유월", "{{ko-IPA|a=Ko-유월.ogg}}", "yuwel", "yr")
	def test_yuwol_ipa(self):
		self.run_test("유월", "{{ko-IPA|a=Ko-유월.ogg}}", "[juwʌ̹ɭ]", "ipa")

	def test_chirwol_ph(self):
		self.run_test("칠월", "{{ko-IPA|a=Ko-칠월.ogg}}", "치뤌", "ph")
	def test_chirwol_rr(self):
		self.run_test("칠월", "{{ko-IPA|a=Ko-칠월.ogg}}", "chirwol", "rr")
	def test_chirwol_rrr(self):
		self.run_test("칠월", "{{ko-IPA|a=Ko-칠월.ogg}}", "chil'wol", "rrr")
	def test_chirwol_mr(self):
		self.run_test("칠월", "{{ko-IPA|a=Ko-칠월.ogg}}", "ch'irwŏl", "mr")
	def test_chirwol_yr(self):
		self.run_test("칠월", "{{ko-IPA|a=Ko-칠월.ogg}}", "chil.wel", "yr")
	def test_chirwol_ipa(self):
		self.run_test("칠월", "{{ko-IPA|a=Ko-칠월.ogg}}", "[t͡ɕʰiɾwʌ̹ɭ]", "ipa")

	def test_parwol_ph(self):
		self.run_test("팔월", "{{ko-IPA|a=Ko-팔월.ogg}}", "파뤌", "ph")
	def test_parwol_rr(self):
		self.run_test("팔월", "{{ko-IPA|a=Ko-팔월.ogg}}", "parwol", "rr")
	def test_parwol_rrr(self):
		self.run_test("팔월", "{{ko-IPA|a=Ko-팔월.ogg}}", "pal'wol", "rrr")
	def test_parwol_mr(self):
		self.run_test("팔월", "{{ko-IPA|a=Ko-팔월.ogg}}", "p'arwŏl", "mr")
	def test_parwol_yr(self):
		self.run_test("팔월", "{{ko-IPA|a=Ko-팔월.ogg}}", "phal.wel", "yr")
	def test_parwol_ipa(self):
		self.run_test("팔월", "{{ko-IPA|a=Ko-팔월.ogg}}", "[pʰa̠ɾwʌ̹ɭ]", "ipa")

	def test_guwol_ph(self):
		self.run_test("구월", "{{ko-IPA|a=Ko-구월.ogg}}", "구월", "ph")
	def test_guwol_rr(self):
		self.run_test("구월", "{{ko-IPA|a=Ko-구월.ogg}}", "guwol", "rr")
	def test_guwol_rrr(self):
		self.run_test("구월", "{{ko-IPA|a=Ko-구월.ogg}}", "guwol", "rrr")
	def test_guwol_mr(self):
		self.run_test("구월", "{{ko-IPA|a=Ko-구월.ogg}}", "kuwŏl", "mr")
	def test_guwol_yr(self):
		self.run_test("구월", "{{ko-IPA|a=Ko-구월.ogg}}", "kwuwel", "yr")
	def test_guwol_ipa(self):
		self.run_test("구월", "{{ko-IPA|a=Ko-구월.ogg}}", "[kuwʌ̹ɭ]", "ipa")

	def test_siwol_ph(self):
		self.run_test("시월", "{{ko-IPA|a=Ko-시월.ogg}}", "시월", "ph")
	def test_siwol_rr(self):
		self.run_test("시월", "{{ko-IPA|a=Ko-시월.ogg}}", "siwol", "rr")
	def test_siwol_rrr(self):
		self.run_test("시월", "{{ko-IPA|a=Ko-시월.ogg}}", "siwol", "rrr")
	def test_siwol_mr(self):
		self.run_test("시월", "{{ko-IPA|a=Ko-시월.ogg}}", "siwŏl", "mr")
	def test_siwol_yr(self):
		self.run_test("시월", "{{ko-IPA|a=Ko-시월.ogg}}", "siwel", "yr")
	def test_siwol_ipa(self):
		self.run_test("시월", "{{ko-IPA|a=Ko-시월.ogg}}", "[ɕʰiwʌ̹ɭ]", "ipa")

	def test_sibirwol_ph(self):
		self.run_test("십일월", "{{ko-IPA|a=Ko-십일월.ogg}}", "시비뤌", "ph")
	def test_sibirwol_rr(self):
		self.run_test("십일월", "{{ko-IPA|a=Ko-십일월.ogg}}", "sibirwol", "rr")
	def test_sibirwol_rrr(self):
		self.run_test("십일월", "{{ko-IPA|a=Ko-십일월.ogg}}", "sib'il'wol", "rrr")
	def test_sibirwol_mr(self):
		self.run_test("십일월", "{{ko-IPA|a=Ko-십일월.ogg}}", "sibirwŏl", "mr")
	def test_sibirwol_yr(self):
		self.run_test("십일월", "{{ko-IPA|a=Ko-십일월.ogg}}", "sip.il.wel", "yr")
	def test_sibirwol_ipa(self):
		self.run_test("십일월", "{{ko-IPA|a=Ko-십일월.ogg}}", "[ɕʰibiɾwʌ̹ɭ]", "ipa")

	def test_sibiwol_ph(self):
		self.run_test("십이월", "{{ko-IPA|a=Ko-십이월.ogg}}", "시비월", "ph")
	def test_sibiwol_rr(self):
		self.run_test("십이월", "{{ko-IPA|a=Ko-십이월.ogg}}", "sibiwol", "rr")
	def test_sibiwol_rrr(self):
		self.run_test("십이월", "{{ko-IPA|a=Ko-십이월.ogg}}", "sib'iwol", "rrr")
	def test_sibiwol_mr(self):
		self.run_test("십이월", "{{ko-IPA|a=Ko-십이월.ogg}}", "sibiwŏl", "mr")
	def test_sibiwol_yr(self):
		self.run_test("십이월", "{{ko-IPA|a=Ko-십이월.ogg}}", "sip.iwel", "yr")
	def test_sibiwol_ipa(self):
		self.run_test("십이월", "{{ko-IPA|a=Ko-십이월.ogg}}", "[ɕʰibiwʌ̹ɭ]", "ipa")

	def test_irwol_ph(self):
		self.run_test("일월", "{{ko-IPA|a=Ko-일월.ogg}}", "이뤌", "ph")
	def test_irwol_rr(self):
		self.run_test("일월", "{{ko-IPA|a=Ko-일월.ogg}}", "irwol", "rr")
	def test_irwol_rrr(self):
		self.run_test("일월", "{{ko-IPA|a=Ko-일월.ogg}}", "il'wol", "rrr")
	def test_irwol_mr(self):
		self.run_test("일월", "{{ko-IPA|a=Ko-일월.ogg}}", "irwŏl", "mr")
	def test_irwol_yr(self):
		self.run_test("일월", "{{ko-IPA|a=Ko-일월.ogg}}", "il.wel", "yr")
	def test_irwol_ipa(self):
		self.run_test("일월", "{{ko-IPA|a=Ko-일월.ogg}}", "[iɾwʌ̹ɭ]", "ipa")

	def test_iwol_ph(self):
		self.run_test("2월", "{{ko-IPA|이월|l=y}}", "이(ː)월", "ph")
	def test_iwol_rr(self):
		self.run_test("2월", "{{ko-IPA|이월|l=y}}", "iwol", "rr")
	def test_iwol_rrr(self):
		self.run_test("2월", "{{ko-IPA|이월|l=y}}", "iwol", "rrr")
	def test_iwol_mr(self):
		self.run_test("2월", "{{ko-IPA|이월|l=y}}", "iwŏl", "mr")
	def test_iwol_yr(self):
		self.run_test("2월", "{{ko-IPA|이월|l=y}}", "īwel", "yr")
	def test_iwol_ipa(self):
		self.run_test("2월", "{{ko-IPA|이월|l=y}}", "[ˈi(ː)wʌ̹ɭ]", "ipa")

	def test_iwol_ph(self):
		self.run_test("이월", "{{ko-IPA|l=y|a=Ko-이월.ogg}}", "이(ː)월", "ph")
	def test_iwol_rr(self):
		self.run_test("이월", "{{ko-IPA|l=y|a=Ko-이월.ogg}}", "iwol", "rr")
	def test_iwol_rrr(self):
		self.run_test("이월", "{{ko-IPA|l=y|a=Ko-이월.ogg}}", "iwol", "rrr")
	def test_iwol_mr(self):
		self.run_test("이월", "{{ko-IPA|l=y|a=Ko-이월.ogg}}", "iwŏl", "mr")
	def test_iwol_yr(self):
		self.run_test("이월", "{{ko-IPA|l=y|a=Ko-이월.ogg}}", "īwel", "yr")
	def test_iwol_ipa(self):
		self.run_test("이월", "{{ko-IPA|l=y|a=Ko-이월.ogg}}", "[ˈi(ː)wʌ̹ɭ]", "ipa")

	def test_ppalli_ph(self):
		self.run_test("빨리", "{{ko-IPA}}", "빨리", "ph")
	def test_ppalli_rr(self):
		self.run_test("빨리", "{{ko-IPA}}", "ppalli", "rr")
	def test_ppalli_rrr(self):
		self.run_test("빨리", "{{ko-IPA}}", "ppalli", "rrr")
	def test_ppalli_mr(self):
		self.run_test("빨리", "{{ko-IPA}}", "ppalli", "mr")
	def test_ppalli_yr(self):
		self.run_test("빨리", "{{ko-IPA}}", "ppalli", "yr")
	def test_ppalli_ipa(self):
		self.run_test("빨리", "{{ko-IPA}}", "[p͈a̠ʎʎi]", "ipa")

	def test_eomeoni_ph(self):
		self.run_test("어머니", "{{ko-IPA|a=Ko-어머니.ogg}}", "어머니", "ph")
	def test_eomeoni_rr(self):
		self.run_test("어머니", "{{ko-IPA|a=Ko-어머니.ogg}}", "eomeoni", "rr")
	def test_eomeoni_rrr(self):
		self.run_test("어머니", "{{ko-IPA|a=Ko-어머니.ogg}}", "eomeoni", "rrr")
	def test_eomeoni_mr(self):
		self.run_test("어머니", "{{ko-IPA|a=Ko-어머니.ogg}}", "ŏmŏni", "mr")
	def test_eomeoni_yr(self):
		self.run_test("어머니", "{{ko-IPA|a=Ko-어머니.ogg}}", "emeni", "yr")
	def test_eomeoni_ipa(self):
		self.run_test("어머니", "{{ko-IPA|a=Ko-어머니.ogg}}", "[ʌ̹mʌ̹ni]", "ipa")

	def test_poyuryu_ph(self):
		self.run_test("포유류", "{{ko-IPA|l=y}}", "포(ː)유류", "ph")
	def test_poyuryu_rr(self):
		self.run_test("포유류", "{{ko-IPA|l=y}}", "poyuryu", "rr")
	def test_poyuryu_rrr(self):
		self.run_test("포유류", "{{ko-IPA|l=y}}", "poyulyu", "rrr")
	def test_poyuryu_mr(self):
		self.run_test("포유류", "{{ko-IPA|l=y}}", "p'oyuryu", "mr")
	def test_poyuryu_yr(self):
		self.run_test("포유류", "{{ko-IPA|l=y}}", "phō.yulyu", "yr")
	def test_poyuryu_ipa(self):
		self.run_test("포유류", "{{ko-IPA|l=y}}", "[ˈpʰo̞(ː)juɾju]", "ipa")

	def test_sae_ph(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "새(ː)/세(ː)", "ph")
	def test_sae_rr(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "sae", "rr")
	def test_sae_rrr(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "sae", "rrr")
	def test_sae_mr(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "sae", "mr")
	def test_sae_yr(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "sāy", "yr")
	def test_sae_ipa(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "[sʰɛ(ː)] ~ [sʰe̞(ː)]", "ipa")
	def test_sae_ph_1(self):
		self.run_test("새", "{{ko-IPA}}", "새/세", "ph")
	def test_sae_rr_1(self):
		self.run_test("새", "{{ko-IPA}}", "sae", "rr")
	def test_sae_rrr_1(self):
		self.run_test("새", "{{ko-IPA}}", "sae", "rrr")
	def test_sae_mr_1(self):
		self.run_test("새", "{{ko-IPA}}", "sae", "mr")
	def test_sae_yr_1(self):
		self.run_test("새", "{{ko-IPA}}", "say", "yr")
	def test_sae_ipa_1(self):
		self.run_test("새", "{{ko-IPA}}", "[sʰɛ] ~ [sʰe̞]", "ipa")
	def test_sae_ph_2(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "새(ː)/세(ː)", "ph")
	def test_sae_rr_2(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "sae", "rr")
	def test_sae_rrr_2(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "sae", "rrr")
	def test_sae_mr_2(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "sae", "mr")
	def test_sae_yr_2(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "sāy", "yr")
	def test_sae_ipa_2(self):
		self.run_test("새", "{{ko-IPA|l=y}}", "[sʰɛ(ː)] ~ [sʰe̞(ː)]", "ipa")
	def test_sae_ph_3(self):
		self.run_test("새", "{{ko-IPA}}", "새/세", "ph")
	def test_sae_rr_3(self):
		self.run_test("새", "{{ko-IPA}}", "sae", "rr")
	def test_sae_rrr_3(self):
		self.run_test("새", "{{ko-IPA}}", "sae", "rrr")
	def test_sae_mr_3(self):
		self.run_test("새", "{{ko-IPA}}", "sae", "mr")
	def test_sae_yr_3(self):
		self.run_test("새", "{{ko-IPA}}", "say", "yr")
	def test_sae_ipa_3(self):
		self.run_test("새", "{{ko-IPA}}", "[sʰɛ] ~ [sʰe̞]", "ipa")
	def test_sae_ph_4(self):
		self.run_test("새", "{{ko-IPA}}", "새/세", "ph")
	def test_sae_rr_4(self):
		self.run_test("새", "{{ko-IPA}}", "sae", "rr")
	def test_sae_rrr_4(self):
		self.run_test("새", "{{ko-IPA}}", "sae", "rrr")
	def test_sae_mr_4(self):
		self.run_test("새", "{{ko-IPA}}", "sae", "mr")
	def test_sae_yr_4(self):
		self.run_test("새", "{{ko-IPA}}", "say", "yr")
	def test_sae_ipa_4(self):
		self.run_test("새", "{{ko-IPA}}", "[sʰɛ] ~ [sʰe̞]", "ipa")

	def test_horangi_ph(self):
		self.run_test("호랑이", "{{ko-IPA|l=y}}", "호(ː)랑이", "ph")
	def test_horangi_rr(self):
		self.run_test("호랑이", "{{ko-IPA|l=y}}", "horang'i", "rr")
	def test_horangi_rrr(self):
		self.run_test("호랑이", "{{ko-IPA|l=y}}", "holang'i", "rrr")
	def test_horangi_mr(self):
		self.run_test("호랑이", "{{ko-IPA|l=y}}", "horangi", "mr")
	def test_horangi_yr(self):
		self.run_test("호랑이", "{{ko-IPA|l=y}}", "hōlangi", "yr")
	def test_horangi_ipa(self):
		self.run_test("호랑이", "{{ko-IPA|l=y}}", "[ˈɸʷo̞(ː)ɾa̠ŋi]", "ipa")

	def test_saja_ph(self):
		self.run_test("사자", "{{ko-IPA|l=y}}", "사(ː)자", "ph")
	def test_saja_rr(self):
		self.run_test("사자", "{{ko-IPA|l=y}}", "saja", "rr")
	def test_saja_rrr(self):
		self.run_test("사자", "{{ko-IPA|l=y}}", "saja", "rrr")
	def test_saja_mr(self):
		self.run_test("사자", "{{ko-IPA|l=y}}", "saja", "mr")
	def test_saja_yr(self):
		self.run_test("사자", "{{ko-IPA|l=y}}", "sāca", "yr")
	def test_saja_ipa(self):
		self.run_test("사자", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)d͡ʑa̠]", "ipa")
	def test_saja_ph_1(self):
		self.run_test("사자", "{{ko-IPA}}", "사자", "ph")
	def test_saja_rr_1(self):
		self.run_test("사자", "{{ko-IPA}}", "saja", "rr")
	def test_saja_rrr_1(self):
		self.run_test("사자", "{{ko-IPA}}", "saja", "rrr")
	def test_saja_mr_1(self):
		self.run_test("사자", "{{ko-IPA}}", "saja", "mr")
	def test_saja_yr_1(self):
		self.run_test("사자", "{{ko-IPA}}", "saca", "yr")
	def test_saja_ipa_1(self):
		self.run_test("사자", "{{ko-IPA}}", "[sʰa̠d͡ʑa̠]", "ipa")

	def test_muk_ph(self):
		self.run_test("묵", "{{ko-IPA}}", "묵", "ph")
	def test_muk_rr(self):
		self.run_test("묵", "{{ko-IPA}}", "muk", "rr")
	def test_muk_rrr(self):
		self.run_test("묵", "{{ko-IPA}}", "mug", "rrr")
	def test_muk_mr(self):
		self.run_test("묵", "{{ko-IPA}}", "muk", "mr")
	def test_muk_yr(self):
		self.run_test("묵", "{{ko-IPA}}", "muk", "yr")
	def test_muk_ipa(self):
		self.run_test("묵", "{{ko-IPA}}", "[muk̚]", "ipa")

	def test_ikki_ph(self):
		self.run_test("이끼", "{{ko-IPA}}", "이끼", "ph")
	def test_ikki_rr(self):
		self.run_test("이끼", "{{ko-IPA}}", "ikki", "rr")
	def test_ikki_rrr(self):
		self.run_test("이끼", "{{ko-IPA}}", "i'kki", "rrr")
	def test_ikki_mr(self):
		self.run_test("이끼", "{{ko-IPA}}", "ikki", "mr")
	def test_ikki_yr(self):
		self.run_test("이끼", "{{ko-IPA}}", "i.kki", "yr")
	def test_ikki_ipa(self):
		self.run_test("이끼", "{{ko-IPA}}", "[ik͈i]", "ipa")

	def test_yong_ph(self):
		self.run_test("용", "{{ko-IPA}}", "용", "ph")
	def test_yong_rr(self):
		self.run_test("용", "{{ko-IPA}}", "yong", "rr")
	def test_yong_rrr(self):
		self.run_test("용", "{{ko-IPA}}", "yong", "rrr")
	def test_yong_mr(self):
		self.run_test("용", "{{ko-IPA}}", "yong", "mr")
	def test_yong_yr(self):
		self.run_test("용", "{{ko-IPA}}", "yong", "yr")
	def test_yong_ipa(self):
		self.run_test("용", "{{ko-IPA}}", "[joŋ]", "ipa")

	def test_simhon_ph(self):
		self.run_test("심혼", "{{ko-IPA}}", "심혼", "ph")
	def test_simhon_rr(self):
		self.run_test("심혼", "{{ko-IPA}}", "simhon", "rr")
	def test_simhon_rrr(self):
		self.run_test("심혼", "{{ko-IPA}}", "simhon", "rrr")
	def test_simhon_mr(self):
		self.run_test("심혼", "{{ko-IPA}}", "simhon", "mr")
	def test_simhon_yr(self):
		self.run_test("심혼", "{{ko-IPA}}", "simhon", "yr")
	def test_simhon_ipa(self):
		self.run_test("심혼", "{{ko-IPA}}", "[ɕʰimβo̞n]", "ipa")

	def test_hoengdan_ph(self):
		self.run_test("횡단", "{{ko-IPA}}", "휑단/횡단", "ph")
	def test_hoengdan_rr(self):
		self.run_test("횡단", "{{ko-IPA}}", "hoengdan", "rr")
	def test_hoengdan_rrr(self):
		self.run_test("횡단", "{{ko-IPA}}", "hoengdan", "rrr")
	def test_hoengdan_mr(self):
		self.run_test("횡단", "{{ko-IPA}}", "hoengdan", "mr")
	def test_hoengdan_yr(self):
		self.run_test("횡단", "{{ko-IPA}}", "hoyngtan", "yr")
	def test_hoengdan_ipa(self):
		self.run_test("횡단", "{{ko-IPA}}", "[ɸwe̞ŋda̠n] ~ [hø̞ŋda̠n]", "ipa")

	def test_cheolma_ph(self):
		self.run_test("철마", "{{ko-IPA}}", "철마", "ph")
	def test_cheolma_rr(self):
		self.run_test("철마", "{{ko-IPA}}", "cheolma", "rr")
	def test_cheolma_rrr(self):
		self.run_test("철마", "{{ko-IPA}}", "cheolma", "rrr")
	def test_cheolma_mr(self):
		self.run_test("철마", "{{ko-IPA}}", "ch'ŏlma", "mr")
	def test_cheolma_yr(self):
		self.run_test("철마", "{{ko-IPA}}", "chel.ma", "yr")
	def test_cheolma_ipa(self):
		self.run_test("철마", "{{ko-IPA}}", "[t͡ɕʰʌ̹ɭma̠]", "ipa")


	def test_gu_ph(self):
		self.run_test("구", "{{ko-IPA}}", "구", "ph")
	def test_gu_rr(self):
		self.run_test("구", "{{ko-IPA}}", "gu", "rr")
	def test_gu_rrr(self):
		self.run_test("구", "{{ko-IPA}}", "gu", "rrr")
	def test_gu_mr(self):
		self.run_test("구", "{{ko-IPA}}", "ku", "mr")
	def test_gu_yr(self):
		self.run_test("구", "{{ko-IPA}}", "kwu", "yr")
	def test_gu_ipa(self):
		self.run_test("구", "{{ko-IPA}}", "[ku]", "ipa")
	def test_gu_ph_1(self):
		self.run_test("구", "{{ko-IPA}}", "구", "ph")
	def test_gu_rr_1(self):
		self.run_test("구", "{{ko-IPA}}", "gu", "rr")
	def test_gu_rrr_1(self):
		self.run_test("구", "{{ko-IPA}}", "gu", "rrr")
	def test_gu_mr_1(self):
		self.run_test("구", "{{ko-IPA}}", "ku", "mr")
	def test_gu_yr_1(self):
		self.run_test("구", "{{ko-IPA}}", "kwu", "yr")
	def test_gu_ipa_1(self):
		self.run_test("구", "{{ko-IPA}}", "[ku]", "ipa")
	def test_gu_ph_2(self):
		self.run_test("구", "{{ko-IPA|l=y}}", "구(ː)", "ph")
	def test_gu_rr_2(self):
		self.run_test("구", "{{ko-IPA|l=y}}", "gu", "rr")
	def test_gu_rrr_2(self):
		self.run_test("구", "{{ko-IPA|l=y}}", "gu", "rrr")
	def test_gu_mr_2(self):
		self.run_test("구", "{{ko-IPA|l=y}}", "ku", "mr")
	def test_gu_yr_2(self):
		self.run_test("구", "{{ko-IPA|l=y}}", "kwū", "yr")
	def test_gu_ipa_2(self):
		self.run_test("구", "{{ko-IPA|l=y}}", "[ku(ː)]", "ipa")
	def test_gu_ph_3(self):
		self.run_test("구", "{{ko-IPA}}", "구", "ph")
	def test_gu_rr_3(self):
		self.run_test("구", "{{ko-IPA}}", "gu", "rr")
	def test_gu_rrr_3(self):
		self.run_test("구", "{{ko-IPA}}", "gu", "rrr")
	def test_gu_mr_3(self):
		self.run_test("구", "{{ko-IPA}}", "ku", "mr")
	def test_gu_yr_3(self):
		self.run_test("구", "{{ko-IPA}}", "kwu", "yr")
	def test_gu_ipa_3(self):
		self.run_test("구", "{{ko-IPA}}", "[ku]", "ipa")
	def test_gu_ph_4(self):
		self.run_test("구", "{{ko-IPA}}", "구", "ph")
	def test_gu_rr_4(self):
		self.run_test("구", "{{ko-IPA}}", "gu", "rr")
	def test_gu_rrr_4(self):
		self.run_test("구", "{{ko-IPA}}", "gu", "rrr")
	def test_gu_mr_4(self):
		self.run_test("구", "{{ko-IPA}}", "ku", "mr")
	def test_gu_yr_4(self):
		self.run_test("구", "{{ko-IPA}}", "kwu", "yr")
	def test_gu_ipa_4(self):
		self.run_test("구", "{{ko-IPA}}", "[ku]", "ipa")

	def test_jeongal_ph(self):
		self.run_test("전갈", "{{ko-ipa}}", "전갈", "ph")
	def test_jeongal_rr(self):
		self.run_test("전갈", "{{ko-ipa}}", "jeon'gal", "rr")
	def test_jeongal_rrr(self):
		self.run_test("전갈", "{{ko-ipa}}", "jeongal", "rrr")
	def test_jeongal_mr(self):
		self.run_test("전갈", "{{ko-ipa}}", "chŏn'gal", "mr")
	def test_jeongal_yr(self):
		self.run_test("전갈", "{{ko-ipa}}", "cenkal", "yr")
	def test_jeongal_ipa(self):
		self.run_test("전갈", "{{ko-ipa}}", "[t͡ɕʌ̹nɡa̠ɭ]", "ipa")

	def test_geomi_ph(self):
		self.run_test("거미", "{{ko-IPA}}", "거미", "ph")
	def test_geomi_rr(self):
		self.run_test("거미", "{{ko-IPA}}", "geomi", "rr")
	def test_geomi_rrr(self):
		self.run_test("거미", "{{ko-IPA}}", "geomi", "rrr")
	def test_geomi_mr(self):
		self.run_test("거미", "{{ko-IPA}}", "kŏmi", "mr")
	def test_geomi_yr(self):
		self.run_test("거미", "{{ko-IPA}}", "kemi", "yr")
	def test_geomi_ipa(self):
		self.run_test("거미", "{{ko-IPA}}", "[kʌ̹mi]", "ipa")

	def test_Seuweden_ph(self):
		self.run_test("스웨덴", "{{ko-IPA|cap=y}}", "스웨덴", "ph")
	def test_Seuweden_rr(self):
		self.run_test("스웨덴", "{{ko-IPA|cap=y}}", "Seuweden", "rr")
	def test_Seuweden_rrr(self):
		self.run_test("스웨덴", "{{ko-IPA|cap=y}}", "Seuweden", "rrr")
	def test_Seuweden_mr(self):
		self.run_test("스웨덴", "{{ko-IPA|cap=y}}", "Sŭweden", "mr")
	def test_Seuweden_yr(self):
		self.run_test("스웨덴", "{{ko-IPA|cap=y}}", "suweyteyn", "yr")
	def test_Seuweden_ipa(self):
		self.run_test("스웨덴", "{{ko-IPA|cap=y}}", "[sʰɯwe̞de̞n]", "ipa")

	def test_kiril_munja_ph(self):
		self.run_test("키릴 문자", "{{ko-IPA}}", "키릴 문자", "ph")
	def test_kiril_munja_rr(self):
		self.run_test("키릴 문자", "{{ko-IPA}}", "kiril munja", "rr")
	def test_kiril_munja_rrr(self):
		self.run_test("키릴 문자", "{{ko-IPA}}", "kilil munja", "rrr")
	def test_kiril_munja_mr(self):
		self.run_test("키릴 문자", "{{ko-IPA}}", "k'iril munja", "mr")
	def test_kiril_munja_yr(self):
		self.run_test("키릴 문자", "{{ko-IPA}}", "khilil mun.ca", "yr")
	def test_kiril_munja_ipa(self):
		self.run_test("키릴 문자", "{{ko-IPA}}", "[cçiɾiɭ muɲd͡ʑa̠]", "ipa")

	def test_Hanguk_ph(self):
		self.run_test("한국", "{{ko-IPA|l=y|cap=y|a=Ko-한국.oga}}", "한(ː)국", "ph")
	def test_Hanguk_rr(self):
		self.run_test("한국", "{{ko-IPA|l=y|cap=y|a=Ko-한국.oga}}", "Han'guk", "rr")
	def test_Hanguk_rrr(self):
		self.run_test("한국", "{{ko-IPA|l=y|cap=y|a=Ko-한국.oga}}", "Hangug", "rrr")
	def test_Hanguk_mr(self):
		self.run_test("한국", "{{ko-IPA|l=y|cap=y|a=Ko-한국.oga}}", "Han'guk", "mr")
	def test_Hanguk_yr(self):
		self.run_test("한국", "{{ko-IPA|l=y|cap=y|a=Ko-한국.oga}}", "hānkwuk", "yr")
	def test_Hanguk_ipa(self):
		self.run_test("한국", "{{ko-IPA|l=y|cap=y|a=Ko-한국.oga}}", "[ˈha̠(ː)nɡuk̚]", "ipa")

	def test_jindeugi_ph(self):
		self.run_test("진드기", "{{ko-IPA}}", "진드기", "ph")
	def test_jindeugi_rr(self):
		self.run_test("진드기", "{{ko-IPA}}", "jindeugi", "rr")
	def test_jindeugi_rrr(self):
		self.run_test("진드기", "{{ko-IPA}}", "jindeugi", "rrr")
	def test_jindeugi_mr(self):
		self.run_test("진드기", "{{ko-IPA}}", "chindŭgi", "mr")
	def test_jindeugi_yr(self):
		self.run_test("진드기", "{{ko-IPA}}", "cintuki", "yr")
	def test_jindeugi_ipa(self):
		self.run_test("진드기", "{{ko-IPA}}", "[t͡ɕindɯɡi]", "ipa")

	def test_Asia_ph(self):
		self.run_test("아시아", "{{ko-IPA|cap=y}}", "아시아", "ph")
	def test_Asia_rr(self):
		self.run_test("아시아", "{{ko-IPA|cap=y}}", "Asia", "rr")
	def test_Asia_rrr(self):
		self.run_test("아시아", "{{ko-IPA|cap=y}}", "Asia", "rrr")
	def test_Asia_mr(self):
		self.run_test("아시아", "{{ko-IPA|cap=y}}", "Asia", "mr")
	def test_Asia_yr(self):
		self.run_test("아시아", "{{ko-IPA|cap=y}}", "asia", "yr")
	def test_Asia_ipa(self):
		self.run_test("아시아", "{{ko-IPA|cap=y}}", "[a̠ɕʰia̠]", "ipa")

	def test_gangaji_ph(self):
		self.run_test("강아지", "{{ko-IPA}}", "강아지", "ph")
	def test_gangaji_rr(self):
		self.run_test("강아지", "{{ko-IPA}}", "gang'aji", "rr")
	def test_gangaji_rrr(self):
		self.run_test("강아지", "{{ko-IPA}}", "gang'aji", "rrr")
	def test_gangaji_mr(self):
		self.run_test("강아지", "{{ko-IPA}}", "kangaji", "mr")
	def test_gangaji_yr(self):
		self.run_test("강아지", "{{ko-IPA}}", "kangaci", "yr")
	def test_gangaji_ipa(self):
		self.run_test("강아지", "{{ko-IPA}}", "[ka̠ŋa̠d͡ʑi]", "ipa")


	def test_saranghae_ph(self):
		self.run_test("사랑해", "{{ko-IPA|a=사랑해.ogg}}", "사랑해/사랑헤", "ph")
	def test_saranghae_rr(self):
		self.run_test("사랑해", "{{ko-IPA|a=사랑해.ogg}}", "saranghae", "rr")
	def test_saranghae_rrr(self):
		self.run_test("사랑해", "{{ko-IPA|a=사랑해.ogg}}", "salanghae", "rrr")
	def test_saranghae_mr(self):
		self.run_test("사랑해", "{{ko-IPA|a=사랑해.ogg}}", "saranghae", "mr")
	def test_saranghae_yr(self):
		self.run_test("사랑해", "{{ko-IPA|a=사랑해.ogg}}", "salanghay", "yr")
	def test_saranghae_ipa(self):
		self.run_test("사랑해", "{{ko-IPA|a=사랑해.ogg}}", "[sʰa̠ɾa̠ŋɦɛ] ~ [sʰa̠ɾa̠ŋɦe̞]", "ipa")

	def test_Eseuperanto_ph(self):
		self.run_test("에스페란토", "{{ko-IPA|cap=y}}", "에스페란토", "ph")
	def test_Eseuperanto_rr(self):
		self.run_test("에스페란토", "{{ko-IPA|cap=y}}", "Eseuperanto", "rr")
	def test_Eseuperanto_rrr(self):
		self.run_test("에스페란토", "{{ko-IPA|cap=y}}", "Eseupelanto", "rrr")
	def test_Eseuperanto_mr(self):
		self.run_test("에스페란토", "{{ko-IPA|cap=y}}", "Esŭp'erant'o", "mr")
	def test_Eseuperanto_yr(self):
		self.run_test("에스페란토", "{{ko-IPA|cap=y}}", "eysu.pheylantho", "yr")
	def test_Eseuperanto_ipa(self):
		self.run_test("에스페란토", "{{ko-IPA|cap=y}}", "[e̞sʰɯpʰe̞ɾa̠ntʰo̞]", "ipa")


	def test_sam_ph(self):
		self.run_test("삼", "{{ko-IPA}}", "삼", "ph")
	def test_sam_rr(self):
		self.run_test("삼", "{{ko-IPA}}", "sam", "rr")
	def test_sam_rrr(self):
		self.run_test("삼", "{{ko-IPA}}", "sam", "rrr")
	def test_sam_mr(self):
		self.run_test("삼", "{{ko-IPA}}", "sam", "mr")
	def test_sam_yr(self):
		self.run_test("삼", "{{ko-IPA}}", "sam", "yr")
	def test_sam_ipa(self):
		self.run_test("삼", "{{ko-IPA}}", "[sʰa̠m]", "ipa")
	def test_sam_ph_1(self):
		self.run_test("삼", "{{ko-IPA}}", "삼", "ph")
	def test_sam_rr_1(self):
		self.run_test("삼", "{{ko-IPA}}", "sam", "rr")
	def test_sam_rrr_1(self):
		self.run_test("삼", "{{ko-IPA}}", "sam", "rrr")
	def test_sam_mr_1(self):
		self.run_test("삼", "{{ko-IPA}}", "sam", "mr")
	def test_sam_yr_1(self):
		self.run_test("삼", "{{ko-IPA}}", "sam", "yr")
	def test_sam_ipa_1(self):
		self.run_test("삼", "{{ko-IPA}}", "[sʰa̠m]", "ipa")

	def test_o_ph(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "오(ː)", "ph")
	def test_o_rr(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "o", "rr")
	def test_o_rrr(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "o", "rrr")
	def test_o_mr(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "o", "mr")
	def test_o_yr(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "ō", "yr")
	def test_o_ipa(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "[o̞(ː)]", "ipa")
	def test_o_ph_1(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "오(ː)", "ph")
	def test_o_rr_1(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "o", "rr")
	def test_o_rrr_1(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "o", "rrr")
	def test_o_mr_1(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "o", "mr")
	def test_o_yr_1(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "ō", "yr")
	def test_o_ipa_1(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "[o̞(ː)]", "ipa")
	def test_o_ph_2(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "오(ː)", "ph")
	def test_o_rr_2(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "o", "rr")
	def test_o_rrr_2(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "o", "rrr")
	def test_o_mr_2(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "o", "mr")
	def test_o_yr_2(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "ō", "yr")
	def test_o_ipa_2(self):
		self.run_test("오", "{{ko-IPA|l=y}}", "[o̞(ː)]", "ipa")
	def test_O_ph_3(self):
		self.run_test("오", "{{ko-IPA|cap=y}}", "오", "ph")
	def test_O_rr_3(self):
		self.run_test("오", "{{ko-IPA|cap=y}}", "O", "rr")
	def test_O_rrr_3(self):
		self.run_test("오", "{{ko-IPA|cap=y}}", "O", "rrr")
	def test_O_mr_3(self):
		self.run_test("오", "{{ko-IPA|cap=y}}", "O", "mr")
	def test_O_yr_3(self):
		self.run_test("오", "{{ko-IPA|cap=y}}", "o", "yr")
	def test_O_ipa_3(self):
		self.run_test("오", "{{ko-IPA|cap=y}}", "[o̞]", "ipa")

	def test_nael_ph(self):
		self.run_test("낼", "{{ko-IPA|l=y}}", "낼(ː)/넬(ː)", "ph")
	def test_nael_rr(self):
		self.run_test("낼", "{{ko-IPA|l=y}}", "nael", "rr")
	def test_nael_rrr(self):
		self.run_test("낼", "{{ko-IPA|l=y}}", "nael", "rrr")
	def test_nael_mr(self):
		self.run_test("낼", "{{ko-IPA|l=y}}", "nael", "mr")
	def test_nael_yr(self):
		self.run_test("낼", "{{ko-IPA|l=y}}", "nāyl", "yr")
	def test_nael_ipa(self):
		self.run_test("낼", "{{ko-IPA|l=y}}", "[nɛ(ː)ɭ] ~ [ne̞(ː)ɭ]", "ipa")

	def test_Areuhentina_ph(self):
		self.run_test("아르헨티나", "{{ko-IPA|cap=y}}", "아르헨티나", "ph")
	def test_Areuhentina_rr(self):
		self.run_test("아르헨티나", "{{ko-IPA|cap=y}}", "Areuhentina", "rr")
	def test_Areuhentina_rrr(self):
		self.run_test("아르헨티나", "{{ko-IPA|cap=y}}", "Aleuhentina", "rrr")
	def test_Areuhentina_mr(self):
		self.run_test("아르헨티나", "{{ko-IPA|cap=y}}", "Arŭhent'ina", "mr")
	def test_Areuhentina_yr(self):
		self.run_test("아르헨티나", "{{ko-IPA|cap=y}}", "aluheynthina", "yr")
	def test_Areuhentina_ipa(self):
		self.run_test("아르헨티나", "{{ko-IPA|cap=y}}", "[a̠ɾɯɦe̞ntʰina̠]", "ipa")

	def test_Peurangseu_ph(self):
		self.run_test("프랑스", "{{ko-IPA|cap=y}}", "프랑스", "ph")
	def test_Peurangseu_rr(self):
		self.run_test("프랑스", "{{ko-IPA|cap=y}}", "Peurangseu", "rr")
	def test_Peurangseu_rrr(self):
		self.run_test("프랑스", "{{ko-IPA|cap=y}}", "Peulangseu", "rrr")
	def test_Peurangseu_mr(self):
		self.run_test("프랑스", "{{ko-IPA|cap=y}}", "P'ŭrangsŭ", "mr")
	def test_Peurangseu_yr(self):
		self.run_test("프랑스", "{{ko-IPA|cap=y}}", "phulangsu", "yr")
	def test_Peurangseu_ipa(self):
		self.run_test("프랑스", "{{ko-IPA|cap=y}}", "[pʰɯɾa̠ŋsʰɯ]", "ipa")

	def test_Apeurika_ph(self):
		self.run_test("아프리카", "{{ko-IPA|cap=y}}", "아프리카", "ph")
	def test_Apeurika_rr(self):
		self.run_test("아프리카", "{{ko-IPA|cap=y}}", "Apeurika", "rr")
	def test_Apeurika_rrr(self):
		self.run_test("아프리카", "{{ko-IPA|cap=y}}", "Apeulika", "rrr")
	def test_Apeurika_mr(self):
		self.run_test("아프리카", "{{ko-IPA|cap=y}}", "Ap'ŭrik'a", "mr")
	def test_Apeurika_yr(self):
		self.run_test("아프리카", "{{ko-IPA|cap=y}}", "a.phuli.kha", "yr")
	def test_Apeurika_ipa(self):
		self.run_test("아프리카", "{{ko-IPA|cap=y}}", "[a̠pʰɯɾikʰa̠]", "ipa")

	def test_Rumania_ph(self):
		self.run_test("루마니아", "{{ko-IPA|cap=y}}", "루마니아", "ph")
	def test_Rumania_rr(self):
		self.run_test("루마니아", "{{ko-IPA|cap=y}}", "Rumania", "rr")
	def test_Rumania_rrr(self):
		self.run_test("루마니아", "{{ko-IPA|cap=y}}", "Lumania", "rrr")
	def test_Rumania_mr(self):
		self.run_test("루마니아", "{{ko-IPA|cap=y}}", "Rumania", "mr")
	def test_Rumania_yr(self):
		self.run_test("루마니아", "{{ko-IPA|cap=y}}", "lwumania", "yr")
	def test_Rumania_ipa(self):
		self.run_test("루마니아", "{{ko-IPA|cap=y}}", "[ɾuma̠nia̠]", "ipa")

	def test_seongmyeong_ph(self):
		self.run_test("성명", "{{ko-IPA|l=y}}", "성(ː)명", "ph")
	def test_seongmyeong_rr(self):
		self.run_test("성명", "{{ko-IPA|l=y}}", "seongmyeong", "rr")
	def test_seongmyeong_rrr(self):
		self.run_test("성명", "{{ko-IPA|l=y}}", "seongmyeong", "rrr")
	def test_seongmyeong_mr(self):
		self.run_test("성명", "{{ko-IPA|l=y}}", "sŏngmyŏng", "mr")
	def test_seongmyeong_yr(self):
		self.run_test("성명", "{{ko-IPA|l=y}}", "sēngmyeng", "yr")
	def test_seongmyeong_ipa(self):
		self.run_test("성명", "{{ko-IPA|l=y}}", "[ˈsʰɘ(ː)ŋmjʌ̹ŋ]", "ipa")
	def test_seongmyeong_ph_1(self):
		self.run_test("성명", "{{ko-IPA}}", "성명", "ph")
	def test_seongmyeong_rr_1(self):
		self.run_test("성명", "{{ko-IPA}}", "seongmyeong", "rr")
	def test_seongmyeong_rrr_1(self):
		self.run_test("성명", "{{ko-IPA}}", "seongmyeong", "rrr")
	def test_seongmyeong_mr_1(self):
		self.run_test("성명", "{{ko-IPA}}", "sŏngmyŏng", "mr")
	def test_seongmyeong_yr_1(self):
		self.run_test("성명", "{{ko-IPA}}", "sengmyeng", "yr")
	def test_seongmyeong_ipa_1(self):
		self.run_test("성명", "{{ko-IPA}}", "[sʰʌ̹ŋmjʌ̹ŋ]", "ipa")

	def test_gongsanjuui_ph(self):
		self.run_test("공산주의", "{{ko-IPA|l=y|ui=4}}", "공(ː)산주의/공(ː)산주이", "ph")
	def test_gongsanjuui_rr(self):
		self.run_test("공산주의", "{{ko-IPA|l=y|ui=4}}", "gongsanjuui", "rr")
	def test_gongsanjuui_rrr(self):
		self.run_test("공산주의", "{{ko-IPA|l=y|ui=4}}", "gongsanjuui", "rrr")
	def test_gongsanjuui_mr(self):
		self.run_test("공산주의", "{{ko-IPA|l=y|ui=4}}", "kongsanjuŭi", "mr")
	def test_gongsanjuui_yr(self):
		self.run_test("공산주의", "{{ko-IPA|l=y|ui=4}}", "kōngsan.cwuuy", "yr")
	def test_gongsanjuui_ipa(self):
		self.run_test("공산주의", "{{ko-IPA|l=y|ui=4}}", "[ˈko̞(ː)ŋsʰa̠ɲd͡ʑuɰi] ~ [ˈko̞(ː)ŋsʰa̠ɲd͡ʑui]", "ipa")

	def test_Peuroisen_ph(self):
		self.run_test("프로이센", "{{ko-IPA|cap=y}}", "프로이센", "ph")
	def test_Peuroisen_rr(self):
		self.run_test("프로이센", "{{ko-IPA|cap=y}}", "Peuroisen", "rr")
	def test_Peuroisen_rrr(self):
		self.run_test("프로이센", "{{ko-IPA|cap=y}}", "Peuloisen", "rrr")
	def test_Peuroisen_mr(self):
		self.run_test("프로이센", "{{ko-IPA|cap=y}}", "P'ŭroisen", "mr")
	def test_Peuroisen_yr(self):
		self.run_test("프로이센", "{{ko-IPA|cap=y}}", "phuloiseyn", "yr")
	def test_Peuroisen_ipa(self):
		self.run_test("프로이센", "{{ko-IPA|cap=y}}", "[pʰɯɾo̞isʰe̞n]", "ipa")

	def test_seom_ph(self):
		self.run_test("섬", "{{ko-IPA|l=y}}", "섬(ː)", "ph")
	def test_seom_rr(self):
		self.run_test("섬", "{{ko-IPA|l=y}}", "seom", "rr")
	def test_seom_rrr(self):
		self.run_test("섬", "{{ko-IPA|l=y}}", "seom", "rrr")
	def test_seom_mr(self):
		self.run_test("섬", "{{ko-IPA|l=y}}", "sŏm", "mr")
	def test_seom_yr(self):
		self.run_test("섬", "{{ko-IPA|l=y}}", "sēm", "yr")
	def test_seom_ipa(self):
		self.run_test("섬", "{{ko-IPA|l=y}}", "[sʰɘ(ː)m]", "ipa")
	def test_seom_ph_1(self):
		self.run_test("섬", "{{ko-IPA}}", "섬", "ph")
	def test_seom_rr_1(self):
		self.run_test("섬", "{{ko-IPA}}", "seom", "rr")
	def test_seom_rrr_1(self):
		self.run_test("섬", "{{ko-IPA}}", "seom", "rrr")
	def test_seom_mr_1(self):
		self.run_test("섬", "{{ko-IPA}}", "sŏm", "mr")
	def test_seom_yr_1(self):
		self.run_test("섬", "{{ko-IPA}}", "sem", "yr")
	def test_seom_ipa_1(self):
		self.run_test("섬", "{{ko-IPA}}", "[sʰʌ̹m]", "ipa")
	def test_seom_ph_2(self):
		self.run_test("섬", "{{ko-IPA}}", "섬", "ph")
	def test_seom_rr_2(self):
		self.run_test("섬", "{{ko-IPA}}", "seom", "rr")
	def test_seom_rrr_2(self):
		self.run_test("섬", "{{ko-IPA}}", "seom", "rrr")
	def test_seom_mr_2(self):
		self.run_test("섬", "{{ko-IPA}}", "sŏm", "mr")
	def test_seom_yr_2(self):
		self.run_test("섬", "{{ko-IPA}}", "sem", "yr")
	def test_seom_ipa_2(self):
		self.run_test("섬", "{{ko-IPA}}", "[sʰʌ̹m]", "ipa")
	def test_seom_ph_3(self):
		self.run_test("섬", "{{ko-IPA}}", "섬", "ph")
	def test_seom_rr_3(self):
		self.run_test("섬", "{{ko-IPA}}", "seom", "rr")
	def test_seom_rrr_3(self):
		self.run_test("섬", "{{ko-IPA}}", "seom", "rrr")
	def test_seom_mr_3(self):
		self.run_test("섬", "{{ko-IPA}}", "sŏm", "mr")
	def test_seom_yr_3(self):
		self.run_test("섬", "{{ko-IPA}}", "sem", "yr")
	def test_seom_ipa_3(self):
		self.run_test("섬", "{{ko-IPA}}", "[sʰʌ̹m]", "ipa")

	def test_gongbyeong_ph(self):
		self.run_test("공병", "{{ko-IPA}}", "공병", "ph")
	def test_gongbyeong_rr(self):
		self.run_test("공병", "{{ko-IPA}}", "gongbyeong", "rr")
	def test_gongbyeong_rrr(self):
		self.run_test("공병", "{{ko-IPA}}", "gongbyeong", "rrr")
	def test_gongbyeong_mr(self):
		self.run_test("공병", "{{ko-IPA}}", "kongbyŏng", "mr")
	def test_gongbyeong_yr(self):
		self.run_test("공병", "{{ko-IPA}}", "kongpyeng", "yr")
	def test_gongbyeong_ipa(self):
		self.run_test("공병", "{{ko-IPA}}", "[ko̞ŋbjʌ̹ŋ]", "ipa")

	def test_dongsa_ph(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "동(ː)사", "ph")
	def test_dongsa_rr(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "dongsa", "rr")
	def test_dongsa_rrr(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "dongsa", "rrr")
	def test_dongsa_mr(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "tongsa", "mr")
	def test_dongsa_yr(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "tōngsa", "yr")
	def test_dongsa_ipa(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "[ˈto̞(ː)ŋsʰa̠]", "ipa")
	def test_dongsa_ph_1(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "동(ː)사", "ph")
	def test_dongsa_rr_1(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "dongsa", "rr")
	def test_dongsa_rrr_1(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "dongsa", "rrr")
	def test_dongsa_mr_1(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "tongsa", "mr")
	def test_dongsa_yr_1(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "tōngsa", "yr")
	def test_dongsa_ipa_1(self):
		self.run_test("동사", "{{ko-ipa|l=y}}", "[ˈto̞(ː)ŋsʰa̠]", "ipa")
	def test_dongsa_ph_2(self):
		self.run_test("동사", "{{ko-ipa}}", "동사", "ph")
	def test_dongsa_rr_2(self):
		self.run_test("동사", "{{ko-ipa}}", "dongsa", "rr")
	def test_dongsa_rrr_2(self):
		self.run_test("동사", "{{ko-ipa}}", "dongsa", "rrr")
	def test_dongsa_mr_2(self):
		self.run_test("동사", "{{ko-ipa}}", "tongsa", "mr")
	def test_dongsa_yr_2(self):
		self.run_test("동사", "{{ko-ipa}}", "tongsa", "yr")
	def test_dongsa_ipa_2(self):
		self.run_test("동사", "{{ko-ipa}}", "[to̞ŋsʰa̠]", "ipa")

	def test_hondon_ph(self):
		self.run_test("혼돈", "{{ko-IPA|l=y}}", "혼(ː)돈", "ph")
	def test_hondon_rr(self):
		self.run_test("혼돈", "{{ko-IPA|l=y}}", "hondon", "rr")
	def test_hondon_rrr(self):
		self.run_test("혼돈", "{{ko-IPA|l=y}}", "hondon", "rrr")
	def test_hondon_mr(self):
		self.run_test("혼돈", "{{ko-IPA|l=y}}", "hondon", "mr")
	def test_hondon_yr(self):
		self.run_test("혼돈", "{{ko-IPA|l=y}}", "hōnton", "yr")
	def test_hondon_ipa(self):
		self.run_test("혼돈", "{{ko-IPA|l=y}}", "[ˈɸʷo̞(ː)ndo̞n]", "ipa")

	def test_jaju_ph(self):
		self.run_test("자주", "{{ko-IPA}}", "자주", "ph")
	def test_jaju_rr(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rr")
	def test_jaju_rrr(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rrr")
	def test_jaju_mr(self):
		self.run_test("자주", "{{ko-IPA}}", "chaju", "mr")
	def test_jaju_yr(self):
		self.run_test("자주", "{{ko-IPA}}", "cacwu", "yr")
	def test_jaju_ipa(self):
		self.run_test("자주", "{{ko-IPA}}", "[t͡ɕa̠d͡ʑu]", "ipa")
	def test_jaju_ph_1(self):
		self.run_test("자주", "{{ko-IPA}}", "자주", "ph")
	def test_jaju_rr_1(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rr")
	def test_jaju_rrr_1(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rrr")
	def test_jaju_mr_1(self):
		self.run_test("자주", "{{ko-IPA}}", "chaju", "mr")
	def test_jaju_yr_1(self):
		self.run_test("자주", "{{ko-IPA}}", "cacwu", "yr")
	def test_jaju_ipa_1(self):
		self.run_test("자주", "{{ko-IPA}}", "[t͡ɕa̠d͡ʑu]", "ipa")
	def test_jaju_ph_2(self):
		self.run_test("자주", "{{ko-IPA|l=y}}", "자(ː)주", "ph")
	def test_jaju_rr_2(self):
		self.run_test("자주", "{{ko-IPA|l=y}}", "jaju", "rr")
	def test_jaju_rrr_2(self):
		self.run_test("자주", "{{ko-IPA|l=y}}", "jaju", "rrr")
	def test_jaju_mr_2(self):
		self.run_test("자주", "{{ko-IPA|l=y}}", "chaju", "mr")
	def test_jaju_yr_2(self):
		self.run_test("자주", "{{ko-IPA|l=y}}", "cācwu", "yr")
	def test_jaju_ipa_2(self):
		self.run_test("자주", "{{ko-IPA|l=y}}", "[ˈt͡ɕa̠(ː)d͡ʑu]", "ipa")
	def test_jaju_ph_3(self):
		self.run_test("자주", "{{ko-IPA}}", "자주", "ph")
	def test_jaju_rr_3(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rr")
	def test_jaju_rrr_3(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rrr")
	def test_jaju_mr_3(self):
		self.run_test("자주", "{{ko-IPA}}", "chaju", "mr")
	def test_jaju_yr_3(self):
		self.run_test("자주", "{{ko-IPA}}", "cacwu", "yr")
	def test_jaju_ipa_3(self):
		self.run_test("자주", "{{ko-IPA}}", "[t͡ɕa̠d͡ʑu]", "ipa")
	def test_jaju_ph_4(self):
		self.run_test("자주", "{{ko-IPA}}", "자주", "ph")
	def test_jaju_rr_4(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rr")
	def test_jaju_rrr_4(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rrr")
	def test_jaju_mr_4(self):
		self.run_test("자주", "{{ko-IPA}}", "chaju", "mr")
	def test_jaju_yr_4(self):
		self.run_test("자주", "{{ko-IPA}}", "cacwu", "yr")
	def test_jaju_ipa_4(self):
		self.run_test("자주", "{{ko-IPA}}", "[t͡ɕa̠d͡ʑu]", "ipa")
	def test_jaju_ph_5(self):
		self.run_test("자주", "{{ko-IPA}}", "자주", "ph")
	def test_jaju_rr_5(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rr")
	def test_jaju_rrr_5(self):
		self.run_test("자주", "{{ko-IPA}}", "jaju", "rrr")
	def test_jaju_mr_5(self):
		self.run_test("자주", "{{ko-IPA}}", "chaju", "mr")
	def test_jaju_yr_5(self):
		self.run_test("자주", "{{ko-IPA}}", "cacwu", "yr")
	def test_jaju_ipa_5(self):
		self.run_test("자주", "{{ko-IPA}}", "[t͡ɕa̠d͡ʑu]", "ipa")

	def test_boji_ph(self):
		self.run_test("보지", "{{ko-ipa|l=y}}", "보(ː)지", "ph")
	def test_boji_rr(self):
		self.run_test("보지", "{{ko-ipa|l=y}}", "boji", "rr")
	def test_boji_rrr(self):
		self.run_test("보지", "{{ko-ipa|l=y}}", "boji", "rrr")
	def test_boji_mr(self):
		self.run_test("보지", "{{ko-ipa|l=y}}", "poji", "mr")
	def test_boji_yr(self):
		self.run_test("보지", "{{ko-ipa|l=y}}", "pōci", "yr")
	def test_boji_ipa(self):
		self.run_test("보지", "{{ko-ipa|l=y}}", "[ˈpo̞(ː)d͡ʑi]", "ipa")

	def test_duyu_ph(self):
		self.run_test("두유", "{{ko-IPA}}", "두유", "ph")
	def test_duyu_rr(self):
		self.run_test("두유", "{{ko-IPA}}", "duyu", "rr")
	def test_duyu_rrr(self):
		self.run_test("두유", "{{ko-IPA}}", "duyu", "rrr")
	def test_duyu_mr(self):
		self.run_test("두유", "{{ko-IPA}}", "tuyu", "mr")
	def test_duyu_yr(self):
		self.run_test("두유", "{{ko-IPA}}", "twu.yu", "yr")
	def test_duyu_ipa(self):
		self.run_test("두유", "{{ko-IPA}}", "[tuju]", "ipa")

	def test_gul_ph(self):
		self.run_test("굴", "{{ko-ipa|l=y}}", "굴(ː)", "ph")
	def test_gul_rr(self):
		self.run_test("굴", "{{ko-ipa|l=y}}", "gul", "rr")
	def test_gul_rrr(self):
		self.run_test("굴", "{{ko-ipa|l=y}}", "gul", "rrr")
	def test_gul_mr(self):
		self.run_test("굴", "{{ko-ipa|l=y}}", "kul", "mr")
	def test_gul_yr(self):
		self.run_test("굴", "{{ko-ipa|l=y}}", "kwūl", "yr")
	def test_gul_ipa(self):
		self.run_test("굴", "{{ko-ipa|l=y}}", "[ku(ː)ɭ]", "ipa")
	def test_gul_ph_1(self):
		self.run_test("굴", "{{ko-ipa}}", "굴", "ph")
	def test_gul_rr_1(self):
		self.run_test("굴", "{{ko-ipa}}", "gul", "rr")
	def test_gul_rrr_1(self):
		self.run_test("굴", "{{ko-ipa}}", "gul", "rrr")
	def test_gul_mr_1(self):
		self.run_test("굴", "{{ko-ipa}}", "kul", "mr")
	def test_gul_yr_1(self):
		self.run_test("굴", "{{ko-ipa}}", "kwul", "yr")
	def test_gul_ipa_1(self):
		self.run_test("굴", "{{ko-ipa}}", "[kuɭ]", "ipa")

	def test_duk_ph(self):
		self.run_test("둑", "{{ko-IPA}}", "둑", "ph")
	def test_duk_rr(self):
		self.run_test("둑", "{{ko-IPA}}", "duk", "rr")
	def test_duk_rrr(self):
		self.run_test("둑", "{{ko-IPA}}", "dug", "rrr")
	def test_duk_mr(self):
		self.run_test("둑", "{{ko-IPA}}", "tuk", "mr")
	def test_duk_yr(self):
		self.run_test("둑", "{{ko-IPA}}", "twuk", "yr")
	def test_duk_ipa(self):
		self.run_test("둑", "{{ko-IPA}}", "[tuk̚]", "ipa")

	def test_nap_ph(self):
		self.run_test("납", "{{ko-IPA}}", "납", "ph")
	def test_nap_rr(self):
		self.run_test("납", "{{ko-IPA}}", "nap", "rr")
	def test_nap_rrr(self):
		self.run_test("납", "{{ko-IPA}}", "nab", "rrr")
	def test_nap_mr(self):
		self.run_test("납", "{{ko-IPA}}", "nap", "mr")
	def test_nap_yr(self):
		self.run_test("납", "{{ko-IPA}}", "nap", "yr")
	def test_nap_ipa(self):
		self.run_test("납", "{{ko-IPA}}", "[na̠p̚]", "ipa")

	def test_bal_ph(self):
		self.run_test("발", "{{ko-IPA}}", "발", "ph")
	def test_bal_rr(self):
		self.run_test("발", "{{ko-IPA}}", "bal", "rr")
	def test_bal_rrr(self):
		self.run_test("발", "{{ko-IPA}}", "bal", "rrr")
	def test_bal_mr(self):
		self.run_test("발", "{{ko-IPA}}", "pal", "mr")
	def test_bal_yr(self):
		self.run_test("발", "{{ko-IPA}}", "pal", "yr")
	def test_bal_ipa(self):
		self.run_test("발", "{{ko-IPA}}", "[pa̠ɭ]", "ipa")
	def test_bal_ph_1(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "발(ː)", "ph")
	def test_bal_rr_1(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "bal", "rr")
	def test_bal_rrr_1(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "bal", "rrr")
	def test_bal_mr_1(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "pal", "mr")
	def test_bal_yr_1(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "pāl", "yr")
	def test_bal_ipa_1(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "[pa̠(ː)ɭ]", "ipa")
	def test_bal_ph_2(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "발(ː)", "ph")
	def test_bal_rr_2(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "bal", "rr")
	def test_bal_rrr_2(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "bal", "rrr")
	def test_bal_mr_2(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "pal", "mr")
	def test_bal_yr_2(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "pāl", "yr")
	def test_bal_ipa_2(self):
		self.run_test("발", "{{ko-IPA|l=y}}", "[pa̠(ː)ɭ]", "ipa")
	def test_bal_ph_3(self):
		self.run_test("발", "{{ko-IPA}}", "발", "ph")
	def test_bal_rr_3(self):
		self.run_test("발", "{{ko-IPA}}", "bal", "rr")
	def test_bal_rrr_3(self):
		self.run_test("발", "{{ko-IPA}}", "bal", "rrr")
	def test_bal_mr_3(self):
		self.run_test("발", "{{ko-IPA}}", "pal", "mr")
	def test_bal_yr_3(self):
		self.run_test("발", "{{ko-IPA}}", "pal", "yr")
	def test_bal_ipa_3(self):
		self.run_test("발", "{{ko-IPA}}", "[pa̠ɭ]", "ipa")

	def test_dam_ph(self):
		self.run_test("담", "{{ko-IPA}}", "담", "ph")
	def test_dam_rr(self):
		self.run_test("담", "{{ko-IPA}}", "dam", "rr")
	def test_dam_rrr(self):
		self.run_test("담", "{{ko-IPA}}", "dam", "rrr")
	def test_dam_mr(self):
		self.run_test("담", "{{ko-IPA}}", "tam", "mr")
	def test_dam_yr(self):
		self.run_test("담", "{{ko-IPA}}", "tam", "yr")
	def test_dam_ipa(self):
		self.run_test("담", "{{ko-IPA}}", "[ta̠m]", "ipa")
	def test_dam_ph_1(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "담(ː)", "ph")
	def test_dam_rr_1(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "dam", "rr")
	def test_dam_rrr_1(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "dam", "rrr")
	def test_dam_mr_1(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "tam", "mr")
	def test_dam_yr_1(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "tām", "yr")
	def test_dam_ipa_1(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "[ta̠(ː)m]", "ipa")
	def test_dam_ph_2(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "담(ː)", "ph")
	def test_dam_rr_2(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "dam", "rr")
	def test_dam_rrr_2(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "dam", "rrr")
	def test_dam_mr_2(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "tam", "mr")
	def test_dam_yr_2(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "tām", "yr")
	def test_dam_ipa_2(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "[ta̠(ː)m]", "ipa")
	def test_dam_ph_3(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "담(ː)", "ph")
	def test_dam_rr_3(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "dam", "rr")
	def test_dam_rrr_3(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "dam", "rrr")
	def test_dam_mr_3(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "tam", "mr")
	def test_dam_yr_3(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "tām", "yr")
	def test_dam_ipa_3(self):
		self.run_test("담", "{{ko-IPA|l=y}}", "[ta̠(ː)m]", "ipa")
	def test_dam_ph_4(self):
		self.run_test("담", "{{ko-IPA}}", "담", "ph")
	def test_dam_rr_4(self):
		self.run_test("담", "{{ko-IPA}}", "dam", "rr")
	def test_dam_rrr_4(self):
		self.run_test("담", "{{ko-IPA}}", "dam", "rrr")
	def test_dam_mr_4(self):
		self.run_test("담", "{{ko-IPA}}", "tam", "mr")
	def test_dam_yr_4(self):
		self.run_test("담", "{{ko-IPA}}", "tam", "yr")
	def test_dam_ipa_4(self):
		self.run_test("담", "{{ko-IPA}}", "[ta̠m]", "ipa")

	def test_ul_ph(self):
		self.run_test("울", "{{ko-IPA}}", "울", "ph")
	def test_ul_rr(self):
		self.run_test("울", "{{ko-IPA}}", "ul", "rr")
	def test_ul_rrr(self):
		self.run_test("울", "{{ko-IPA}}", "ul", "rrr")
	def test_ul_mr(self):
		self.run_test("울", "{{ko-IPA}}", "ul", "mr")
	def test_ul_yr(self):
		self.run_test("울", "{{ko-IPA}}", "wul", "yr")
	def test_ul_ipa(self):
		self.run_test("울", "{{ko-IPA}}", "[uɭ]", "ipa")

	def test_jip_ph(self):
		self.run_test("집", "{{ko-IPA|a=y}}", "집", "ph")
	def test_jip_rr(self):
		self.run_test("집", "{{ko-IPA|a=y}}", "jip", "rr")
	def test_jip_rrr(self):
		self.run_test("집", "{{ko-IPA|a=y}}", "jib", "rrr")
	def test_jip_mr(self):
		self.run_test("집", "{{ko-IPA|a=y}}", "chip", "mr")
	def test_jip_yr(self):
		self.run_test("집", "{{ko-IPA|a=y}}", "cip", "yr")
	def test_jip_ipa(self):
		self.run_test("집", "{{ko-IPA|a=y}}", "[t͡ɕip̚]", "ipa")

	def test_jibung_ph(self):
		self.run_test("지붕", "{{ko-IPA}}", "지붕", "ph")
	def test_jibung_rr(self):
		self.run_test("지붕", "{{ko-IPA}}", "jibung", "rr")
	def test_jibung_rrr(self):
		self.run_test("지붕", "{{ko-IPA}}", "jibung", "rrr")
	def test_jibung_mr(self):
		self.run_test("지붕", "{{ko-IPA}}", "chibung", "mr")
	def test_jibung_yr(self):
		self.run_test("지붕", "{{ko-IPA}}", "cipung", "yr")
	def test_jibung_ipa(self):
		self.run_test("지붕", "{{ko-IPA}}", "[t͡ɕibuŋ]", "ipa")

	def test_teo_ph(self):
		self.run_test("터", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-터.wav}}", "터", "ph")
	def test_teo_rr(self):
		self.run_test("터", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-터.wav}}", "teo", "rr")
	def test_teo_rrr(self):
		self.run_test("터", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-터.wav}}", "teo", "rrr")
	def test_teo_mr(self):
		self.run_test("터", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-터.wav}}", "t'ŏ", "mr")
	def test_teo_yr(self):
		self.run_test("터", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-터.wav}}", "the", "yr")
	def test_teo_ipa(self):
		self.run_test("터", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-터.wav}}", "[tʰʌ̹]", "ipa")

	def test_maeum_ph(self):
		self.run_test("마음", "{{ko-IPA|a=y}}", "마음", "ph")
	def test_maeum_rr(self):
		self.run_test("마음", "{{ko-IPA|a=y}}", "ma'eum", "rr")
	def test_maeum_rrr(self):
		self.run_test("마음", "{{ko-IPA|a=y}}", "ma'eum", "rrr")
	def test_maeum_mr(self):
		self.run_test("마음", "{{ko-IPA|a=y}}", "maŭm", "mr")
	def test_maeum_yr(self):
		self.run_test("마음", "{{ko-IPA|a=y}}", "maum", "yr")
	def test_maeum_ipa(self):
		self.run_test("마음", "{{ko-IPA|a=y}}", "[ma̠ɯm]", "ipa")

	def test_ssi_ph(self):
		self.run_test("씨", "{{ko-IPA}}", "씨", "ph")
	def test_ssi_rr(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "rr")
	def test_ssi_rrr(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "rrr")
	def test_ssi_mr(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "mr")
	def test_ssi_yr(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "yr")
	def test_ssi_ipa(self):
		self.run_test("씨", "{{ko-IPA}}", "[ɕ͈i]", "ipa")
	def test_ssi_ph_1(self):
		self.run_test("씨", "{{ko-IPA}}", "씨", "ph")
	def test_ssi_rr_1(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "rr")
	def test_ssi_rrr_1(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "rrr")
	def test_ssi_mr_1(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "mr")
	def test_ssi_yr_1(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "yr")
	def test_ssi_ipa_1(self):
		self.run_test("씨", "{{ko-IPA}}", "[ɕ͈i]", "ipa")
	def test_ssi_ph_2(self):
		self.run_test("씨", "{{ko-IPA}}", "씨", "ph")
	def test_ssi_rr_2(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "rr")
	def test_ssi_rrr_2(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "rrr")
	def test_ssi_mr_2(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "mr")
	def test_ssi_yr_2(self):
		self.run_test("씨", "{{ko-IPA}}", "ssi", "yr")
	def test_ssi_ipa_2(self):
		self.run_test("씨", "{{ko-IPA}}", "[ɕ͈i]", "ipa")

	def test_ssip_ph(self):
		self.run_test("씹", "{{ko-IPA}}", "씹", "ph")
	def test_ssip_rr(self):
		self.run_test("씹", "{{ko-IPA}}", "ssip", "rr")
	def test_ssip_rrr(self):
		self.run_test("씹", "{{ko-IPA}}", "ssib", "rrr")
	def test_ssip_mr(self):
		self.run_test("씹", "{{ko-IPA}}", "ssip", "mr")
	def test_ssip_yr(self):
		self.run_test("씹", "{{ko-IPA}}", "ssip", "yr")
	def test_ssip_ipa(self):
		self.run_test("씹", "{{ko-IPA}}", "[ɕ͈ip̚]", "ipa")

	def test_gup_ph(self):
		self.run_test("굽", "{{ko-IPA}}", "굽", "ph")
	def test_gup_rr(self):
		self.run_test("굽", "{{ko-IPA}}", "gup", "rr")
	def test_gup_rrr(self):
		self.run_test("굽", "{{ko-IPA}}", "gub", "rrr")
	def test_gup_mr(self):
		self.run_test("굽", "{{ko-IPA}}", "kup", "mr")
	def test_gup_yr(self):
		self.run_test("굽", "{{ko-IPA}}", "kwup", "yr")
	def test_gup_ipa(self):
		self.run_test("굽", "{{ko-IPA}}", "[kup̚]", "ipa")

	def test_geori_ph(self):
		self.run_test("거리", "{{ko-IPA}}", "거리", "ph")
	def test_geori_rr(self):
		self.run_test("거리", "{{ko-IPA}}", "geori", "rr")
	def test_geori_rrr(self):
		self.run_test("거리", "{{ko-IPA}}", "geoli", "rrr")
	def test_geori_mr(self):
		self.run_test("거리", "{{ko-IPA}}", "kŏri", "mr")
	def test_geori_yr(self):
		self.run_test("거리", "{{ko-IPA}}", "keli", "yr")
	def test_geori_ipa(self):
		self.run_test("거리", "{{ko-IPA}}", "[kʌ̹ɾi]", "ipa")
	def test_geori_ph_1(self):
		self.run_test("거리", "{{ko-IPA}}", "거리", "ph")
	def test_geori_rr_1(self):
		self.run_test("거리", "{{ko-IPA}}", "geori", "rr")
	def test_geori_rrr_1(self):
		self.run_test("거리", "{{ko-IPA}}", "geoli", "rrr")
	def test_geori_mr_1(self):
		self.run_test("거리", "{{ko-IPA}}", "kŏri", "mr")
	def test_geori_yr_1(self):
		self.run_test("거리", "{{ko-IPA}}", "keli", "yr")
	def test_geori_ipa_1(self):
		self.run_test("거리", "{{ko-IPA}}", "[kʌ̹ɾi]", "ipa")
	def test_geori_ph_2(self):
		self.run_test("거리", "{{ko-IPA|l=y}}", "거(ː)리", "ph")
	def test_geori_rr_2(self):
		self.run_test("거리", "{{ko-IPA|l=y}}", "geori", "rr")
	def test_geori_rrr_2(self):
		self.run_test("거리", "{{ko-IPA|l=y}}", "geoli", "rrr")
	def test_geori_mr_2(self):
		self.run_test("거리", "{{ko-IPA|l=y}}", "kŏri", "mr")
	def test_geori_yr_2(self):
		self.run_test("거리", "{{ko-IPA|l=y}}", "kēli", "yr")
	def test_geori_ipa_2(self):
		self.run_test("거리", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)ɾi]", "ipa")

	def test_igeurigeul_ph(self):
		self.run_test("이글이글", "{{ko-IPA}}", "이그리글", "ph")
	def test_igeurigeul_rr(self):
		self.run_test("이글이글", "{{ko-IPA}}", "igeurigeul", "rr")
	def test_igeurigeul_rrr(self):
		self.run_test("이글이글", "{{ko-IPA}}", "igeul'igeul", "rrr")
	def test_igeurigeul_mr(self):
		self.run_test("이글이글", "{{ko-IPA}}", "igŭrigŭl", "mr")
	def test_igeurigeul_yr(self):
		self.run_test("이글이글", "{{ko-IPA}}", "ikul.ikul", "yr")
	def test_igeurigeul_ipa(self):
		self.run_test("이글이글", "{{ko-IPA}}", "[iɡɯɾiɡɯɭ]", "ipa")

	def test_inggeol_ph(self):
		self.run_test("잉걸", "{{ko-IPA}}", "잉걸", "ph")
	def test_inggeol_rr(self):
		self.run_test("잉걸", "{{ko-IPA}}", "inggeol", "rr")
	def test_inggeol_rrr(self):
		self.run_test("잉걸", "{{ko-IPA}}", "inggeol", "rrr")
	def test_inggeol_mr(self):
		self.run_test("잉걸", "{{ko-IPA}}", "inggŏl", "mr")
	def test_inggeol_yr(self):
		self.run_test("잉걸", "{{ko-IPA}}", "ingkel", "yr")
	def test_inggeol_ipa(self):
		self.run_test("잉걸", "{{ko-IPA}}", "[iŋɡʌ̹ɭ]", "ipa")

	def test_bul_ph(self):
		self.run_test("불", "{{ko-IPA}}", "불", "ph")
	def test_bul_rr(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rr")
	def test_bul_rrr(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rrr")
	def test_bul_mr(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "mr")
	def test_bul_yr(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "yr")
	def test_bul_ipa(self):
		self.run_test("불", "{{ko-IPA}}", "[puɭ]", "ipa")
	def test_bul_ph_1(self):
		self.run_test("불", "{{ko-IPA}}", "불", "ph")
	def test_bul_rr_1(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rr")
	def test_bul_rrr_1(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rrr")
	def test_bul_mr_1(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "mr")
	def test_bul_yr_1(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "yr")
	def test_bul_ipa_1(self):
		self.run_test("불", "{{ko-IPA}}", "[puɭ]", "ipa")
	def test_bul_ph_2(self):
		self.run_test("불", "{{ko-IPA}}", "불", "ph")
	def test_bul_rr_2(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rr")
	def test_bul_rrr_2(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rrr")
	def test_bul_mr_2(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "mr")
	def test_bul_yr_2(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "yr")
	def test_bul_ipa_2(self):
		self.run_test("불", "{{ko-IPA}}", "[puɭ]", "ipa")
	def test_bul_ph_3(self):
		self.run_test("불", "{{ko-IPA}}", "불", "ph")
	def test_bul_rr_3(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rr")
	def test_bul_rrr_3(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rrr")
	def test_bul_mr_3(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "mr")
	def test_bul_yr_3(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "yr")
	def test_bul_ipa_3(self):
		self.run_test("불", "{{ko-IPA}}", "[puɭ]", "ipa")
	def test_bul_ph_4(self):
		self.run_test("불", "{{ko-IPA}}", "불", "ph")
	def test_bul_rr_4(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rr")
	def test_bul_rrr_4(self):
		self.run_test("불", "{{ko-IPA}}", "bul", "rrr")
	def test_bul_mr_4(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "mr")
	def test_bul_yr_4(self):
		self.run_test("불", "{{ko-IPA}}", "pul", "yr")
	def test_bul_ipa_4(self):
		self.run_test("불", "{{ko-IPA}}", "[puɭ]", "ipa")

	def test_daegeomjip_ph(self):
		self.run_test("대검집", "{{ko-IPA|l=y}}", "대(ː)검집/데(ː)검집", "ph")
	def test_daegeomjip_rr(self):
		self.run_test("대검집", "{{ko-IPA|l=y}}", "daegeomjip", "rr")
	def test_daegeomjip_rrr(self):
		self.run_test("대검집", "{{ko-IPA|l=y}}", "daegeomjib", "rrr")
	def test_daegeomjip_mr(self):
		self.run_test("대검집", "{{ko-IPA|l=y}}", "taegŏmjip", "mr")
	def test_daegeomjip_yr(self):
		self.run_test("대검집", "{{ko-IPA|l=y}}", "tāykemcip", "yr")
	def test_daegeomjip_ipa(self):
		self.run_test("대검집", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)ɡʌ̹md͡ʑip̚] ~ [ˈte̞(ː)ɡʌ̹md͡ʑip̚]", "ipa")

	def test_wiki_ph(self):
		self.run_test("위키", "{{ko-IPA}}", "위키", "ph")
	def test_wiki_rr(self):
		self.run_test("위키", "{{ko-IPA}}", "wiki", "rr")
	def test_wiki_rrr(self):
		self.run_test("위키", "{{ko-IPA}}", "wiki", "rrr")
	def test_wiki_mr(self):
		self.run_test("위키", "{{ko-IPA}}", "wik'i", "mr")
	def test_wiki_yr(self):
		self.run_test("위키", "{{ko-IPA}}", "wi.khi", "yr")
	def test_wiki_ipa(self):
		self.run_test("위키", "{{ko-IPA}}", "[ɥicçi] ~ [ycçi]", "ipa")

	def test_gak_ph(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "각", "ph")
	def test_gak_rr(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "gak", "rr")
	def test_gak_rrr(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "gag", "rrr")
	def test_gak_mr(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "kak", "mr")
	def test_gak_yr(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "kak", "yr")
	def test_gak_ipa(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "[ka̠k̚]", "ipa")
	def test_gak_ph_1(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "각", "ph")
	def test_gak_rr_1(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "gak", "rr")
	def test_gak_rrr_1(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "gag", "rrr")
	def test_gak_mr_1(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "kak", "mr")
	def test_gak_yr_1(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "kak", "yr")
	def test_gak_ipa_1(self):
		self.run_test("각", "{{ko-IPA|a=y}}", "[ka̠k̚]", "ipa")

	def test_gap_ph(self):
		self.run_test("갑", "{{ko-IPA}}", "갑", "ph")
	def test_gap_rr(self):
		self.run_test("갑", "{{ko-IPA}}", "gap", "rr")
	def test_gap_rrr(self):
		self.run_test("갑", "{{ko-IPA}}", "gab", "rrr")
	def test_gap_mr(self):
		self.run_test("갑", "{{ko-IPA}}", "kap", "mr")
	def test_gap_yr(self):
		self.run_test("갑", "{{ko-IPA}}", "kap", "yr")
	def test_gap_ipa(self):
		self.run_test("갑", "{{ko-IPA}}", "[ka̠p̚]", "ipa")

	def test_nanjaengi_ph(self):
		self.run_test("난쟁이", "{{ko-IPA}}", "난쟁이/난젱이", "ph")
	def test_nanjaengi_rr(self):
		self.run_test("난쟁이", "{{ko-IPA}}", "nanjaeng'i", "rr")
	def test_nanjaengi_rrr(self):
		self.run_test("난쟁이", "{{ko-IPA}}", "nanjaeng'i", "rrr")
	def test_nanjaengi_mr(self):
		self.run_test("난쟁이", "{{ko-IPA}}", "nanjaengi", "mr")
	def test_nanjaengi_yr(self):
		self.run_test("난쟁이", "{{ko-IPA}}", "nan.cayngi", "yr")
	def test_nanjaengi_ipa(self):
		self.run_test("난쟁이", "{{ko-IPA}}", "[na̠ɲd͡ʑɛŋi] ~ [na̠ɲd͡ʑe̞ŋi]", "ipa")

	def test_nareum_ph(self):
		self.run_test("나름", "{{ko-IPA}}", "나름", "ph")
	def test_nareum_rr(self):
		self.run_test("나름", "{{ko-IPA}}", "nareum", "rr")
	def test_nareum_rrr(self):
		self.run_test("나름", "{{ko-IPA}}", "naleum", "rrr")
	def test_nareum_mr(self):
		self.run_test("나름", "{{ko-IPA}}", "narŭm", "mr")
	def test_nareum_yr(self):
		self.run_test("나름", "{{ko-IPA}}", "nalum", "yr")
	def test_nareum_ipa(self):
		self.run_test("나름", "{{ko-IPA}}", "[na̠ɾɯm]", "ipa")

	def test_galkwi_ph(self):
		self.run_test("갈퀴", "{{ko-IPA}}", "갈퀴", "ph")
	def test_galkwi_rr(self):
		self.run_test("갈퀴", "{{ko-IPA}}", "galkwi", "rr")
	def test_galkwi_rrr(self):
		self.run_test("갈퀴", "{{ko-IPA}}", "galkwi", "rrr")
	def test_galkwi_mr(self):
		self.run_test("갈퀴", "{{ko-IPA}}", "kalk'wi", "mr")
	def test_galkwi_yr(self):
		self.run_test("갈퀴", "{{ko-IPA}}", "kal.khwi", "yr")
	def test_galkwi_ipa(self):
		self.run_test("갈퀴", "{{ko-IPA}}", "[ka̠ɭkʰɥi] ~ [ka̠ɭkʰy]", "ipa")

	def test_sida_ph(self):
		self.run_test("시다", "{{ko-IPA}}", "시다", "ph")
	def test_sida_rr(self):
		self.run_test("시다", "{{ko-IPA}}", "sida", "rr")
	def test_sida_rrr(self):
		self.run_test("시다", "{{ko-IPA}}", "sida", "rrr")
	def test_sida_mr(self):
		self.run_test("시다", "{{ko-IPA}}", "sida", "mr")
	def test_sida_yr(self):
		self.run_test("시다", "{{ko-IPA}}", "sita", "yr")
	def test_sida_ipa(self):
		self.run_test("시다", "{{ko-IPA}}", "[ɕʰida̠]", "ipa")

	def test_sum_ph(self):
		self.run_test("숨", "{{ko-IPA|l=y}}", "숨(ː)", "ph")
	def test_sum_rr(self):
		self.run_test("숨", "{{ko-IPA|l=y}}", "sum", "rr")
	def test_sum_rrr(self):
		self.run_test("숨", "{{ko-IPA|l=y}}", "sum", "rrr")
	def test_sum_mr(self):
		self.run_test("숨", "{{ko-IPA|l=y}}", "sum", "mr")
	def test_sum_yr(self):
		self.run_test("숨", "{{ko-IPA|l=y}}", "swūm", "yr")
	def test_sum_ipa(self):
		self.run_test("숨", "{{ko-IPA|l=y}}", "[sʰu(ː)m]", "ipa")


	def test_gudeongi_ph(self):
		self.run_test("구덩이", "{{ko-ipa}}", "구덩이", "ph")
	def test_gudeongi_rr(self):
		self.run_test("구덩이", "{{ko-ipa}}", "gudeong'i", "rr")
	def test_gudeongi_rrr(self):
		self.run_test("구덩이", "{{ko-ipa}}", "gudeong'i", "rrr")
	def test_gudeongi_mr(self):
		self.run_test("구덩이", "{{ko-ipa}}", "kudŏngi", "mr")
	def test_gudeongi_yr(self):
		self.run_test("구덩이", "{{ko-ipa}}", "kwutengi", "yr")
	def test_gudeongi_ipa(self):
		self.run_test("구덩이", "{{ko-ipa}}", "[kudʌ̹ŋi]", "ipa")


	def test_bullyuhak_ph(self):
		self.run_test("분류학", "{{ko-IPA}}", "불류학", "ph")
	def test_bullyuhak_rr(self):
		self.run_test("분류학", "{{ko-IPA}}", "bullyuhak", "rr")
	def test_bullyuhak_rrr(self):
		self.run_test("분류학", "{{ko-IPA}}", "bunlyuhag", "rrr")
	def test_bullyuhak_mr(self):
		self.run_test("분류학", "{{ko-IPA}}", "pullyuhak", "mr")
	def test_bullyuhak_yr(self):
		self.run_test("분류학", "{{ko-IPA}}", "punlyuhak", "yr")
	def test_bullyuhak_ipa(self):
		self.run_test("분류학", "{{ko-IPA}}", "[puʎʎuɦa̠k̚]", "ipa")

	def test_um_ph(self):
		self.run_test("움", "{{ko-ipa|l=y}}", "움(ː)", "ph")
	def test_um_rr(self):
		self.run_test("움", "{{ko-ipa|l=y}}", "um", "rr")
	def test_um_rrr(self):
		self.run_test("움", "{{ko-ipa|l=y}}", "um", "rrr")
	def test_um_mr(self):
		self.run_test("움", "{{ko-ipa|l=y}}", "um", "mr")
	def test_um_yr(self):
		self.run_test("움", "{{ko-ipa|l=y}}", "wūm", "yr")
	def test_um_ipa(self):
		self.run_test("움", "{{ko-ipa|l=y}}", "[u(ː)m]", "ipa")

	def test_ssak_ph(self):
		self.run_test("싹", "{{ko-ipa}}", "싹", "ph")
	def test_ssak_rr(self):
		self.run_test("싹", "{{ko-ipa}}", "ssak", "rr")
	def test_ssak_rrr(self):
		self.run_test("싹", "{{ko-ipa}}", "ssag", "rrr")
	def test_ssak_mr(self):
		self.run_test("싹", "{{ko-ipa}}", "ssak", "mr")
	def test_ssak_yr(self):
		self.run_test("싹", "{{ko-ipa}}", "ssak", "yr")
	def test_ssak_ipa(self):
		self.run_test("싹", "{{ko-ipa}}", "[s͈a̠k̚]", "ipa")

	def test_eumyang_ph(self):
		self.run_test("음양", "{{ko-IPA}}", "으먕", "ph")
	def test_eumyang_rr(self):
		self.run_test("음양", "{{ko-IPA}}", "eumyang", "rr")
	def test_eumyang_rrr(self):
		self.run_test("음양", "{{ko-IPA}}", "eum'yang", "rrr")
	def test_eumyang_mr(self):
		self.run_test("음양", "{{ko-IPA}}", "ŭmyang", "mr")
	def test_eumyang_yr(self):
		self.run_test("음양", "{{ko-IPA}}", "um.yang", "yr")
	def test_eumyang_ipa(self):
		self.run_test("음양", "{{ko-IPA}}", "[ɯmja̠ŋ]", "ipa")

	def test_teul_ph(self):
		self.run_test("틀", "{{ko-IPA}}", "틀", "ph")
	def test_teul_rr(self):
		self.run_test("틀", "{{ko-IPA}}", "teul", "rr")
	def test_teul_rrr(self):
		self.run_test("틀", "{{ko-IPA}}", "teul", "rrr")
	def test_teul_mr(self):
		self.run_test("틀", "{{ko-IPA}}", "t'ŭl", "mr")
	def test_teul_yr(self):
		self.run_test("틀", "{{ko-IPA}}", "thul", "yr")
	def test_teul_ipa(self):
		self.run_test("틀", "{{ko-IPA}}", "[tʰɯɭ]", "ipa")

	def test_byeok_ph(self):
		self.run_test("벽", "{{ko-IPA}}", "벽", "ph")
	def test_byeok_rr(self):
		self.run_test("벽", "{{ko-IPA}}", "byeok", "rr")
	def test_byeok_rrr(self):
		self.run_test("벽", "{{ko-IPA}}", "byeog", "rrr")
	def test_byeok_mr(self):
		self.run_test("벽", "{{ko-IPA}}", "pyŏk", "mr")
	def test_byeok_yr(self):
		self.run_test("벽", "{{ko-IPA}}", "pyek", "yr")
	def test_byeok_ipa(self):
		self.run_test("벽", "{{ko-IPA}}", "[pjʌ̹k̚]", "ipa")

	def test_baram_ph(self):
		self.run_test("바람", "{{ko-IPA}}", "바람", "ph")
	def test_baram_rr(self):
		self.run_test("바람", "{{ko-IPA}}", "baram", "rr")
	def test_baram_rrr(self):
		self.run_test("바람", "{{ko-IPA}}", "balam", "rrr")
	def test_baram_mr(self):
		self.run_test("바람", "{{ko-IPA}}", "param", "mr")
	def test_baram_yr(self):
		self.run_test("바람", "{{ko-IPA}}", "palam", "yr")
	def test_baram_ipa(self):
		self.run_test("바람", "{{ko-IPA}}", "[pa̠ɾa̠m]", "ipa")
	def test_baram_ph_1(self):
		self.run_test("바람", "{{ko-IPA}}", "바람", "ph")
	def test_baram_rr_1(self):
		self.run_test("바람", "{{ko-IPA}}", "baram", "rr")
	def test_baram_rrr_1(self):
		self.run_test("바람", "{{ko-IPA}}", "balam", "rrr")
	def test_baram_mr_1(self):
		self.run_test("바람", "{{ko-IPA}}", "param", "mr")
	def test_baram_yr_1(self):
		self.run_test("바람", "{{ko-IPA}}", "palam", "yr")
	def test_baram_ipa_1(self):
		self.run_test("바람", "{{ko-IPA}}", "[pa̠ɾa̠m]", "ipa")
	def test_baram_ph_2(self):
		self.run_test("바람", "{{ko-IPA}}", "바람", "ph")
	def test_baram_rr_2(self):
		self.run_test("바람", "{{ko-IPA}}", "baram", "rr")
	def test_baram_rrr_2(self):
		self.run_test("바람", "{{ko-IPA}}", "balam", "rrr")
	def test_baram_mr_2(self):
		self.run_test("바람", "{{ko-IPA}}", "param", "mr")
	def test_baram_yr_2(self):
		self.run_test("바람", "{{ko-IPA}}", "palam", "yr")
	def test_baram_ipa_2(self):
		self.run_test("바람", "{{ko-IPA}}", "[pa̠ɾa̠m]", "ipa")

	def test_jisik_ph(self):
		self.run_test("지식", "{{ko-IPA}}", "지식", "ph")
	def test_jisik_rr(self):
		self.run_test("지식", "{{ko-IPA}}", "jisik", "rr")
	def test_jisik_rrr(self):
		self.run_test("지식", "{{ko-IPA}}", "jisig", "rrr")
	def test_jisik_mr(self):
		self.run_test("지식", "{{ko-IPA}}", "chisik", "mr")
	def test_jisik_yr(self):
		self.run_test("지식", "{{ko-IPA}}", "cisik", "yr")
	def test_jisik_ipa(self):
		self.run_test("지식", "{{ko-IPA}}", "[t͡ɕiɕʰik̚]", "ipa")

	def test_hanja_ph(self):
		self.run_test("한자", "{{ko-IPA|l=y|com=1}}", "한(ː)짜", "ph")
	def test_hanja_rr(self):
		self.run_test("한자", "{{ko-IPA|l=y|com=1}}", "hanja", "rr")
	def test_hanja_rrr(self):
		self.run_test("한자", "{{ko-IPA|l=y|com=1}}", "hanja", "rrr")
	def test_hanja_mr(self):
		self.run_test("한자", "{{ko-IPA|l=y|com=1}}", "hancha", "mr")
	def test_hanja_yr(self):
		self.run_test("한자", "{{ko-IPA|l=y|com=1}}", "hānqca", "yr")
	def test_hanja_ipa(self):
		self.run_test("한자", "{{ko-IPA|l=y|com=1}}", "[ˈha̠(ː)ɲt͡ɕ͈a̠]", "ipa")
	def test_hanja_ph_1(self):
		self.run_test("한자", "{{ko-IPA}}", "한자", "ph")
	def test_hanja_rr_1(self):
		self.run_test("한자", "{{ko-IPA}}", "hanja", "rr")
	def test_hanja_rrr_1(self):
		self.run_test("한자", "{{ko-IPA}}", "hanja", "rrr")
	def test_hanja_mr_1(self):
		self.run_test("한자", "{{ko-IPA}}", "hanja", "mr")
	def test_hanja_yr_1(self):
		self.run_test("한자", "{{ko-IPA}}", "han.ca", "yr")
	def test_hanja_ipa_1(self):
		self.run_test("한자", "{{ko-IPA}}", "[ha̠ɲd͡ʑa̠]", "ipa")

	def test_mani_ph(self):
		self.run_test("마니", "{{ko-ipa}}", "마니", "ph")
	def test_mani_rr(self):
		self.run_test("마니", "{{ko-ipa}}", "mani", "rr")
	def test_mani_rrr(self):
		self.run_test("마니", "{{ko-ipa}}", "mani", "rrr")
	def test_mani_mr(self):
		self.run_test("마니", "{{ko-ipa}}", "mani", "mr")
	def test_mani_yr(self):
		self.run_test("마니", "{{ko-ipa}}", "mani", "yr")
	def test_mani_ipa(self):
		self.run_test("마니", "{{ko-ipa}}", "[ma̠ni]", "ipa")

	def test_manjida_ph(self):
		self.run_test("만지다", "{{ko-IPA}}", "만지다", "ph")
	def test_manjida_rr(self):
		self.run_test("만지다", "{{ko-IPA}}", "manjida", "rr")
	def test_manjida_rrr(self):
		self.run_test("만지다", "{{ko-IPA}}", "manjida", "rrr")
	def test_manjida_mr(self):
		self.run_test("만지다", "{{ko-IPA}}", "manjida", "mr")
	def test_manjida_yr(self):
		self.run_test("만지다", "{{ko-IPA}}", "man.cita", "yr")
	def test_manjida_ipa(self):
		self.run_test("만지다", "{{ko-IPA}}", "[ma̠ɲd͡ʑida̠]", "ipa")

	def test_dukkeobi_ph(self):
		self.run_test("두꺼비", "{{ko-IPA}}", "두꺼비", "ph")
	def test_dukkeobi_rr(self):
		self.run_test("두꺼비", "{{ko-IPA}}", "dukkeobi", "rr")
	def test_dukkeobi_rrr(self):
		self.run_test("두꺼비", "{{ko-IPA}}", "du'kkeobi", "rrr")
	def test_dukkeobi_mr(self):
		self.run_test("두꺼비", "{{ko-IPA}}", "tukkŏbi", "mr")
	def test_dukkeobi_yr(self):
		self.run_test("두꺼비", "{{ko-IPA}}", "twu.kkepi", "yr")
	def test_dukkeobi_ipa(self):
		self.run_test("두꺼비", "{{ko-IPA}}", "[tuk͈ʌ̹bi]", "ipa")

	def test_dukkeopda_ph(self):
		self.run_test("두껍다", "{{ko-IPA}}", "두껍따", "ph")
	def test_dukkeopda_rr(self):
		self.run_test("두껍다", "{{ko-IPA}}", "dukkeopda", "rr")
	def test_dukkeopda_rrr(self):
		self.run_test("두껍다", "{{ko-IPA}}", "du'kkeobda", "rrr")
	def test_dukkeopda_mr(self):
		self.run_test("두껍다", "{{ko-IPA}}", "tukkŏpta", "mr")
	def test_dukkeopda_yr(self):
		self.run_test("두껍다", "{{ko-IPA}}", "twu.kkepta", "yr")
	def test_dukkeopda_ipa(self):
		self.run_test("두껍다", "{{ko-IPA}}", "[tuk͈ʌ̹p̚t͈a̠]", "ipa")

	def test_dun_ph(self):
		self.run_test("둔", "{{ko-IPA|l=y}}", "둔(ː)", "ph")
	def test_dun_rr(self):
		self.run_test("둔", "{{ko-IPA|l=y}}", "dun", "rr")
	def test_dun_rrr(self):
		self.run_test("둔", "{{ko-IPA|l=y}}", "dun", "rrr")
	def test_dun_mr(self):
		self.run_test("둔", "{{ko-IPA|l=y}}", "tun", "mr")
	def test_dun_yr(self):
		self.run_test("둔", "{{ko-IPA|l=y}}", "twūn", "yr")
	def test_dun_ipa(self):
		self.run_test("둔", "{{ko-IPA|l=y}}", "[tu(ː)n]", "ipa")

	def test_neol_ph(self):
		self.run_test("널", "{{ko-IPA|l=y}}", "널(ː)", "ph")
	def test_neol_rr(self):
		self.run_test("널", "{{ko-IPA|l=y}}", "neol", "rr")
	def test_neol_rrr(self):
		self.run_test("널", "{{ko-IPA|l=y}}", "neol", "rrr")
	def test_neol_mr(self):
		self.run_test("널", "{{ko-IPA|l=y}}", "nŏl", "mr")
	def test_neol_yr(self):
		self.run_test("널", "{{ko-IPA|l=y}}", "nēl", "yr")
	def test_neol_ipa(self):
		self.run_test("널", "{{ko-IPA|l=y}}", "[nɘ(ː)ɭ]", "ipa")
	def test_neol_ph_1(self):
		self.run_test("널", "{{ko-IPA}}", "널", "ph")
	def test_neol_rr_1(self):
		self.run_test("널", "{{ko-IPA}}", "neol", "rr")
	def test_neol_rrr_1(self):
		self.run_test("널", "{{ko-IPA}}", "neol", "rrr")
	def test_neol_mr_1(self):
		self.run_test("널", "{{ko-IPA}}", "nŏl", "mr")
	def test_neol_yr_1(self):
		self.run_test("널", "{{ko-IPA}}", "nel", "yr")
	def test_neol_ipa_1(self):
		self.run_test("널", "{{ko-IPA}}", "[nʌ̹ɭ]", "ipa")

	def test_dari_ph(self):
		self.run_test("다리", "{{ko-IPA}}", "다리", "ph")
	def test_dari_rr(self):
		self.run_test("다리", "{{ko-IPA}}", "dari", "rr")
	def test_dari_rrr(self):
		self.run_test("다리", "{{ko-IPA}}", "dali", "rrr")
	def test_dari_mr(self):
		self.run_test("다리", "{{ko-IPA}}", "tari", "mr")
	def test_dari_yr(self):
		self.run_test("다리", "{{ko-IPA}}", "tali", "yr")
	def test_dari_ipa(self):
		self.run_test("다리", "{{ko-IPA}}", "[ta̠ɾi]", "ipa")
	def test_dari_ph_1(self):
		self.run_test("다리", "{{ko-IPA}}", "다리", "ph")
	def test_dari_rr_1(self):
		self.run_test("다리", "{{ko-IPA}}", "dari", "rr")
	def test_dari_rrr_1(self):
		self.run_test("다리", "{{ko-IPA}}", "dali", "rrr")
	def test_dari_mr_1(self):
		self.run_test("다리", "{{ko-IPA}}", "tari", "mr")
	def test_dari_yr_1(self):
		self.run_test("다리", "{{ko-IPA}}", "tali", "yr")
	def test_dari_ipa_1(self):
		self.run_test("다리", "{{ko-IPA}}", "[ta̠ɾi]", "ipa")
	def test_dari_ph_2(self):
		self.run_test("다리", "{{ko-IPA}}", "다리", "ph")
	def test_dari_rr_2(self):
		self.run_test("다리", "{{ko-IPA}}", "dari", "rr")
	def test_dari_rrr_2(self):
		self.run_test("다리", "{{ko-IPA}}", "dali", "rrr")
	def test_dari_mr_2(self):
		self.run_test("다리", "{{ko-IPA}}", "tari", "mr")
	def test_dari_yr_2(self):
		self.run_test("다리", "{{ko-IPA}}", "tali", "yr")
	def test_dari_ipa_2(self):
		self.run_test("다리", "{{ko-IPA}}", "[ta̠ɾi]", "ipa")

	def test_ttwida_ph(self):
		self.run_test("뛰다", "{{ko-IPA}}", "뛰다", "ph")
	def test_ttwida_rr(self):
		self.run_test("뛰다", "{{ko-IPA}}", "ttwida", "rr")
	def test_ttwida_rrr(self):
		self.run_test("뛰다", "{{ko-IPA}}", "ttwida", "rrr")
	def test_ttwida_mr(self):
		self.run_test("뛰다", "{{ko-IPA}}", "ttwida", "mr")
	def test_ttwida_yr(self):
		self.run_test("뛰다", "{{ko-IPA}}", "ttwita", "yr")
	def test_ttwida_ipa(self):
		self.run_test("뛰다", "{{ko-IPA}}", "[t͈ɥida̠] ~ [t͈yda̠]", "ipa")

	def test_top_ph(self):
		self.run_test("톱", "{{ko-IPA}}", "톱", "ph")
	def test_top_rr(self):
		self.run_test("톱", "{{ko-IPA}}", "top", "rr")
	def test_top_rrr(self):
		self.run_test("톱", "{{ko-IPA}}", "tob", "rrr")
	def test_top_mr(self):
		self.run_test("톱", "{{ko-IPA}}", "t'op", "mr")
	def test_top_yr(self):
		self.run_test("톱", "{{ko-IPA}}", "thop", "yr")
	def test_top_ipa(self):
		self.run_test("톱", "{{ko-IPA}}", "[tʰo̞p̚]", "ipa")

	def test_morae_ph(self):
		self.run_test("모래", "{{ko-IPA}}", "모래/모레", "ph")
	def test_morae_rr(self):
		self.run_test("모래", "{{ko-IPA}}", "morae", "rr")
	def test_morae_rrr(self):
		self.run_test("모래", "{{ko-IPA}}", "molae", "rrr")
	def test_morae_mr(self):
		self.run_test("모래", "{{ko-IPA}}", "morae", "mr")
	def test_morae_yr(self):
		self.run_test("모래", "{{ko-IPA}}", "molay", "yr")
	def test_morae_ipa(self):
		self.run_test("모래", "{{ko-IPA}}", "[mo̞ɾɛ] ~ [mo̞ɾe̞]", "ipa")

	def test_kyeoda_ph(self):
		self.run_test("켜다", "{{ko-IPA}}", "켜다", "ph")
	def test_kyeoda_rr(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rr")
	def test_kyeoda_rrr(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rrr")
	def test_kyeoda_mr(self):
		self.run_test("켜다", "{{ko-IPA}}", "k'yŏda", "mr")
	def test_kyeoda_yr(self):
		self.run_test("켜다", "{{ko-IPA}}", "khyeta", "yr")
	def test_kyeoda_ipa(self):
		self.run_test("켜다", "{{ko-IPA}}", "[cçʌ̹da̠]", "ipa")
	def test_kyeoda_ph_1(self):
		self.run_test("켜다", "{{ko-IPA}}", "켜다", "ph")
	def test_kyeoda_rr_1(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rr")
	def test_kyeoda_rrr_1(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rrr")
	def test_kyeoda_mr_1(self):
		self.run_test("켜다", "{{ko-IPA}}", "k'yŏda", "mr")
	def test_kyeoda_yr_1(self):
		self.run_test("켜다", "{{ko-IPA}}", "khyeta", "yr")
	def test_kyeoda_ipa_1(self):
		self.run_test("켜다", "{{ko-IPA}}", "[cçʌ̹da̠]", "ipa")
	def test_kyeoda_ph_2(self):
		self.run_test("켜다", "{{ko-IPA}}", "켜다", "ph")
	def test_kyeoda_rr_2(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rr")
	def test_kyeoda_rrr_2(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rrr")
	def test_kyeoda_mr_2(self):
		self.run_test("켜다", "{{ko-IPA}}", "k'yŏda", "mr")
	def test_kyeoda_yr_2(self):
		self.run_test("켜다", "{{ko-IPA}}", "khyeta", "yr")
	def test_kyeoda_ipa_2(self):
		self.run_test("켜다", "{{ko-IPA}}", "[cçʌ̹da̠]", "ipa")
	def test_kyeoda_ph_3(self):
		self.run_test("켜다", "{{ko-IPA}}", "켜다", "ph")
	def test_kyeoda_rr_3(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rr")
	def test_kyeoda_rrr_3(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rrr")
	def test_kyeoda_mr_3(self):
		self.run_test("켜다", "{{ko-IPA}}", "k'yŏda", "mr")
	def test_kyeoda_yr_3(self):
		self.run_test("켜다", "{{ko-IPA}}", "khyeta", "yr")
	def test_kyeoda_ipa_3(self):
		self.run_test("켜다", "{{ko-IPA}}", "[cçʌ̹da̠]", "ipa")
	def test_kyeoda_ph_4(self):
		self.run_test("켜다", "{{ko-IPA}}", "켜다", "ph")
	def test_kyeoda_rr_4(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rr")
	def test_kyeoda_rrr_4(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rrr")
	def test_kyeoda_mr_4(self):
		self.run_test("켜다", "{{ko-IPA}}", "k'yŏda", "mr")
	def test_kyeoda_yr_4(self):
		self.run_test("켜다", "{{ko-IPA}}", "khyeta", "yr")
	def test_kyeoda_ipa_4(self):
		self.run_test("켜다", "{{ko-IPA}}", "[cçʌ̹da̠]", "ipa")
	def test_kyeoda_ph_5(self):
		self.run_test("켜다", "{{ko-IPA}}", "켜다", "ph")
	def test_kyeoda_rr_5(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rr")
	def test_kyeoda_rrr_5(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rrr")
	def test_kyeoda_mr_5(self):
		self.run_test("켜다", "{{ko-IPA}}", "k'yŏda", "mr")
	def test_kyeoda_yr_5(self):
		self.run_test("켜다", "{{ko-IPA}}", "khyeta", "yr")
	def test_kyeoda_ipa_5(self):
		self.run_test("켜다", "{{ko-IPA}}", "[cçʌ̹da̠]", "ipa")
	def test_kyeoda_ph_6(self):
		self.run_test("켜다", "{{ko-IPA}}", "켜다", "ph")
	def test_kyeoda_rr_6(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rr")
	def test_kyeoda_rrr_6(self):
		self.run_test("켜다", "{{ko-IPA}}", "kyeoda", "rrr")
	def test_kyeoda_mr_6(self):
		self.run_test("켜다", "{{ko-IPA}}", "k'yŏda", "mr")
	def test_kyeoda_yr_6(self):
		self.run_test("켜다", "{{ko-IPA}}", "khyeta", "yr")
	def test_kyeoda_ipa_6(self):
		self.run_test("켜다", "{{ko-IPA}}", "[cçʌ̹da̠]", "ipa")

	def test_gyeore_ph(self):
		self.run_test("겨레", "{{ko-IPA}}", "겨레", "ph")
	def test_gyeore_rr(self):
		self.run_test("겨레", "{{ko-IPA}}", "gyeore", "rr")
	def test_gyeore_rrr(self):
		self.run_test("겨레", "{{ko-IPA}}", "gyeole", "rrr")
	def test_gyeore_mr(self):
		self.run_test("겨레", "{{ko-IPA}}", "kyŏre", "mr")
	def test_gyeore_yr(self):
		self.run_test("겨레", "{{ko-IPA}}", "kyeley", "yr")
	def test_gyeore_ipa(self):
		self.run_test("겨레", "{{ko-IPA}}", "[kjʌ̹ɾe̞]", "ipa")

	def test_gyeori_ph(self):
		self.run_test("겨리", "{{ko-ipa}}", "겨리", "ph")
	def test_gyeori_rr(self):
		self.run_test("겨리", "{{ko-ipa}}", "gyeori", "rr")
	def test_gyeori_rrr(self):
		self.run_test("겨리", "{{ko-ipa}}", "gyeoli", "rrr")
	def test_gyeori_mr(self):
		self.run_test("겨리", "{{ko-ipa}}", "kyŏri", "mr")
	def test_gyeori_yr(self):
		self.run_test("겨리", "{{ko-ipa}}", "kyeli", "yr")
	def test_gyeori_ipa(self):
		self.run_test("겨리", "{{ko-ipa}}", "[kjʌ̹ɾi]", "ipa")

	def test_hori_ph(self):
		self.run_test("호리", "{{ko-IPA}}", "호리", "ph")
	def test_hori_rr(self):
		self.run_test("호리", "{{ko-IPA}}", "hori", "rr")
	def test_hori_rrr(self):
		self.run_test("호리", "{{ko-IPA}}", "holi", "rrr")
	def test_hori_mr(self):
		self.run_test("호리", "{{ko-IPA}}", "hori", "mr")
	def test_hori_yr(self):
		self.run_test("호리", "{{ko-IPA}}", "holi", "yr")
	def test_hori_ipa(self):
		self.run_test("호리", "{{ko-IPA}}", "[ɸʷo̞ɾi]", "ipa")

	def test_hol_ph(self):
		self.run_test("홀", "{{ko-IPA}}", "홀", "ph")
	def test_hol_rr(self):
		self.run_test("홀", "{{ko-IPA}}", "hol", "rr")
	def test_hol_rrr(self):
		self.run_test("홀", "{{ko-IPA}}", "hol", "rrr")
	def test_hol_mr(self):
		self.run_test("홀", "{{ko-IPA}}", "hol", "mr")
	def test_hol_yr(self):
		self.run_test("홀", "{{ko-IPA}}", "hol", "yr")
	def test_hol_ipa(self):
		self.run_test("홀", "{{ko-IPA}}", "[ɸʷo̞ɭ]", "ipa")

	def test_hae_ph(self):
		self.run_test("해", "{{ko-IPA}}", "해/헤", "ph")
	def test_hae_rr(self):
		self.run_test("해", "{{ko-IPA}}", "hae", "rr")
	def test_hae_rrr(self):
		self.run_test("해", "{{ko-IPA}}", "hae", "rrr")
	def test_hae_mr(self):
		self.run_test("해", "{{ko-IPA}}", "hae", "mr")
	def test_hae_yr(self):
		self.run_test("해", "{{ko-IPA}}", "hay", "yr")
	def test_hae_ipa(self):
		self.run_test("해", "{{ko-IPA}}", "[hɛ] ~ [he̞]", "ipa")
	def test_hae_ph_1(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "해(ː)/헤(ː)", "ph")
	def test_hae_rr_1(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hae", "rr")
	def test_hae_rrr_1(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hae", "rrr")
	def test_hae_mr_1(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hae", "mr")
	def test_hae_yr_1(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hāy", "yr")
	def test_hae_ipa_1(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "[hɛ(ː)] ~ [he̞(ː)]", "ipa")
	def test_hae_ph_2(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "해(ː)/헤(ː)", "ph")
	def test_hae_rr_2(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hae", "rr")
	def test_hae_rrr_2(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hae", "rrr")
	def test_hae_mr_2(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hae", "mr")
	def test_hae_yr_2(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hāy", "yr")
	def test_hae_ipa_2(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "[hɛ(ː)] ~ [he̞(ː)]", "ipa")
	def test_hae_ph_3(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "해(ː)/헤(ː)", "ph")
	def test_hae_rr_3(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hae", "rr")
	def test_hae_rrr_3(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hae", "rrr")
	def test_hae_mr_3(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hae", "mr")
	def test_hae_yr_3(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "hāy", "yr")
	def test_hae_ipa_3(self):
		self.run_test("해", "{{ko-IPA|l=y}}", "[hɛ(ː)] ~ [he̞(ː)]", "ipa")
	def test_hae_ph_4(self):
		self.run_test("해", "{{ko-IPA}}", "해/헤", "ph")
	def test_hae_rr_4(self):
		self.run_test("해", "{{ko-IPA}}", "hae", "rr")
	def test_hae_rrr_4(self):
		self.run_test("해", "{{ko-IPA}}", "hae", "rrr")
	def test_hae_mr_4(self):
		self.run_test("해", "{{ko-IPA}}", "hae", "mr")
	def test_hae_yr_4(self):
		self.run_test("해", "{{ko-IPA}}", "hay", "yr")
	def test_hae_ipa_4(self):
		self.run_test("해", "{{ko-IPA}}", "[hɛ] ~ [he̞]", "ipa")
	def test_hae_ph_5(self):
		self.run_test("해", "{{ko-ipa|l=y}}", "해(ː)/헤(ː)", "ph")
	def test_hae_rr_5(self):
		self.run_test("해", "{{ko-ipa|l=y}}", "hae", "rr")
	def test_hae_rrr_5(self):
		self.run_test("해", "{{ko-ipa|l=y}}", "hae", "rrr")
	def test_hae_mr_5(self):
		self.run_test("해", "{{ko-ipa|l=y}}", "hae", "mr")
	def test_hae_yr_5(self):
		self.run_test("해", "{{ko-ipa|l=y}}", "hāy", "yr")
	def test_hae_ipa_5(self):
		self.run_test("해", "{{ko-ipa|l=y}}", "[hɛ(ː)] ~ [he̞(ː)]", "ipa")

	def test_gol_ph(self):
		self.run_test("골", "{{ko-IPA|l=y}}", "골(ː)", "ph")
	def test_gol_rr(self):
		self.run_test("골", "{{ko-IPA|l=y}}", "gol", "rr")
	def test_gol_rrr(self):
		self.run_test("골", "{{ko-IPA|l=y}}", "gol", "rrr")
	def test_gol_mr(self):
		self.run_test("골", "{{ko-IPA|l=y}}", "kol", "mr")
	def test_gol_yr(self):
		self.run_test("골", "{{ko-IPA|l=y}}", "kōl", "yr")
	def test_gol_ipa(self):
		self.run_test("골", "{{ko-IPA|l=y}}", "[ko̞(ː)ɭ]", "ipa")
	def test_gol_ph_1(self):
		self.run_test("골", "{{ko-IPA}}", "골", "ph")
	def test_gol_rr_1(self):
		self.run_test("골", "{{ko-IPA}}", "gol", "rr")
	def test_gol_rrr_1(self):
		self.run_test("골", "{{ko-IPA}}", "gol", "rrr")
	def test_gol_mr_1(self):
		self.run_test("골", "{{ko-IPA}}", "kol", "mr")
	def test_gol_yr_1(self):
		self.run_test("골", "{{ko-IPA}}", "kol", "yr")
	def test_gol_ipa_1(self):
		self.run_test("골", "{{ko-IPA}}", "[ko̞ɭ]", "ipa")
	def test_gol_ph_2(self):
		self.run_test("골", "{{ko-IPA}}", "골", "ph")
	def test_gol_rr_2(self):
		self.run_test("골", "{{ko-IPA}}", "gol", "rr")
	def test_gol_rrr_2(self):
		self.run_test("골", "{{ko-IPA}}", "gol", "rrr")
	def test_gol_mr_2(self):
		self.run_test("골", "{{ko-IPA}}", "kol", "mr")
	def test_gol_yr_2(self):
		self.run_test("골", "{{ko-IPA}}", "kol", "yr")
	def test_gol_ipa_2(self):
		self.run_test("골", "{{ko-IPA}}", "[ko̞ɭ]", "ipa")
	def test_gol_ph_3(self):
		self.run_test("골", "{{ko-IPA|com=0}}", "꼴", "ph")
	def test_gol_rr_3(self):
		self.run_test("골", "{{ko-IPA|com=0}}", "gol", "rr")
	def test_gol_rrr_3(self):
		self.run_test("골", "{{ko-IPA|com=0}}", "gol", "rrr")
	def test_gol_mr_3(self):
		self.run_test("골", "{{ko-IPA|com=0}}", "kol", "mr")
	def test_gol_yr_3(self):
		self.run_test("골", "{{ko-IPA|com=0}}", "qkol", "yr")
	def test_gol_ipa_3(self):
		self.run_test("골", "{{ko-IPA|com=0}}", "[k͈o̞ɭ]", "ipa")

	def test_tteut_ph(self):
		self.run_test("뜻", "{{ko-IPA|a=y}}", "뜯", "ph")
	def test_tteut_rr(self):
		self.run_test("뜻", "{{ko-IPA|a=y}}", "tteut", "rr")
	def test_tteut_rrr(self):
		self.run_test("뜻", "{{ko-IPA|a=y}}", "tteus", "rrr")
	def test_tteut_mr(self):
		self.run_test("뜻", "{{ko-IPA|a=y}}", "ttŭt", "mr")
	def test_tteut_yr(self):
		self.run_test("뜻", "{{ko-IPA|a=y}}", "ttus", "yr")
	def test_tteut_ipa(self):
		self.run_test("뜻", "{{ko-IPA|a=y}}", "[t͈ɯt̚]", "ipa")

	def test_galda_ph(self):
		self.run_test("갈다", "{{ko-IPA}}", "갈다", "ph")
	def test_galda_rr(self):
		self.run_test("갈다", "{{ko-IPA}}", "galda", "rr")
	def test_galda_rrr(self):
		self.run_test("갈다", "{{ko-IPA}}", "galda", "rrr")
	def test_galda_mr(self):
		self.run_test("갈다", "{{ko-IPA}}", "kalda", "mr")
	def test_galda_yr(self):
		self.run_test("갈다", "{{ko-IPA}}", "kalta", "yr")
	def test_galda_ipa(self):
		self.run_test("갈다", "{{ko-IPA}}", "[ka̠ɭda̠]", "ipa")
	def test_galda_ph_1(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "갈(ː)다", "ph")
	def test_galda_rr_1(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "galda", "rr")
	def test_galda_rrr_1(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "galda", "rrr")
	def test_galda_mr_1(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "kalda", "mr")
	def test_galda_yr_1(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "kālta", "yr")
	def test_galda_ipa_1(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "[ˈka̠(ː)ɭda̠]", "ipa")
	def test_galda_ph_2(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "갈(ː)다", "ph")
	def test_galda_rr_2(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "galda", "rr")
	def test_galda_rrr_2(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "galda", "rrr")
	def test_galda_mr_2(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "kalda", "mr")
	def test_galda_yr_2(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "kālta", "yr")
	def test_galda_ipa_2(self):
		self.run_test("갈다", "{{ko-IPA|l=y}}", "[ˈka̠(ː)ɭda̠]", "ipa")

	def test_mureup_ph(self):
		self.run_test("무릎", "{{ko-IPA}}", "무릅", "ph")
	def test_mureup_rr(self):
		self.run_test("무릎", "{{ko-IPA}}", "mureup", "rr")
	def test_mureup_rrr(self):
		self.run_test("무릎", "{{ko-IPA}}", "muleup", "rrr")
	def test_mureup_mr(self):
		self.run_test("무릎", "{{ko-IPA}}", "murŭp", "mr")
	def test_mureup_yr(self):
		self.run_test("무릎", "{{ko-IPA}}", "muluph", "yr")
	def test_mureup_ipa(self):
		self.run_test("무릎", "{{ko-IPA}}", "[muɾɯp̚]", "ipa")

	def test_dwitdari_ph(self):
		self.run_test("뒷다리", "{{ko-IPA|l=y|nobc=1}}", "뒫(ː)따리/뒤(ː)따리", "ph")
	def test_dwitdari_rr(self):
		self.run_test("뒷다리", "{{ko-IPA|l=y|nobc=1}}", "dwitdari", "rr")
	def test_dwitdari_rrr(self):
		self.run_test("뒷다리", "{{ko-IPA|l=y|nobc=1}}", "dwisdali", "rrr")
	def test_dwitdari_mr(self):
		self.run_test("뒷다리", "{{ko-IPA|l=y|nobc=1}}", "twittari", "mr")
	def test_dwitdari_yr(self):
		self.run_test("뒷다리", "{{ko-IPA|l=y|nobc=1}}", "twīstali", "yr")
	def test_dwitdari_ipa(self):
		self.run_test("뒷다리", "{{ko-IPA|l=y|nobc=1}}", "[ˈtɥi(ː)t̚t͈a̠ɾi] ~ [ˈtɥi(ː)t͈a̠ɾi] ~ [ˈty(ː)t̚t͈a̠ɾi] ~ [ˈty(ː)t͈a̠ɾi]", "ipa")

	def test_apdari_ph(self):
		self.run_test("앞다리", "{{ko-IPA}}", "압따리", "ph")
	def test_apdari_rr(self):
		self.run_test("앞다리", "{{ko-IPA}}", "apdari", "rr")
	def test_apdari_rrr(self):
		self.run_test("앞다리", "{{ko-IPA}}", "apdali", "rrr")
	def test_apdari_mr(self):
		self.run_test("앞다리", "{{ko-IPA}}", "aptari", "mr")
	def test_apdari_yr(self):
		self.run_test("앞다리", "{{ko-IPA}}", "aphtali", "yr")
	def test_apdari_ipa(self):
		self.run_test("앞다리", "{{ko-IPA}}", "[a̠p̚t͈a̠ɾi]", "ipa")

	def test_ap_ph(self):
		self.run_test("앞", "{{ko-IPA|a=y}}", "압", "ph")
	def test_ap_rr(self):
		self.run_test("앞", "{{ko-IPA|a=y}}", "ap", "rr")
	def test_ap_rrr(self):
		self.run_test("앞", "{{ko-IPA|a=y}}", "ap", "rrr")
	def test_ap_mr(self):
		self.run_test("앞", "{{ko-IPA|a=y}}", "ap", "mr")
	def test_ap_yr(self):
		self.run_test("앞", "{{ko-IPA|a=y}}", "aph", "yr")
	def test_ap_ipa(self):
		self.run_test("앞", "{{ko-IPA|a=y}}", "[a̠p̚]", "ipa")

	def test_dwi_ph(self):
		self.run_test("뒤", "{{ko-IPA|l=y|a=y}}", "뒤(ː)", "ph")
	def test_dwi_rr(self):
		self.run_test("뒤", "{{ko-IPA|l=y|a=y}}", "dwi", "rr")
	def test_dwi_rrr(self):
		self.run_test("뒤", "{{ko-IPA|l=y|a=y}}", "dwi", "rrr")
	def test_dwi_mr(self):
		self.run_test("뒤", "{{ko-IPA|l=y|a=y}}", "twi", "mr")
	def test_dwi_yr(self):
		self.run_test("뒤", "{{ko-IPA|l=y|a=y}}", "twī", "yr")
	def test_dwi_ipa(self):
		self.run_test("뒤", "{{ko-IPA|l=y|a=y}}", "[tɥi(ː)] ~ [ty(ː)]", "ipa")

	def test_wi_ph(self):
		self.run_test("위", "{{ko-IPA}}", "위", "ph")
	def test_wi_rr(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rr")
	def test_wi_rrr(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rrr")
	def test_wi_mr(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "mr")
	def test_wi_yr(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "yr")
	def test_wi_ipa(self):
		self.run_test("위", "{{ko-IPA}}", "[ɥi] ~ [y]", "ipa")
	def test_wi_ph_1(self):
		self.run_test("위", "{{ko-IPA}}", "위", "ph")
	def test_wi_rr_1(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rr")
	def test_wi_rrr_1(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rrr")
	def test_wi_mr_1(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "mr")
	def test_wi_yr_1(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "yr")
	def test_wi_ipa_1(self):
		self.run_test("위", "{{ko-IPA}}", "[ɥi] ~ [y]", "ipa")
	def test_wi_ph_2(self):
		self.run_test("위", "{{ko-IPA}}", "위", "ph")
	def test_wi_rr_2(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rr")
	def test_wi_rrr_2(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rrr")
	def test_wi_mr_2(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "mr")
	def test_wi_yr_2(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "yr")
	def test_wi_ipa_2(self):
		self.run_test("위", "{{ko-IPA}}", "[ɥi] ~ [y]", "ipa")
	def test_wi_ph_3(self):
		self.run_test("위", "{{ko-IPA}}", "위", "ph")
	def test_wi_rr_3(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rr")
	def test_wi_rrr_3(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rrr")
	def test_wi_mr_3(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "mr")
	def test_wi_yr_3(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "yr")
	def test_wi_ipa_3(self):
		self.run_test("위", "{{ko-IPA}}", "[ɥi] ~ [y]", "ipa")
	def test_wi_ph_4(self):
		self.run_test("위", "{{ko-IPA}}", "위", "ph")
	def test_wi_rr_4(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rr")
	def test_wi_rrr_4(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "rrr")
	def test_wi_mr_4(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "mr")
	def test_wi_yr_4(self):
		self.run_test("위", "{{ko-IPA}}", "wi", "yr")
	def test_wi_ipa_4(self):
		self.run_test("위", "{{ko-IPA}}", "[ɥi] ~ [y]", "ipa")

	def test_arae_ph(self):
		self.run_test("아래", "{{ko-IPA}}", "아래/아레", "ph")
	def test_arae_rr(self):
		self.run_test("아래", "{{ko-IPA}}", "arae", "rr")
	def test_arae_rrr(self):
		self.run_test("아래", "{{ko-IPA}}", "alae", "rrr")
	def test_arae_mr(self):
		self.run_test("아래", "{{ko-IPA}}", "arae", "mr")
	def test_arae_yr(self):
		self.run_test("아래", "{{ko-IPA}}", "alay", "yr")
	def test_arae_ipa(self):
		self.run_test("아래", "{{ko-IPA}}", "[a̠ɾɛ] ~ [a̠ɾe̞]", "ipa")

	def test_mit_ph(self):
		self.run_test("밑", "{{ko-IPA|a=y}}", "믿", "ph")
	def test_mit_rr(self):
		self.run_test("밑", "{{ko-IPA|a=y}}", "mit", "rr")
	def test_mit_rrr(self):
		self.run_test("밑", "{{ko-IPA|a=y}}", "mit", "rrr")
	def test_mit_mr(self):
		self.run_test("밑", "{{ko-IPA|a=y}}", "mit", "mr")
	def test_mit_yr(self):
		self.run_test("밑", "{{ko-IPA|a=y}}", "mith", "yr")
	def test_mit_ipa(self):
		self.run_test("밑", "{{ko-IPA|a=y}}", "[mit̚]", "ipa")

	def test_heobeokdari_ph(self):
		self.run_test("허벅다리", "{{ko-IPA}}", "허벅따리", "ph")
	def test_heobeokdari_rr(self):
		self.run_test("허벅다리", "{{ko-IPA}}", "heobeokdari", "rr")
	def test_heobeokdari_rrr(self):
		self.run_test("허벅다리", "{{ko-IPA}}", "heobeogdali", "rrr")
	def test_heobeokdari_mr(self):
		self.run_test("허벅다리", "{{ko-IPA}}", "hŏbŏktari", "mr")
	def test_heobeokdari_yr(self):
		self.run_test("허벅다리", "{{ko-IPA}}", "hepektali", "yr")
	def test_heobeokdari_ipa(self):
		self.run_test("허벅다리", "{{ko-IPA}}", "[hʌ̹bʌ̹k̚t͈a̠ɾi]", "ipa")

	def test_neopjeokdari_ph(self):
		self.run_test("넓적다리", "{{ko-IPA}}", "넙쩍따리", "ph")
	def test_neopjeokdari_rr(self):
		self.run_test("넓적다리", "{{ko-IPA}}", "neopjeokdari", "rr")
	def test_neopjeokdari_rrr(self):
		self.run_test("넓적다리", "{{ko-IPA}}", "neolbjeogdali", "rrr")
	def test_neopjeokdari_mr(self):
		self.run_test("넓적다리", "{{ko-IPA}}", "nŏpchŏktari", "mr")
	def test_neopjeokdari_yr(self):
		self.run_test("넓적다리", "{{ko-IPA}}", "nelpcektali", "yr")
	def test_neopjeokdari_ipa(self):
		self.run_test("넓적다리", "{{ko-IPA}}", "[nʌ̹p̚t͡ɕ͈ʌ̹k̚t͈a̠ɾi]", "ipa")

	def test_palmok_ph(self):
		self.run_test("팔목", "{{ko-ipa}}", "팔목", "ph")
	def test_palmok_rr(self):
		self.run_test("팔목", "{{ko-ipa}}", "palmok", "rr")
	def test_palmok_rrr(self):
		self.run_test("팔목", "{{ko-ipa}}", "palmog", "rrr")
	def test_palmok_mr(self):
		self.run_test("팔목", "{{ko-ipa}}", "p'almok", "mr")
	def test_palmok_yr(self):
		self.run_test("팔목", "{{ko-ipa}}", "phal.mok", "yr")
	def test_palmok_ipa(self):
		self.run_test("팔목", "{{ko-ipa}}", "[pʰa̠ɭmo̞k̚]", "ipa")

	def test_sonmok_ph(self):
		self.run_test("손목", "{{ko-IPA}}", "손목", "ph")
	def test_sonmok_rr(self):
		self.run_test("손목", "{{ko-IPA}}", "sonmok", "rr")
	def test_sonmok_rrr(self):
		self.run_test("손목", "{{ko-IPA}}", "sonmog", "rrr")
	def test_sonmok_mr(self):
		self.run_test("손목", "{{ko-IPA}}", "sonmok", "mr")
	def test_sonmok_yr(self):
		self.run_test("손목", "{{ko-IPA}}", "sonmok", "yr")
	def test_sonmok_ipa(self):
		self.run_test("손목", "{{ko-IPA}}", "[sʰo̞nmo̞k̚]", "ipa")

	def test_balmok_ph(self):
		self.run_test("발목", "{{ko-IPA}}", "발목", "ph")
	def test_balmok_rr(self):
		self.run_test("발목", "{{ko-IPA}}", "balmok", "rr")
	def test_balmok_rrr(self):
		self.run_test("발목", "{{ko-IPA}}", "balmog", "rrr")
	def test_balmok_mr(self):
		self.run_test("발목", "{{ko-IPA}}", "palmok", "mr")
	def test_balmok_yr(self):
		self.run_test("발목", "{{ko-IPA}}", "pal.mok", "yr")
	def test_balmok_ipa(self):
		self.run_test("발목", "{{ko-IPA}}", "[pa̠ɭmo̞k̚]", "ipa")

	def test_duda_ph(self):
		self.run_test("두다", "{{ko-IPA|a=y}}", "두다", "ph")
	def test_duda_rr(self):
		self.run_test("두다", "{{ko-IPA|a=y}}", "duda", "rr")
	def test_duda_rrr(self):
		self.run_test("두다", "{{ko-IPA|a=y}}", "duda", "rrr")
	def test_duda_mr(self):
		self.run_test("두다", "{{ko-IPA|a=y}}", "tuda", "mr")
	def test_duda_yr(self):
		self.run_test("두다", "{{ko-IPA|a=y}}", "twuta", "yr")
	def test_duda_ipa(self):
		self.run_test("두다", "{{ko-IPA|a=y}}", "[tuda̠]", "ipa")

	def test_nota_ph(self):
		self.run_test("놓다", "{{ko-IPA|a=y}}", "노타", "ph")
	def test_nota_rr(self):
		self.run_test("놓다", "{{ko-IPA|a=y}}", "nota", "rr")
	def test_nota_rrr(self):
		self.run_test("놓다", "{{ko-IPA|a=y}}", "nohda", "rrr")
	def test_nota_mr(self):
		self.run_test("놓다", "{{ko-IPA|a=y}}", "not'a", "mr")
	def test_nota_yr(self):
		self.run_test("놓다", "{{ko-IPA|a=y}}", "nohta", "yr")
	def test_nota_ipa(self):
		self.run_test("놓다", "{{ko-IPA|a=y}}", "[no̞tʰa̠]", "ipa")

	def test_nata_ph(self):
		self.run_test("낳다", "{{ko-IPA}}", "나타", "ph")
	def test_nata_rr(self):
		self.run_test("낳다", "{{ko-IPA}}", "nata", "rr")
	def test_nata_rrr(self):
		self.run_test("낳다", "{{ko-IPA}}", "nahda", "rrr")
	def test_nata_mr(self):
		self.run_test("낳다", "{{ko-IPA}}", "nat'a", "mr")
	def test_nata_yr(self):
		self.run_test("낳다", "{{ko-IPA}}", "nahta", "yr")
	def test_nata_ipa(self):
		self.run_test("낳다", "{{ko-IPA}}", "[na̠tʰa̠]", "ipa")

	def test_nada_ph(self):
		self.run_test("나다", "{{ko-IPA|a=y}}", "나다", "ph")
	def test_nada_rr(self):
		self.run_test("나다", "{{ko-IPA|a=y}}", "nada", "rr")
	def test_nada_rrr(self):
		self.run_test("나다", "{{ko-IPA|a=y}}", "nada", "rrr")
	def test_nada_mr(self):
		self.run_test("나다", "{{ko-IPA|a=y}}", "nada", "mr")
	def test_nada_yr(self):
		self.run_test("나다", "{{ko-IPA|a=y}}", "nata", "yr")
	def test_nada_ipa(self):
		self.run_test("나다", "{{ko-IPA|a=y}}", "[na̠da̠]", "ipa")

	def test_chokollit_ph(self):
		self.run_test("초콜릿", "{{ko-IPA}}", "초콜릳", "ph")
	def test_chokollit_rr(self):
		self.run_test("초콜릿", "{{ko-IPA}}", "chokollit", "rr")
	def test_chokollit_rrr(self):
		self.run_test("초콜릿", "{{ko-IPA}}", "chokollis", "rrr")
	def test_chokollit_mr(self):
		self.run_test("초콜릿", "{{ko-IPA}}", "ch'ok'ollit", "mr")
	def test_chokollit_yr(self):
		self.run_test("초콜릿", "{{ko-IPA}}", "cho.khollis", "yr")
	def test_chokollit_ipa(self):
		self.run_test("초콜릿", "{{ko-IPA}}", "[t͡ɕʰo̞kʰo̞ʎʎit̚]", "ipa")

	def test_haeoragi_ph(self):
		self.run_test("해오라기", "{{ko-IPA}}", "해오라기/헤오라기", "ph")
	def test_haeoragi_rr(self):
		self.run_test("해오라기", "{{ko-IPA}}", "hae'oragi", "rr")
	def test_haeoragi_rrr(self):
		self.run_test("해오라기", "{{ko-IPA}}", "hae'olagi", "rrr")
	def test_haeoragi_mr(self):
		self.run_test("해오라기", "{{ko-IPA}}", "haeoragi", "mr")
	def test_haeoragi_yr(self):
		self.run_test("해오라기", "{{ko-IPA}}", "hay.olaki", "yr")
	def test_haeoragi_ipa(self):
		self.run_test("해오라기", "{{ko-IPA}}", "[hɛo̞ɾa̠ɡi] ~ [he̞o̞ɾa̠ɡi]", "ipa")

	def test_durumi_ph(self):
		self.run_test("두루미", "{{ko-IPA}}", "두루미", "ph")
	def test_durumi_rr(self):
		self.run_test("두루미", "{{ko-IPA}}", "durumi", "rr")
	def test_durumi_rrr(self):
		self.run_test("두루미", "{{ko-IPA}}", "dulumi", "rrr")
	def test_durumi_mr(self):
		self.run_test("두루미", "{{ko-IPA}}", "turumi", "mr")
	def test_durumi_yr(self):
		self.run_test("두루미", "{{ko-IPA}}", "twulwumi", "yr")
	def test_durumi_ipa(self):
		self.run_test("두루미", "{{ko-IPA}}", "[tuɾumi]", "ipa")

	def test_hak_ph(self):
		self.run_test("학", "{{ko-IPA}}", "학", "ph")
	def test_hak_rr(self):
		self.run_test("학", "{{ko-IPA}}", "hak", "rr")
	def test_hak_rrr(self):
		self.run_test("학", "{{ko-IPA}}", "hag", "rrr")
	def test_hak_mr(self):
		self.run_test("학", "{{ko-IPA}}", "hak", "mr")
	def test_hak_yr(self):
		self.run_test("학", "{{ko-IPA}}", "hak", "yr")
	def test_hak_ipa(self):
		self.run_test("학", "{{ko-IPA}}", "[ha̠k̚]", "ipa")

	def test_hwangsae_ph(self):
		self.run_test("황새", "{{ko-IPA|l=y}}", "황(ː)새/황(ː)세", "ph")
	def test_hwangsae_rr(self):
		self.run_test("황새", "{{ko-IPA|l=y}}", "hwangsae", "rr")
	def test_hwangsae_rrr(self):
		self.run_test("황새", "{{ko-IPA|l=y}}", "hwangsae", "rrr")
	def test_hwangsae_mr(self):
		self.run_test("황새", "{{ko-IPA|l=y}}", "hwangsae", "mr")
	def test_hwangsae_yr(self):
		self.run_test("황새", "{{ko-IPA|l=y}}", "hwāngsay", "yr")
	def test_hwangsae_ipa(self):
		self.run_test("황새", "{{ko-IPA|l=y}}", "[ˈɸwa̠(ː)ŋsʰɛ] ~ [ˈɸwa̠(ː)ŋsʰe̞]", "ipa")

	def test_hangsang_ph(self):
		self.run_test("항상", "{{ko-IPA}}", "항상", "ph")
	def test_hangsang_rr(self):
		self.run_test("항상", "{{ko-IPA}}", "hangsang", "rr")
	def test_hangsang_rrr(self):
		self.run_test("항상", "{{ko-IPA}}", "hangsang", "rrr")
	def test_hangsang_mr(self):
		self.run_test("항상", "{{ko-IPA}}", "hangsang", "mr")
	def test_hangsang_yr(self):
		self.run_test("항상", "{{ko-IPA}}", "hangsang", "yr")
	def test_hangsang_ipa(self):
		self.run_test("항상", "{{ko-IPA}}", "[ha̠ŋsʰa̠ŋ]", "ipa")

	def test_baengno_ph(self):
		self.run_test("백로", "{{ko-IPA}}", "뱅노/벵노", "ph")
	def test_baengno_rr(self):
		self.run_test("백로", "{{ko-IPA}}", "baengno", "rr")
	def test_baengno_rrr(self):
		self.run_test("백로", "{{ko-IPA}}", "baeglo", "rrr")
	def test_baengno_mr(self):
		self.run_test("백로", "{{ko-IPA}}", "paengno", "mr")
	def test_baengno_yr(self):
		self.run_test("백로", "{{ko-IPA}}", "payklo", "yr")
	def test_baengno_ipa(self):
		self.run_test("백로", "{{ko-IPA}}", "[pɛŋno̞] ~ [pe̞ŋno̞]", "ipa")

	def test_geowi_ph(self):
		self.run_test("거위", "{{ko-IPA}}", "거위", "ph")
	def test_geowi_rr(self):
		self.run_test("거위", "{{ko-IPA}}", "geowi", "rr")
	def test_geowi_rrr(self):
		self.run_test("거위", "{{ko-IPA}}", "geowi", "rrr")
	def test_geowi_mr(self):
		self.run_test("거위", "{{ko-IPA}}", "kŏwi", "mr")
	def test_geowi_yr(self):
		self.run_test("거위", "{{ko-IPA}}", "kewi", "yr")
	def test_geowi_ipa(self):
		self.run_test("거위", "{{ko-IPA}}", "[kʌ̹ɥi] ~ [kʌ̹y]", "ipa")

	def test_bueongi_ph(self):
		self.run_test("부엉이", "{{ko-ipa}}", "부엉이", "ph")
	def test_bueongi_rr(self):
		self.run_test("부엉이", "{{ko-ipa}}", "bueong'i", "rr")
	def test_bueongi_rrr(self):
		self.run_test("부엉이", "{{ko-ipa}}", "bueong'i", "rrr")
	def test_bueongi_mr(self):
		self.run_test("부엉이", "{{ko-ipa}}", "puŏngi", "mr")
	def test_bueongi_yr(self):
		self.run_test("부엉이", "{{ko-ipa}}", "puengi", "yr")
	def test_bueongi_ipa(self):
		self.run_test("부엉이", "{{ko-ipa}}", "[puʌ̹ŋi]", "ipa")

	def test_olppaemi_ph(self):
		self.run_test("올빼미", "{{ko-IPA}}", "올빼미/올뻬미", "ph")
	def test_olppaemi_rr(self):
		self.run_test("올빼미", "{{ko-IPA}}", "olppaemi", "rr")
	def test_olppaemi_rrr(self):
		self.run_test("올빼미", "{{ko-IPA}}", "ol'ppaemi", "rrr")
	def test_olppaemi_mr(self):
		self.run_test("올빼미", "{{ko-IPA}}", "olppaemi", "mr")
	def test_olppaemi_yr(self):
		self.run_test("올빼미", "{{ko-IPA}}", "ol.ppaymi", "yr")
	def test_olppaemi_ipa(self):
		self.run_test("올빼미", "{{ko-IPA}}", "[o̞ɭp͈ɛmi] ~ [o̞ɭp͈e̞mi]", "ipa")

	def test_sojjeoksae_ph(self):
		self.run_test("소쩍새", "{{ko-ipa}}", "소쩍쌔/소쩍쎄", "ph")
	def test_sojjeoksae_rr(self):
		self.run_test("소쩍새", "{{ko-ipa}}", "sojjeoksae", "rr")
	def test_sojjeoksae_rrr(self):
		self.run_test("소쩍새", "{{ko-ipa}}", "so'jjeogsae", "rrr")
	def test_sojjeoksae_mr(self):
		self.run_test("소쩍새", "{{ko-ipa}}", "sotchŏksae", "mr")
	def test_sojjeoksae_yr(self):
		self.run_test("소쩍새", "{{ko-ipa}}", "so.ccek.say", "yr")
	def test_sojjeoksae_ipa(self):
		self.run_test("소쩍새", "{{ko-ipa}}", "[sʰo̞t͡ɕ͈ʌ̹ks͈ɛ] ~ [sʰo̞t͡ɕ͈ʌ̹ks͈e̞]", "ipa")

	def test_dugyeonsae_ph(self):
		self.run_test("두견새", "{{ko-IPA}}", "두견새/두견세", "ph")
	def test_dugyeonsae_rr(self):
		self.run_test("두견새", "{{ko-IPA}}", "dugyeonsae", "rr")
	def test_dugyeonsae_rrr(self):
		self.run_test("두견새", "{{ko-IPA}}", "dugyeonsae", "rrr")
	def test_dugyeonsae_mr(self):
		self.run_test("두견새", "{{ko-IPA}}", "tugyŏnsae", "mr")
	def test_dugyeonsae_yr(self):
		self.run_test("두견새", "{{ko-IPA}}", "twukyensay", "yr")
	def test_dugyeonsae_ipa(self):
		self.run_test("두견새", "{{ko-IPA}}", "[tuɡjʌ̹nsʰɛ] ~ [tuɡjʌ̹nsʰe̞]", "ipa")

	def test_galmaegi_ph(self):
		self.run_test("갈매기", "{{ko-ipa}}", "갈매기/갈메기", "ph")
	def test_galmaegi_rr(self):
		self.run_test("갈매기", "{{ko-ipa}}", "galmaegi", "rr")
	def test_galmaegi_rrr(self):
		self.run_test("갈매기", "{{ko-ipa}}", "galmaegi", "rrr")
	def test_galmaegi_mr(self):
		self.run_test("갈매기", "{{ko-ipa}}", "kalmaegi", "mr")
	def test_galmaegi_yr(self):
		self.run_test("갈매기", "{{ko-ipa}}", "kal.mayki", "yr")
	def test_galmaegi_ipa(self):
		self.run_test("갈매기", "{{ko-ipa}}", "[ka̠ɭmɛɡi] ~ [ka̠ɭme̞ɡi]", "ipa")

	def test_meoguri_ph(self):
		self.run_test("머구리", "{{ko-ipa}}", "머구리", "ph")
	def test_meoguri_rr(self):
		self.run_test("머구리", "{{ko-ipa}}", "meoguri", "rr")
	def test_meoguri_rrr(self):
		self.run_test("머구리", "{{ko-ipa}}", "meoguli", "rrr")
	def test_meoguri_mr(self):
		self.run_test("머구리", "{{ko-ipa}}", "mŏguri", "mr")
	def test_meoguri_yr(self):
		self.run_test("머구리", "{{ko-ipa}}", "mekwuli", "yr")
	def test_meoguri_ipa(self):
		self.run_test("머구리", "{{ko-ipa}}", "[mʌ̹ɡuɾi]", "ipa")

	def test_gogyesa_ph(self):
		self.run_test("곡예사", "{{ko-IPA}}", "고계사", "ph")
	def test_gogyesa_rr(self):
		self.run_test("곡예사", "{{ko-IPA}}", "gogyesa", "rr")
	def test_gogyesa_rrr(self):
		self.run_test("곡예사", "{{ko-IPA}}", "gog'yesa", "rrr")
	def test_gogyesa_mr(self):
		self.run_test("곡예사", "{{ko-IPA}}", "kogyesa", "mr")
	def test_gogyesa_yr(self):
		self.run_test("곡예사", "{{ko-IPA}}", "kok.yeysa", "yr")
	def test_gogyesa_ipa(self):
		self.run_test("곡예사", "{{ko-IPA}}", "[ko̞ɡje̞sʰa̠]", "ipa")

	def test_mujamaekjil_ph(self):
		self.run_test("무자맥질", "{{ko-IPA}}", "무자맥찔/무자멕찔", "ph")
	def test_mujamaekjil_rr(self):
		self.run_test("무자맥질", "{{ko-IPA}}", "mujamaekjil", "rr")
	def test_mujamaekjil_rrr(self):
		self.run_test("무자맥질", "{{ko-IPA}}", "mujamaegjil", "rrr")
	def test_mujamaekjil_mr(self):
		self.run_test("무자맥질", "{{ko-IPA}}", "mujamaekchil", "mr")
	def test_mujamaekjil_yr(self):
		self.run_test("무자맥질", "{{ko-IPA}}", "mucamaykcil", "yr")
	def test_mujamaekjil_ipa(self):
		self.run_test("무자맥질", "{{ko-IPA}}", "[mud͡ʑa̠mɛk̚t͡ɕ͈iɭ] ~ [mud͡ʑa̠me̞k̚t͡ɕ͈iɭ]", "ipa")

	def test_gapjagi_ph(self):
		self.run_test("갑자기", "{{ko-IPA}}", "갑짜기", "ph")
	def test_gapjagi_rr(self):
		self.run_test("갑자기", "{{ko-IPA}}", "gapjagi", "rr")
	def test_gapjagi_rrr(self):
		self.run_test("갑자기", "{{ko-IPA}}", "gabjagi", "rrr")
	def test_gapjagi_mr(self):
		self.run_test("갑자기", "{{ko-IPA}}", "kapchagi", "mr")
	def test_gapjagi_yr(self):
		self.run_test("갑자기", "{{ko-IPA}}", "kapcaki", "yr")
	def test_gapjagi_ipa(self):
		self.run_test("갑자기", "{{ko-IPA}}", "[ka̠p̚t͡ɕ͈a̠ɡi]", "ipa")


	def test_murori_ph(self):
		self.run_test("물오리", "{{ko-ipa}}", "무로리", "ph")
	def test_murori_rr(self):
		self.run_test("물오리", "{{ko-ipa}}", "murori", "rr")
	def test_murori_rrr(self):
		self.run_test("물오리", "{{ko-ipa}}", "mul'oli", "rrr")
	def test_murori_mr(self):
		self.run_test("물오리", "{{ko-ipa}}", "murori", "mr")
	def test_murori_yr(self):
		self.run_test("물오리", "{{ko-ipa}}", "mul.oli", "yr")
	def test_murori_ipa(self):
		self.run_test("물오리", "{{ko-ipa}}", "[muɾo̞ɾi]", "ipa")

	def test_jibori_ph(self):
		self.run_test("집오리", "{{ko-ipa}}", "지보리", "ph")
	def test_jibori_rr(self):
		self.run_test("집오리", "{{ko-ipa}}", "jibori", "rr")
	def test_jibori_rrr(self):
		self.run_test("집오리", "{{ko-ipa}}", "jib'oli", "rrr")
	def test_jibori_mr(self):
		self.run_test("집오리", "{{ko-ipa}}", "chibori", "mr")
	def test_jibori_yr(self):
		self.run_test("집오리", "{{ko-ipa}}", "cip.oli", "yr")
	def test_jibori_ipa(self):
		self.run_test("집오리", "{{ko-ipa}}", "[t͡ɕibo̞ɾi]", "ipa")

	def test_cheongdungori_ph(self):
		self.run_test("청둥오리", "{{ko-ipa}}", "청둥오리", "ph")
	def test_cheongdungori_rr(self):
		self.run_test("청둥오리", "{{ko-ipa}}", "cheongdung'ori", "rr")
	def test_cheongdungori_rrr(self):
		self.run_test("청둥오리", "{{ko-ipa}}", "cheongdung'oli", "rrr")
	def test_cheongdungori_mr(self):
		self.run_test("청둥오리", "{{ko-ipa}}", "ch'ŏngdungori", "mr")
	def test_cheongdungori_yr(self):
		self.run_test("청둥오리", "{{ko-ipa}}", "chengtwungoli", "yr")
	def test_cheongdungori_ipa(self):
		self.run_test("청둥오리", "{{ko-ipa}}", "[t͡ɕʰʌ̹ŋduŋo̞ɾi]", "ipa")

	def test_bat_ph(self):
		self.run_test("밭", "{{ko-IPA}}", "받", "ph")
	def test_bat_rr(self):
		self.run_test("밭", "{{ko-IPA}}", "bat", "rr")
	def test_bat_rrr(self):
		self.run_test("밭", "{{ko-IPA}}", "bat", "rrr")
	def test_bat_mr(self):
		self.run_test("밭", "{{ko-IPA}}", "pat", "mr")
	def test_bat_yr(self):
		self.run_test("밭", "{{ko-IPA}}", "path", "yr")
	def test_bat_ipa(self):
		self.run_test("밭", "{{ko-IPA}}", "[pa̠t̚]", "ipa")

	def test_muri_ph(self):
		self.run_test("무리", "{{ko-IPA}}", "무리", "ph")
	def test_muri_rr(self):
		self.run_test("무리", "{{ko-IPA}}", "muri", "rr")
	def test_muri_rrr(self):
		self.run_test("무리", "{{ko-IPA}}", "muli", "rrr")
	def test_muri_mr(self):
		self.run_test("무리", "{{ko-IPA}}", "muri", "mr")
	def test_muri_yr(self):
		self.run_test("무리", "{{ko-IPA}}", "muli", "yr")
	def test_muri_ipa(self):
		self.run_test("무리", "{{ko-IPA}}", "[muɾi]", "ipa")

	def test_dalmuri_ph(self):
		self.run_test("달무리", "{{ko-ipa}}", "달무리", "ph")
	def test_dalmuri_rr(self):
		self.run_test("달무리", "{{ko-ipa}}", "dalmuri", "rr")
	def test_dalmuri_rrr(self):
		self.run_test("달무리", "{{ko-ipa}}", "dalmuli", "rrr")
	def test_dalmuri_mr(self):
		self.run_test("달무리", "{{ko-ipa}}", "talmuri", "mr")
	def test_dalmuri_yr(self):
		self.run_test("달무리", "{{ko-ipa}}", "tal.muli", "yr")
	def test_dalmuri_ipa(self):
		self.run_test("달무리", "{{ko-ipa}}", "[ta̠ɭmuɾi]", "ipa")

	def test_haenmuri_ph(self):
		self.run_test("햇무리", "{{ko-IPA}}", "핸무리/헨무리", "ph")
	def test_haenmuri_rr(self):
		self.run_test("햇무리", "{{ko-IPA}}", "haenmuri", "rr")
	def test_haenmuri_rrr(self):
		self.run_test("햇무리", "{{ko-IPA}}", "haesmuli", "rrr")
	def test_haenmuri_mr(self):
		self.run_test("햇무리", "{{ko-IPA}}", "haenmuri", "mr")
	def test_haenmuri_yr(self):
		self.run_test("햇무리", "{{ko-IPA}}", "haysmuli", "yr")
	def test_haenmuri_ipa(self):
		self.run_test("햇무리", "{{ko-IPA}}", "[hɛnmuɾi] ~ [he̞nmuɾi]", "ipa")

	def test_gureum_ph(self):
		self.run_test("구름", "{{ko-IPA}}", "구름", "ph")
	def test_gureum_rr(self):
		self.run_test("구름", "{{ko-IPA}}", "gureum", "rr")
	def test_gureum_rrr(self):
		self.run_test("구름", "{{ko-IPA}}", "guleum", "rrr")
	def test_gureum_mr(self):
		self.run_test("구름", "{{ko-IPA}}", "kurŭm", "mr")
	def test_gureum_yr(self):
		self.run_test("구름", "{{ko-IPA}}", "kwulum", "yr")
	def test_gureum_ipa(self):
		self.run_test("구름", "{{ko-IPA}}", "[kuɾɯm]", "ipa")

	def test_mulgae_ph(self):
		self.run_test("물개", "{{ko-IPA|com=1}}", "물깨/물께", "ph")
	def test_mulgae_rr(self):
		self.run_test("물개", "{{ko-IPA|com=1}}", "mulgae", "rr")
	def test_mulgae_rrr(self):
		self.run_test("물개", "{{ko-IPA|com=1}}", "mulgae", "rrr")
	def test_mulgae_mr(self):
		self.run_test("물개", "{{ko-IPA|com=1}}", "mulkae", "mr")
	def test_mulgae_yr(self):
		self.run_test("물개", "{{ko-IPA|com=1}}", "mulqkay", "yr")
	def test_mulgae_ipa(self):
		self.run_test("물개", "{{ko-IPA|com=1}}", "[muɭk͈ɛ] ~ [muɭk͈e̞]", "ipa")

	def test_bakjwi_ph(self):
		self.run_test("박쥐", "{{ko-IPA|l=y}}", "박(ː)쮜", "ph")
	def test_bakjwi_rr(self):
		self.run_test("박쥐", "{{ko-IPA|l=y}}", "bakjwi", "rr")
	def test_bakjwi_rrr(self):
		self.run_test("박쥐", "{{ko-IPA|l=y}}", "bagjwi", "rrr")
	def test_bakjwi_mr(self):
		self.run_test("박쥐", "{{ko-IPA|l=y}}", "pakchwi", "mr")
	def test_bakjwi_yr(self):
		self.run_test("박쥐", "{{ko-IPA|l=y}}", "pākcwi", "yr")
	def test_bakjwi_ipa(self):
		self.run_test("박쥐", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)k̚t͡ɕ͈ɥi] ~ [ˈpa̠(ː)k̚t͡ɕ͈y]", "ipa")

	def test_mulbeom_ph(self):
		self.run_test("물범", "{{ko-ipa}}", "물범", "ph")
	def test_mulbeom_rr(self):
		self.run_test("물범", "{{ko-ipa}}", "mulbeom", "rr")
	def test_mulbeom_rrr(self):
		self.run_test("물범", "{{ko-ipa}}", "mulbeom", "rrr")
	def test_mulbeom_mr(self):
		self.run_test("물범", "{{ko-ipa}}", "mulbŏm", "mr")
	def test_mulbeom_yr(self):
		self.run_test("물범", "{{ko-ipa}}", "mul.pem", "yr")
	def test_mulbeom_ipa(self):
		self.run_test("물범", "{{ko-ipa}}", "[muɭbʌ̹m]", "ipa")

	def test_badakokkiri_ph(self):
		self.run_test("바다코끼리", "{{ko-ipa}}", "바다코끼리", "ph")
	def test_badakokkiri_rr(self):
		self.run_test("바다코끼리", "{{ko-ipa}}", "badakokkiri", "rr")
	def test_badakokkiri_rrr(self):
		self.run_test("바다코끼리", "{{ko-ipa}}", "badako'kkili", "rrr")
	def test_badakokkiri_mr(self):
		self.run_test("바다코끼리", "{{ko-ipa}}", "padak'okkiri", "mr")
	def test_badakokkiri_yr(self):
		self.run_test("바다코끼리", "{{ko-ipa}}", "pata.kho.kkili", "yr")
	def test_badakokkiri_ipa(self):
		self.run_test("바다코끼리", "{{ko-ipa}}", "[pa̠da̠kʰo̞k͈iɾi]", "ipa")

	def test_badapyobeom_ph(self):
		self.run_test("바다표범", "{{ko-IPA}}", "바다표범", "ph")
	def test_badapyobeom_rr(self):
		self.run_test("바다표범", "{{ko-IPA}}", "badapyobeom", "rr")
	def test_badapyobeom_rrr(self):
		self.run_test("바다표범", "{{ko-IPA}}", "badapyobeom", "rrr")
	def test_badapyobeom_mr(self):
		self.run_test("바다표범", "{{ko-IPA}}", "padap'yobŏm", "mr")
	def test_badapyobeom_yr(self):
		self.run_test("바다표범", "{{ko-IPA}}", "pata.phyopem", "yr")
	def test_badapyobeom_ipa(self):
		self.run_test("바다표범", "{{ko-IPA}}", "[pa̠da̠pʰjobʌ̹m]", "ipa")

	def test_mulda_ph(self):
		self.run_test("물다", "{{ko-IPA}}", "물다", "ph")
	def test_mulda_rr(self):
		self.run_test("물다", "{{ko-IPA}}", "mulda", "rr")
	def test_mulda_rrr(self):
		self.run_test("물다", "{{ko-IPA}}", "mulda", "rrr")
	def test_mulda_mr(self):
		self.run_test("물다", "{{ko-IPA}}", "mulda", "mr")
	def test_mulda_yr(self):
		self.run_test("물다", "{{ko-IPA}}", "multa", "yr")
	def test_mulda_ipa(self):
		self.run_test("물다", "{{ko-IPA}}", "[muɭda̠]", "ipa")
	def test_mulda_ph_1(self):
		self.run_test("물다", "{{ko-IPA}}", "물다", "ph")
	def test_mulda_rr_1(self):
		self.run_test("물다", "{{ko-IPA}}", "mulda", "rr")
	def test_mulda_rrr_1(self):
		self.run_test("물다", "{{ko-IPA}}", "mulda", "rrr")
	def test_mulda_mr_1(self):
		self.run_test("물다", "{{ko-IPA}}", "mulda", "mr")
	def test_mulda_yr_1(self):
		self.run_test("물다", "{{ko-IPA}}", "multa", "yr")
	def test_mulda_ipa_1(self):
		self.run_test("물다", "{{ko-IPA}}", "[muɭda̠]", "ipa")
	def test_mulda_ph_2(self):
		self.run_test("물다", "{{ko-IPA|l=y}}", "물(ː)다", "ph")
	def test_mulda_rr_2(self):
		self.run_test("물다", "{{ko-IPA|l=y}}", "mulda", "rr")
	def test_mulda_rrr_2(self):
		self.run_test("물다", "{{ko-IPA|l=y}}", "mulda", "rrr")
	def test_mulda_mr_2(self):
		self.run_test("물다", "{{ko-IPA|l=y}}", "mulda", "mr")
	def test_mulda_yr_2(self):
		self.run_test("물다", "{{ko-IPA|l=y}}", "mūlta", "yr")
	def test_mulda_ipa_2(self):
		self.run_test("물다", "{{ko-IPA|l=y}}", "[ˈmu(ː)ɭda̠]", "ipa")

	def test_mureotteda_ph(self):
		self.run_test("물어떼다", "{{ko-IPA}}", "무러떼다", "ph")
	def test_mureotteda_rr(self):
		self.run_test("물어떼다", "{{ko-IPA}}", "mureotteda", "rr")
	def test_mureotteda_rrr(self):
		self.run_test("물어떼다", "{{ko-IPA}}", "mul'eo'tteda", "rrr")
	def test_mureotteda_mr(self):
		self.run_test("물어떼다", "{{ko-IPA}}", "murŏtteda", "mr")
	def test_mureotteda_yr(self):
		self.run_test("물어떼다", "{{ko-IPA}}", "mul.e.tteyta", "yr")
	def test_mureotteda_ipa(self):
		self.run_test("물어떼다", "{{ko-IPA}}", "[muɾʌ̹t͈e̞da̠]", "ipa")

	def test_mureotteutda_ph(self):
		self.run_test("물어뜯다", "{{ko-IPA}}", "무러뜯따", "ph")
	def test_mureotteutda_rr(self):
		self.run_test("물어뜯다", "{{ko-IPA}}", "mureotteutda", "rr")
	def test_mureotteutda_rrr(self):
		self.run_test("물어뜯다", "{{ko-IPA}}", "mul'eo'tteudda", "rrr")
	def test_mureotteutda_mr(self):
		self.run_test("물어뜯다", "{{ko-IPA}}", "murŏttŭtta", "mr")
	def test_mureotteutda_yr(self):
		self.run_test("물어뜯다", "{{ko-IPA}}", "mul.e.ttut.ta", "yr")
	def test_mureotteutda_ipa(self):
		self.run_test("물어뜯다", "{{ko-IPA}}", "[muɾʌ̹t͈ɯt̚t͈a̠]", "ipa")

	def test_kkaemulda_ph(self):
		self.run_test("깨물다", "{{ko-IPA}}", "깨물다/께물다", "ph")
	def test_kkaemulda_rr(self):
		self.run_test("깨물다", "{{ko-IPA}}", "kkaemulda", "rr")
	def test_kkaemulda_rrr(self):
		self.run_test("깨물다", "{{ko-IPA}}", "kkaemulda", "rrr")
	def test_kkaemulda_mr(self):
		self.run_test("깨물다", "{{ko-IPA}}", "kkaemulda", "mr")
	def test_kkaemulda_yr(self):
		self.run_test("깨물다", "{{ko-IPA}}", "kkaymulta", "yr")
	def test_kkaemulda_ipa(self):
		self.run_test("깨물다", "{{ko-IPA}}", "[k͈ɛmuɭda̠] ~ [k͈e̞muɭda̠]", "ipa")

	def test_tteutda_ph(self):
		self.run_test("뜯다", "{{ko-IPA}}", "뜯따", "ph")
	def test_tteutda_rr(self):
		self.run_test("뜯다", "{{ko-IPA}}", "tteutda", "rr")
	def test_tteutda_rrr(self):
		self.run_test("뜯다", "{{ko-IPA}}", "tteudda", "rrr")
	def test_tteutda_mr(self):
		self.run_test("뜯다", "{{ko-IPA}}", "ttŭtta", "mr")
	def test_tteutda_yr(self):
		self.run_test("뜯다", "{{ko-IPA}}", "ttut.ta", "yr")
	def test_tteutda_ipa(self):
		self.run_test("뜯다", "{{ko-IPA}}", "[t͈ɯt̚t͈a̠]", "ipa")

	def test_tteda_ph(self):
		self.run_test("떼다", "{{ko-IPA|l=y}}", "떼(ː)다", "ph")
	def test_tteda_rr(self):
		self.run_test("떼다", "{{ko-IPA|l=y}}", "tteda", "rr")
	def test_tteda_rrr(self):
		self.run_test("떼다", "{{ko-IPA|l=y}}", "tteda", "rrr")
	def test_tteda_mr(self):
		self.run_test("떼다", "{{ko-IPA|l=y}}", "tteda", "mr")
	def test_tteda_yr(self):
		self.run_test("떼다", "{{ko-IPA|l=y}}", "ttēyta", "yr")
	def test_tteda_ipa(self):
		self.run_test("떼다", "{{ko-IPA|l=y}}", "[ˈt͈e̞(ː)da̠]", "ipa")

	def test_hyeo_ph(self):
		self.run_test("혀", "{{ko-IPA}}", "혀", "ph")
	def test_hyeo_rr(self):
		self.run_test("혀", "{{ko-IPA}}", "hyeo", "rr")
	def test_hyeo_rrr(self):
		self.run_test("혀", "{{ko-IPA}}", "hyeo", "rrr")
	def test_hyeo_mr(self):
		self.run_test("혀", "{{ko-IPA}}", "hyŏ", "mr")
	def test_hyeo_yr(self):
		self.run_test("혀", "{{ko-IPA}}", "hye", "yr")
	def test_hyeo_ipa(self):
		self.run_test("혀", "{{ko-IPA}}", "[çʌ̹]", "ipa")

	def test_ammal_ph(self):
		self.run_test("암말", "{{ko-IPA}}", "암말", "ph")
	def test_ammal_rr(self):
		self.run_test("암말", "{{ko-IPA}}", "ammal", "rr")
	def test_ammal_rrr(self):
		self.run_test("암말", "{{ko-IPA}}", "ammal", "rrr")
	def test_ammal_mr(self):
		self.run_test("암말", "{{ko-IPA}}", "ammal", "mr")
	def test_ammal_yr(self):
		self.run_test("암말", "{{ko-IPA}}", "ammal", "yr")
	def test_ammal_ipa(self):
		self.run_test("암말", "{{ko-IPA}}", "[a̠mma̠ɭ]", "ipa")

	def test_sumal_ph(self):
		self.run_test("수말", "{{ko-IPA}}", "수말", "ph")
	def test_sumal_rr(self):
		self.run_test("수말", "{{ko-IPA}}", "sumal", "rr")
	def test_sumal_rrr(self):
		self.run_test("수말", "{{ko-IPA}}", "sumal", "rrr")
	def test_sumal_mr(self):
		self.run_test("수말", "{{ko-IPA}}", "sumal", "mr")
	def test_sumal_yr(self):
		self.run_test("수말", "{{ko-IPA}}", "swumal", "yr")
	def test_sumal_ipa(self):
		self.run_test("수말", "{{ko-IPA}}", "[sʰuma̠ɭ]", "ipa")

	def test_gabot_ph(self):
		self.run_test("갑옷", "{{ko-ipa|a=Ko-갑옷.ogg}}", "가볻", "ph")
	def test_gabot_rr(self):
		self.run_test("갑옷", "{{ko-ipa|a=Ko-갑옷.ogg}}", "gabot", "rr")
	def test_gabot_rrr(self):
		self.run_test("갑옷", "{{ko-ipa|a=Ko-갑옷.ogg}}", "gab'os", "rrr")
	def test_gabot_mr(self):
		self.run_test("갑옷", "{{ko-ipa|a=Ko-갑옷.ogg}}", "kabot", "mr")
	def test_gabot_yr(self):
		self.run_test("갑옷", "{{ko-ipa|a=Ko-갑옷.ogg}}", "kap.os", "yr")
	def test_gabot_ipa(self):
		self.run_test("갑옷", "{{ko-ipa|a=Ko-갑옷.ogg}}", "[ka̠bo̞t̚]", "ipa")

	def test_bulkkada_ph(self):
		self.run_test("불까다", "{{ko-IPA}}", "불까다", "ph")
	def test_bulkkada_rr(self):
		self.run_test("불까다", "{{ko-IPA}}", "bulkkada", "rr")
	def test_bulkkada_rrr(self):
		self.run_test("불까다", "{{ko-IPA}}", "bulkkada", "rrr")
	def test_bulkkada_mr(self):
		self.run_test("불까다", "{{ko-IPA}}", "pulkkada", "mr")
	def test_bulkkada_yr(self):
		self.run_test("불까다", "{{ko-IPA}}", "pul.kkata", "yr")
	def test_bulkkada_ipa(self):
		self.run_test("불까다", "{{ko-IPA}}", "[puɭk͈a̠da̠]", "ipa")

	def test_bulchida_ph(self):
		self.run_test("불치다", "{{ko-IPA}}", "불치다", "ph")
	def test_bulchida_rr(self):
		self.run_test("불치다", "{{ko-IPA}}", "bulchida", "rr")
	def test_bulchida_rrr(self):
		self.run_test("불치다", "{{ko-IPA}}", "bulchida", "rrr")
	def test_bulchida_mr(self):
		self.run_test("불치다", "{{ko-IPA}}", "pulch'ida", "mr")
	def test_bulchida_yr(self):
		self.run_test("불치다", "{{ko-IPA}}", "pulchita", "yr")
	def test_bulchida_ipa(self):
		self.run_test("불치다", "{{ko-IPA}}", "[puʎt͡ɕʰida̠]", "ipa")

	def test_alkkagi_ph(self):
		self.run_test("알까기", "{{ko-IPA}}", "알까기", "ph")
	def test_alkkagi_rr(self):
		self.run_test("알까기", "{{ko-IPA}}", "alkkagi", "rr")
	def test_alkkagi_rrr(self):
		self.run_test("알까기", "{{ko-IPA}}", "alkkagi", "rrr")
	def test_alkkagi_mr(self):
		self.run_test("알까기", "{{ko-IPA}}", "alkkagi", "mr")
	def test_alkkagi_yr(self):
		self.run_test("알까기", "{{ko-IPA}}", "al.kkaki", "yr")
	def test_alkkagi_ipa(self):
		self.run_test("알까기", "{{ko-IPA}}", "[a̠ɭk͈a̠ɡi]", "ipa")

	def test_beonyeokja_ph(self):
		self.run_test("번역자", "{{ko-IPA}}", "버녁짜", "ph")
	def test_beonyeokja_rr(self):
		self.run_test("번역자", "{{ko-IPA}}", "beonyeokja", "rr")
	def test_beonyeokja_rrr(self):
		self.run_test("번역자", "{{ko-IPA}}", "beon'yeogja", "rrr")
	def test_beonyeokja_mr(self):
		self.run_test("번역자", "{{ko-IPA}}", "pŏnyŏkcha", "mr")
	def test_beonyeokja_yr(self):
		self.run_test("번역자", "{{ko-IPA}}", "pen.yekca", "yr")
	def test_beonyeokja_ipa(self):
		self.run_test("번역자", "{{ko-IPA}}", "[pʌ̹ɲʌ̹k̚t͡ɕ͈a̠]", "ipa")

	def test_saebyeok_ph(self):
		self.run_test("새벽", "{{ko-IPA}}", "새벽/세벽", "ph")
	def test_saebyeok_rr(self):
		self.run_test("새벽", "{{ko-IPA}}", "saebyeok", "rr")
	def test_saebyeok_rrr(self):
		self.run_test("새벽", "{{ko-IPA}}", "saebyeog", "rrr")
	def test_saebyeok_mr(self):
		self.run_test("새벽", "{{ko-IPA}}", "saebyŏk", "mr")
	def test_saebyeok_yr(self):
		self.run_test("새벽", "{{ko-IPA}}", "saypyek", "yr")
	def test_saebyeok_ipa(self):
		self.run_test("새벽", "{{ko-IPA}}", "[sʰɛbjʌ̹k̚] ~ [sʰe̞bjʌ̹k̚]", "ipa")

	def test_nam_ph(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "남", "ph")
	def test_nam_rr(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "rr")
	def test_nam_rrr(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "rrr")
	def test_nam_mr(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "mr")
	def test_nam_yr(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "yr")
	def test_nam_ipa(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "[na̠m]", "ipa")
	def test_nam_ph_1(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "남", "ph")
	def test_nam_rr_1(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "rr")
	def test_nam_rrr_1(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "rrr")
	def test_nam_mr_1(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "mr")
	def test_nam_yr_1(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "yr")
	def test_nam_ipa_1(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "[na̠m]", "ipa")
	def test_nam_ph_2(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "남", "ph")
	def test_nam_rr_2(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "rr")
	def test_nam_rrr_2(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "rrr")
	def test_nam_mr_2(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "mr")
	def test_nam_yr_2(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "nam", "yr")
	def test_nam_ipa_2(self):
		self.run_test("남", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-남.wav}}", "[na̠m]", "ipa")

	def test_dong_ph(self):
		self.run_test("동", "{{ko-IPA}}", "동", "ph")
	def test_dong_rr(self):
		self.run_test("동", "{{ko-IPA}}", "dong", "rr")
	def test_dong_rrr(self):
		self.run_test("동", "{{ko-IPA}}", "dong", "rrr")
	def test_dong_mr(self):
		self.run_test("동", "{{ko-IPA}}", "tong", "mr")
	def test_dong_yr(self):
		self.run_test("동", "{{ko-IPA}}", "tong", "yr")
	def test_dong_ipa(self):
		self.run_test("동", "{{ko-IPA}}", "[to̞ŋ]", "ipa")
	def test_dong_ph_1(self):
		self.run_test("동", "{{ko-IPA|l=y}}", "동(ː)", "ph")
	def test_dong_rr_1(self):
		self.run_test("동", "{{ko-IPA|l=y}}", "dong", "rr")
	def test_dong_rrr_1(self):
		self.run_test("동", "{{ko-IPA|l=y}}", "dong", "rrr")
	def test_dong_mr_1(self):
		self.run_test("동", "{{ko-IPA|l=y}}", "tong", "mr")
	def test_dong_yr_1(self):
		self.run_test("동", "{{ko-IPA|l=y}}", "tōng", "yr")
	def test_dong_ipa_1(self):
		self.run_test("동", "{{ko-IPA|l=y}}", "[to̞(ː)ŋ]", "ipa")

	def test_dot_ph(self):
		self.run_test("돛", "{{ko-IPA}}", "돋", "ph")
	def test_dot_rr(self):
		self.run_test("돛", "{{ko-IPA}}", "dot", "rr")
	def test_dot_rrr(self):
		self.run_test("돛", "{{ko-IPA}}", "doch", "rrr")
	def test_dot_mr(self):
		self.run_test("돛", "{{ko-IPA}}", "tot", "mr")
	def test_dot_yr(self):
		self.run_test("돛", "{{ko-IPA}}", "toch", "yr")
	def test_dot_ipa(self):
		self.run_test("돛", "{{ko-IPA}}", "[to̞t̚]", "ipa")

	def test_dat_ph(self):
		self.run_test("닻", "{{ko-IPA}}", "닫", "ph")
	def test_dat_rr(self):
		self.run_test("닻", "{{ko-IPA}}", "dat", "rr")
	def test_dat_rrr(self):
		self.run_test("닻", "{{ko-IPA}}", "dach", "rrr")
	def test_dat_mr(self):
		self.run_test("닻", "{{ko-IPA}}", "tat", "mr")
	def test_dat_yr(self):
		self.run_test("닻", "{{ko-IPA}}", "tach", "yr")
	def test_dat_ipa(self):
		self.run_test("닻", "{{ko-IPA}}", "[ta̠t̚]", "ipa")

	def test_seumbe_ph(self):
		self.run_test("슴베", "{{ko-IPA}}", "슴베", "ph")
	def test_seumbe_rr(self):
		self.run_test("슴베", "{{ko-IPA}}", "seumbe", "rr")
	def test_seumbe_rrr(self):
		self.run_test("슴베", "{{ko-IPA}}", "seumbe", "rrr")
	def test_seumbe_mr(self):
		self.run_test("슴베", "{{ko-IPA}}", "sŭmbe", "mr")
	def test_seumbe_yr(self):
		self.run_test("슴베", "{{ko-IPA}}", "sumpey", "yr")
	def test_seumbe_ipa(self):
		self.run_test("슴베", "{{ko-IPA}}", "[sʰɯmbe̞]", "ipa")

	def test_data_ph(self):
		self.run_test("닿다", "{{ko-IPA|l=y}}", "다(ː)타", "ph")
	def test_data_rr(self):
		self.run_test("닿다", "{{ko-IPA|l=y}}", "data", "rr")
	def test_data_rrr(self):
		self.run_test("닿다", "{{ko-IPA|l=y}}", "dahda", "rrr")
	def test_data_mr(self):
		self.run_test("닿다", "{{ko-IPA|l=y}}", "tat'a", "mr")
	def test_data_yr(self):
		self.run_test("닿다", "{{ko-IPA|l=y}}", "tāhta", "yr")
	def test_data_ipa(self):
		self.run_test("닿다", "{{ko-IPA|l=y}}", "[ˈta̠(ː)tʰa̠]", "ipa")
	def test_datda_ph_1(self):
		self.run_test("닿다", "{{ko-IPA|닷다}}", "닫따", "ph")
	def test_datda_rr_1(self):
		self.run_test("닿다", "{{ko-IPA|닷다}}", "datda", "rr")
	def test_datda_rrr_1(self):
		self.run_test("닿다", "{{ko-IPA|닷다}}", "dasda", "rrr")
	def test_datda_mr_1(self):
		self.run_test("닿다", "{{ko-IPA|닷다}}", "tatta", "mr")
	def test_datda_yr_1(self):
		self.run_test("닿다", "{{ko-IPA|닷다}}", "tasta", "yr")
	def test_datda_ipa_1(self):
		self.run_test("닿다", "{{ko-IPA|닷다}}", "[ta̠t̚t͈a̠]", "ipa")

	def test_ppul_ph(self):
		self.run_test("뿔", "{{ko-ipa|a=y}}", "뿔", "ph")
	def test_ppul_rr(self):
		self.run_test("뿔", "{{ko-ipa|a=y}}", "ppul", "rr")
	def test_ppul_rrr(self):
		self.run_test("뿔", "{{ko-ipa|a=y}}", "ppul", "rrr")
	def test_ppul_mr(self):
		self.run_test("뿔", "{{ko-ipa|a=y}}", "ppul", "mr")
	def test_ppul_yr(self):
		self.run_test("뿔", "{{ko-ipa|a=y}}", "ppul", "yr")
	def test_ppul_ipa(self):
		self.run_test("뿔", "{{ko-ipa|a=y}}", "[p͈uɭ]", "ipa")

	def test_ani_ph(self):
		self.run_test("아니", "{{ko-IPA}}", "아니", "ph")
	def test_ani_rr(self):
		self.run_test("아니", "{{ko-IPA}}", "ani", "rr")
	def test_ani_rrr(self):
		self.run_test("아니", "{{ko-IPA}}", "ani", "rrr")
	def test_ani_mr(self):
		self.run_test("아니", "{{ko-IPA}}", "ani", "mr")
	def test_ani_yr(self):
		self.run_test("아니", "{{ko-IPA}}", "ani", "yr")
	def test_ani_ipa(self):
		self.run_test("아니", "{{ko-IPA}}", "[a̠ni]", "ipa")

	def test_aniyo_ph(self):
		self.run_test("아니요", "{{ko-IPA}}", "아니요", "ph")
	def test_aniyo_rr(self):
		self.run_test("아니요", "{{ko-IPA}}", "aniyo", "rr")
	def test_aniyo_rrr(self):
		self.run_test("아니요", "{{ko-IPA}}", "aniyo", "rrr")
	def test_aniyo_mr(self):
		self.run_test("아니요", "{{ko-IPA}}", "aniyo", "mr")
	def test_aniyo_yr(self):
		self.run_test("아니요", "{{ko-IPA}}", "aniyo", "yr")
	def test_aniyo_ipa(self):
		self.run_test("아니요", "{{ko-IPA}}", "[a̠nijo]", "ipa")

	def test_jul_ph(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "줄", "ph")
	def test_jul_rr(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "jul", "rr")
	def test_jul_rrr(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "jul", "rrr")
	def test_jul_mr(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "chul", "mr")
	def test_jul_yr(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "cwul", "yr")
	def test_jul_ipa(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "[t͡ɕuɭ]", "ipa")
	def test_jul_ph_1(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "줄", "ph")
	def test_jul_rr_1(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "jul", "rr")
	def test_jul_rrr_1(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "jul", "rrr")
	def test_jul_mr_1(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "chul", "mr")
	def test_jul_yr_1(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "cwul", "yr")
	def test_jul_ipa_1(self):
		self.run_test("줄", "{{ko-IPA|a=y}}", "[t͡ɕuɭ]", "ipa")
	def test_jul_ph_2(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "줄(ː)", "ph")
	def test_jul_rr_2(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "jul", "rr")
	def test_jul_rrr_2(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "jul", "rrr")
	def test_jul_mr_2(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "chul", "mr")
	def test_jul_yr_2(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "cwūl", "yr")
	def test_jul_ipa_2(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "[t͡ɕu(ː)ɭ]", "ipa")
	def test_jul_ph_3(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "줄(ː)", "ph")
	def test_jul_rr_3(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "jul", "rr")
	def test_jul_rrr_3(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "jul", "rrr")
	def test_jul_mr_3(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "chul", "mr")
	def test_jul_yr_3(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "cwūl", "yr")
	def test_jul_ipa_3(self):
		self.run_test("줄", "{{ko-IPA|l=y}}", "[t͡ɕu(ː)ɭ]", "ipa")
	def test_jul_ph_4(self):
		self.run_test("줄", "{{ko-IPA}}", "줄", "ph")
	def test_jul_rr_4(self):
		self.run_test("줄", "{{ko-IPA}}", "jul", "rr")
	def test_jul_rrr_4(self):
		self.run_test("줄", "{{ko-IPA}}", "jul", "rrr")
	def test_jul_mr_4(self):
		self.run_test("줄", "{{ko-IPA}}", "chul", "mr")
	def test_jul_yr_4(self):
		self.run_test("줄", "{{ko-IPA}}", "cwul", "yr")
	def test_jul_ipa_4(self):
		self.run_test("줄", "{{ko-IPA}}", "[t͡ɕuɭ]", "ipa")
	def test_jul_ph_5(self):
		self.run_test("줄", "{{ko-IPA}}", "줄", "ph")
	def test_jul_rr_5(self):
		self.run_test("줄", "{{ko-IPA}}", "jul", "rr")
	def test_jul_rrr_5(self):
		self.run_test("줄", "{{ko-IPA}}", "jul", "rrr")
	def test_jul_mr_5(self):
		self.run_test("줄", "{{ko-IPA}}", "chul", "mr")
	def test_jul_yr_5(self):
		self.run_test("줄", "{{ko-IPA}}", "cwul", "yr")
	def test_jul_ipa_5(self):
		self.run_test("줄", "{{ko-IPA}}", "[t͡ɕuɭ]", "ipa")

	def test_sseolda_ph(self):
		self.run_test("썰다", "{{ko-IPA|l=y}}", "썰(ː)다", "ph")
	def test_sseolda_rr(self):
		self.run_test("썰다", "{{ko-IPA|l=y}}", "sseolda", "rr")
	def test_sseolda_rrr(self):
		self.run_test("썰다", "{{ko-IPA|l=y}}", "sseolda", "rrr")
	def test_sseolda_mr(self):
		self.run_test("썰다", "{{ko-IPA|l=y}}", "ssŏlda", "mr")
	def test_sseolda_yr(self):
		self.run_test("썰다", "{{ko-IPA|l=y}}", "ssēlta", "yr")
	def test_sseolda_ipa(self):
		self.run_test("썰다", "{{ko-IPA|l=y}}", "[ˈs͈ɘ(ː)ɭda̠]", "ipa")

	def test_sseorida_ph(self):
		self.run_test("써리다", "{{ko-IPA|l=y}}", "써(ː)리다", "ph")
	def test_sseorida_rr(self):
		self.run_test("써리다", "{{ko-IPA|l=y}}", "sseorida", "rr")
	def test_sseorida_rrr(self):
		self.run_test("써리다", "{{ko-IPA|l=y}}", "sseolida", "rrr")
	def test_sseorida_mr(self):
		self.run_test("써리다", "{{ko-IPA|l=y}}", "ssŏrida", "mr")
	def test_sseorida_yr(self):
		self.run_test("써리다", "{{ko-IPA|l=y}}", "ssēlita", "yr")
	def test_sseorida_ipa(self):
		self.run_test("써리다", "{{ko-IPA|l=y}}", "[ˈs͈ɘ(ː)ɾida̠]", "ipa")

	def test_chambit_ph(self):
		self.run_test("참빗", "{{ko-IPA}}", "참빋", "ph")
	def test_chambit_rr(self):
		self.run_test("참빗", "{{ko-IPA}}", "chambit", "rr")
	def test_chambit_rrr(self):
		self.run_test("참빗", "{{ko-IPA}}", "chambis", "rrr")
	def test_chambit_mr(self):
		self.run_test("참빗", "{{ko-IPA}}", "ch'ambit", "mr")
	def test_chambit_yr(self):
		self.run_test("참빗", "{{ko-IPA}}", "champis", "yr")
	def test_chambit_ipa(self):
		self.run_test("참빗", "{{ko-IPA}}", "[t͡ɕʰa̠mbit̚]", "ipa")

	def test_bit_ph(self):
		self.run_test("빗", "{{ko-IPA}}", "빋", "ph")
	def test_bit_rr(self):
		self.run_test("빗", "{{ko-IPA}}", "bit", "rr")
	def test_bit_rrr(self):
		self.run_test("빗", "{{ko-IPA}}", "bis", "rrr")
	def test_bit_mr(self):
		self.run_test("빗", "{{ko-IPA}}", "pit", "mr")
	def test_bit_yr(self):
		self.run_test("빗", "{{ko-IPA}}", "pis", "yr")
	def test_bit_ipa(self):
		self.run_test("빗", "{{ko-IPA}}", "[pit̚]", "ipa")
	def test_bit_ph_1(self):
		self.run_test("빗", "{{ko-IPA}}", "빋", "ph")
	def test_bit_rr_1(self):
		self.run_test("빗", "{{ko-IPA}}", "bit", "rr")
	def test_bit_rrr_1(self):
		self.run_test("빗", "{{ko-IPA}}", "bis", "rrr")
	def test_bit_mr_1(self):
		self.run_test("빗", "{{ko-IPA}}", "pit", "mr")
	def test_bit_yr_1(self):
		self.run_test("빗", "{{ko-IPA}}", "pis", "yr")
	def test_bit_ipa_1(self):
		self.run_test("빗", "{{ko-IPA}}", "[pit̚]", "ipa")

	def test_bitda_ph(self):
		self.run_test("빗다", "{{ko-IPA}}", "빋따", "ph")
	def test_bitda_rr(self):
		self.run_test("빗다", "{{ko-IPA}}", "bitda", "rr")
	def test_bitda_rrr(self):
		self.run_test("빗다", "{{ko-IPA}}", "bisda", "rrr")
	def test_bitda_mr(self):
		self.run_test("빗다", "{{ko-IPA}}", "pitta", "mr")
	def test_bitda_yr(self):
		self.run_test("빗다", "{{ko-IPA}}", "pista", "yr")
	def test_bitda_ipa(self):
		self.run_test("빗다", "{{ko-IPA}}", "[pit̚t͈a̠]", "ipa")

	def test_sseore_ph(self):
		self.run_test("써레", "{{ko-IPA}}", "써레", "ph")
	def test_sseore_rr(self):
		self.run_test("써레", "{{ko-IPA}}", "sseore", "rr")
	def test_sseore_rrr(self):
		self.run_test("써레", "{{ko-IPA}}", "sseole", "rrr")
	def test_sseore_mr(self):
		self.run_test("써레", "{{ko-IPA}}", "ssŏre", "mr")
	def test_sseore_yr(self):
		self.run_test("써레", "{{ko-IPA}}", "sseley", "yr")
	def test_sseore_ipa(self):
		self.run_test("써레", "{{ko-IPA}}", "[s͈ʌ̹ɾe̞]", "ipa")

	def test_bol_ph(self):
		self.run_test("볼", "{{ko-IPA}}", "볼", "ph")
	def test_bol_rr(self):
		self.run_test("볼", "{{ko-IPA}}", "bol", "rr")
	def test_bol_rrr(self):
		self.run_test("볼", "{{ko-IPA}}", "bol", "rrr")
	def test_bol_mr(self):
		self.run_test("볼", "{{ko-IPA}}", "pol", "mr")
	def test_bol_yr(self):
		self.run_test("볼", "{{ko-IPA}}", "pol", "yr")
	def test_bol_ipa(self):
		self.run_test("볼", "{{ko-IPA}}", "[po̞ɭ]", "ipa")

	def test_bolgi_ph(self):
		self.run_test("볼기", "{{ko-IPA|l=y}}", "볼(ː)기", "ph")
	def test_bolgi_rr(self):
		self.run_test("볼기", "{{ko-IPA|l=y}}", "bolgi", "rr")
	def test_bolgi_rrr(self):
		self.run_test("볼기", "{{ko-IPA|l=y}}", "bolgi", "rrr")
	def test_bolgi_mr(self):
		self.run_test("볼기", "{{ko-IPA|l=y}}", "polgi", "mr")
	def test_bolgi_yr(self):
		self.run_test("볼기", "{{ko-IPA|l=y}}", "pōl.ki", "yr")
	def test_bolgi_ipa(self):
		self.run_test("볼기", "{{ko-IPA|l=y}}", "[ˈpo̞(ː)ɭɡi]", "ipa")

	def test_teok_ph(self):
		self.run_test("턱", "{{ko-IPA}}", "턱", "ph")
	def test_teok_rr(self):
		self.run_test("턱", "{{ko-IPA}}", "teok", "rr")
	def test_teok_rrr(self):
		self.run_test("턱", "{{ko-IPA}}", "teog", "rrr")
	def test_teok_mr(self):
		self.run_test("턱", "{{ko-IPA}}", "t'ŏk", "mr")
	def test_teok_yr(self):
		self.run_test("턱", "{{ko-IPA}}", "thek", "yr")
	def test_teok_ipa(self):
		self.run_test("턱", "{{ko-IPA}}", "[tʰʌ̹k̚]", "ipa")

	def test_bulla_ph(self):
		self.run_test("불라", "{{ko-IPA}}", "불라", "ph")
	def test_bulla_rr(self):
		self.run_test("불라", "{{ko-IPA}}", "bulla", "rr")
	def test_bulla_rrr(self):
		self.run_test("불라", "{{ko-IPA}}", "bulla", "rrr")
	def test_bulla_mr(self):
		self.run_test("불라", "{{ko-IPA}}", "pulla", "mr")
	def test_bulla_yr(self):
		self.run_test("불라", "{{ko-IPA}}", "pulla", "yr")
	def test_bulla_ipa(self):
		self.run_test("불라", "{{ko-IPA}}", "[puɭɭa̠]", "ipa")

	def test_hwangso_ph(self):
		self.run_test("황소", "{{ko-ipa}}", "황소", "ph")
	def test_hwangso_rr(self):
		self.run_test("황소", "{{ko-ipa}}", "hwangso", "rr")
	def test_hwangso_rrr(self):
		self.run_test("황소", "{{ko-ipa}}", "hwangso", "rrr")
	def test_hwangso_mr(self):
		self.run_test("황소", "{{ko-ipa}}", "hwangso", "mr")
	def test_hwangso_yr(self):
		self.run_test("황소", "{{ko-ipa}}", "hwangso", "yr")
	def test_hwangso_ipa(self):
		self.run_test("황소", "{{ko-ipa}}", "[ɸwa̠ŋsʰo̞]", "ipa")

	def test_pulmu_ph(self):
		self.run_test("풀무", "{{ko-ipa}}", "풀무", "ph")
	def test_pulmu_rr(self):
		self.run_test("풀무", "{{ko-ipa}}", "pulmu", "rr")
	def test_pulmu_rrr(self):
		self.run_test("풀무", "{{ko-ipa}}", "pulmu", "rrr")
	def test_pulmu_mr(self):
		self.run_test("풀무", "{{ko-ipa}}", "p'ulmu", "mr")
	def test_pulmu_yr(self):
		self.run_test("풀무", "{{ko-ipa}}", "phul.mu", "yr")
	def test_pulmu_ipa(self):
		self.run_test("풀무", "{{ko-ipa}}", "[pʰuɭmu]", "ipa")

	def test_bure_ph(self):
		self.run_test("부레", "{{ko-ipa}}", "부레", "ph")
	def test_bure_rr(self):
		self.run_test("부레", "{{ko-ipa}}", "bure", "rr")
	def test_bure_rrr(self):
		self.run_test("부레", "{{ko-ipa}}", "bule", "rrr")
	def test_bure_mr(self):
		self.run_test("부레", "{{ko-ipa}}", "pure", "mr")
	def test_bure_yr(self):
		self.run_test("부레", "{{ko-ipa}}", "puley", "yr")
	def test_bure_ipa(self):
		self.run_test("부레", "{{ko-ipa}}", "[puɾe̞]", "ipa")

	def test_beonyeokhada_ph(self):
		self.run_test("번역하다", "{{ko-IPA}}", "버녀카다", "ph")
	def test_beonyeokhada_rr(self):
		self.run_test("번역하다", "{{ko-IPA}}", "beonyeokhada", "rr")
	def test_beonyeokhada_rrr(self):
		self.run_test("번역하다", "{{ko-IPA}}", "beon'yeoghada", "rrr")
	def test_beonyeokhada_mr(self):
		self.run_test("번역하다", "{{ko-IPA}}", "pŏnyŏkhada", "mr")
	def test_beonyeokhada_yr(self):
		self.run_test("번역하다", "{{ko-IPA}}", "pen.yek.hata", "yr")
	def test_beonyeokhada_ipa(self):
		self.run_test("번역하다", "{{ko-IPA}}", "[pʌ̹ɲʌ̹kʰa̠da̠]", "ipa")

	def test_banga_ph(self):
		self.run_test("방아", "{{ko-IPA}}", "방아", "ph")
	def test_banga_rr(self):
		self.run_test("방아", "{{ko-IPA}}", "bang'a", "rr")
	def test_banga_rrr(self):
		self.run_test("방아", "{{ko-IPA}}", "bang'a", "rrr")
	def test_banga_mr(self):
		self.run_test("방아", "{{ko-IPA}}", "panga", "mr")
	def test_banga_yr(self):
		self.run_test("방아", "{{ko-IPA}}", "panga", "yr")
	def test_banga_ipa(self):
		self.run_test("방아", "{{ko-IPA}}", "[pa̠ŋa̠]", "ipa")

	def test_bakchigi_ph(self):
		self.run_test("박치기", "{{ko-ipa}}", "박치기", "ph")
	def test_bakchigi_rr(self):
		self.run_test("박치기", "{{ko-ipa}}", "bakchigi", "rr")
	def test_bakchigi_rrr(self):
		self.run_test("박치기", "{{ko-ipa}}", "bagchigi", "rrr")
	def test_bakchigi_mr(self):
		self.run_test("박치기", "{{ko-ipa}}", "pakch'igi", "mr")
	def test_bakchigi_yr(self):
		self.run_test("박치기", "{{ko-ipa}}", "pakchiki", "yr")
	def test_bakchigi_ipa(self):
		self.run_test("박치기", "{{ko-ipa}}", "[pa̠k̚t͡ɕʰiɡi]", "ipa")

	def test_beokeul_ph(self):
		self.run_test("버클", "{{ko-IPA}}", "버클", "ph")
	def test_beokeul_rr(self):
		self.run_test("버클", "{{ko-IPA}}", "beokeul", "rr")
	def test_beokeul_rrr(self):
		self.run_test("버클", "{{ko-IPA}}", "beokeul", "rrr")
	def test_beokeul_mr(self):
		self.run_test("버클", "{{ko-IPA}}", "pŏk'ŭl", "mr")
	def test_beokeul_yr(self):
		self.run_test("버클", "{{ko-IPA}}", "pe.khul", "yr")
	def test_beokeul_ipa(self):
		self.run_test("버클", "{{ko-IPA}}", "[pʌ̹kxɯɭ]", "ipa")

	def test_solgi_ph(self):
		self.run_test("솔기", "{{ko-IPA}}", "솔기", "ph")
	def test_solgi_rr(self):
		self.run_test("솔기", "{{ko-IPA}}", "solgi", "rr")
	def test_solgi_rrr(self):
		self.run_test("솔기", "{{ko-IPA}}", "solgi", "rrr")
	def test_solgi_mr(self):
		self.run_test("솔기", "{{ko-IPA}}", "solgi", "mr")
	def test_solgi_yr(self):
		self.run_test("솔기", "{{ko-IPA}}", "sol.ki", "yr")
	def test_solgi_ipa(self):
		self.run_test("솔기", "{{ko-IPA}}", "[sʰo̞ɭɡi]", "ipa")

	def test_ieummae_ph(self):
		self.run_test("이음매", "{{ko-IPA}}", "이음매/이음메", "ph")
	def test_ieummae_rr(self):
		self.run_test("이음매", "{{ko-IPA}}", "ieummae", "rr")
	def test_ieummae_rrr(self):
		self.run_test("이음매", "{{ko-IPA}}", "ieummae", "rrr")
	def test_ieummae_mr(self):
		self.run_test("이음매", "{{ko-IPA}}", "iŭmmae", "mr")
	def test_ieummae_yr(self):
		self.run_test("이음매", "{{ko-IPA}}", "iummay", "yr")
	def test_ieummae_ipa(self):
		self.run_test("이음매", "{{ko-IPA}}", "[iɯmmɛ] ~ [iɯmme̞]", "ipa")

	def test_gopsa_ph(self):
		self.run_test("곱사", "{{ko-IPA}}", "곱싸", "ph")
	def test_gopsa_rr(self):
		self.run_test("곱사", "{{ko-IPA}}", "gopsa", "rr")
	def test_gopsa_rrr(self):
		self.run_test("곱사", "{{ko-IPA}}", "gobsa", "rrr")
	def test_gopsa_mr(self):
		self.run_test("곱사", "{{ko-IPA}}", "kopsa", "mr")
	def test_gopsa_yr(self):
		self.run_test("곱사", "{{ko-IPA}}", "kop.sa", "yr")
	def test_gopsa_ipa(self):
		self.run_test("곱사", "{{ko-IPA}}", "[ko̞ps͈a̠]", "ipa")

	def test_wikibaekgwa_ph(self):
		self.run_test("위키백과", "{{ko-IPA|a=Ko-위키백과.oga}}", "위키백꽈/위키벡꽈", "ph")
	def test_wikibaekgwa_rr(self):
		self.run_test("위키백과", "{{ko-IPA|a=Ko-위키백과.oga}}", "wikibaekgwa", "rr")
	def test_wikibaekgwa_rrr(self):
		self.run_test("위키백과", "{{ko-IPA|a=Ko-위키백과.oga}}", "wikibaeggwa", "rrr")
	def test_wikibaekgwa_mr(self):
		self.run_test("위키백과", "{{ko-IPA|a=Ko-위키백과.oga}}", "wik'ibaekkwa", "mr")
	def test_wikibaekgwa_yr(self):
		self.run_test("위키백과", "{{ko-IPA|a=Ko-위키백과.oga}}", "wi.khipayk.kwa", "yr")
	def test_wikibaekgwa_ipa(self):
		self.run_test("위키백과", "{{ko-IPA|a=Ko-위키백과.oga}}", "[ɥicçibɛk̚k͈wa̠] ~ [ɥicçibe̞k̚k͈wa̠] ~ [ycçibɛk̚k͈wa̠] ~ [ycçibe̞k̚k͈wa̠]", "ipa")

	def test_gyeonyu_ph(self):
		self.run_test("견유", "{{ko-IPA}}", "겨뉴", "ph")
	def test_gyeonyu_rr(self):
		self.run_test("견유", "{{ko-IPA}}", "gyeonyu", "rr")
	def test_gyeonyu_rrr(self):
		self.run_test("견유", "{{ko-IPA}}", "gyeon'yu", "rrr")
	def test_gyeonyu_mr(self):
		self.run_test("견유", "{{ko-IPA}}", "kyŏnyu", "mr")
	def test_gyeonyu_yr(self):
		self.run_test("견유", "{{ko-IPA}}", "kyen.yu", "yr")
	def test_gyeonyu_ipa(self):
		self.run_test("견유", "{{ko-IPA}}", "[kjʌ̹ɲu]", "ipa")

	def test_kkotbyeong_ph(self):
		self.run_test("꽃병", "{{ko-ipa}}", "꼳뼝", "ph")
	def test_kkotbyeong_rr(self):
		self.run_test("꽃병", "{{ko-ipa}}", "kkotbyeong", "rr")
	def test_kkotbyeong_rrr(self):
		self.run_test("꽃병", "{{ko-ipa}}", "kkochbyeong", "rrr")
	def test_kkotbyeong_mr(self):
		self.run_test("꽃병", "{{ko-ipa}}", "kkotpyŏng", "mr")
	def test_kkotbyeong_yr(self):
		self.run_test("꽃병", "{{ko-ipa}}", "kkochpyeng", "yr")
	def test_kkotbyeong_ipa(self):
		self.run_test("꽃병", "{{ko-ipa}}", "[k͈o̞t̚p͈jʌ̹ŋ]", "ipa")

	def test_bak_ph(self):
		self.run_test("박", "{{ko-IPA}}", "박", "ph")
	def test_bak_rr(self):
		self.run_test("박", "{{ko-IPA}}", "bak", "rr")
	def test_bak_rrr(self):
		self.run_test("박", "{{ko-IPA}}", "bag", "rrr")
	def test_bak_mr(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "mr")
	def test_bak_yr(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "yr")
	def test_bak_ipa(self):
		self.run_test("박", "{{ko-IPA}}", "[pa̠k̚]", "ipa")
	def test_Bak_ph_1(self):
		self.run_test("박", "{{ko-IPA|cap=y}}", "박", "ph")
	def test_Bak_rr_1(self):
		self.run_test("박", "{{ko-IPA|cap=y}}", "Bak", "rr")
	def test_Bak_rrr_1(self):
		self.run_test("박", "{{ko-IPA|cap=y}}", "Bag", "rrr")
	def test_Bak_mr_1(self):
		self.run_test("박", "{{ko-IPA|cap=y}}", "Pak", "mr")
	def test_Bak_yr_1(self):
		self.run_test("박", "{{ko-IPA|cap=y}}", "pak", "yr")
	def test_Bak_ipa_1(self):
		self.run_test("박", "{{ko-IPA|cap=y}}", "[pa̠k̚]", "ipa")
	def test_bak_ph_2(self):
		self.run_test("박", "{{ko-IPA}}", "박", "ph")
	def test_bak_rr_2(self):
		self.run_test("박", "{{ko-IPA}}", "bak", "rr")
	def test_bak_rrr_2(self):
		self.run_test("박", "{{ko-IPA}}", "bag", "rrr")
	def test_bak_mr_2(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "mr")
	def test_bak_yr_2(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "yr")
	def test_bak_ipa_2(self):
		self.run_test("박", "{{ko-IPA}}", "[pa̠k̚]", "ipa")
	def test_bak_ph_3(self):
		self.run_test("박", "{{ko-IPA}}", "박", "ph")
	def test_bak_rr_3(self):
		self.run_test("박", "{{ko-IPA}}", "bak", "rr")
	def test_bak_rrr_3(self):
		self.run_test("박", "{{ko-IPA}}", "bag", "rrr")
	def test_bak_mr_3(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "mr")
	def test_bak_yr_3(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "yr")
	def test_bak_ipa_3(self):
		self.run_test("박", "{{ko-IPA}}", "[pa̠k̚]", "ipa")
	def test_bak_ph_4(self):
		self.run_test("박", "{{ko-IPA}}", "박", "ph")
	def test_bak_rr_4(self):
		self.run_test("박", "{{ko-IPA}}", "bak", "rr")
	def test_bak_rrr_4(self):
		self.run_test("박", "{{ko-IPA}}", "bag", "rrr")
	def test_bak_mr_4(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "mr")
	def test_bak_yr_4(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "yr")
	def test_bak_ipa_4(self):
		self.run_test("박", "{{ko-IPA}}", "[pa̠k̚]", "ipa")
	def test_bak_ph_5(self):
		self.run_test("박", "{{ko-IPA}}", "박", "ph")
	def test_bak_rr_5(self):
		self.run_test("박", "{{ko-IPA}}", "bak", "rr")
	def test_bak_rrr_5(self):
		self.run_test("박", "{{ko-IPA}}", "bag", "rrr")
	def test_bak_mr_5(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "mr")
	def test_bak_yr_5(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "yr")
	def test_bak_ipa_5(self):
		self.run_test("박", "{{ko-IPA}}", "[pa̠k̚]", "ipa")
	def test_bak_ph_6(self):
		self.run_test("박", "{{ko-IPA}}", "박", "ph")
	def test_bak_rr_6(self):
		self.run_test("박", "{{ko-IPA}}", "bak", "rr")
	def test_bak_rrr_6(self):
		self.run_test("박", "{{ko-IPA}}", "bag", "rrr")
	def test_bak_mr_6(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "mr")
	def test_bak_yr_6(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "yr")
	def test_bak_ipa_6(self):
		self.run_test("박", "{{ko-IPA}}", "[pa̠k̚]", "ipa")
	def test_bak_ph_7(self):
		self.run_test("박", "{{ko-IPA}}", "박", "ph")
	def test_bak_rr_7(self):
		self.run_test("박", "{{ko-IPA}}", "bak", "rr")
	def test_bak_rrr_7(self):
		self.run_test("박", "{{ko-IPA}}", "bag", "rrr")
	def test_bak_mr_7(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "mr")
	def test_bak_yr_7(self):
		self.run_test("박", "{{ko-IPA}}", "pak", "yr")
	def test_bak_ipa_7(self):
		self.run_test("박", "{{ko-IPA}}", "[pa̠k̚]", "ipa")

	def test_jaru_ph(self):
		self.run_test("자루", "{{ko-IPA}}", "자루", "ph")
	def test_jaru_rr(self):
		self.run_test("자루", "{{ko-IPA}}", "jaru", "rr")
	def test_jaru_rrr(self):
		self.run_test("자루", "{{ko-IPA}}", "jalu", "rrr")
	def test_jaru_mr(self):
		self.run_test("자루", "{{ko-IPA}}", "charu", "mr")
	def test_jaru_yr(self):
		self.run_test("자루", "{{ko-IPA}}", "calwu", "yr")
	def test_jaru_ipa(self):
		self.run_test("자루", "{{ko-IPA}}", "[t͡ɕa̠ɾu]", "ipa")
	def test_jaru_ph_1(self):
		self.run_test("자루", "{{ko-IPA}}", "자루", "ph")
	def test_jaru_rr_1(self):
		self.run_test("자루", "{{ko-IPA}}", "jaru", "rr")
	def test_jaru_rrr_1(self):
		self.run_test("자루", "{{ko-IPA}}", "jalu", "rrr")
	def test_jaru_mr_1(self):
		self.run_test("자루", "{{ko-IPA}}", "charu", "mr")
	def test_jaru_yr_1(self):
		self.run_test("자루", "{{ko-IPA}}", "calwu", "yr")
	def test_jaru_ipa_1(self):
		self.run_test("자루", "{{ko-IPA}}", "[t͡ɕa̠ɾu]", "ipa")

	def test_ida_ph(self):
		self.run_test("-이다", "{{ko-IPA}}", "이다", "ph")
	def test_ida_rr(self):
		self.run_test("-이다", "{{ko-IPA}}", "ida", "rr")
	def test_ida_rrr(self):
		self.run_test("-이다", "{{ko-IPA}}", "ida", "rrr")
	def test_ida_mr(self):
		self.run_test("-이다", "{{ko-IPA}}", "ida", "mr")
	def test_ida_yr(self):
		self.run_test("-이다", "{{ko-IPA}}", "ita", "yr")
	def test_ida_ipa(self):
		self.run_test("-이다", "{{ko-IPA}}", "[ida̠]", "ipa")

	def test_anida_ph(self):
		self.run_test("아니다", "{{ko-IPA|a=Ko-아니다.ogg}}", "아니다", "ph")
	def test_anida_rr(self):
		self.run_test("아니다", "{{ko-IPA|a=Ko-아니다.ogg}}", "anida", "rr")
	def test_anida_rrr(self):
		self.run_test("아니다", "{{ko-IPA|a=Ko-아니다.ogg}}", "anida", "rrr")
	def test_anida_mr(self):
		self.run_test("아니다", "{{ko-IPA|a=Ko-아니다.ogg}}", "anida", "mr")
	def test_anida_yr(self):
		self.run_test("아니다", "{{ko-IPA|a=Ko-아니다.ogg}}", "anita", "yr")
	def test_anida_ipa(self):
		self.run_test("아니다", "{{ko-IPA|a=Ko-아니다.ogg}}", "[a̠nida̠]", "ipa")

	def test_japda_ph(self):
		self.run_test("잡다", "{{ko-IPA|a=y}}", "잡따", "ph")
	def test_japda_rr(self):
		self.run_test("잡다", "{{ko-IPA|a=y}}", "japda", "rr")
	def test_japda_rrr(self):
		self.run_test("잡다", "{{ko-IPA|a=y}}", "jabda", "rrr")
	def test_japda_mr(self):
		self.run_test("잡다", "{{ko-IPA|a=y}}", "chapta", "mr")
	def test_japda_yr(self):
		self.run_test("잡다", "{{ko-IPA|a=y}}", "capta", "yr")
	def test_japda_ipa(self):
		self.run_test("잡다", "{{ko-IPA|a=y}}", "[t͡ɕa̠p̚t͈a̠]", "ipa")

	def test_yeoksa_ph(self):
		self.run_test("역사", "{{ko-IPA|a=y}}", "역싸", "ph")
	def test_yeoksa_rr(self):
		self.run_test("역사", "{{ko-IPA|a=y}}", "yeoksa", "rr")
	def test_yeoksa_rrr(self):
		self.run_test("역사", "{{ko-IPA|a=y}}", "yeogsa", "rrr")
	def test_yeoksa_mr(self):
		self.run_test("역사", "{{ko-IPA|a=y}}", "yŏksa", "mr")
	def test_yeoksa_yr(self):
		self.run_test("역사", "{{ko-IPA|a=y}}", "yek.sa", "yr")
	def test_yeoksa_ipa(self):
		self.run_test("역사", "{{ko-IPA|a=y}}", "[jʌ̹ks͈a̠]", "ipa")

	def test_bulgeunsaseum_ph(self):
		self.run_test("붉은사슴", "{{ko-ipa}}", "불근사슴", "ph")
	def test_bulgeunsaseum_rr(self):
		self.run_test("붉은사슴", "{{ko-ipa}}", "bulgeunsaseum", "rr")
	def test_bulgeunsaseum_rrr(self):
		self.run_test("붉은사슴", "{{ko-ipa}}", "bulg'eunsaseum", "rrr")
	def test_bulgeunsaseum_mr(self):
		self.run_test("붉은사슴", "{{ko-ipa}}", "pulgŭnsasŭm", "mr")
	def test_bulgeunsaseum_yr(self):
		self.run_test("붉은사슴", "{{ko-ipa}}", "pulk.unsasum", "yr")
	def test_bulgeunsaseum_ipa(self):
		self.run_test("붉은사슴", "{{ko-ipa}}", "[puɭɡɯnsʰa̠sʰɯm]", "ipa")

	def test_daeryuksaseum_ph(self):
		self.run_test("대륙사슴", "{{ko-ipa|l=y}}", "대(ː)륙싸슴/데(ː)륙싸슴", "ph")
	def test_daeryuksaseum_rr(self):
		self.run_test("대륙사슴", "{{ko-ipa|l=y}}", "daeryuksaseum", "rr")
	def test_daeryuksaseum_rrr(self):
		self.run_test("대륙사슴", "{{ko-ipa|l=y}}", "daelyugsaseum", "rrr")
	def test_daeryuksaseum_mr(self):
		self.run_test("대륙사슴", "{{ko-ipa|l=y}}", "taeryuksasŭm", "mr")
	def test_daeryuksaseum_yr(self):
		self.run_test("대륙사슴", "{{ko-ipa|l=y}}", "tāylyuk.sasum", "yr")
	def test_daeryuksaseum_ipa(self):
		self.run_test("대륙사슴", "{{ko-ipa|l=y}}", "[ˈtɛ(ː)ɾjuks͈a̠sʰɯm] ~ [ˈte̞(ː)ɾjuks͈a̠sʰɯm]", "ipa")

	def test_gorani_ph(self):
		self.run_test("고라니", "{{ko-IPA}}", "고라니", "ph")
	def test_gorani_rr(self):
		self.run_test("고라니", "{{ko-IPA}}", "gorani", "rr")
	def test_gorani_rrr(self):
		self.run_test("고라니", "{{ko-IPA}}", "golani", "rrr")
	def test_gorani_mr(self):
		self.run_test("고라니", "{{ko-IPA}}", "korani", "mr")
	def test_gorani_yr(self):
		self.run_test("고라니", "{{ko-IPA}}", "kolani", "yr")
	def test_gorani_ipa(self):
		self.run_test("고라니", "{{ko-IPA}}", "[ko̞ɾa̠ni]", "ipa")

	def test_metdwaeji_ph(self):
		self.run_test("멧돼지", "{{ko-ipa|nobc=1}}", "멛뙈지/메뙈지/멛뛔지/메뛔지", "ph")
	def test_metdwaeji_rr(self):
		self.run_test("멧돼지", "{{ko-ipa|nobc=1}}", "metdwaeji", "rr")
	def test_metdwaeji_rrr(self):
		self.run_test("멧돼지", "{{ko-ipa|nobc=1}}", "mesdwaeji", "rrr")
	def test_metdwaeji_mr(self):
		self.run_test("멧돼지", "{{ko-ipa|nobc=1}}", "mettwaeji", "mr")
	def test_metdwaeji_yr(self):
		self.run_test("멧돼지", "{{ko-ipa|nobc=1}}", "meystwayci", "yr")
	def test_metdwaeji_ipa(self):
		self.run_test("멧돼지", "{{ko-ipa|nobc=1}}", "[me̞t̚t͈wɛd͡ʑi] ~ [me̞t͈wɛd͡ʑi] ~ [me̞t̚t͈we̞d͡ʑi] ~ [me̞t͈we̞d͡ʑi]", "ipa")

	def test_sahyangnoru_ph(self):
		self.run_test("사향노루", "{{ko-ipa|l=y}}", "사(ː)향노루", "ph")
	def test_sahyangnoru_rr(self):
		self.run_test("사향노루", "{{ko-ipa|l=y}}", "sahyangnoru", "rr")
	def test_sahyangnoru_rrr(self):
		self.run_test("사향노루", "{{ko-ipa|l=y}}", "sahyangnolu", "rrr")
	def test_sahyangnoru_mr(self):
		self.run_test("사향노루", "{{ko-ipa|l=y}}", "sahyangnoru", "mr")
	def test_sahyangnoru_yr(self):
		self.run_test("사향노루", "{{ko-ipa|l=y}}", "sāhyangnolwu", "yr")
	def test_sahyangnoru_ipa(self):
		self.run_test("사향노루", "{{ko-ipa|l=y}}", "[ˈsʰa̠(ː)ʝa̠ŋno̞ɾu]", "ipa")

	def test_neoguri_ph(self):
		self.run_test("너구리", "{{ko-IPA}}", "너구리", "ph")
	def test_neoguri_rr(self):
		self.run_test("너구리", "{{ko-IPA}}", "neoguri", "rr")
	def test_neoguri_rrr(self):
		self.run_test("너구리", "{{ko-IPA}}", "neoguli", "rrr")
	def test_neoguri_mr(self):
		self.run_test("너구리", "{{ko-IPA}}", "nŏguri", "mr")
	def test_neoguri_yr(self):
		self.run_test("너구리", "{{ko-IPA}}", "nekwuli", "yr")
	def test_neoguri_ipa(self):
		self.run_test("너구리", "{{ko-IPA}}", "[nʌ̹ɡuɾi]", "ipa")

	def test_jjotda_ph(self):
		self.run_test("쫓다", "{{ko-IPA}}", "쫃따", "ph")
	def test_jjotda_rr(self):
		self.run_test("쫓다", "{{ko-IPA}}", "jjotda", "rr")
	def test_jjotda_rrr(self):
		self.run_test("쫓다", "{{ko-IPA}}", "jjochda", "rrr")
	def test_jjotda_mr(self):
		self.run_test("쫓다", "{{ko-IPA}}", "tchotta", "mr")
	def test_jjotda_yr(self):
		self.run_test("쫓다", "{{ko-IPA}}", "ccochta", "yr")
	def test_jjotda_ipa(self):
		self.run_test("쫓다", "{{ko-IPA}}", "[t͡ɕ͈o̞t̚t͈a̠]", "ipa")

	def test_sak_ph(self):
		self.run_test("삵", "{{ko-IPA}}", "삭", "ph")
	def test_sak_rr(self):
		self.run_test("삵", "{{ko-IPA}}", "sak", "rr")
	def test_sak_rrr(self):
		self.run_test("삵", "{{ko-IPA}}", "salg", "rrr")
	def test_sak_mr(self):
		self.run_test("삵", "{{ko-IPA}}", "sak", "mr")
	def test_sak_yr(self):
		self.run_test("삵", "{{ko-IPA}}", "salk", "yr")
	def test_sak_ipa(self):
		self.run_test("삵", "{{ko-IPA}}", "[sʰa̠k̚]", "ipa")

	def test_seurasoni_ph(self):
		self.run_test("스라소니", "{{ko-IPA}}", "스라소니", "ph")
	def test_seurasoni_rr(self):
		self.run_test("스라소니", "{{ko-IPA}}", "seurasoni", "rr")
	def test_seurasoni_rrr(self):
		self.run_test("스라소니", "{{ko-IPA}}", "seulasoni", "rrr")
	def test_seurasoni_mr(self):
		self.run_test("스라소니", "{{ko-IPA}}", "sŭrasoni", "mr")
	def test_seurasoni_yr(self):
		self.run_test("스라소니", "{{ko-IPA}}", "sulasoni", "yr")
	def test_seurasoni_ipa(self):
		self.run_test("스라소니", "{{ko-IPA}}", "[sʰɯɾa̠sʰo̞ni]", "ipa")

	def test_pyobeom_ph(self):
		self.run_test("표범", "{{ko-IPA}}", "표범", "ph")
	def test_pyobeom_rr(self):
		self.run_test("표범", "{{ko-IPA}}", "pyobeom", "rr")
	def test_pyobeom_rrr(self):
		self.run_test("표범", "{{ko-IPA}}", "pyobeom", "rrr")
	def test_pyobeom_mr(self):
		self.run_test("표범", "{{ko-IPA}}", "p'yobŏm", "mr")
	def test_pyobeom_yr(self):
		self.run_test("표범", "{{ko-IPA}}", "phyopem", "yr")
	def test_pyobeom_ipa(self):
		self.run_test("표범", "{{ko-IPA}}", "[pʰjobʌ̹m]", "ipa")

	def test_gut_ph(self):
		self.run_test("굿", "{{ko-IPA}}", "굳", "ph")
	def test_gut_rr(self):
		self.run_test("굿", "{{ko-IPA}}", "gut", "rr")
	def test_gut_rrr(self):
		self.run_test("굿", "{{ko-IPA}}", "gus", "rrr")
	def test_gut_mr(self):
		self.run_test("굿", "{{ko-IPA}}", "kut", "mr")
	def test_gut_yr(self):
		self.run_test("굿", "{{ko-IPA}}", "kwus", "yr")
	def test_gut_ipa(self):
		self.run_test("굿", "{{ko-IPA}}", "[kut̚]", "ipa")

	def test_baeal_ph(self):
		self.run_test("배알", "{{ko-IPA}}", "배알/베알", "ph")
	def test_baeal_rr(self):
		self.run_test("배알", "{{ko-IPA}}", "baeal", "rr")
	def test_baeal_rrr(self):
		self.run_test("배알", "{{ko-IPA}}", "baeal", "rrr")
	def test_baeal_mr(self):
		self.run_test("배알", "{{ko-IPA}}", "paeal", "mr")
	def test_baeal_yr(self):
		self.run_test("배알", "{{ko-IPA}}", "pay.al", "yr")
	def test_baeal_ipa(self):
		self.run_test("배알", "{{ko-IPA}}", "[pɛa̠ɭ] ~ [pe̞a̠ɭ]", "ipa")

	def test_chang_ph(self):
		self.run_test("창", "{{ko-IPA}}", "창", "ph")
	def test_chang_rr(self):
		self.run_test("창", "{{ko-IPA}}", "chang", "rr")
	def test_chang_rrr(self):
		self.run_test("창", "{{ko-IPA}}", "chang", "rrr")
	def test_chang_mr(self):
		self.run_test("창", "{{ko-IPA}}", "ch'ang", "mr")
	def test_chang_yr(self):
		self.run_test("창", "{{ko-IPA}}", "chang", "yr")
	def test_chang_ipa(self):
		self.run_test("창", "{{ko-IPA}}", "[t͡ɕʰa̠ŋ]", "ipa")

	def test_sudal_ph(self):
		self.run_test("수달", "{{ko-IPA}}", "수달", "ph")
	def test_sudal_rr(self):
		self.run_test("수달", "{{ko-IPA}}", "sudal", "rr")
	def test_sudal_rrr(self):
		self.run_test("수달", "{{ko-IPA}}", "sudal", "rrr")
	def test_sudal_mr(self):
		self.run_test("수달", "{{ko-IPA}}", "sudal", "mr")
	def test_sudal_yr(self):
		self.run_test("수달", "{{ko-IPA}}", "swutal", "yr")
	def test_sudal_ipa(self):
		self.run_test("수달", "{{ko-IPA}}", "[sʰuda̠ɭ]", "ipa")

	def test_dambi_ph(self):
		self.run_test("담비", "{{ko-ipa}}", "담비", "ph")
	def test_dambi_rr(self):
		self.run_test("담비", "{{ko-ipa}}", "dambi", "rr")
	def test_dambi_rrr(self):
		self.run_test("담비", "{{ko-ipa}}", "dambi", "rrr")
	def test_dambi_mr(self):
		self.run_test("담비", "{{ko-ipa}}", "tambi", "mr")
	def test_dambi_yr(self):
		self.run_test("담비", "{{ko-ipa}}", "tampi", "yr")
	def test_dambi_ipa(self):
		self.run_test("담비", "{{ko-ipa}}", "[ta̠mbi]", "ipa")

	def test_sandal_ph(self):
		self.run_test("산달", "{{ko-IPA}}", "산달", "ph")
	def test_sandal_rr(self):
		self.run_test("산달", "{{ko-IPA}}", "sandal", "rr")
	def test_sandal_rrr(self):
		self.run_test("산달", "{{ko-IPA}}", "sandal", "rrr")
	def test_sandal_mr(self):
		self.run_test("산달", "{{ko-IPA}}", "sandal", "mr")
	def test_sandal_yr(self):
		self.run_test("산달", "{{ko-IPA}}", "santal", "yr")
	def test_sandal_ipa(self):
		self.run_test("산달", "{{ko-IPA}}", "[sʰa̠nda̠ɭ]", "ipa")

	def test_geomeundambi_ph(self):
		self.run_test("검은담비", "{{ko-IPA}}", "거믄담비", "ph")
	def test_geomeundambi_rr(self):
		self.run_test("검은담비", "{{ko-IPA}}", "geomeundambi", "rr")
	def test_geomeundambi_rrr(self):
		self.run_test("검은담비", "{{ko-IPA}}", "geom'eundambi", "rrr")
	def test_geomeundambi_mr(self):
		self.run_test("검은담비", "{{ko-IPA}}", "kŏmŭndambi", "mr")
	def test_geomeundambi_yr(self):
		self.run_test("검은담비", "{{ko-IPA}}", "kem.untampi", "yr")
	def test_geomeundambi_ipa(self):
		self.run_test("검은담비", "{{ko-IPA}}", "[kʌ̹mɯnda̠mbi]", "ipa")

	def test_osori_ph(self):
		self.run_test("오소리", "{{ko-IPA}}", "오소리", "ph")
	def test_osori_rr(self):
		self.run_test("오소리", "{{ko-IPA}}", "osori", "rr")
	def test_osori_rrr(self):
		self.run_test("오소리", "{{ko-IPA}}", "osoli", "rrr")
	def test_osori_mr(self):
		self.run_test("오소리", "{{ko-IPA}}", "osori", "mr")
	def test_osori_yr(self):
		self.run_test("오소리", "{{ko-IPA}}", "osoli", "yr")
	def test_osori_ipa(self):
		self.run_test("오소리", "{{ko-IPA}}", "[o̞sʰo̞ɾi]", "ipa")

	def test_jokjebi_ph(self):
		self.run_test("족제비", "{{ko-IPA}}", "족쩨비", "ph")
	def test_jokjebi_rr(self):
		self.run_test("족제비", "{{ko-IPA}}", "jokjebi", "rr")
	def test_jokjebi_rrr(self):
		self.run_test("족제비", "{{ko-IPA}}", "jogjebi", "rrr")
	def test_jokjebi_mr(self):
		self.run_test("족제비", "{{ko-IPA}}", "chokchebi", "mr")
	def test_jokjebi_yr(self):
		self.run_test("족제비", "{{ko-IPA}}", "cokceypi", "yr")
	def test_jokjebi_ipa(self):
		self.run_test("족제비", "{{ko-IPA}}", "[t͡ɕo̞k̚t͡ɕ͈e̞bi]", "ipa")

	def test_musansoejokjebi_ph(self):
		self.run_test("무산쇠족제비", "{{ko-IPA|l=y}}", "무(ː)산쉐족쩨비/무(ː)산쇠족쩨비", "ph")
	def test_musansoejokjebi_rr(self):
		self.run_test("무산쇠족제비", "{{ko-IPA|l=y}}", "musansoejokjebi", "rr")
	def test_musansoejokjebi_rrr(self):
		self.run_test("무산쇠족제비", "{{ko-IPA|l=y}}", "musansoejogjebi", "rrr")
	def test_musansoejokjebi_mr(self):
		self.run_test("무산쇠족제비", "{{ko-IPA|l=y}}", "musansoejokchebi", "mr")
	def test_musansoejokjebi_yr(self):
		self.run_test("무산쇠족제비", "{{ko-IPA|l=y}}", "mūsansoycokceypi", "yr")
	def test_musansoejokjebi_ipa(self):
		self.run_test("무산쇠족제비", "{{ko-IPA|l=y}}", "[ˈmu(ː)sʰa̠nsʰwe̞d͡ʑo̞k̚t͡ɕ͈e̞bi] ~ [ˈmu(ː)sʰa̠nsʰø̞d͡ʑo̞k̚t͡ɕ͈e̞bi]", "ipa")

	def test_bandalgaseumgom_ph(self):
		self.run_test("반달가슴곰", "{{ko-IPA|l=y}}", "반(ː)달가슴곰", "ph")
	def test_bandalgaseumgom_rr(self):
		self.run_test("반달가슴곰", "{{ko-IPA|l=y}}", "bandalgaseumgom", "rr")
	def test_bandalgaseumgom_rrr(self):
		self.run_test("반달가슴곰", "{{ko-IPA|l=y}}", "bandalgaseumgom", "rrr")
	def test_bandalgaseumgom_mr(self):
		self.run_test("반달가슴곰", "{{ko-IPA|l=y}}", "pandalgasŭmgom", "mr")
	def test_bandalgaseumgom_yr(self):
		self.run_test("반달가슴곰", "{{ko-IPA|l=y}}", "pāntal.kasumkom", "yr")
	def test_bandalgaseumgom_ipa(self):
		self.run_test("반달가슴곰", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)nda̠ɭɡa̠sʰɯmɡo̞m]", "ipa")

	def test_bulgom_ph(self):
		self.run_test("불곰", "{{ko-IPA}}", "불곰", "ph")
	def test_bulgom_rr(self):
		self.run_test("불곰", "{{ko-IPA}}", "bulgom", "rr")
	def test_bulgom_rrr(self):
		self.run_test("불곰", "{{ko-IPA}}", "bulgom", "rrr")
	def test_bulgom_mr(self):
		self.run_test("불곰", "{{ko-IPA}}", "pulgom", "mr")
	def test_bulgom_yr(self):
		self.run_test("불곰", "{{ko-IPA}}", "pul.kom", "yr")
	def test_bulgom_ipa(self):
		self.run_test("불곰", "{{ko-IPA}}", "[puɭɡo̞m]", "ipa")

	def test_mun_ph(self):
		self.run_test("문", "{{ko-IPA}}", "문", "ph")
	def test_mun_rr(self):
		self.run_test("문", "{{ko-IPA}}", "mun", "rr")
	def test_mun_rrr(self):
		self.run_test("문", "{{ko-IPA}}", "mun", "rrr")
	def test_mun_mr(self):
		self.run_test("문", "{{ko-IPA}}", "mun", "mr")
	def test_mun_yr(self):
		self.run_test("문", "{{ko-IPA}}", "mun", "yr")
	def test_mun_ipa(self):
		self.run_test("문", "{{ko-IPA}}", "[mun]", "ipa")
	def test_mun_ph_1(self):
		self.run_test("문", "{{ko-IPA}}", "문", "ph")
	def test_mun_rr_1(self):
		self.run_test("문", "{{ko-IPA}}", "mun", "rr")
	def test_mun_rrr_1(self):
		self.run_test("문", "{{ko-IPA}}", "mun", "rrr")
	def test_mun_mr_1(self):
		self.run_test("문", "{{ko-IPA}}", "mun", "mr")
	def test_mun_yr_1(self):
		self.run_test("문", "{{ko-IPA}}", "mun", "yr")
	def test_mun_ipa_1(self):
		self.run_test("문", "{{ko-IPA}}", "[mun]", "ipa")

	def test_sumtong_ph(self):
		self.run_test("숨통", "{{ko-ipa}}", "숨통", "ph")
	def test_sumtong_rr(self):
		self.run_test("숨통", "{{ko-ipa}}", "sumtong", "rr")
	def test_sumtong_rrr(self):
		self.run_test("숨통", "{{ko-ipa}}", "sumtong", "rrr")
	def test_sumtong_mr(self):
		self.run_test("숨통", "{{ko-ipa}}", "sumt'ong", "mr")
	def test_sumtong_yr(self):
		self.run_test("숨통", "{{ko-ipa}}", "swumthong", "yr")
	def test_sumtong_ipa(self):
		self.run_test("숨통", "{{ko-ipa}}", "[sʰumtʰo̞ŋ]", "ipa")

	def test_myeok_ph(self):
		self.run_test("멱", "{{ko-ipa}}", "멱", "ph")
	def test_myeok_rr(self):
		self.run_test("멱", "{{ko-ipa}}", "myeok", "rr")
	def test_myeok_rrr(self):
		self.run_test("멱", "{{ko-ipa}}", "myeog", "rrr")
	def test_myeok_mr(self):
		self.run_test("멱", "{{ko-ipa}}", "myŏk", "mr")
	def test_myeok_yr(self):
		self.run_test("멱", "{{ko-ipa}}", "myek", "yr")
	def test_myeok_ipa(self):
		self.run_test("멱", "{{ko-ipa}}", "[mjʌ̹k̚]", "ipa")

	def test_mokgumeong_ph(self):
		self.run_test("목구멍", "{{ko-ipa}}", "목꾸멍", "ph")
	def test_mokgumeong_rr(self):
		self.run_test("목구멍", "{{ko-ipa}}", "mokgumeong", "rr")
	def test_mokgumeong_rrr(self):
		self.run_test("목구멍", "{{ko-ipa}}", "moggumeong", "rrr")
	def test_mokgumeong_mr(self):
		self.run_test("목구멍", "{{ko-ipa}}", "mokkumŏng", "mr")
	def test_mokgumeong_yr(self):
		self.run_test("목구멍", "{{ko-ipa}}", "mok.kwumeng", "yr")
	def test_mokgumeong_ipa(self):
		self.run_test("목구멍", "{{ko-ipa}}", "[mo̞k̚k͈umʌ̹ŋ]", "ipa")

	def test_sumgumeong_ph(self):
		self.run_test("숨구멍", "{{ko-ipa|l=y|com=1}}", "숨(ː)꾸멍", "ph")
	def test_sumgumeong_rr(self):
		self.run_test("숨구멍", "{{ko-ipa|l=y|com=1}}", "sumgumeong", "rr")
	def test_sumgumeong_rrr(self):
		self.run_test("숨구멍", "{{ko-ipa|l=y|com=1}}", "sumgumeong", "rrr")
	def test_sumgumeong_mr(self):
		self.run_test("숨구멍", "{{ko-ipa|l=y|com=1}}", "sumkumŏng", "mr")
	def test_sumgumeong_yr(self):
		self.run_test("숨구멍", "{{ko-ipa|l=y|com=1}}", "swūmqkwumeng", "yr")
	def test_sumgumeong_ipa(self):
		self.run_test("숨구멍", "{{ko-ipa|l=y|com=1}}", "[ˈsʰu(ː)mk͈umʌ̹ŋ]", "ipa")

	def test_geune_ph(self):
		self.run_test("그네", "{{ko-ipa|l=y}}", "그(ː)네", "ph")
	def test_geune_rr(self):
		self.run_test("그네", "{{ko-ipa|l=y}}", "geune", "rr")
	def test_geune_rrr(self):
		self.run_test("그네", "{{ko-ipa|l=y}}", "geune", "rrr")
	def test_geune_mr(self):
		self.run_test("그네", "{{ko-ipa|l=y}}", "kŭne", "mr")
	def test_geune_yr(self):
		self.run_test("그네", "{{ko-ipa|l=y}}", "kūney", "yr")
	def test_geune_ipa(self):
		self.run_test("그네", "{{ko-ipa|l=y}}", "[ˈkɯ(ː)ne̞]", "ipa")

	def test_yoram_ph(self):
		self.run_test("요람", "{{ko-IPA}}", "요람", "ph")
	def test_yoram_rr(self):
		self.run_test("요람", "{{ko-IPA}}", "yoram", "rr")
	def test_yoram_rrr(self):
		self.run_test("요람", "{{ko-IPA}}", "yolam", "rrr")
	def test_yoram_mr(self):
		self.run_test("요람", "{{ko-IPA}}", "yoram", "mr")
	def test_yoram_yr(self):
		self.run_test("요람", "{{ko-IPA}}", "yolam", "yr")
	def test_yoram_ipa(self):
		self.run_test("요람", "{{ko-IPA}}", "[joɾa̠m]", "ipa")

	def test_himjul_ph(self):
		self.run_test("힘줄", "{{ko-IPA|com=1}}", "힘쭐", "ph")
	def test_himjul_rr(self):
		self.run_test("힘줄", "{{ko-IPA|com=1}}", "himjul", "rr")
	def test_himjul_rrr(self):
		self.run_test("힘줄", "{{ko-IPA|com=1}}", "himjul", "rrr")
	def test_himjul_mr(self):
		self.run_test("힘줄", "{{ko-IPA|com=1}}", "himchul", "mr")
	def test_himjul_yr(self):
		self.run_test("힘줄", "{{ko-IPA|com=1}}", "himqcwul", "yr")
	def test_himjul_ipa(self):
		self.run_test("힘줄", "{{ko-IPA|com=1}}", "[çimt͡ɕ͈uɭ]", "ipa")
	def test_himjul_ph_1(self):
		self.run_test("힘줄", "{{ko-IPA}}", "힘줄", "ph")
	def test_himjul_rr_1(self):
		self.run_test("힘줄", "{{ko-IPA}}", "himjul", "rr")
	def test_himjul_rrr_1(self):
		self.run_test("힘줄", "{{ko-IPA}}", "himjul", "rrr")
	def test_himjul_mr_1(self):
		self.run_test("힘줄", "{{ko-IPA}}", "himjul", "mr")
	def test_himjul_yr_1(self):
		self.run_test("힘줄", "{{ko-IPA}}", "himcwul", "yr")
	def test_himjul_ipa_1(self):
		self.run_test("힘줄", "{{ko-IPA}}", "[çimd͡ʑuɭ]", "ipa")

	def test_simjul_ph(self):
		self.run_test("심줄", "{{ko-IPA|com=1}}", "심쭐", "ph")
	def test_simjul_rr(self):
		self.run_test("심줄", "{{ko-IPA|com=1}}", "simjul", "rr")
	def test_simjul_rrr(self):
		self.run_test("심줄", "{{ko-IPA|com=1}}", "simjul", "rrr")
	def test_simjul_mr(self):
		self.run_test("심줄", "{{ko-IPA|com=1}}", "simchul", "mr")
	def test_simjul_yr(self):
		self.run_test("심줄", "{{ko-IPA|com=1}}", "simqcwul", "yr")
	def test_simjul_ipa(self):
		self.run_test("심줄", "{{ko-IPA|com=1}}", "[ɕʰimt͡ɕ͈uɭ]", "ipa")

	def test_saetbyeol_ph(self):
		self.run_test("샛별", "{{ko-ipa|l=y|nobc=1}}", "샏(ː)뼐/새(ː)뼐/섿(ː)뼐/세(ː)뼐", "ph")
	def test_saetbyeol_rr(self):
		self.run_test("샛별", "{{ko-ipa|l=y|nobc=1}}", "saetbyeol", "rr")
	def test_saetbyeol_rrr(self):
		self.run_test("샛별", "{{ko-ipa|l=y|nobc=1}}", "saesbyeol", "rrr")
	def test_saetbyeol_mr(self):
		self.run_test("샛별", "{{ko-ipa|l=y|nobc=1}}", "saetpyŏl", "mr")
	def test_saetbyeol_yr(self):
		self.run_test("샛별", "{{ko-ipa|l=y|nobc=1}}", "sāyspyel", "yr")
	def test_saetbyeol_ipa(self):
		self.run_test("샛별", "{{ko-ipa|l=y|nobc=1}}", "[ˈsʰɛ(ː)t̚p͈jʌ̹ɭ] ~ [ˈsʰɛ(ː)p͈jʌ̹ɭ] ~ [ˈsʰe̞(ː)t̚p͈jʌ̹ɭ] ~ [ˈsʰe̞(ː)p͈jʌ̹ɭ]", "ipa")

	def test_gaebapbaragi_ph(self):
		self.run_test("개밥바라기", "{{ko-ipa|l=y}}", "개(ː)밥빠라기/게(ː)밥빠라기", "ph")
	def test_gaebapbaragi_rr(self):
		self.run_test("개밥바라기", "{{ko-ipa|l=y}}", "gaebapbaragi", "rr")
	def test_gaebapbaragi_rrr(self):
		self.run_test("개밥바라기", "{{ko-ipa|l=y}}", "gaebabbalagi", "rrr")
	def test_gaebapbaragi_mr(self):
		self.run_test("개밥바라기", "{{ko-ipa|l=y}}", "kaebapparagi", "mr")
	def test_gaebapbaragi_yr(self):
		self.run_test("개밥바라기", "{{ko-ipa|l=y}}", "kāypap.palaki", "yr")
	def test_gaebapbaragi_ipa(self):
		self.run_test("개밥바라기", "{{ko-ipa|l=y}}", "[ˈkɛ(ː)ba̠p̚p͈a̠ɾa̠ɡi] ~ [ˈke̞(ː)ba̠p̚p͈a̠ɾa̠ɡi]", "ipa")

	def test_byeol_ph(self):
		self.run_test("별", "{{ko-IPA|l=y}}", "별(ː)", "ph")
	def test_byeol_rr(self):
		self.run_test("별", "{{ko-IPA|l=y}}", "byeol", "rr")
	def test_byeol_rrr(self):
		self.run_test("별", "{{ko-IPA|l=y}}", "byeol", "rrr")
	def test_byeol_mr(self):
		self.run_test("별", "{{ko-IPA|l=y}}", "pyŏl", "mr")
	def test_byeol_yr(self):
		self.run_test("별", "{{ko-IPA|l=y}}", "pyēl", "yr")
	def test_byeol_ipa(self):
		self.run_test("별", "{{ko-IPA|l=y}}", "[pjɘ(ː)ɭ]", "ipa")
	def test_byeol_ph_1(self):
		self.run_test("별", "{{ko-IPA}}", "별", "ph")
	def test_byeol_rr_1(self):
		self.run_test("별", "{{ko-IPA}}", "byeol", "rr")
	def test_byeol_rrr_1(self):
		self.run_test("별", "{{ko-IPA}}", "byeol", "rrr")
	def test_byeol_mr_1(self):
		self.run_test("별", "{{ko-IPA}}", "pyŏl", "mr")
	def test_byeol_yr_1(self):
		self.run_test("별", "{{ko-IPA}}", "pyel", "yr")
	def test_byeol_ipa_1(self):
		self.run_test("별", "{{ko-IPA}}", "[pjʌ̹ɭ]", "ipa")

	def test_keunbadasaja_ph(self):
		self.run_test("큰바다사자", "{{ko-IPA}}", "큰바다사자", "ph")
	def test_keunbadasaja_rr(self):
		self.run_test("큰바다사자", "{{ko-IPA}}", "keunbadasaja", "rr")
	def test_keunbadasaja_rrr(self):
		self.run_test("큰바다사자", "{{ko-IPA}}", "keunbadasaja", "rrr")
	def test_keunbadasaja_mr(self):
		self.run_test("큰바다사자", "{{ko-IPA}}", "k'ŭnbadasaja", "mr")
	def test_keunbadasaja_yr(self):
		self.run_test("큰바다사자", "{{ko-IPA}}", "khunpatasaca", "yr")
	def test_keunbadasaja_ipa(self):
		self.run_test("큰바다사자", "{{ko-IPA}}", "[kxɯnba̠da̠sʰa̠d͡ʑa̠]", "ipa")

	def test_badasaja_ph(self):
		self.run_test("바다사자", "{{ko-ipa}}", "바다사자", "ph")
	def test_badasaja_rr(self):
		self.run_test("바다사자", "{{ko-ipa}}", "badasaja", "rr")
	def test_badasaja_rrr(self):
		self.run_test("바다사자", "{{ko-ipa}}", "badasaja", "rrr")
	def test_badasaja_mr(self):
		self.run_test("바다사자", "{{ko-ipa}}", "padasaja", "mr")
	def test_badasaja_yr(self):
		self.run_test("바다사자", "{{ko-ipa}}", "patasaca", "yr")
	def test_badasaja_ipa(self):
		self.run_test("바다사자", "{{ko-ipa}}", "[pa̠da̠sʰa̠d͡ʑa̠]", "ipa")

	def test_badamal_ph(self):
		self.run_test("바다말", "{{ko-IPA}}", "바다말", "ph")
	def test_badamal_rr(self):
		self.run_test("바다말", "{{ko-IPA}}", "badamal", "rr")
	def test_badamal_rrr(self):
		self.run_test("바다말", "{{ko-IPA}}", "badamal", "rrr")
	def test_badamal_mr(self):
		self.run_test("바다말", "{{ko-IPA}}", "padamal", "mr")
	def test_badamal_yr(self):
		self.run_test("바다말", "{{ko-IPA}}", "patamal", "yr")
	def test_badamal_ipa(self):
		self.run_test("바다말", "{{ko-IPA}}", "[pa̠da̠ma̠ɭ]", "ipa")

	def test_jeombagimulbeom_ph(self):
		self.run_test("점박이물범", "{{ko-IPA}}", "점바기물범", "ph")
	def test_jeombagimulbeom_rr(self):
		self.run_test("점박이물범", "{{ko-IPA}}", "jeombagimulbeom", "rr")
	def test_jeombagimulbeom_rrr(self):
		self.run_test("점박이물범", "{{ko-IPA}}", "jeombag'imulbeom", "rrr")
	def test_jeombagimulbeom_mr(self):
		self.run_test("점박이물범", "{{ko-IPA}}", "chŏmbagimulbŏm", "mr")
	def test_jeombagimulbeom_yr(self):
		self.run_test("점박이물범", "{{ko-IPA}}", "cempak.imul.pem", "yr")
	def test_jeombagimulbeom_ipa(self):
		self.run_test("점박이물범", "{{ko-IPA}}", "[t͡ɕʌ̹mba̠ɡimuɭbʌ̹m]", "ipa")

	def test_ttimunuimulbeom_ph(self):
		self.run_test("띠무늬물범", "{{ko-IPA}}", "띠무니물범", "ph")
	def test_ttimunuimulbeom_rr(self):
		self.run_test("띠무늬물범", "{{ko-IPA}}", "ttimunuimulbeom", "rr")
	def test_ttimunuimulbeom_rrr(self):
		self.run_test("띠무늬물범", "{{ko-IPA}}", "ttimunuimulbeom", "rrr")
	def test_ttimunuimulbeom_mr(self):
		self.run_test("띠무늬물범", "{{ko-IPA}}", "ttimunŭimulbŏm", "mr")
	def test_ttimunuimulbeom_yr(self):
		self.run_test("띠무늬물범", "{{ko-IPA}}", "ttimunuymul.pem", "yr")
	def test_ttimunuimulbeom_ipa(self):
		self.run_test("띠무늬물범", "{{ko-IPA}}", "[t͈imunimuɭbʌ̹m]", "ipa")

	def test_gorimunuimulbeom_ph(self):
		self.run_test("고리무늬물범", "{{ko-ipa}}", "고리무니물범", "ph")
	def test_gorimunuimulbeom_rr(self):
		self.run_test("고리무늬물범", "{{ko-ipa}}", "gorimunuimulbeom", "rr")
	def test_gorimunuimulbeom_rrr(self):
		self.run_test("고리무늬물범", "{{ko-ipa}}", "golimunuimulbeom", "rrr")
	def test_gorimunuimulbeom_mr(self):
		self.run_test("고리무늬물범", "{{ko-ipa}}", "korimunŭimulbŏm", "mr")
	def test_gorimunuimulbeom_yr(self):
		self.run_test("고리무늬물범", "{{ko-ipa}}", "kolimunuymul.pem", "yr")
	def test_gorimunuimulbeom_ipa(self):
		self.run_test("고리무늬물범", "{{ko-ipa}}", "[ko̞ɾimunimuɭbʌ̹m]", "ipa")

	def test_janjeombagimulbeom_ph(self):
		self.run_test("잔점박이물범", "{{ko-IPA}}", "잔점바기물범", "ph")
	def test_janjeombagimulbeom_rr(self):
		self.run_test("잔점박이물범", "{{ko-IPA}}", "janjeombagimulbeom", "rr")
	def test_janjeombagimulbeom_rrr(self):
		self.run_test("잔점박이물범", "{{ko-IPA}}", "janjeombag'imulbeom", "rrr")
	def test_janjeombagimulbeom_mr(self):
		self.run_test("잔점박이물범", "{{ko-IPA}}", "chanjŏmbagimulbŏm", "mr")
	def test_janjeombagimulbeom_yr(self):
		self.run_test("잔점박이물범", "{{ko-IPA}}", "can.cempak.imul.pem", "yr")
	def test_janjeombagimulbeom_ipa(self):
		self.run_test("잔점박이물범", "{{ko-IPA}}", "[t͡ɕa̠ɲd͡ʑʌ̹mba̠ɡimuɭbʌ̹m]", "ipa")

	def test_bukbangginsuyeomgorae_ph(self):
		self.run_test("북방긴수염고래", "{{ko-IPA}}", "북빵긴수염고래/북빵긴수염고레", "ph")
	def test_bukbangginsuyeomgorae_rr(self):
		self.run_test("북방긴수염고래", "{{ko-IPA}}", "bukbangginsuyeomgorae", "rr")
	def test_bukbangginsuyeomgorae_rrr(self):
		self.run_test("북방긴수염고래", "{{ko-IPA}}", "bugbangginsuyeomgolae", "rrr")
	def test_bukbangginsuyeomgorae_mr(self):
		self.run_test("북방긴수염고래", "{{ko-IPA}}", "pukpangginsuyŏmgorae", "mr")
	def test_bukbangginsuyeomgorae_yr(self):
		self.run_test("북방긴수염고래", "{{ko-IPA}}", "pukpangkinswu.yemkolay", "yr")
	def test_bukbangginsuyeomgorae_ipa(self):
		self.run_test("북방긴수염고래", "{{ko-IPA}}", "[puk̚p͈a̠ŋɡinsʰujʌ̹mɡo̞ɾɛ] ~ [puk̚p͈a̠ŋɡinsʰujʌ̹mɡo̞ɾe̞]", "ipa")

	def test_daewanggorae_ph(self):
		self.run_test("대왕고래", "{{ko-IPA|l=y}}", "대(ː)왕고래/데(ː)왕고레", "ph")
	def test_daewanggorae_rr(self):
		self.run_test("대왕고래", "{{ko-IPA|l=y}}", "daewanggorae", "rr")
	def test_daewanggorae_rrr(self):
		self.run_test("대왕고래", "{{ko-IPA|l=y}}", "daewanggolae", "rrr")
	def test_daewanggorae_mr(self):
		self.run_test("대왕고래", "{{ko-IPA|l=y}}", "taewanggorae", "mr")
	def test_daewanggorae_yr(self):
		self.run_test("대왕고래", "{{ko-IPA|l=y}}", "tāywangkolay", "yr")
	def test_daewanggorae_ipa(self):
		self.run_test("대왕고래", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)wa̠ŋɡo̞ɾɛ] ~ [ˈte̞(ː)wa̠ŋɡo̞ɾe̞]", "ipa")


	def test_gorae_ph(self):
		self.run_test("고래", "{{ko-IPA}}", "고래/고레", "ph")
	def test_gorae_rr(self):
		self.run_test("고래", "{{ko-IPA}}", "gorae", "rr")
	def test_gorae_rrr(self):
		self.run_test("고래", "{{ko-IPA}}", "golae", "rrr")
	def test_gorae_mr(self):
		self.run_test("고래", "{{ko-IPA}}", "korae", "mr")
	def test_gorae_yr(self):
		self.run_test("고래", "{{ko-IPA}}", "kolay", "yr")
	def test_gorae_ipa(self):
		self.run_test("고래", "{{ko-IPA}}", "[ko̞ɾɛ] ~ [ko̞ɾe̞]", "ipa")
	def test_gorae_ph_1(self):
		self.run_test("고래", "{{ko-IPA}}", "고래/고레", "ph")
	def test_gorae_rr_1(self):
		self.run_test("고래", "{{ko-IPA}}", "gorae", "rr")
	def test_gorae_rrr_1(self):
		self.run_test("고래", "{{ko-IPA}}", "golae", "rrr")
	def test_gorae_mr_1(self):
		self.run_test("고래", "{{ko-IPA}}", "korae", "mr")
	def test_gorae_yr_1(self):
		self.run_test("고래", "{{ko-IPA}}", "kolay", "yr")
	def test_gorae_ipa_1(self):
		self.run_test("고래", "{{ko-IPA}}", "[ko̞ɾɛ] ~ [ko̞ɾe̞]", "ipa")

	def test_hokdeunggorae_ph(self):
		self.run_test("혹등고래", "{{ko-IPA}}", "혹뜽고래/혹뜽고레", "ph")
	def test_hokdeunggorae_rr(self):
		self.run_test("혹등고래", "{{ko-IPA}}", "hokdeunggorae", "rr")
	def test_hokdeunggorae_rrr(self):
		self.run_test("혹등고래", "{{ko-IPA}}", "hogdeunggolae", "rrr")
	def test_hokdeunggorae_mr(self):
		self.run_test("혹등고래", "{{ko-IPA}}", "hoktŭnggorae", "mr")
	def test_hokdeunggorae_yr(self):
		self.run_test("혹등고래", "{{ko-IPA}}", "hoktungkolay", "yr")
	def test_hokdeunggorae_ipa(self):
		self.run_test("혹등고래", "{{ko-IPA}}", "[ɸʷo̞k̚t͈ɯŋɡo̞ɾɛ] ~ [ɸʷo̞k̚t͈ɯŋɡo̞ɾe̞]", "ipa")

	def test_chamgorae_ph(self):
		self.run_test("참고래", "{{ko-IPA}}", "참고래/참고레", "ph")
	def test_chamgorae_rr(self):
		self.run_test("참고래", "{{ko-IPA}}", "chamgorae", "rr")
	def test_chamgorae_rrr(self):
		self.run_test("참고래", "{{ko-IPA}}", "chamgolae", "rrr")
	def test_chamgorae_mr(self):
		self.run_test("참고래", "{{ko-IPA}}", "ch'amgorae", "mr")
	def test_chamgorae_yr(self):
		self.run_test("참고래", "{{ko-IPA}}", "chamkolay", "yr")
	def test_chamgorae_ipa(self):
		self.run_test("참고래", "{{ko-IPA}}", "[t͡ɕʰa̠mɡo̞ɾɛ] ~ [t͡ɕʰa̠mɡo̞ɾe̞]", "ipa")

	def test_beuraideugorae_ph(self):
		self.run_test("브라이드고래", "{{ko-IPA}}", "브라이드고래/브라이드고레", "ph")
	def test_beuraideugorae_rr(self):
		self.run_test("브라이드고래", "{{ko-IPA}}", "beuraideugorae", "rr")
	def test_beuraideugorae_rrr(self):
		self.run_test("브라이드고래", "{{ko-IPA}}", "beulaideugolae", "rrr")
	def test_beuraideugorae_mr(self):
		self.run_test("브라이드고래", "{{ko-IPA}}", "pŭraidŭgorae", "mr")
	def test_beuraideugorae_yr(self):
		self.run_test("브라이드고래", "{{ko-IPA}}", "pulaitukolay", "yr")
	def test_beuraideugorae_ipa(self):
		self.run_test("브라이드고래", "{{ko-IPA}}", "[pɯɾa̠idɯɡo̞ɾɛ] ~ [pɯɾa̠idɯɡo̞ɾe̞]", "ipa")

	def test_borigorae_ph(self):
		self.run_test("보리고래", "{{ko-IPA}}", "보리고래/보리고레", "ph")
	def test_borigorae_rr(self):
		self.run_test("보리고래", "{{ko-IPA}}", "borigorae", "rr")
	def test_borigorae_rrr(self):
		self.run_test("보리고래", "{{ko-IPA}}", "boligolae", "rrr")
	def test_borigorae_mr(self):
		self.run_test("보리고래", "{{ko-IPA}}", "porigorae", "mr")
	def test_borigorae_yr(self):
		self.run_test("보리고래", "{{ko-IPA}}", "polikolay", "yr")
	def test_borigorae_ipa(self):
		self.run_test("보리고래", "{{ko-IPA}}", "[po̞ɾiɡo̞ɾɛ] ~ [po̞ɾiɡo̞ɾe̞]", "ipa")

	def test_mingkeugorae_ph(self):
		self.run_test("밍크고래", "{{ko-IPA}}", "밍크고래/밍크고레", "ph")
	def test_mingkeugorae_rr(self):
		self.run_test("밍크고래", "{{ko-IPA}}", "mingkeugorae", "rr")
	def test_mingkeugorae_rrr(self):
		self.run_test("밍크고래", "{{ko-IPA}}", "mingkeugolae", "rrr")
	def test_mingkeugorae_mr(self):
		self.run_test("밍크고래", "{{ko-IPA}}", "mingk'ŭgorae", "mr")
	def test_mingkeugorae_yr(self):
		self.run_test("밍크고래", "{{ko-IPA}}", "mingkhukolay", "yr")
	def test_mingkeugorae_ipa(self):
		self.run_test("밍크고래", "{{ko-IPA}}", "[miŋkxɯɡo̞ɾɛ] ~ [miŋkxɯɡo̞ɾe̞]", "ipa")

	def test_gopeuda_ph(self):
		self.run_test("고프다", "{{ko-IPA}}", "고프다", "ph")
	def test_gopeuda_rr(self):
		self.run_test("고프다", "{{ko-IPA}}", "gopeuda", "rr")
	def test_gopeuda_rrr(self):
		self.run_test("고프다", "{{ko-IPA}}", "gopeuda", "rrr")
	def test_gopeuda_mr(self):
		self.run_test("고프다", "{{ko-IPA}}", "kop'ŭda", "mr")
	def test_gopeuda_yr(self):
		self.run_test("고프다", "{{ko-IPA}}", "ko.phuta", "yr")
	def test_gopeuda_ipa(self):
		self.run_test("고프다", "{{ko-IPA}}", "[ko̞pʰɯda̠]", "ipa")

	def test_aju_ph(self):
		self.run_test("아주", "{{ko-IPA|a=y}}", "아주", "ph")
	def test_aju_rr(self):
		self.run_test("아주", "{{ko-IPA|a=y}}", "aju", "rr")
	def test_aju_rrr(self):
		self.run_test("아주", "{{ko-IPA|a=y}}", "aju", "rrr")
	def test_aju_mr(self):
		self.run_test("아주", "{{ko-IPA|a=y}}", "aju", "mr")
	def test_aju_yr(self):
		self.run_test("아주", "{{ko-IPA|a=y}}", "acwu", "yr")
	def test_aju_ipa(self):
		self.run_test("아주", "{{ko-IPA|a=y}}", "[a̠d͡ʑu]", "ipa")

	def test_kamera_ph(self):
		self.run_test("카메라", "{{ko-IPA}}", "카메라", "ph")
	def test_kamera_rr(self):
		self.run_test("카메라", "{{ko-IPA}}", "kamera", "rr")
	def test_kamera_rrr(self):
		self.run_test("카메라", "{{ko-IPA}}", "kamela", "rrr")
	def test_kamera_mr(self):
		self.run_test("카메라", "{{ko-IPA}}", "k'amera", "mr")
	def test_kamera_yr(self):
		self.run_test("카메라", "{{ko-IPA}}", "khameyla", "yr")
	def test_kamera_ipa(self):
		self.run_test("카메라", "{{ko-IPA}}", "[kʰa̠me̞ɾa̠]", "ipa")

	def test_nyuteuria_ph(self):
		self.run_test("뉴트리아", "{{ko-IPA}}", "뉴트리아", "ph")
	def test_nyuteuria_rr(self):
		self.run_test("뉴트리아", "{{ko-IPA}}", "nyuteuria", "rr")
	def test_nyuteuria_rrr(self):
		self.run_test("뉴트리아", "{{ko-IPA}}", "nyuteulia", "rrr")
	def test_nyuteuria_mr(self):
		self.run_test("뉴트리아", "{{ko-IPA}}", "nyut'ŭria", "mr")
	def test_nyuteuria_yr(self):
		self.run_test("뉴트리아", "{{ko-IPA}}", "nyu.thulia", "yr")
	def test_nyuteuria_ipa(self):
		self.run_test("뉴트리아", "{{ko-IPA}}", "[ɲutʰɯɾia̠]", "ipa")

	def test_haneuldaramjwi_ph(self):
		self.run_test("하늘다람쥐", "{{ko-IPA}}", "하늘다람쥐", "ph")
	def test_haneuldaramjwi_rr(self):
		self.run_test("하늘다람쥐", "{{ko-IPA}}", "haneuldaramjwi", "rr")
	def test_haneuldaramjwi_rrr(self):
		self.run_test("하늘다람쥐", "{{ko-IPA}}", "haneuldalamjwi", "rrr")
	def test_haneuldaramjwi_mr(self):
		self.run_test("하늘다람쥐", "{{ko-IPA}}", "hanŭldaramjwi", "mr")
	def test_haneuldaramjwi_yr(self):
		self.run_test("하늘다람쥐", "{{ko-IPA}}", "hanultalamcwi", "yr")
	def test_haneuldaramjwi_ipa(self):
		self.run_test("하늘다람쥐", "{{ko-IPA}}", "[ha̠nɯɭda̠ɾa̠md͡ʑɥi] ~ [ha̠nɯɭda̠ɾa̠md͡ʑy]", "ipa")

	def test_cheongseolmo_ph(self):
		self.run_test("청설모", "{{ko-IPA}}", "청설모", "ph")
	def test_cheongseolmo_rr(self):
		self.run_test("청설모", "{{ko-IPA}}", "cheongseolmo", "rr")
	def test_cheongseolmo_rrr(self):
		self.run_test("청설모", "{{ko-IPA}}", "cheongseolmo", "rrr")
	def test_cheongseolmo_mr(self):
		self.run_test("청설모", "{{ko-IPA}}", "ch'ŏngsŏlmo", "mr")
	def test_cheongseolmo_yr(self):
		self.run_test("청설모", "{{ko-IPA}}", "chengsel.mo", "yr")
	def test_cheongseolmo_ipa(self):
		self.run_test("청설모", "{{ko-IPA}}", "[t͡ɕʰʌ̹ŋsʰʌ̹ɭmo̞]", "ipa")

	def test_ginkkorikkomajwi_ph(self):
		self.run_test("긴꼬리꼬마쥐", "{{ko-IPA}}", "긴꼬리꼬마쥐", "ph")
	def test_ginkkorikkomajwi_rr(self):
		self.run_test("긴꼬리꼬마쥐", "{{ko-IPA}}", "ginkkorikkomajwi", "rr")
	def test_ginkkorikkomajwi_rrr(self):
		self.run_test("긴꼬리꼬마쥐", "{{ko-IPA}}", "ginkkoli'kkomajwi", "rrr")
	def test_ginkkorikkomajwi_mr(self):
		self.run_test("긴꼬리꼬마쥐", "{{ko-IPA}}", "kinkkorikkomajwi", "mr")
	def test_ginkkorikkomajwi_yr(self):
		self.run_test("긴꼬리꼬마쥐", "{{ko-IPA}}", "kinkkoli.kkomacwi", "yr")
	def test_ginkkorikkomajwi_ipa(self):
		self.run_test("긴꼬리꼬마쥐", "{{ko-IPA}}", "[kink͈o̞ɾik͈o̞ma̠d͡ʑɥi] ~ [kink͈o̞ɾik͈o̞ma̠d͡ʑy]", "ipa")

	def test_deot_ph(self):
		self.run_test("덫", "{{ko-IPA}}", "덛", "ph")
	def test_deot_rr(self):
		self.run_test("덫", "{{ko-IPA}}", "deot", "rr")
	def test_deot_rrr(self):
		self.run_test("덫", "{{ko-IPA}}", "deoch", "rrr")
	def test_deot_mr(self):
		self.run_test("덫", "{{ko-IPA}}", "tŏt", "mr")
	def test_deot_yr(self):
		self.run_test("덫", "{{ko-IPA}}", "tech", "yr")
	def test_deot_ipa(self):
		self.run_test("덫", "{{ko-IPA}}", "[tʌ̹t̚]", "ipa")

	def test_ppumda_ph(self):
		self.run_test("뿜다", "{{ko-IPA|l=y|com=1}}", "뿜(ː)따", "ph")
	def test_ppumda_rr(self):
		self.run_test("뿜다", "{{ko-IPA|l=y|com=1}}", "ppumda", "rr")
	def test_ppumda_rrr(self):
		self.run_test("뿜다", "{{ko-IPA|l=y|com=1}}", "ppumda", "rrr")
	def test_ppumda_mr(self):
		self.run_test("뿜다", "{{ko-IPA|l=y|com=1}}", "ppumta", "mr")
	def test_ppumda_yr(self):
		self.run_test("뿜다", "{{ko-IPA|l=y|com=1}}", "ppūmqta", "yr")
	def test_ppumda_ipa(self):
		self.run_test("뿜다", "{{ko-IPA|l=y|com=1}}", "[ˈp͈u(ː)mt͈a̠]", "ipa")

	def test_huingorae_ph(self):
		self.run_test("흰고래", "{{ko-IPA}}", "힌고래/힌고레", "ph")
	def test_huingorae_rr(self):
		self.run_test("흰고래", "{{ko-IPA}}", "huin'gorae", "rr")
	def test_huingorae_rrr(self):
		self.run_test("흰고래", "{{ko-IPA}}", "huingolae", "rrr")
	def test_huingorae_mr(self):
		self.run_test("흰고래", "{{ko-IPA}}", "hŭin'gorae", "mr")
	def test_huingorae_yr(self):
		self.run_test("흰고래", "{{ko-IPA}}", "huynkolay", "yr")
	def test_huingorae_ipa(self):
		self.run_test("흰고래", "{{ko-IPA}}", "[çinɡo̞ɾɛ] ~ [çinɡo̞ɾe̞]", "ipa")

	def test_kkachidolgorae_ph(self):
		self.run_test("까치돌고래", "{{ko-IPA}}", "까치돌고래/까치돌고레", "ph")
	def test_kkachidolgorae_rr(self):
		self.run_test("까치돌고래", "{{ko-IPA}}", "kkachidolgorae", "rr")
	def test_kkachidolgorae_rrr(self):
		self.run_test("까치돌고래", "{{ko-IPA}}", "kkachidolgolae", "rrr")
	def test_kkachidolgorae_mr(self):
		self.run_test("까치돌고래", "{{ko-IPA}}", "kkach'idolgorae", "mr")
	def test_kkachidolgorae_yr(self):
		self.run_test("까치돌고래", "{{ko-IPA}}", "kka.chitol.kolay", "yr")
	def test_kkachidolgorae_ipa(self):
		self.run_test("까치돌고래", "{{ko-IPA}}", "[k͈a̠t͡ɕʰido̞ɭɡo̞ɾɛ] ~ [k͈a̠t͡ɕʰido̞ɭɡo̞ɾe̞]", "ipa")

	def test_soedolgorae_ph(self):
		self.run_test("쇠돌고래", "{{ko-IPA}}", "쉐돌고래/쇠돌고래/쉐돌고레/쇠돌고레", "ph")
	def test_soedolgorae_rr(self):
		self.run_test("쇠돌고래", "{{ko-IPA}}", "soedolgorae", "rr")
	def test_soedolgorae_rrr(self):
		self.run_test("쇠돌고래", "{{ko-IPA}}", "soedolgolae", "rrr")
	def test_soedolgorae_mr(self):
		self.run_test("쇠돌고래", "{{ko-IPA}}", "soedolgorae", "mr")
	def test_soedolgorae_yr(self):
		self.run_test("쇠돌고래", "{{ko-IPA}}", "soytol.kolay", "yr")
	def test_soedolgorae_ipa(self):
		self.run_test("쇠돌고래", "{{ko-IPA}}", "[sʰwe̞do̞ɭɡo̞ɾɛ] ~ [sʰø̞do̞ɭɡo̞ɾɛ] ~ [sʰwe̞do̞ɭɡo̞ɾe̞] ~ [sʰø̞do̞ɭɡo̞ɾe̞]", "ipa")

	def test_sanggwaengi_ph(self):
		self.run_test("상괭이", "{{ko-IPA}}", "상괭이/상궹이", "ph")
	def test_sanggwaengi_rr(self):
		self.run_test("상괭이", "{{ko-IPA}}", "sanggwaeng'i", "rr")
	def test_sanggwaengi_rrr(self):
		self.run_test("상괭이", "{{ko-IPA}}", "sanggwaeng'i", "rrr")
	def test_sanggwaengi_mr(self):
		self.run_test("상괭이", "{{ko-IPA}}", "sanggwaengi", "mr")
	def test_sanggwaengi_yr(self):
		self.run_test("상괭이", "{{ko-IPA}}", "sangkwayngi", "yr")
	def test_sanggwaengi_ipa(self):
		self.run_test("상괭이", "{{ko-IPA}}", "[sʰa̠ŋɡwɛŋi] ~ [sʰa̠ŋɡwe̞ŋi]", "ipa")

	def test_gochudolgorae_ph(self):
		self.run_test("고추돌고래", "{{ko-ipa}}", "고추돌고래/고추돌고레", "ph")
	def test_gochudolgorae_rr(self):
		self.run_test("고추돌고래", "{{ko-ipa}}", "gochudolgorae", "rr")
	def test_gochudolgorae_rrr(self):
		self.run_test("고추돌고래", "{{ko-ipa}}", "gochudolgolae", "rrr")
	def test_gochudolgorae_mr(self):
		self.run_test("고추돌고래", "{{ko-ipa}}", "koch'udolgorae", "mr")
	def test_gochudolgorae_yr(self):
		self.run_test("고추돌고래", "{{ko-ipa}}", "ko.chwutol.kolay", "yr")
	def test_gochudolgorae_ipa(self):
		self.run_test("고추돌고래", "{{ko-ipa}}", "[ko̞t͡ɕʰudo̞ɭɡo̞ɾɛ] ~ [ko̞t͡ɕʰudo̞ɭɡo̞ɾe̞]", "ipa")


	def test_jjalbeunburichamdolgorae_ph(self):
		self.run_test("짧은부리참돌고래", "{{ko-IPA}}", "짤븐부리참돌고래/짤븐부리참돌고레", "ph")
	def test_jjalbeunburichamdolgorae_rr(self):
		self.run_test("짧은부리참돌고래", "{{ko-IPA}}", "jjalbeunburichamdolgorae", "rr")
	def test_jjalbeunburichamdolgorae_rrr(self):
		self.run_test("짧은부리참돌고래", "{{ko-IPA}}", "jjalb'eunbulichamdolgolae", "rrr")
	def test_jjalbeunburichamdolgorae_mr(self):
		self.run_test("짧은부리참돌고래", "{{ko-IPA}}", "tchalbŭnburich'amdolgorae", "mr")
	def test_jjalbeunburichamdolgorae_yr(self):
		self.run_test("짧은부리참돌고래", "{{ko-IPA}}", "ccalp.unpuli.chamtol.kolay", "yr")
	def test_jjalbeunburichamdolgorae_ipa(self):
		self.run_test("짧은부리참돌고래", "{{ko-IPA}}", "[t͡ɕ͈a̠ɭbɯnbuɾit͡ɕʰa̠mdo̞ɭɡo̞ɾɛ] ~ [t͡ɕ͈a̠ɭbɯnbuɾit͡ɕʰa̠mdo̞ɭɡo̞ɾe̞]", "ipa")

	def test_dolgorae_ph(self):
		self.run_test("돌고래", "{{ko-IPA}}", "돌고래/돌고레", "ph")
	def test_dolgorae_rr(self):
		self.run_test("돌고래", "{{ko-IPA}}", "dolgorae", "rr")
	def test_dolgorae_rrr(self):
		self.run_test("돌고래", "{{ko-IPA}}", "dolgolae", "rrr")
	def test_dolgorae_mr(self):
		self.run_test("돌고래", "{{ko-IPA}}", "tolgorae", "mr")
	def test_dolgorae_yr(self):
		self.run_test("돌고래", "{{ko-IPA}}", "tol.kolay", "yr")
	def test_dolgorae_ipa(self):
		self.run_test("돌고래", "{{ko-IPA}}", "[to̞ɭɡo̞ɾɛ] ~ [to̞ɭɡo̞ɾe̞]", "ipa")

	def test_deulsoegorae_ph(self):
		self.run_test("들쇠고래", "{{ko-IPA}}", "들쉐고래/들쇠고래/들쉐고레/들쇠고레", "ph")
	def test_deulsoegorae_rr(self):
		self.run_test("들쇠고래", "{{ko-IPA}}", "deulsoegorae", "rr")
	def test_deulsoegorae_rrr(self):
		self.run_test("들쇠고래", "{{ko-IPA}}", "deulsoegolae", "rrr")
	def test_deulsoegorae_mr(self):
		self.run_test("들쇠고래", "{{ko-IPA}}", "tŭlsoegorae", "mr")
	def test_deulsoegorae_yr(self):
		self.run_test("들쇠고래", "{{ko-IPA}}", "tul.soykolay", "yr")
	def test_deulsoegorae_ipa(self):
		self.run_test("들쇠고래", "{{ko-IPA}}", "[tɯɭsʰwe̞ɡo̞ɾɛ] ~ [tɯɭsʰø̞ɡo̞ɾɛ] ~ [tɯɭsʰwe̞ɡo̞ɾe̞] ~ [tɯɭsʰø̞ɡo̞ɾe̞]", "ipa")

	def test_keunmeoridolgorae_ph(self):
		self.run_test("큰머리돌고래", "{{ko-IPA}}", "큰머리돌고래/큰머리돌고레", "ph")
	def test_keunmeoridolgorae_rr(self):
		self.run_test("큰머리돌고래", "{{ko-IPA}}", "keunmeoridolgorae", "rr")
	def test_keunmeoridolgorae_rrr(self):
		self.run_test("큰머리돌고래", "{{ko-IPA}}", "keunmeolidolgolae", "rrr")
	def test_keunmeoridolgorae_mr(self):
		self.run_test("큰머리돌고래", "{{ko-IPA}}", "k'ŭnmŏridolgorae", "mr")
	def test_keunmeoridolgorae_yr(self):
		self.run_test("큰머리돌고래", "{{ko-IPA}}", "khunmelitol.kolay", "yr")
	def test_keunmeoridolgorae_ipa(self):
		self.run_test("큰머리돌고래", "{{ko-IPA}}", "[kxɯnmʌ̹ɾido̞ɭɡo̞ɾɛ] ~ [kxɯnmʌ̹ɾido̞ɭɡo̞ɾe̞]", "ipa")

	def test_natdolgorae_ph(self):
		self.run_test("낫돌고래", "{{ko-IPA}}", "낟똘고래/낟똘고레", "ph")
	def test_natdolgorae_rr(self):
		self.run_test("낫돌고래", "{{ko-IPA}}", "natdolgorae", "rr")
	def test_natdolgorae_rrr(self):
		self.run_test("낫돌고래", "{{ko-IPA}}", "nasdolgolae", "rrr")
	def test_natdolgorae_mr(self):
		self.run_test("낫돌고래", "{{ko-IPA}}", "nattolgorae", "mr")
	def test_natdolgorae_yr(self):
		self.run_test("낫돌고래", "{{ko-IPA}}", "nastol.kolay", "yr")
	def test_natdolgorae_ipa(self):
		self.run_test("낫돌고래", "{{ko-IPA}}", "[na̠t̚t͈o̞ɭɡo̞ɾɛ] ~ [na̠t̚t͈o̞ɭɡo̞ɾe̞]", "ipa")

	def test_goseumdochi_ph(self):
		self.run_test("고슴도치", "{{ko-IPA}}", "고슴도치", "ph")
	def test_goseumdochi_rr(self):
		self.run_test("고슴도치", "{{ko-IPA}}", "goseumdochi", "rr")
	def test_goseumdochi_rrr(self):
		self.run_test("고슴도치", "{{ko-IPA}}", "goseumdochi", "rrr")
	def test_goseumdochi_mr(self):
		self.run_test("고슴도치", "{{ko-IPA}}", "kosŭmdoch'i", "mr")
	def test_goseumdochi_yr(self):
		self.run_test("고슴도치", "{{ko-IPA}}", "kosumto.chi", "yr")
	def test_goseumdochi_ipa(self):
		self.run_test("고슴도치", "{{ko-IPA}}", "[ko̞sʰɯmdo̞t͡ɕʰi]", "ipa")

	def test_pureuda_ph(self):
		self.run_test("푸르다", "{{ko-IPA}}", "푸르다", "ph")
	def test_pureuda_rr(self):
		self.run_test("푸르다", "{{ko-IPA}}", "pureuda", "rr")
	def test_pureuda_rrr(self):
		self.run_test("푸르다", "{{ko-IPA}}", "puleuda", "rrr")
	def test_pureuda_mr(self):
		self.run_test("푸르다", "{{ko-IPA}}", "p'urŭda", "mr")
	def test_pureuda_yr(self):
		self.run_test("푸르다", "{{ko-IPA}}", "phuluta", "yr")
	def test_pureuda_ipa(self):
		self.run_test("푸르다", "{{ko-IPA}}", "[pʰuɾɯda̠]", "ipa")

	def test_mettokki_ph(self):
		self.run_test("멧토끼", "{{ko-IPA}}", "멛토끼", "ph")
	def test_mettokki_rr(self):
		self.run_test("멧토끼", "{{ko-IPA}}", "met'tokki", "rr")
	def test_mettokki_rrr(self):
		self.run_test("멧토끼", "{{ko-IPA}}", "mesto'kki", "rrr")
	def test_mettokki_mr(self):
		self.run_test("멧토끼", "{{ko-IPA}}", "mett'okki", "mr")
	def test_mettokki_yr(self):
		self.run_test("멧토끼", "{{ko-IPA}}", "meystho.kki", "yr")
	def test_mettokki_ipa(self):
		self.run_test("멧토끼", "{{ko-IPA}}", "[me̞t̚tʰo̞k͈i]", "ipa")

	def test_bukbangtokki_ph(self):
		self.run_test("북방토끼", "{{ko-IPA}}", "북빵토끼", "ph")
	def test_bukbangtokki_rr(self):
		self.run_test("북방토끼", "{{ko-IPA}}", "bukbangtokki", "rr")
	def test_bukbangtokki_rrr(self):
		self.run_test("북방토끼", "{{ko-IPA}}", "bugbangto'kki", "rrr")
	def test_bukbangtokki_mr(self):
		self.run_test("북방토끼", "{{ko-IPA}}", "pukpangt'okki", "mr")
	def test_bukbangtokki_yr(self):
		self.run_test("북방토끼", "{{ko-IPA}}", "pukpangtho.kki", "yr")
	def test_bukbangtokki_ipa(self):
		self.run_test("북방토끼", "{{ko-IPA}}", "[puk̚p͈a̠ŋtʰo̞k͈i]", "ipa")

	def test_uneuntokki_ph(self):
		self.run_test("우는토끼", "{{ko-IPA|l=y}}", "우(ː)는토끼", "ph")
	def test_uneuntokki_rr(self):
		self.run_test("우는토끼", "{{ko-IPA|l=y}}", "uneuntokki", "rr")
	def test_uneuntokki_rrr(self):
		self.run_test("우는토끼", "{{ko-IPA|l=y}}", "uneunto'kki", "rrr")
	def test_uneuntokki_mr(self):
		self.run_test("우는토끼", "{{ko-IPA|l=y}}", "unŭnt'okki", "mr")
	def test_uneuntokki_yr(self):
		self.run_test("우는토끼", "{{ko-IPA|l=y}}", "wūnuntho.kki", "yr")
	def test_uneuntokki_ipa(self):
		self.run_test("우는토끼", "{{ko-IPA|l=y}}", "[ˈu(ː)nɯntʰo̞k͈i]", "ipa")

	def test_tokki_ph(self):
		self.run_test("토끼", "{{ko-IPA}}", "토끼", "ph")
	def test_tokki_rr(self):
		self.run_test("토끼", "{{ko-IPA}}", "tokki", "rr")
	def test_tokki_rrr(self):
		self.run_test("토끼", "{{ko-IPA}}", "to'kki", "rrr")
	def test_tokki_mr(self):
		self.run_test("토끼", "{{ko-IPA}}", "t'okki", "mr")
	def test_tokki_yr(self):
		self.run_test("토끼", "{{ko-IPA}}", "tho.kki", "yr")
	def test_tokki_ipa(self):
		self.run_test("토끼", "{{ko-IPA}}", "[tʰo̞k͈i]", "ipa")

	def test_babo_ph(self):
		self.run_test("바보", "{{ko-IPA|l=y}}", "바(ː)보", "ph")
	def test_babo_rr(self):
		self.run_test("바보", "{{ko-IPA|l=y}}", "babo", "rr")
	def test_babo_rrr(self):
		self.run_test("바보", "{{ko-IPA|l=y}}", "babo", "rrr")
	def test_babo_mr(self):
		self.run_test("바보", "{{ko-IPA|l=y}}", "pabo", "mr")
	def test_babo_yr(self):
		self.run_test("바보", "{{ko-IPA|l=y}}", "pāpo", "yr")
	def test_babo_ipa(self):
		self.run_test("바보", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)bo̞]", "ipa")

	def test_seungnyangi_ph(self):
		self.run_test("승냥이", "{{ko-IPA}}", "승냥이", "ph")
	def test_seungnyangi_rr(self):
		self.run_test("승냥이", "{{ko-IPA}}", "seungnyang'i", "rr")
	def test_seungnyangi_rrr(self):
		self.run_test("승냥이", "{{ko-IPA}}", "seungnyang'i", "rrr")
	def test_seungnyangi_mr(self):
		self.run_test("승냥이", "{{ko-IPA}}", "sŭngnyangi", "mr")
	def test_seungnyangi_yr(self):
		self.run_test("승냥이", "{{ko-IPA}}", "sungnyangi", "yr")
	def test_seungnyangi_ipa(self):
		self.run_test("승냥이", "{{ko-IPA}}", "[sʰɯŋɲa̠ŋi]", "ipa")

	def test_gi_ph(self):
		self.run_test("기", "{{ko-IPA}}", "기", "ph")
	def test_gi_rr(self):
		self.run_test("기", "{{ko-IPA}}", "gi", "rr")
	def test_gi_rrr(self):
		self.run_test("기", "{{ko-IPA}}", "gi", "rrr")
	def test_gi_mr(self):
		self.run_test("기", "{{ko-IPA}}", "ki", "mr")
	def test_gi_yr(self):
		self.run_test("기", "{{ko-IPA}}", "ki", "yr")
	def test_gi_ipa(self):
		self.run_test("기", "{{ko-IPA}}", "[ki]", "ipa")

	def test_deungjuljwi_ph(self):
		self.run_test("등줄쥐", "{{ko-IPA}}", "등줄쥐", "ph")
	def test_deungjuljwi_rr(self):
		self.run_test("등줄쥐", "{{ko-IPA}}", "deungjuljwi", "rr")
	def test_deungjuljwi_rrr(self):
		self.run_test("등줄쥐", "{{ko-IPA}}", "deungjuljwi", "rrr")
	def test_deungjuljwi_mr(self):
		self.run_test("등줄쥐", "{{ko-IPA}}", "tŭngjuljwi", "mr")
	def test_deungjuljwi_yr(self):
		self.run_test("등줄쥐", "{{ko-IPA}}", "tungcwulcwi", "yr")
	def test_deungjuljwi_ipa(self):
		self.run_test("등줄쥐", "{{ko-IPA}}", "[tɯŋd͡ʑuʎd͡ʑɥi] ~ [tɯŋd͡ʑuʎd͡ʑy]", "ipa")

	def test_bidanteoljwi_ph(self):
		self.run_test("비단털쥐", "{{ko-IPA}}", "비단털쥐", "ph")
	def test_bidanteoljwi_rr(self):
		self.run_test("비단털쥐", "{{ko-IPA}}", "bidanteoljwi", "rr")
	def test_bidanteoljwi_rrr(self):
		self.run_test("비단털쥐", "{{ko-IPA}}", "bidanteoljwi", "rrr")
	def test_bidanteoljwi_mr(self):
		self.run_test("비단털쥐", "{{ko-IPA}}", "pidant'ŏljwi", "mr")
	def test_bidanteoljwi_yr(self):
		self.run_test("비단털쥐", "{{ko-IPA}}", "pitanthelcwi", "yr")
	def test_bidanteoljwi_ipa(self):
		self.run_test("비단털쥐", "{{ko-IPA}}", "[pida̠ntʰʌ̹ʎd͡ʑɥi] ~ [pida̠ntʰʌ̹ʎd͡ʑy]", "ipa")

	def test_gomjwi_ph(self):
		self.run_test("곰쥐", "{{ko-IPA|l=y}}", "곰(ː)쥐", "ph")
	def test_gomjwi_rr(self):
		self.run_test("곰쥐", "{{ko-IPA|l=y}}", "gomjwi", "rr")
	def test_gomjwi_rrr(self):
		self.run_test("곰쥐", "{{ko-IPA|l=y}}", "gomjwi", "rrr")
	def test_gomjwi_mr(self):
		self.run_test("곰쥐", "{{ko-IPA|l=y}}", "komjwi", "mr")
	def test_gomjwi_yr(self):
		self.run_test("곰쥐", "{{ko-IPA|l=y}}", "kōmcwi", "yr")
	def test_gomjwi_ipa(self):
		self.run_test("곰쥐", "{{ko-IPA|l=y}}", "[ˈko̞(ː)md͡ʑɥi] ~ [ˈko̞(ː)md͡ʑy]", "ipa")

	def test_jipjwi_ph(self):
		self.run_test("집쥐", "{{ko-IPA}}", "집쮜", "ph")
	def test_jipjwi_rr(self):
		self.run_test("집쥐", "{{ko-IPA}}", "jipjwi", "rr")
	def test_jipjwi_rrr(self):
		self.run_test("집쥐", "{{ko-IPA}}", "jibjwi", "rrr")
	def test_jipjwi_mr(self):
		self.run_test("집쥐", "{{ko-IPA}}", "chipchwi", "mr")
	def test_jipjwi_yr(self):
		self.run_test("집쥐", "{{ko-IPA}}", "cipcwi", "yr")
	def test_jipjwi_ipa(self):
		self.run_test("집쥐", "{{ko-IPA}}", "[t͡ɕip̚t͡ɕ͈ɥi] ~ [t͡ɕip̚t͡ɕ͈y]", "ipa")

	def test_sahyangjwi_ph(self):
		self.run_test("사향쥐", "{{ko-IPA}}", "사향쥐", "ph")
	def test_sahyangjwi_rr(self):
		self.run_test("사향쥐", "{{ko-IPA}}", "sahyangjwi", "rr")
	def test_sahyangjwi_rrr(self):
		self.run_test("사향쥐", "{{ko-IPA}}", "sahyangjwi", "rrr")
	def test_sahyangjwi_mr(self):
		self.run_test("사향쥐", "{{ko-IPA}}", "sahyangjwi", "mr")
	def test_sahyangjwi_yr(self):
		self.run_test("사향쥐", "{{ko-IPA}}", "sahyangcwi", "yr")
	def test_sahyangjwi_ipa(self):
		self.run_test("사향쥐", "{{ko-IPA}}", "[sʰa̠ʝa̠ŋd͡ʑɥi] ~ [sʰa̠ʝa̠ŋd͡ʑy]", "ipa")

	def test_daeryukbatjwi_ph(self):
		self.run_test("대륙밭쥐", "{{ko-IPA|l=y}}", "대(ː)륙빧쮜/데(ː)륙빧쮜", "ph")
	def test_daeryukbatjwi_rr(self):
		self.run_test("대륙밭쥐", "{{ko-IPA|l=y}}", "daeryukbatjwi", "rr")
	def test_daeryukbatjwi_rrr(self):
		self.run_test("대륙밭쥐", "{{ko-IPA|l=y}}", "daelyugbatjwi", "rrr")
	def test_daeryukbatjwi_mr(self):
		self.run_test("대륙밭쥐", "{{ko-IPA|l=y}}", "taeryukpatchwi", "mr")
	def test_daeryukbatjwi_yr(self):
		self.run_test("대륙밭쥐", "{{ko-IPA|l=y}}", "tāylyukpathcwi", "yr")
	def test_daeryukbatjwi_ipa(self):
		self.run_test("대륙밭쥐", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)ɾjuk̚p͈a̠t̚t͡ɕ͈ɥi] ~ [ˈte̞(ː)ɾjuk̚p͈a̠t̚t͡ɕ͈ɥi] ~ [ˈtɛ(ː)ɾjuk̚p͈a̠t̚t͡ɕ͈y] ~ [ˈte̞(ː)ɾjuk̚p͈a̠t̚t͡ɕ͈y]", "ipa")

	def test_saengjwi_ph(self):
		self.run_test("생쥐", "{{ko-IPA|l=y}}", "생(ː)쥐/셍(ː)쥐", "ph")
	def test_saengjwi_rr(self):
		self.run_test("생쥐", "{{ko-IPA|l=y}}", "saengjwi", "rr")
	def test_saengjwi_rrr(self):
		self.run_test("생쥐", "{{ko-IPA|l=y}}", "saengjwi", "rrr")
	def test_saengjwi_mr(self):
		self.run_test("생쥐", "{{ko-IPA|l=y}}", "saengjwi", "mr")
	def test_saengjwi_yr(self):
		self.run_test("생쥐", "{{ko-IPA|l=y}}", "sāyngcwi", "yr")
	def test_saengjwi_ipa(self):
		self.run_test("생쥐", "{{ko-IPA|l=y}}", "[ˈsʰɛ(ː)ŋd͡ʑɥi] ~ [ˈsʰe̞(ː)ŋd͡ʑɥi] ~ [ˈsʰɛ(ː)ŋd͡ʑy] ~ [ˈsʰe̞(ː)ŋd͡ʑy]", "ipa")

	def test_galbatjwi_ph(self):
		self.run_test("갈밭쥐", "{{ko-IPA}}", "갈받쮜", "ph")
	def test_galbatjwi_rr(self):
		self.run_test("갈밭쥐", "{{ko-IPA}}", "galbatjwi", "rr")
	def test_galbatjwi_rrr(self):
		self.run_test("갈밭쥐", "{{ko-IPA}}", "galbatjwi", "rrr")
	def test_galbatjwi_mr(self):
		self.run_test("갈밭쥐", "{{ko-IPA}}", "kalbatchwi", "mr")
	def test_galbatjwi_yr(self):
		self.run_test("갈밭쥐", "{{ko-IPA}}", "kal.pathcwi", "yr")
	def test_galbatjwi_ipa(self):
		self.run_test("갈밭쥐", "{{ko-IPA}}", "[ka̠ɭba̠t̚t͡ɕ͈ɥi] ~ [ka̠ɭba̠t̚t͡ɕ͈y]", "ipa")

	def test_metbatjwi_ph(self):
		self.run_test("멧밭쥐", "{{ko-IPA}}", "멛빧쮜", "ph")
	def test_metbatjwi_rr(self):
		self.run_test("멧밭쥐", "{{ko-IPA}}", "metbatjwi", "rr")
	def test_metbatjwi_rrr(self):
		self.run_test("멧밭쥐", "{{ko-IPA}}", "mesbatjwi", "rrr")
	def test_metbatjwi_mr(self):
		self.run_test("멧밭쥐", "{{ko-IPA}}", "metpatchwi", "mr")
	def test_metbatjwi_yr(self):
		self.run_test("멧밭쥐", "{{ko-IPA}}", "meyspathcwi", "yr")
	def test_metbatjwi_ipa(self):
		self.run_test("멧밭쥐", "{{ko-IPA}}", "[me̞t̚p͈a̠t̚t͡ɕ͈ɥi] ~ [me̞t̚p͈a̠t̚t͡ɕ͈y]", "ipa")

	def test_soegalbatjwi_ph(self):
		self.run_test("쇠갈밭쥐", "{{ko-IPA}}", "쉐갈받쮜/쇠갈받쮜", "ph")
	def test_soegalbatjwi_rr(self):
		self.run_test("쇠갈밭쥐", "{{ko-IPA}}", "soegalbatjwi", "rr")
	def test_soegalbatjwi_rrr(self):
		self.run_test("쇠갈밭쥐", "{{ko-IPA}}", "soegalbatjwi", "rrr")
	def test_soegalbatjwi_mr(self):
		self.run_test("쇠갈밭쥐", "{{ko-IPA}}", "soegalbatchwi", "mr")
	def test_soegalbatjwi_yr(self):
		self.run_test("쇠갈밭쥐", "{{ko-IPA}}", "soykal.pathcwi", "yr")
	def test_soegalbatjwi_ipa(self):
		self.run_test("쇠갈밭쥐", "{{ko-IPA}}", "[sʰwe̞ɡa̠ɭba̠t̚t͡ɕ͈ɥi] ~ [sʰø̞ɡa̠ɭba̠t̚t͡ɕ͈ɥi] ~ [sʰwe̞ɡa̠ɭba̠t̚t͡ɕ͈y] ~ [sʰø̞ɡa̠ɭba̠t̚t͡ɕ͈y]", "ipa")

	def test_bidanteoldeuljwi_ph(self):
		self.run_test("비단털들쥐", "{{ko-IPA}}", "비단털들쥐", "ph")
	def test_bidanteoldeuljwi_rr(self):
		self.run_test("비단털들쥐", "{{ko-IPA}}", "bidanteoldeuljwi", "rr")
	def test_bidanteoldeuljwi_rrr(self):
		self.run_test("비단털들쥐", "{{ko-IPA}}", "bidanteoldeuljwi", "rrr")
	def test_bidanteoldeuljwi_mr(self):
		self.run_test("비단털들쥐", "{{ko-IPA}}", "pidant'ŏldŭljwi", "mr")
	def test_bidanteoldeuljwi_yr(self):
		self.run_test("비단털들쥐", "{{ko-IPA}}", "pitantheltulcwi", "yr")
	def test_bidanteoldeuljwi_ipa(self):
		self.run_test("비단털들쥐", "{{ko-IPA}}", "[pida̠ntʰʌ̹ɭdɯʎd͡ʑɥi] ~ [pida̠ntʰʌ̹ɭdɯʎd͡ʑy]", "ipa")

	def test_bidanteoldeungjuljwi_ph(self):
		self.run_test("비단털등줄쥐", "{{ko-IPA}}", "비단털등줄쥐", "ph")
	def test_bidanteoldeungjuljwi_rr(self):
		self.run_test("비단털등줄쥐", "{{ko-IPA}}", "bidanteoldeungjuljwi", "rr")
	def test_bidanteoldeungjuljwi_rrr(self):
		self.run_test("비단털등줄쥐", "{{ko-IPA}}", "bidanteoldeungjuljwi", "rrr")
	def test_bidanteoldeungjuljwi_mr(self):
		self.run_test("비단털등줄쥐", "{{ko-IPA}}", "pidant'ŏldŭngjuljwi", "mr")
	def test_bidanteoldeungjuljwi_yr(self):
		self.run_test("비단털등줄쥐", "{{ko-IPA}}", "pitantheltungcwulcwi", "yr")
	def test_bidanteoldeungjuljwi_ipa(self):
		self.run_test("비단털등줄쥐", "{{ko-IPA}}", "[pida̠ntʰʌ̹ɭdɯŋd͡ʑuʎd͡ʑɥi] ~ [pida̠ntʰʌ̹ɭdɯŋd͡ʑuʎd͡ʑy]", "ipa")

	def test_supdeuljwi_ph(self):
		self.run_test("숲들쥐", "{{ko-IPA}}", "숩뜰쥐", "ph")
	def test_supdeuljwi_rr(self):
		self.run_test("숲들쥐", "{{ko-IPA}}", "supdeuljwi", "rr")
	def test_supdeuljwi_rrr(self):
		self.run_test("숲들쥐", "{{ko-IPA}}", "supdeuljwi", "rrr")
	def test_supdeuljwi_mr(self):
		self.run_test("숲들쥐", "{{ko-IPA}}", "suptŭljwi", "mr")
	def test_supdeuljwi_yr(self):
		self.run_test("숲들쥐", "{{ko-IPA}}", "swuphtulcwi", "yr")
	def test_supdeuljwi_ipa(self):
		self.run_test("숲들쥐", "{{ko-IPA}}", "[sʰup̚t͈ɯʎd͡ʑɥi] ~ [sʰup̚t͈ɯʎd͡ʑy]", "ipa")

	def test_buksupjwi_ph(self):
		self.run_test("북숲쥐", "{{ko-IPA}}", "북쑵쮜", "ph")
	def test_buksupjwi_rr(self):
		self.run_test("북숲쥐", "{{ko-IPA}}", "buksupjwi", "rr")
	def test_buksupjwi_rrr(self):
		self.run_test("북숲쥐", "{{ko-IPA}}", "bugsupjwi", "rrr")
	def test_buksupjwi_mr(self):
		self.run_test("북숲쥐", "{{ko-IPA}}", "puksupchwi", "mr")
	def test_buksupjwi_yr(self):
		self.run_test("북숲쥐", "{{ko-IPA}}", "puk.swuphcwi", "yr")
	def test_buksupjwi_ipa(self):
		self.run_test("북숲쥐", "{{ko-IPA}}", "[puks͈up̚t͡ɕ͈ɥi] ~ [puks͈up̚t͡ɕ͈y]", "ipa")

	def test_huinneopjeokdaribulgeunjwi_ph(self):
		self.run_test("흰넓적다리붉은쥐", "{{ko-IPA}}", "힌넙쩍따리불근쥐", "ph")
	def test_huinneopjeokdaribulgeunjwi_rr(self):
		self.run_test("흰넓적다리붉은쥐", "{{ko-IPA}}", "huinneopjeokdaribulgeunjwi", "rr")
	def test_huinneopjeokdaribulgeunjwi_rrr(self):
		self.run_test("흰넓적다리붉은쥐", "{{ko-IPA}}", "huinneolbjeogdalibulg'eunjwi", "rrr")
	def test_huinneopjeokdaribulgeunjwi_mr(self):
		self.run_test("흰넓적다리붉은쥐", "{{ko-IPA}}", "hŭinnŏpchŏktaribulgŭnjwi", "mr")
	def test_huinneopjeokdaribulgeunjwi_yr(self):
		self.run_test("흰넓적다리붉은쥐", "{{ko-IPA}}", "huynnelpcektalipulk.un.cwi", "yr")
	def test_huinneopjeokdaribulgeunjwi_ipa(self):
		self.run_test("흰넓적다리붉은쥐", "{{ko-IPA}}", "[çinnʌ̹p̚t͡ɕ͈ʌ̹k̚t͈a̠ɾibuɭɡɯɲd͡ʑɥi] ~ [çinnʌ̹p̚t͡ɕ͈ʌ̹k̚t͈a̠ɾibuɭɡɯɲd͡ʑy]", "ipa")

	def test_keungwibakjwi_ph(self):
		self.run_test("큰귀박쥐", "{{ko-IPA}}", "큰귀박쮜", "ph")
	def test_keungwibakjwi_rr(self):
		self.run_test("큰귀박쥐", "{{ko-IPA}}", "keun'gwibakjwi", "rr")
	def test_keungwibakjwi_rrr(self):
		self.run_test("큰귀박쥐", "{{ko-IPA}}", "keungwibagjwi", "rrr")
	def test_keungwibakjwi_mr(self):
		self.run_test("큰귀박쥐", "{{ko-IPA}}", "k'ŭn'gwibakchwi", "mr")
	def test_keungwibakjwi_yr(self):
		self.run_test("큰귀박쥐", "{{ko-IPA}}", "khunkwipakcwi", "yr")
	def test_keungwibakjwi_ipa(self):
		self.run_test("큰귀박쥐", "{{ko-IPA}}", "[kxɯnɡɥiba̠k̚t͡ɕ͈ɥi] ~ [kxɯnɡyba̠k̚t͡ɕ͈y]", "ipa")

	def test_meoru_ph(self):
		self.run_test("머루", "{{ko-ipa}}", "머루", "ph")
	def test_meoru_rr(self):
		self.run_test("머루", "{{ko-ipa}}", "meoru", "rr")
	def test_meoru_rrr(self):
		self.run_test("머루", "{{ko-ipa}}", "meolu", "rrr")
	def test_meoru_mr(self):
		self.run_test("머루", "{{ko-ipa}}", "mŏru", "mr")
	def test_meoru_yr(self):
		self.run_test("머루", "{{ko-ipa}}", "melwu", "yr")
	def test_meoru_ipa(self):
		self.run_test("머루", "{{ko-ipa}}", "[mʌ̹ɾu]", "ipa")

	def test_anjuaegibakjwi_ph(self):
		self.run_test("안주애기박쥐", "{{ko-IPA}}", "안주애기박쮜/안주에기박쮜", "ph")
	def test_anjuaegibakjwi_rr(self):
		self.run_test("안주애기박쥐", "{{ko-IPA}}", "anjuaegibakjwi", "rr")
	def test_anjuaegibakjwi_rrr(self):
		self.run_test("안주애기박쥐", "{{ko-IPA}}", "anjuaegibagjwi", "rrr")
	def test_anjuaegibakjwi_mr(self):
		self.run_test("안주애기박쥐", "{{ko-IPA}}", "anjuaegibakchwi", "mr")
	def test_anjuaegibakjwi_yr(self):
		self.run_test("안주애기박쥐", "{{ko-IPA}}", "an.cwuaykipakcwi", "yr")
	def test_anjuaegibakjwi_ipa(self):
		self.run_test("안주애기박쥐", "{{ko-IPA}}", "[a̠ɲd͡ʑuɛɡiba̠k̚t͡ɕ͈ɥi] ~ [a̠ɲd͡ʑue̞ɡiba̠k̚t͡ɕ͈ɥi] ~ [a̠ɲd͡ʑuɛɡiba̠k̚t͡ɕ͈y] ~ [a̠ɲd͡ʑue̞ɡiba̠k̚t͡ɕ͈y]", "ipa")

	def test_aegibakjwi_ph(self):
		self.run_test("애기박쥐", "{{ko-IPA}}", "애기박쮜/에기박쮜", "ph")
	def test_aegibakjwi_rr(self):
		self.run_test("애기박쥐", "{{ko-IPA}}", "aegibakjwi", "rr")
	def test_aegibakjwi_rrr(self):
		self.run_test("애기박쥐", "{{ko-IPA}}", "aegibagjwi", "rrr")
	def test_aegibakjwi_mr(self):
		self.run_test("애기박쥐", "{{ko-IPA}}", "aegibakchwi", "mr")
	def test_aegibakjwi_yr(self):
		self.run_test("애기박쥐", "{{ko-IPA}}", "aykipakcwi", "yr")
	def test_aegibakjwi_ipa(self):
		self.run_test("애기박쥐", "{{ko-IPA}}", "[ɛɡiba̠k̚t͡ɕ͈ɥi] ~ [e̞ɡiba̠k̚t͡ɕ͈ɥi] ~ [ɛɡiba̠k̚t͡ɕ͈y] ~ [e̞ɡiba̠k̚t͡ɕ͈y]", "ipa")

	def test_bukbangaegibakjwi_ph(self):
		self.run_test("북방애기박쥐", "{{ko-IPA}}", "북빵애기박쮜/북빵에기박쮜", "ph")
	def test_bukbangaegibakjwi_rr(self):
		self.run_test("북방애기박쥐", "{{ko-IPA}}", "bukbang'aegibakjwi", "rr")
	def test_bukbangaegibakjwi_rrr(self):
		self.run_test("북방애기박쥐", "{{ko-IPA}}", "bugbang'aegibagjwi", "rrr")
	def test_bukbangaegibakjwi_mr(self):
		self.run_test("북방애기박쥐", "{{ko-IPA}}", "pukpangaegibakchwi", "mr")
	def test_bukbangaegibakjwi_yr(self):
		self.run_test("북방애기박쥐", "{{ko-IPA}}", "pukpangaykipakcwi", "yr")
	def test_bukbangaegibakjwi_ipa(self):
		self.run_test("북방애기박쥐", "{{ko-IPA}}", "[puk̚p͈a̠ŋɛɡiba̠k̚t͡ɕ͈ɥi] ~ [puk̚p͈a̠ŋe̞ɡiba̠k̚t͡ɕ͈ɥi] ~ [puk̚p͈a̠ŋɛɡiba̠k̚t͡ɕ͈y] ~ [puk̚p͈a̠ŋe̞ɡiba̠k̚t͡ɕ͈y]", "ipa")

	def test_bukbang_ph(self):
		self.run_test("북방", "{{ko-IPA}}", "북빵", "ph")
	def test_bukbang_rr(self):
		self.run_test("북방", "{{ko-IPA}}", "bukbang", "rr")
	def test_bukbang_rrr(self):
		self.run_test("북방", "{{ko-IPA}}", "bugbang", "rrr")
	def test_bukbang_mr(self):
		self.run_test("북방", "{{ko-IPA}}", "pukpang", "mr")
	def test_bukbang_yr(self):
		self.run_test("북방", "{{ko-IPA}}", "pukpang", "yr")
	def test_bukbang_ipa(self):
		self.run_test("북방", "{{ko-IPA}}", "[puk̚p͈a̠ŋ]", "ipa")

	def test_tokkibakjwi_ph(self):
		self.run_test("토끼박쥐", "{{ko-IPA}}", "토끼박쮜", "ph")
	def test_tokkibakjwi_rr(self):
		self.run_test("토끼박쥐", "{{ko-IPA}}", "tokkibakjwi", "rr")
	def test_tokkibakjwi_rrr(self):
		self.run_test("토끼박쥐", "{{ko-IPA}}", "to'kkibagjwi", "rrr")
	def test_tokkibakjwi_mr(self):
		self.run_test("토끼박쥐", "{{ko-IPA}}", "t'okkibakchwi", "mr")
	def test_tokkibakjwi_yr(self):
		self.run_test("토끼박쥐", "{{ko-IPA}}", "tho.kkipakcwi", "yr")
	def test_tokkibakjwi_ipa(self):
		self.run_test("토끼박쥐", "{{ko-IPA}}", "[tʰo̞k͈iba̠k̚t͡ɕ͈ɥi] ~ [tʰo̞k͈iba̠k̚t͡ɕ͈y]", "ipa")

	def test_keunjipbakjwi_ph(self):
		self.run_test("큰집박쥐", "{{ko-IPA}}", "큰집빡쮜", "ph")
	def test_keunjipbakjwi_rr(self):
		self.run_test("큰집박쥐", "{{ko-IPA}}", "keunjipbakjwi", "rr")
	def test_keunjipbakjwi_rrr(self):
		self.run_test("큰집박쥐", "{{ko-IPA}}", "keunjibbagjwi", "rrr")
	def test_keunjipbakjwi_mr(self):
		self.run_test("큰집박쥐", "{{ko-IPA}}", "k'ŭnjippakchwi", "mr")
	def test_keunjipbakjwi_yr(self):
		self.run_test("큰집박쥐", "{{ko-IPA}}", "khun.cip.pakcwi", "yr")
	def test_keunjipbakjwi_ipa(self):
		self.run_test("큰집박쥐", "{{ko-IPA}}", "[kxɯɲd͡ʑip̚p͈a̠k̚t͡ɕ͈ɥi] ~ [kxɯɲd͡ʑip̚p͈a̠k̚t͡ɕ͈y]", "ipa")

	def test_jipbakjwi_ph(self):
		self.run_test("집박쥐", "{{ko-IPA}}", "집빡쮜", "ph")
	def test_jipbakjwi_rr(self):
		self.run_test("집박쥐", "{{ko-IPA}}", "jipbakjwi", "rr")
	def test_jipbakjwi_rrr(self):
		self.run_test("집박쥐", "{{ko-IPA}}", "jibbagjwi", "rrr")
	def test_jipbakjwi_mr(self):
		self.run_test("집박쥐", "{{ko-IPA}}", "chippakchwi", "mr")
	def test_jipbakjwi_yr(self):
		self.run_test("집박쥐", "{{ko-IPA}}", "cip.pakcwi", "yr")
	def test_jipbakjwi_ipa(self):
		self.run_test("집박쥐", "{{ko-IPA}}", "[t͡ɕip̚p͈a̠k̚t͡ɕ͈ɥi] ~ [t͡ɕip̚p͈a̠k̚t͡ɕ͈y]", "ipa")

	def test_keun_ph(self):
		self.run_test("큰", "{{ko-IPA}}", "큰", "ph")
	def test_keun_rr(self):
		self.run_test("큰", "{{ko-IPA}}", "keun", "rr")
	def test_keun_rrr(self):
		self.run_test("큰", "{{ko-IPA}}", "keun", "rrr")
	def test_keun_mr(self):
		self.run_test("큰", "{{ko-IPA}}", "k'ŭn", "mr")
	def test_keun_yr(self):
		self.run_test("큰", "{{ko-IPA}}", "khun", "yr")
	def test_keun_ipa(self):
		self.run_test("큰", "{{ko-IPA}}", "[kxɯn]", "ipa")

	def test_metbakjwi_ph(self):
		self.run_test("멧박쥐", "{{ko-IPA}}", "멛빡쮜", "ph")
	def test_metbakjwi_rr(self):
		self.run_test("멧박쥐", "{{ko-IPA}}", "metbakjwi", "rr")
	def test_metbakjwi_rrr(self):
		self.run_test("멧박쥐", "{{ko-IPA}}", "mesbagjwi", "rrr")
	def test_metbakjwi_mr(self):
		self.run_test("멧박쥐", "{{ko-IPA}}", "metpakchwi", "mr")
	def test_metbakjwi_yr(self):
		self.run_test("멧박쥐", "{{ko-IPA}}", "meyspakcwi", "yr")
	def test_metbakjwi_ipa(self):
		self.run_test("멧박쥐", "{{ko-IPA}}", "[me̞t̚p͈a̠k̚t͡ɕ͈ɥi] ~ [me̞t̚p͈a̠k̚t͡ɕ͈y]", "ipa")

	def test_huinbaewitsuyeombakjwi_ph(self):
		self.run_test("흰배윗수염박쥐", "{{ko-IPA}}", "힌배윋쑤염박쮜/힌베윋쑤염박쮜", "ph")
	def test_huinbaewitsuyeombakjwi_rr(self):
		self.run_test("흰배윗수염박쥐", "{{ko-IPA}}", "huinbaewitsuyeombakjwi", "rr")
	def test_huinbaewitsuyeombakjwi_rrr(self):
		self.run_test("흰배윗수염박쥐", "{{ko-IPA}}", "huinbaewis'suyeombagjwi", "rrr")
	def test_huinbaewitsuyeombakjwi_mr(self):
		self.run_test("흰배윗수염박쥐", "{{ko-IPA}}", "hŭinbaewissuyŏmbakchwi", "mr")
	def test_huinbaewitsuyeombakjwi_yr(self):
		self.run_test("흰배윗수염박쥐", "{{ko-IPA}}", "huynpaywis.swu.yempakcwi", "yr")
	def test_huinbaewitsuyeombakjwi_ipa(self):
		self.run_test("흰배윗수염박쥐", "{{ko-IPA}}", "[çinbɛɥiss͈ujʌ̹mba̠k̚t͡ɕ͈ɥi] ~ [çinbe̞ɥiss͈ujʌ̹mba̠k̚t͡ɕ͈ɥi] ~ [çinbɛyss͈ujʌ̹mba̠k̚t͡ɕ͈y] ~ [çinbe̞yss͈ujʌ̹mba̠k̚t͡ɕ͈y]", "ipa")

	def test_witsuyeombakjwi_ph(self):
		self.run_test("윗수염박쥐", "{{ko-IPA}}", "윋쑤염박쮜", "ph")
	def test_witsuyeombakjwi_rr(self):
		self.run_test("윗수염박쥐", "{{ko-IPA}}", "witsuyeombakjwi", "rr")
	def test_witsuyeombakjwi_rrr(self):
		self.run_test("윗수염박쥐", "{{ko-IPA}}", "wis'suyeombagjwi", "rrr")
	def test_witsuyeombakjwi_mr(self):
		self.run_test("윗수염박쥐", "{{ko-IPA}}", "wissuyŏmbakchwi", "mr")
	def test_witsuyeombakjwi_yr(self):
		self.run_test("윗수염박쥐", "{{ko-IPA}}", "wis.swu.yempakcwi", "yr")
	def test_witsuyeombakjwi_ipa(self):
		self.run_test("윗수염박쥐", "{{ko-IPA}}", "[ɥiss͈ujʌ̹mba̠k̚t͡ɕ͈ɥi] ~ [yss͈ujʌ̹mba̠k̚t͡ɕ͈y]", "ipa")

	def test_keunbarwitsuyeombakjwi_ph(self):
		self.run_test("큰발윗수염박쥐", "{{ko-IPA}}", "큰바륃쑤염박쮜", "ph")
	def test_keunbarwitsuyeombakjwi_rr(self):
		self.run_test("큰발윗수염박쥐", "{{ko-IPA}}", "keunbarwitsuyeombakjwi", "rr")
	def test_keunbarwitsuyeombakjwi_rrr(self):
		self.run_test("큰발윗수염박쥐", "{{ko-IPA}}", "keunbal'wis'suyeombagjwi", "rrr")
	def test_keunbarwitsuyeombakjwi_mr(self):
		self.run_test("큰발윗수염박쥐", "{{ko-IPA}}", "k'ŭnbarwissuyŏmbakchwi", "mr")
	def test_keunbarwitsuyeombakjwi_yr(self):
		self.run_test("큰발윗수염박쥐", "{{ko-IPA}}", "khunpal.wis.swu.yempakcwi", "yr")
	def test_keunbarwitsuyeombakjwi_ipa(self):
		self.run_test("큰발윗수염박쥐", "{{ko-IPA}}", "[kxɯnba̠ɾɥiss͈ujʌ̹mba̠k̚t͡ɕ͈ɥi] ~ [kxɯnba̠ɾyss͈ujʌ̹mba̠k̚t͡ɕ͈y]", "ipa")

	def test_jageunwitsuyeombakjwi_ph(self):
		self.run_test("작은윗수염박쥐", "{{ko-IPA}}", "자그뉟쑤염박쮜", "ph")
	def test_jageunwitsuyeombakjwi_rr(self):
		self.run_test("작은윗수염박쥐", "{{ko-IPA}}", "jageunwitsuyeombakjwi", "rr")
	def test_jageunwitsuyeombakjwi_rrr(self):
		self.run_test("작은윗수염박쥐", "{{ko-IPA}}", "jag'eun'wis'suyeombagjwi", "rrr")
	def test_jageunwitsuyeombakjwi_mr(self):
		self.run_test("작은윗수염박쥐", "{{ko-IPA}}", "chagŭnwissuyŏmbakchwi", "mr")
	def test_jageunwitsuyeombakjwi_yr(self):
		self.run_test("작은윗수염박쥐", "{{ko-IPA}}", "cak.un.wis.swu.yempakcwi", "yr")
	def test_jageunwitsuyeombakjwi_ipa(self):
		self.run_test("작은윗수염박쥐", "{{ko-IPA}}", "[t͡ɕa̠ɡɯnɥiss͈ujʌ̹mba̠k̚t͡ɕ͈ɥi] ~ [t͡ɕa̠ɡɯnyss͈ujʌ̹mba̠k̚t͡ɕ͈y]", "ipa")


	def test_ginkkoriwitsuyeombakjwi_ph(self):
		self.run_test("긴꼬리윗수염박쥐", "{{ko-IPA}}", "긴꼬리윋쑤염박쮜", "ph")
	def test_ginkkoriwitsuyeombakjwi_rr(self):
		self.run_test("긴꼬리윗수염박쥐", "{{ko-IPA}}", "ginkkoriwitsuyeombakjwi", "rr")
	def test_ginkkoriwitsuyeombakjwi_rrr(self):
		self.run_test("긴꼬리윗수염박쥐", "{{ko-IPA}}", "ginkkoliwis'suyeombagjwi", "rrr")
	def test_ginkkoriwitsuyeombakjwi_mr(self):
		self.run_test("긴꼬리윗수염박쥐", "{{ko-IPA}}", "kinkkoriwissuyŏmbakchwi", "mr")
	def test_ginkkoriwitsuyeombakjwi_yr(self):
		self.run_test("긴꼬리윗수염박쥐", "{{ko-IPA}}", "kinkkoliwis.swu.yempakcwi", "yr")
	def test_ginkkoriwitsuyeombakjwi_ipa(self):
		self.run_test("긴꼬리윗수염박쥐", "{{ko-IPA}}", "[kink͈o̞ɾiɥiss͈ujʌ̹mba̠k̚t͡ɕ͈ɥi] ~ [kink͈o̞ɾiyss͈ujʌ̹mba̠k̚t͡ɕ͈y]", "ipa")

	def test_saengbakjwi_ph(self):
		self.run_test("생박쥐", "{{ko-IPA}}", "생박쮜/셍박쮜", "ph")
	def test_saengbakjwi_rr(self):
		self.run_test("생박쥐", "{{ko-IPA}}", "saengbakjwi", "rr")
	def test_saengbakjwi_rrr(self):
		self.run_test("생박쥐", "{{ko-IPA}}", "saengbagjwi", "rrr")
	def test_saengbakjwi_mr(self):
		self.run_test("생박쥐", "{{ko-IPA}}", "saengbakchwi", "mr")
	def test_saengbakjwi_yr(self):
		self.run_test("생박쥐", "{{ko-IPA}}", "sayngpakcwi", "yr")
	def test_saengbakjwi_ipa(self):
		self.run_test("생박쥐", "{{ko-IPA}}", "[sʰɛŋba̠k̚t͡ɕ͈ɥi] ~ [sʰe̞ŋba̠k̚t͡ɕ͈ɥi] ~ [sʰɛŋba̠k̚t͡ɕ͈y] ~ [sʰe̞ŋba̠k̚t͡ɕ͈y]", "ipa")

	def test_gobayasibakjwi_ph(self):
		self.run_test("고바야시박쥐", "{{ko-IPA}}", "고바야시박쮜", "ph")
	def test_gobayasibakjwi_rr(self):
		self.run_test("고바야시박쥐", "{{ko-IPA}}", "gobayasibakjwi", "rr")
	def test_gobayasibakjwi_rrr(self):
		self.run_test("고바야시박쥐", "{{ko-IPA}}", "gobayasibagjwi", "rrr")
	def test_gobayasibakjwi_mr(self):
		self.run_test("고바야시박쥐", "{{ko-IPA}}", "kobayasibakchwi", "mr")
	def test_gobayasibakjwi_yr(self):
		self.run_test("고바야시박쥐", "{{ko-IPA}}", "kopa.yasipakcwi", "yr")
	def test_gobayasibakjwi_ipa(self):
		self.run_test("고바야시박쥐", "{{ko-IPA}}", "[ko̞ba̠ja̠ɕʰiba̠k̚t͡ɕ͈ɥi] ~ [ko̞ba̠ja̠ɕʰiba̠k̚t͡ɕ͈y]", "ipa")

	def test_orenjiwitsuyeombakjwi_ph(self):
		self.run_test("오렌지윗수염박쥐", "{{ko-IPA}}", "오렌지윋쑤염박쮜", "ph")
	def test_orenjiwitsuyeombakjwi_rr(self):
		self.run_test("오렌지윗수염박쥐", "{{ko-IPA}}", "orenjiwitsuyeombakjwi", "rr")
	def test_orenjiwitsuyeombakjwi_rrr(self):
		self.run_test("오렌지윗수염박쥐", "{{ko-IPA}}", "olenjiwis'suyeombagjwi", "rrr")
	def test_orenjiwitsuyeombakjwi_mr(self):
		self.run_test("오렌지윗수염박쥐", "{{ko-IPA}}", "orenjiwissuyŏmbakchwi", "mr")
	def test_orenjiwitsuyeombakjwi_yr(self):
		self.run_test("오렌지윗수염박쥐", "{{ko-IPA}}", "oleyn.ciwis.swu.yempakcwi", "yr")
	def test_orenjiwitsuyeombakjwi_ipa(self):
		self.run_test("오렌지윗수염박쥐", "{{ko-IPA}}", "[o̞ɾe̞ɲd͡ʑiɥiss͈ujʌ̹mba̠k̚t͡ɕ͈ɥi] ~ [o̞ɾe̞ɲd͡ʑiyss͈ujʌ̹mba̠k̚t͡ɕ͈y]", "ipa")

	def test_murwitsuyeombakjwi_ph(self):
		self.run_test("물윗수염박쥐", "{{ko-IPA}}", "무륃쑤염박쮜", "ph")
	def test_murwitsuyeombakjwi_rr(self):
		self.run_test("물윗수염박쥐", "{{ko-IPA}}", "murwitsuyeombakjwi", "rr")
	def test_murwitsuyeombakjwi_rrr(self):
		self.run_test("물윗수염박쥐", "{{ko-IPA}}", "mul'wis'suyeombagjwi", "rrr")
	def test_murwitsuyeombakjwi_mr(self):
		self.run_test("물윗수염박쥐", "{{ko-IPA}}", "murwissuyŏmbakchwi", "mr")
	def test_murwitsuyeombakjwi_yr(self):
		self.run_test("물윗수염박쥐", "{{ko-IPA}}", "mul.wis.swu.yempakcwi", "yr")
	def test_murwitsuyeombakjwi_ipa(self):
		self.run_test("물윗수염박쥐", "{{ko-IPA}}", "[muɾɥiss͈ujʌ̹mba̠k̚t͡ɕ͈ɥi] ~ [muɾyss͈ujʌ̹mba̠k̚t͡ɕ͈y]", "ipa")

	def test_gwankobakjwi_ph(self):
		self.run_test("관코박쥐", "{{ko-IPA}}", "관코박쮜", "ph")
	def test_gwankobakjwi_rr(self):
		self.run_test("관코박쥐", "{{ko-IPA}}", "gwankobakjwi", "rr")
	def test_gwankobakjwi_rrr(self):
		self.run_test("관코박쥐", "{{ko-IPA}}", "gwankobagjwi", "rrr")
	def test_gwankobakjwi_mr(self):
		self.run_test("관코박쥐", "{{ko-IPA}}", "kwank'obakchwi", "mr")
	def test_gwankobakjwi_yr(self):
		self.run_test("관코박쥐", "{{ko-IPA}}", "kwankhopakcwi", "yr")
	def test_gwankobakjwi_ipa(self):
		self.run_test("관코박쥐", "{{ko-IPA}}", "[kwa̠nkʰo̞ba̠k̚t͡ɕ͈ɥi] ~ [kwa̠nkʰo̞ba̠k̚t͡ɕ͈y]", "ipa")

	def test_jageungwankobakjwi_ph(self):
		self.run_test("작은관코박쥐", "{{ko-IPA}}", "자근관코박쮜", "ph")
	def test_jageungwankobakjwi_rr(self):
		self.run_test("작은관코박쥐", "{{ko-IPA}}", "jageun'gwankobakjwi", "rr")
	def test_jageungwankobakjwi_rrr(self):
		self.run_test("작은관코박쥐", "{{ko-IPA}}", "jag'eungwankobagjwi", "rrr")
	def test_jageungwankobakjwi_mr(self):
		self.run_test("작은관코박쥐", "{{ko-IPA}}", "chagŭn'gwank'obakchwi", "mr")
	def test_jageungwankobakjwi_yr(self):
		self.run_test("작은관코박쥐", "{{ko-IPA}}", "cak.unkwankhopakcwi", "yr")
	def test_jageungwankobakjwi_ipa(self):
		self.run_test("작은관코박쥐", "{{ko-IPA}}", "[t͡ɕa̠ɡɯnɡwa̠nkʰo̞ba̠k̚t͡ɕ͈ɥi] ~ [t͡ɕa̠ɡɯnɡwa̠nkʰo̞ba̠k̚t͡ɕ͈y]", "ipa")

	def test_ginnalgaebakjwi_ph(self):
		self.run_test("긴날개박쥐", "{{ko-IPA}}", "긴날개박쮜/긴날게박쮜", "ph")
	def test_ginnalgaebakjwi_rr(self):
		self.run_test("긴날개박쥐", "{{ko-IPA}}", "ginnalgaebakjwi", "rr")
	def test_ginnalgaebakjwi_rrr(self):
		self.run_test("긴날개박쥐", "{{ko-IPA}}", "ginnalgaebagjwi", "rrr")
	def test_ginnalgaebakjwi_mr(self):
		self.run_test("긴날개박쥐", "{{ko-IPA}}", "kinnalgaebakchwi", "mr")
	def test_ginnalgaebakjwi_yr(self):
		self.run_test("긴날개박쥐", "{{ko-IPA}}", "kinnal.kaypakcwi", "yr")
	def test_ginnalgaebakjwi_ipa(self):
		self.run_test("긴날개박쥐", "{{ko-IPA}}", "[kinna̠ɭɡɛba̠k̚t͡ɕ͈ɥi] ~ [kinna̠ɭɡe̞ba̠k̚t͡ɕ͈ɥi] ~ [kinna̠ɭɡɛba̠k̚t͡ɕ͈y] ~ [kinna̠ɭɡe̞ba̠k̚t͡ɕ͈y]", "ipa")

	def test_mundungibakjwi_ph(self):
		self.run_test("문둥이박쥐", "{{ko-IPA}}", "문둥이박쮜", "ph")
	def test_mundungibakjwi_rr(self):
		self.run_test("문둥이박쥐", "{{ko-IPA}}", "mundung'ibakjwi", "rr")
	def test_mundungibakjwi_rrr(self):
		self.run_test("문둥이박쥐", "{{ko-IPA}}", "mundung'ibagjwi", "rrr")
	def test_mundungibakjwi_mr(self):
		self.run_test("문둥이박쥐", "{{ko-IPA}}", "mundungibakchwi", "mr")
	def test_mundungibakjwi_yr(self):
		self.run_test("문둥이박쥐", "{{ko-IPA}}", "muntwungipakcwi", "yr")
	def test_mundungibakjwi_ipa(self):
		self.run_test("문둥이박쥐", "{{ko-IPA}}", "[munduŋiba̠k̚t͡ɕ͈ɥi] ~ [munduŋiba̠k̚t͡ɕ͈y]", "ipa")

	def test_gireuda_ph(self):
		self.run_test("기르다", "{{ko-IPA}}", "기르다", "ph")
	def test_gireuda_rr(self):
		self.run_test("기르다", "{{ko-IPA}}", "gireuda", "rr")
	def test_gireuda_rrr(self):
		self.run_test("기르다", "{{ko-IPA}}", "gileuda", "rrr")
	def test_gireuda_mr(self):
		self.run_test("기르다", "{{ko-IPA}}", "kirŭda", "mr")
	def test_gireuda_yr(self):
		self.run_test("기르다", "{{ko-IPA}}", "kiluta", "yr")
	def test_gireuda_ipa(self):
		self.run_test("기르다", "{{ko-IPA}}", "[kiɾɯda̠]", "ipa")

	def test_deung_ph(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "등", "ph")
	def test_deung_rr(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "deung", "rr")
	def test_deung_rrr(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "deung", "rrr")
	def test_deung_mr(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "tŭng", "mr")
	def test_deung_yr(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "tung", "yr")
	def test_deung_ipa(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "[tɯŋ]", "ipa")
	def test_deung_ph_1(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "등", "ph")
	def test_deung_rr_1(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "deung", "rr")
	def test_deung_rrr_1(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "deung", "rrr")
	def test_deung_mr_1(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "tŭng", "mr")
	def test_deung_yr_1(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "tung", "yr")
	def test_deung_ipa_1(self):
		self.run_test("등", "{{ko-IPA|a=Ko-등.ogg}}", "[tɯŋ]", "ipa")

	def test_gwanbakjwi_ph(self):
		self.run_test("관박쥐", "{{ko-IPA}}", "관박쮜", "ph")
	def test_gwanbakjwi_rr(self):
		self.run_test("관박쥐", "{{ko-IPA}}", "gwanbakjwi", "rr")
	def test_gwanbakjwi_rrr(self):
		self.run_test("관박쥐", "{{ko-IPA}}", "gwanbagjwi", "rrr")
	def test_gwanbakjwi_mr(self):
		self.run_test("관박쥐", "{{ko-IPA}}", "kwanbakchwi", "mr")
	def test_gwanbakjwi_yr(self):
		self.run_test("관박쥐", "{{ko-IPA}}", "kwanpakcwi", "yr")
	def test_gwanbakjwi_ipa(self):
		self.run_test("관박쥐", "{{ko-IPA}}", "[kwa̠nba̠k̚t͡ɕ͈ɥi] ~ [kwa̠nba̠k̚t͡ɕ͈y]", "ipa")

	def test_ginbaltopcheomseo_ph(self):
		self.run_test("긴발톱첨서", "{{ko-IPA}}", "긴발톱첨서", "ph")
	def test_ginbaltopcheomseo_rr(self):
		self.run_test("긴발톱첨서", "{{ko-IPA}}", "ginbaltopcheomseo", "rr")
	def test_ginbaltopcheomseo_rrr(self):
		self.run_test("긴발톱첨서", "{{ko-IPA}}", "ginbaltobcheomseo", "rrr")
	def test_ginbaltopcheomseo_mr(self):
		self.run_test("긴발톱첨서", "{{ko-IPA}}", "kinbalt'opch'ŏmsŏ", "mr")
	def test_ginbaltopcheomseo_yr(self):
		self.run_test("긴발톱첨서", "{{ko-IPA}}", "kinpal.thopchemse", "yr")
	def test_ginbaltopcheomseo_ipa(self):
		self.run_test("긴발톱첨서", "{{ko-IPA}}", "[kinba̠ɭtʰo̞p̚t͡ɕʰʌ̹msʰʌ̹]", "ipa")

	def test_keuncheomseo_ph(self):
		self.run_test("큰첨서", "{{ko-IPA}}", "큰첨서", "ph")
	def test_keuncheomseo_rr(self):
		self.run_test("큰첨서", "{{ko-IPA}}", "keuncheomseo", "rr")
	def test_keuncheomseo_rrr(self):
		self.run_test("큰첨서", "{{ko-IPA}}", "keuncheomseo", "rrr")
	def test_keuncheomseo_mr(self):
		self.run_test("큰첨서", "{{ko-IPA}}", "k'ŭnch'ŏmsŏ", "mr")
	def test_keuncheomseo_yr(self):
		self.run_test("큰첨서", "{{ko-IPA}}", "khun.chemse", "yr")
	def test_keuncheomseo_ipa(self):
		self.run_test("큰첨서", "{{ko-IPA}}", "[kxɯɲt͡ɕʰʌ̹msʰʌ̹]", "ipa")


	def test_kkomadwijwi_ph(self):
		self.run_test("꼬마뒤쥐", "{{ko-IPA}}", "꼬마뒤쥐", "ph")
	def test_kkomadwijwi_rr(self):
		self.run_test("꼬마뒤쥐", "{{ko-IPA}}", "kkomadwijwi", "rr")
	def test_kkomadwijwi_rrr(self):
		self.run_test("꼬마뒤쥐", "{{ko-IPA}}", "kkomadwijwi", "rrr")
	def test_kkomadwijwi_mr(self):
		self.run_test("꼬마뒤쥐", "{{ko-IPA}}", "kkomadwijwi", "mr")
	def test_kkomadwijwi_yr(self):
		self.run_test("꼬마뒤쥐", "{{ko-IPA}}", "kkomatwicwi", "yr")
	def test_kkomadwijwi_ipa(self):
		self.run_test("꼬마뒤쥐", "{{ko-IPA}}", "[k͈o̞ma̠dɥid͡ʑɥi] ~ [k͈o̞ma̠dyd͡ʑy]", "ipa")

	def test_keunbaldwijwi_ph(self):
		self.run_test("큰발뒤쥐", "{{ko-IPA}}", "큰발뒤쥐", "ph")
	def test_keunbaldwijwi_rr(self):
		self.run_test("큰발뒤쥐", "{{ko-IPA}}", "keunbaldwijwi", "rr")
	def test_keunbaldwijwi_rrr(self):
		self.run_test("큰발뒤쥐", "{{ko-IPA}}", "keunbaldwijwi", "rrr")
	def test_keunbaldwijwi_mr(self):
		self.run_test("큰발뒤쥐", "{{ko-IPA}}", "k'ŭnbaldwijwi", "mr")
	def test_keunbaldwijwi_yr(self):
		self.run_test("큰발뒤쥐", "{{ko-IPA}}", "khunpaltwicwi", "yr")
	def test_keunbaldwijwi_ipa(self):
		self.run_test("큰발뒤쥐", "{{ko-IPA}}", "[kxɯnba̠ɭdɥid͡ʑɥi] ~ [kxɯnba̠ɭdyd͡ʑy]", "ipa")

	def test_dwijwi_ph(self):
		self.run_test("뒤쥐", "{{ko-IPA}}", "뒤쥐", "ph")
	def test_dwijwi_rr(self):
		self.run_test("뒤쥐", "{{ko-IPA}}", "dwijwi", "rr")
	def test_dwijwi_rrr(self):
		self.run_test("뒤쥐", "{{ko-IPA}}", "dwijwi", "rrr")
	def test_dwijwi_mr(self):
		self.run_test("뒤쥐", "{{ko-IPA}}", "twijwi", "mr")
	def test_dwijwi_yr(self):
		self.run_test("뒤쥐", "{{ko-IPA}}", "twicwi", "yr")
	def test_dwijwi_ipa(self):
		self.run_test("뒤쥐", "{{ko-IPA}}", "[tɥid͡ʑɥi] ~ [tyd͡ʑy]", "ipa")

	def test_soedwijwi_ph(self):
		self.run_test("쇠뒤쥐", "{{ko-IPA}}", "쉐뒤쥐/쇠뒤쥐", "ph")
	def test_soedwijwi_rr(self):
		self.run_test("쇠뒤쥐", "{{ko-IPA}}", "soedwijwi", "rr")
	def test_soedwijwi_rrr(self):
		self.run_test("쇠뒤쥐", "{{ko-IPA}}", "soedwijwi", "rrr")
	def test_soedwijwi_mr(self):
		self.run_test("쇠뒤쥐", "{{ko-IPA}}", "soedwijwi", "mr")
	def test_soedwijwi_yr(self):
		self.run_test("쇠뒤쥐", "{{ko-IPA}}", "soytwicwi", "yr")
	def test_soedwijwi_ipa(self):
		self.run_test("쇠뒤쥐", "{{ko-IPA}}", "[sʰwe̞dɥid͡ʑɥi] ~ [sʰø̞dɥid͡ʑɥi] ~ [sʰwe̞dyd͡ʑy] ~ [sʰø̞dyd͡ʑy]", "ipa")

	def test_baekdusandwijwi_ph(self):
		self.run_test("백두산뒤쥐", "{{ko-IPA}}", "백뚜산뒤쥐/벡뚜산뒤쥐", "ph")
	def test_baekdusandwijwi_rr(self):
		self.run_test("백두산뒤쥐", "{{ko-IPA}}", "baekdusandwijwi", "rr")
	def test_baekdusandwijwi_rrr(self):
		self.run_test("백두산뒤쥐", "{{ko-IPA}}", "baegdusandwijwi", "rrr")
	def test_baekdusandwijwi_mr(self):
		self.run_test("백두산뒤쥐", "{{ko-IPA}}", "paektusandwijwi", "mr")
	def test_baekdusandwijwi_yr(self):
		self.run_test("백두산뒤쥐", "{{ko-IPA}}", "payktwusantwicwi", "yr")
	def test_baekdusandwijwi_ipa(self):
		self.run_test("백두산뒤쥐", "{{ko-IPA}}", "[pɛk̚t͈usʰa̠ndɥid͡ʑɥi] ~ [pe̞k̚t͈usʰa̠ndɥid͡ʑɥi] ~ [pɛk̚t͈usʰa̠ndyd͡ʑy] ~ [pe̞k̚t͈usʰa̠ndyd͡ʑy]", "ipa")

	def test_gaetcheomseo_ph(self):
		self.run_test("갯첨서", "{{ko-IPA}}", "갣첨서/겓첨서", "ph")
	def test_gaetcheomseo_rr(self):
		self.run_test("갯첨서", "{{ko-IPA}}", "gaetcheomseo", "rr")
	def test_gaetcheomseo_rrr(self):
		self.run_test("갯첨서", "{{ko-IPA}}", "gaescheomseo", "rrr")
	def test_gaetcheomseo_mr(self):
		self.run_test("갯첨서", "{{ko-IPA}}", "kaetch'ŏmsŏ", "mr")
	def test_gaetcheomseo_yr(self):
		self.run_test("갯첨서", "{{ko-IPA}}", "kayschemse", "yr")
	def test_gaetcheomseo_ipa(self):
		self.run_test("갯첨서", "{{ko-IPA}}", "[kɛt̚t͡ɕʰʌ̹msʰʌ̹] ~ [ke̞t̚t͡ɕʰʌ̹msʰʌ̹]", "ipa")

	def test_jageunttatjwi_ph(self):
		self.run_test("작은땃쥐", "{{ko-IPA}}", "자근딷쮜", "ph")
	def test_jageunttatjwi_rr(self):
		self.run_test("작은땃쥐", "{{ko-IPA}}", "jageunttatjwi", "rr")
	def test_jageunttatjwi_rrr(self):
		self.run_test("작은땃쥐", "{{ko-IPA}}", "jag'eunttasjwi", "rrr")
	def test_jageunttatjwi_mr(self):
		self.run_test("작은땃쥐", "{{ko-IPA}}", "chagŭnttatchwi", "mr")
	def test_jageunttatjwi_yr(self):
		self.run_test("작은땃쥐", "{{ko-IPA}}", "cak.unttascwi", "yr")
	def test_jageunttatjwi_ipa(self):
		self.run_test("작은땃쥐", "{{ko-IPA}}", "[t͡ɕa̠ɡɯnt͈a̠t̚t͡ɕ͈ɥi] ~ [t͡ɕa̠ɡɯnt͈a̠t̚t͡ɕ͈y]", "ipa")

	def test_ttatjwi_ph(self):
		self.run_test("땃쥐", "{{ko-IPA}}", "딷쮜", "ph")
	def test_ttatjwi_rr(self):
		self.run_test("땃쥐", "{{ko-IPA}}", "ttatjwi", "rr")
	def test_ttatjwi_rrr(self):
		self.run_test("땃쥐", "{{ko-IPA}}", "ttasjwi", "rrr")
	def test_ttatjwi_mr(self):
		self.run_test("땃쥐", "{{ko-IPA}}", "ttatchwi", "mr")
	def test_ttatjwi_yr(self):
		self.run_test("땃쥐", "{{ko-IPA}}", "ttascwi", "yr")
	def test_ttatjwi_ipa(self):
		self.run_test("땃쥐", "{{ko-IPA}}", "[t͈a̠t̚t͡ɕ͈ɥi] ~ [t͈a̠t̚t͡ɕ͈y]", "ipa")

	def test_jejuttatjwi_ph(self):
		self.run_test("제주땃쥐", "{{ko-IPA}}", "제주딷쮜", "ph")
	def test_jejuttatjwi_rr(self):
		self.run_test("제주땃쥐", "{{ko-IPA}}", "jejuttatjwi", "rr")
	def test_jejuttatjwi_rrr(self):
		self.run_test("제주땃쥐", "{{ko-IPA}}", "jeju'ttasjwi", "rrr")
	def test_jejuttatjwi_mr(self):
		self.run_test("제주땃쥐", "{{ko-IPA}}", "chejuttatchwi", "mr")
	def test_jejuttatjwi_yr(self):
		self.run_test("제주땃쥐", "{{ko-IPA}}", "ceycwu.ttascwi", "yr")
	def test_jejuttatjwi_ipa(self):
		self.run_test("제주땃쥐", "{{ko-IPA}}", "[t͡ɕe̞d͡ʑut͈a̠t̚t͡ɕ͈ɥi] ~ [t͡ɕe̞d͡ʑut͈a̠t̚t͡ɕ͈y]", "ipa")

	def test_dudeoji_ph(self):
		self.run_test("두더지", "{{ko-IPA}}", "두더지", "ph")
	def test_dudeoji_rr(self):
		self.run_test("두더지", "{{ko-IPA}}", "dudeoji", "rr")
	def test_dudeoji_rrr(self):
		self.run_test("두더지", "{{ko-IPA}}", "dudeoji", "rrr")
	def test_dudeoji_mr(self):
		self.run_test("두더지", "{{ko-IPA}}", "tudŏji", "mr")
	def test_dudeoji_yr(self):
		self.run_test("두더지", "{{ko-IPA}}", "twuteci", "yr")
	def test_dudeoji_ipa(self):
		self.run_test("두더지", "{{ko-IPA}}", "[tudʌ̹d͡ʑi]", "ipa")

	def test_hyanggorae_ph(self):
		self.run_test("향고래", "{{ko-IPA}}", "향고래/향고레", "ph")
	def test_hyanggorae_rr(self):
		self.run_test("향고래", "{{ko-IPA}}", "hyanggorae", "rr")
	def test_hyanggorae_rrr(self):
		self.run_test("향고래", "{{ko-IPA}}", "hyanggolae", "rrr")
	def test_hyanggorae_mr(self):
		self.run_test("향고래", "{{ko-IPA}}", "hyanggorae", "mr")
	def test_hyanggorae_yr(self):
		self.run_test("향고래", "{{ko-IPA}}", "hyangkolay", "yr")
	def test_hyanggorae_ipa(self):
		self.run_test("향고래", "{{ko-IPA}}", "[ça̠ŋɡo̞ɾɛ] ~ [ça̠ŋɡo̞ɾe̞]", "ipa")

	def test_keunburigorae_ph(self):
		self.run_test("큰부리고래", "{{ko-IPA}}", "큰부리고래/큰부리고레", "ph")
	def test_keunburigorae_rr(self):
		self.run_test("큰부리고래", "{{ko-IPA}}", "keunburigorae", "rr")
	def test_keunburigorae_rrr(self):
		self.run_test("큰부리고래", "{{ko-IPA}}", "keunbuligolae", "rrr")
	def test_keunburigorae_mr(self):
		self.run_test("큰부리고래", "{{ko-IPA}}", "k'ŭnburigorae", "mr")
	def test_keunburigorae_yr(self):
		self.run_test("큰부리고래", "{{ko-IPA}}", "khunpulikolay", "yr")
	def test_keunburigorae_ipa(self):
		self.run_test("큰부리고래", "{{ko-IPA}}", "[kxɯnbuɾiɡo̞ɾɛ] ~ [kxɯnbuɾiɡo̞ɾe̞]", "ipa")

	def test_burigorae_ph(self):
		self.run_test("부리고래", "{{ko-IPA}}", "부리고래/부리고레", "ph")
	def test_burigorae_rr(self):
		self.run_test("부리고래", "{{ko-IPA}}", "burigorae", "rr")
	def test_burigorae_rrr(self):
		self.run_test("부리고래", "{{ko-IPA}}", "buligolae", "rrr")
	def test_burigorae_mr(self):
		self.run_test("부리고래", "{{ko-IPA}}", "purigorae", "mr")
	def test_burigorae_yr(self):
		self.run_test("부리고래", "{{ko-IPA}}", "pulikolay", "yr")
	def test_burigorae_ipa(self):
		self.run_test("부리고래", "{{ko-IPA}}", "[puɾiɡo̞ɾɛ] ~ [puɾiɡo̞ɾe̞]", "ipa")

	def test_minburigorae_ph(self):
		self.run_test("민부리고래", "{{ko-IPA}}", "민부리고래/민부리고레", "ph")
	def test_minburigorae_rr(self):
		self.run_test("민부리고래", "{{ko-IPA}}", "minburigorae", "rr")
	def test_minburigorae_rrr(self):
		self.run_test("민부리고래", "{{ko-IPA}}", "minbuligolae", "rrr")
	def test_minburigorae_mr(self):
		self.run_test("민부리고래", "{{ko-IPA}}", "minburigorae", "mr")
	def test_minburigorae_yr(self):
		self.run_test("민부리고래", "{{ko-IPA}}", "minpulikolay", "yr")
	def test_minburigorae_ipa(self):
		self.run_test("민부리고래", "{{ko-IPA}}", "[minbuɾiɡo̞ɾɛ] ~ [minbuɾiɡo̞ɾe̞]", "ipa")

	def test_keunippalburigorae_ph(self):
		self.run_test("큰이빨부리고래", "{{ko-IPA}}", "크니빨부리고래/크니빨부리고레", "ph")
	def test_keunippalburigorae_rr(self):
		self.run_test("큰이빨부리고래", "{{ko-IPA}}", "keunippalburigorae", "rr")
	def test_keunippalburigorae_rrr(self):
		self.run_test("큰이빨부리고래", "{{ko-IPA}}", "keun'i'ppalbuligolae", "rrr")
	def test_keunippalburigorae_mr(self):
		self.run_test("큰이빨부리고래", "{{ko-IPA}}", "k'ŭnippalburigorae", "mr")
	def test_keunippalburigorae_yr(self):
		self.run_test("큰이빨부리고래", "{{ko-IPA}}", "khun.i.ppal.pulikolay", "yr")
	def test_keunippalburigorae_ipa(self):
		self.run_test("큰이빨부리고래", "{{ko-IPA}}", "[kxɯnip͈a̠ɭbuɾiɡo̞ɾɛ] ~ [kxɯnip͈a̠ɭbuɾiɡo̞ɾe̞]", "ipa")

	def test_hokburigorae_ph(self):
		self.run_test("혹부리고래", "{{ko-IPA}}", "혹뿌리고래/혹뿌리고레", "ph")
	def test_hokburigorae_rr(self):
		self.run_test("혹부리고래", "{{ko-IPA}}", "hokburigorae", "rr")
	def test_hokburigorae_rrr(self):
		self.run_test("혹부리고래", "{{ko-IPA}}", "hogbuligolae", "rrr")
	def test_hokburigorae_mr(self):
		self.run_test("혹부리고래", "{{ko-IPA}}", "hokpurigorae", "mr")
	def test_hokburigorae_yr(self):
		self.run_test("혹부리고래", "{{ko-IPA}}", "hokpulikolay", "yr")
	def test_hokburigorae_ipa(self):
		self.run_test("혹부리고래", "{{ko-IPA}}", "[ɸʷo̞k̚p͈uɾiɡo̞ɾɛ] ~ [ɸʷo̞k̚p͈uɾiɡo̞ɾe̞]", "ipa")

	def test_inmom_ph(self):
		self.run_test("잇몸", "{{ko-IPA}}", "인몸", "ph")
	def test_inmom_rr(self):
		self.run_test("잇몸", "{{ko-IPA}}", "inmom", "rr")
	def test_inmom_rrr(self):
		self.run_test("잇몸", "{{ko-IPA}}", "ismom", "rrr")
	def test_inmom_mr(self):
		self.run_test("잇몸", "{{ko-IPA}}", "inmom", "mr")
	def test_inmom_yr(self):
		self.run_test("잇몸", "{{ko-IPA}}", "ismom", "yr")
	def test_inmom_ipa(self):
		self.run_test("잇몸", "{{ko-IPA}}", "[inmo̞m]", "ipa")


	def test_soehyanggorae_ph(self):
		self.run_test("쇠향고래", "{{ko-IPA}}", "쉐향고래/쇠향고래/쉐향고레/쇠향고레", "ph")
	def test_soehyanggorae_rr(self):
		self.run_test("쇠향고래", "{{ko-IPA}}", "soehyanggorae", "rr")
	def test_soehyanggorae_rrr(self):
		self.run_test("쇠향고래", "{{ko-IPA}}", "soehyanggolae", "rrr")
	def test_soehyanggorae_mr(self):
		self.run_test("쇠향고래", "{{ko-IPA}}", "soehyanggorae", "mr")
	def test_soehyanggorae_yr(self):
		self.run_test("쇠향고래", "{{ko-IPA}}", "soyhyangkolay", "yr")
	def test_soehyanggorae_ipa(self):
		self.run_test("쇠향고래", "{{ko-IPA}}", "[sʰwe̞ʝa̠ŋɡo̞ɾɛ] ~ [sʰø̞ʝa̠ŋɡo̞ɾɛ] ~ [sʰwe̞ʝa̠ŋɡo̞ɾe̞] ~ [sʰø̞ʝa̠ŋɡo̞ɾe̞]", "ipa")

	def test_ginburichamdolgorae_ph(self):
		self.run_test("긴부리참돌고래", "{{ko-IPA}}", "긴부리참돌고래/긴부리참돌고레", "ph")
	def test_ginburichamdolgorae_rr(self):
		self.run_test("긴부리참돌고래", "{{ko-IPA}}", "ginburichamdolgorae", "rr")
	def test_ginburichamdolgorae_rrr(self):
		self.run_test("긴부리참돌고래", "{{ko-IPA}}", "ginbulichamdolgolae", "rrr")
	def test_ginburichamdolgorae_mr(self):
		self.run_test("긴부리참돌고래", "{{ko-IPA}}", "kinburich'amdolgorae", "mr")
	def test_ginburichamdolgorae_yr(self):
		self.run_test("긴부리참돌고래", "{{ko-IPA}}", "kinpuli.chamtol.kolay", "yr")
	def test_ginburichamdolgorae_ipa(self):
		self.run_test("긴부리참돌고래", "{{ko-IPA}}", "[kinbuɾit͡ɕʰa̠mdo̞ɭɡo̞ɾɛ] ~ [kinbuɾit͡ɕʰa̠mdo̞ɭɡo̞ɾe̞]", "ipa")

	def test_beomgorae_ph(self):
		self.run_test("범고래", "{{ko-IPA|l=y}}", "범(ː)고래/범(ː)고레", "ph")
	def test_beomgorae_rr(self):
		self.run_test("범고래", "{{ko-IPA|l=y}}", "beomgorae", "rr")
	def test_beomgorae_rrr(self):
		self.run_test("범고래", "{{ko-IPA|l=y}}", "beomgolae", "rrr")
	def test_beomgorae_mr(self):
		self.run_test("범고래", "{{ko-IPA|l=y}}", "pŏmgorae", "mr")
	def test_beomgorae_yr(self):
		self.run_test("범고래", "{{ko-IPA|l=y}}", "pēmkolay", "yr")
	def test_beomgorae_ipa(self):
		self.run_test("범고래", "{{ko-IPA|l=y}}", "[ˈpɘ(ː)mɡo̞ɾɛ] ~ [ˈpɘ(ː)mɡo̞ɾe̞]", "ipa")

	def test_goyangigorae_ph(self):
		self.run_test("고양이고래", "{{ko-IPA}}", "고양이고래/고양이고레", "ph")
	def test_goyangigorae_rr(self):
		self.run_test("고양이고래", "{{ko-IPA}}", "goyang'igorae", "rr")
	def test_goyangigorae_rrr(self):
		self.run_test("고양이고래", "{{ko-IPA}}", "goyang'igolae", "rrr")
	def test_goyangigorae_mr(self):
		self.run_test("고양이고래", "{{ko-IPA}}", "koyangigorae", "mr")
	def test_goyangigorae_yr(self):
		self.run_test("고양이고래", "{{ko-IPA}}", "ko.yangikolay", "yr")
	def test_goyangigorae_ipa(self):
		self.run_test("고양이고래", "{{ko-IPA}}", "[ko̞ja̠ŋiɡo̞ɾɛ] ~ [ko̞ja̠ŋiɡo̞ɾe̞]", "ipa")

	def test_julbagidolgorae_ph(self):
		self.run_test("줄박이돌고래", "{{ko-IPA}}", "줄바기돌고래/줄바기돌고레", "ph")
	def test_julbagidolgorae_rr(self):
		self.run_test("줄박이돌고래", "{{ko-IPA}}", "julbagidolgorae", "rr")
	def test_julbagidolgorae_rrr(self):
		self.run_test("줄박이돌고래", "{{ko-IPA}}", "julbag'idolgolae", "rrr")
	def test_julbagidolgorae_mr(self):
		self.run_test("줄박이돌고래", "{{ko-IPA}}", "chulbagidolgorae", "mr")
	def test_julbagidolgorae_yr(self):
		self.run_test("줄박이돌고래", "{{ko-IPA}}", "cwul.pak.itol.kolay", "yr")
	def test_julbagidolgorae_ipa(self):
		self.run_test("줄박이돌고래", "{{ko-IPA}}", "[t͡ɕuɭba̠ɡido̞ɭɡo̞ɾɛ] ~ [t͡ɕuɭba̠ɡido̞ɭɡo̞ɾe̞]", "ipa")

	def test_kkomahyanggorae_ph(self):
		self.run_test("꼬마향고래", "{{ko-IPA}}", "꼬마향고래/꼬마향고레", "ph")
	def test_kkomahyanggorae_rr(self):
		self.run_test("꼬마향고래", "{{ko-IPA}}", "kkomahyanggorae", "rr")
	def test_kkomahyanggorae_rrr(self):
		self.run_test("꼬마향고래", "{{ko-IPA}}", "kkomahyanggolae", "rrr")
	def test_kkomahyanggorae_mr(self):
		self.run_test("꼬마향고래", "{{ko-IPA}}", "kkomahyanggorae", "mr")
	def test_kkomahyanggorae_yr(self):
		self.run_test("꼬마향고래", "{{ko-IPA}}", "kkomahyangkolay", "yr")
	def test_kkomahyanggorae_ipa(self):
		self.run_test("꼬마향고래", "{{ko-IPA}}", "[k͈o̞ma̠ʝa̠ŋɡo̞ɾɛ] ~ [k͈o̞ma̠ʝa̠ŋɡo̞ɾe̞]", "ipa")

	def test_keundolgorae_ph(self):
		self.run_test("큰돌고래", "{{ko-IPA}}", "큰돌고래/큰돌고레", "ph")
	def test_keundolgorae_rr(self):
		self.run_test("큰돌고래", "{{ko-IPA}}", "keundolgorae", "rr")
	def test_keundolgorae_rrr(self):
		self.run_test("큰돌고래", "{{ko-IPA}}", "keundolgolae", "rrr")
	def test_keundolgorae_mr(self):
		self.run_test("큰돌고래", "{{ko-IPA}}", "k'ŭndolgorae", "mr")
	def test_keundolgorae_yr(self):
		self.run_test("큰돌고래", "{{ko-IPA}}", "khuntol.kolay", "yr")
	def test_keundolgorae_ipa(self):
		self.run_test("큰돌고래", "{{ko-IPA}}", "[kxɯndo̞ɭɡo̞ɾɛ] ~ [kxɯndo̞ɭɡo̞ɾe̞]", "ipa")

	def test_baemmeoridolgorae_ph(self):
		self.run_test("뱀머리돌고래", "{{ko-IPA}}", "뱀머리돌고래/벰머리돌고레", "ph")
	def test_baemmeoridolgorae_rr(self):
		self.run_test("뱀머리돌고래", "{{ko-IPA}}", "baemmeoridolgorae", "rr")
	def test_baemmeoridolgorae_rrr(self):
		self.run_test("뱀머리돌고래", "{{ko-IPA}}", "baemmeolidolgolae", "rrr")
	def test_baemmeoridolgorae_mr(self):
		self.run_test("뱀머리돌고래", "{{ko-IPA}}", "paemmŏridolgorae", "mr")
	def test_baemmeoridolgorae_yr(self):
		self.run_test("뱀머리돌고래", "{{ko-IPA}}", "paymmelitol.kolay", "yr")
	def test_baemmeoridolgorae_ipa(self):
		self.run_test("뱀머리돌고래", "{{ko-IPA}}", "[pɛmmʌ̹ɾido̞ɭɡo̞ɾɛ] ~ [pe̞mmʌ̹ɾido̞ɭɡo̞ɾe̞]", "ipa")

	def test_ipsul_ph(self):
		self.run_test("입술", "{{ko-IPA}}", "입쑬", "ph")
	def test_ipsul_rr(self):
		self.run_test("입술", "{{ko-IPA}}", "ipsul", "rr")
	def test_ipsul_rrr(self):
		self.run_test("입술", "{{ko-IPA}}", "ibsul", "rrr")
	def test_ipsul_mr(self):
		self.run_test("입술", "{{ko-IPA}}", "ipsul", "mr")
	def test_ipsul_yr(self):
		self.run_test("입술", "{{ko-IPA}}", "ip.swul", "yr")
	def test_ipsul_ipa(self):
		self.run_test("입술", "{{ko-IPA}}", "[ips͈uɭ]", "ipa")

	def test_jjigae_ph(self):
		self.run_test("찌개", "{{ko-IPA}}", "찌개/찌게", "ph")
	def test_jjigae_rr(self):
		self.run_test("찌개", "{{ko-IPA}}", "jjigae", "rr")
	def test_jjigae_rrr(self):
		self.run_test("찌개", "{{ko-IPA}}", "jjigae", "rrr")
	def test_jjigae_mr(self):
		self.run_test("찌개", "{{ko-IPA}}", "tchigae", "mr")
	def test_jjigae_yr(self):
		self.run_test("찌개", "{{ko-IPA}}", "ccikay", "yr")
	def test_jjigae_ipa(self):
		self.run_test("찌개", "{{ko-IPA}}", "[t͡ɕ͈iɡɛ] ~ [t͡ɕ͈iɡe̞]", "ipa")

	def test_ip_ph(self):
		self.run_test("입", "{{ko-IPA|a=Ko-입.ogg}}", "입", "ph")
	def test_ip_rr(self):
		self.run_test("입", "{{ko-IPA|a=Ko-입.ogg}}", "ip", "rr")
	def test_ip_rrr(self):
		self.run_test("입", "{{ko-IPA|a=Ko-입.ogg}}", "ib", "rrr")
	def test_ip_mr(self):
		self.run_test("입", "{{ko-IPA|a=Ko-입.ogg}}", "ip", "mr")
	def test_ip_yr(self):
		self.run_test("입", "{{ko-IPA|a=Ko-입.ogg}}", "ip", "yr")
	def test_ip_ipa(self):
		self.run_test("입", "{{ko-IPA|a=Ko-입.ogg}}", "[ip̚]", "ipa")

	def test_ipcheonjang_ph(self):
		self.run_test("입천장", "{{ko-IPA}}", "입천장", "ph")
	def test_ipcheonjang_rr(self):
		self.run_test("입천장", "{{ko-IPA}}", "ipcheonjang", "rr")
	def test_ipcheonjang_rrr(self):
		self.run_test("입천장", "{{ko-IPA}}", "ibcheonjang", "rrr")
	def test_ipcheonjang_mr(self):
		self.run_test("입천장", "{{ko-IPA}}", "ipch'ŏnjang", "mr")
	def test_ipcheonjang_yr(self):
		self.run_test("입천장", "{{ko-IPA}}", "ipchen.cang", "yr")
	def test_ipcheonjang_ipa(self):
		self.run_test("입천장", "{{ko-IPA}}", "[ip̚t͡ɕʰʌ̹ɲd͡ʑa̠ŋ]", "ipa")

	def test_gugae_ph(self):
		self.run_test("구개", "{{ko-ipa|l=y}}", "구(ː)개/구(ː)게", "ph")
	def test_gugae_rr(self):
		self.run_test("구개", "{{ko-ipa|l=y}}", "gugae", "rr")
	def test_gugae_rrr(self):
		self.run_test("구개", "{{ko-ipa|l=y}}", "gugae", "rrr")
	def test_gugae_mr(self):
		self.run_test("구개", "{{ko-ipa|l=y}}", "kugae", "mr")
	def test_gugae_yr(self):
		self.run_test("구개", "{{ko-ipa|l=y}}", "kwūkay", "yr")
	def test_gugae_ipa(self):
		self.run_test("구개", "{{ko-ipa|l=y}}", "[ˈku(ː)ɡɛ] ~ [ˈku(ː)ɡe̞]", "ipa")

	def test_gugang_ph(self):
		self.run_test("구강", "{{ko-ipa|l=y}}", "구(ː)강", "ph")
	def test_gugang_rr(self):
		self.run_test("구강", "{{ko-ipa|l=y}}", "gugang", "rr")
	def test_gugang_rrr(self):
		self.run_test("구강", "{{ko-ipa|l=y}}", "gugang", "rrr")
	def test_gugang_mr(self):
		self.run_test("구강", "{{ko-ipa|l=y}}", "kugang", "mr")
	def test_gugang_yr(self):
		self.run_test("구강", "{{ko-ipa|l=y}}", "kwūkang", "yr")
	def test_gugang_ipa(self):
		self.run_test("구강", "{{ko-ipa|l=y}}", "[ˈku(ː)ɡa̠ŋ]", "ipa")


	def test_jipda_ph(self):
		self.run_test("짚다", "{{ko-IPA}}", "집따", "ph")
	def test_jipda_rr(self):
		self.run_test("짚다", "{{ko-IPA}}", "jipda", "rr")
	def test_jipda_rrr(self):
		self.run_test("짚다", "{{ko-IPA}}", "jipda", "rrr")
	def test_jipda_mr(self):
		self.run_test("짚다", "{{ko-IPA}}", "chipta", "mr")
	def test_jipda_yr(self):
		self.run_test("짚다", "{{ko-IPA}}", "ciphta", "yr")
	def test_jipda_ipa(self):
		self.run_test("짚다", "{{ko-IPA}}", "[t͡ɕip̚t͈a̠]", "ipa")

	def test_igida_ph(self):
		self.run_test("이기다", "{{ko-IPA}}", "이기다", "ph")
	def test_igida_rr(self):
		self.run_test("이기다", "{{ko-IPA}}", "igida", "rr")
	def test_igida_rrr(self):
		self.run_test("이기다", "{{ko-IPA}}", "igida", "rrr")
	def test_igida_mr(self):
		self.run_test("이기다", "{{ko-IPA}}", "igida", "mr")
	def test_igida_yr(self):
		self.run_test("이기다", "{{ko-IPA}}", "ikita", "yr")
	def test_igida_ipa(self):
		self.run_test("이기다", "{{ko-IPA}}", "[iɡida̠]", "ipa")

	def test_beodeul_ph(self):
		self.run_test("버들", "{{ko-ipa}}", "버들", "ph")
	def test_beodeul_rr(self):
		self.run_test("버들", "{{ko-ipa}}", "beodeul", "rr")
	def test_beodeul_rrr(self):
		self.run_test("버들", "{{ko-ipa}}", "beodeul", "rrr")
	def test_beodeul_mr(self):
		self.run_test("버들", "{{ko-ipa}}", "pŏdŭl", "mr")
	def test_beodeul_yr(self):
		self.run_test("버들", "{{ko-ipa}}", "petul", "yr")
	def test_beodeul_ipa(self):
		self.run_test("버들", "{{ko-ipa}}", "[pʌ̹dɯɭ]", "ipa")

	def test_beodeunamu_ph(self):
		self.run_test("버드나무", "{{ko-IPA}}", "버드나무", "ph")
	def test_beodeunamu_rr(self):
		self.run_test("버드나무", "{{ko-IPA}}", "beodeunamu", "rr")
	def test_beodeunamu_rrr(self):
		self.run_test("버드나무", "{{ko-IPA}}", "beodeunamu", "rrr")
	def test_beodeunamu_mr(self):
		self.run_test("버드나무", "{{ko-IPA}}", "pŏdŭnamu", "mr")
	def test_beodeunamu_yr(self):
		self.run_test("버드나무", "{{ko-IPA}}", "petunamu", "yr")
	def test_beodeunamu_ipa(self):
		self.run_test("버드나무", "{{ko-IPA}}", "[pʌ̹dɯna̠mu]", "ipa")

	def test_mul_ph(self):
		self.run_test("물", "{{ko-IPA|a=y}}", "물", "ph")
	def test_mul_rr(self):
		self.run_test("물", "{{ko-IPA|a=y}}", "mul", "rr")
	def test_mul_rrr(self):
		self.run_test("물", "{{ko-IPA|a=y}}", "mul", "rrr")
	def test_mul_mr(self):
		self.run_test("물", "{{ko-IPA|a=y}}", "mul", "mr")
	def test_mul_yr(self):
		self.run_test("물", "{{ko-IPA|a=y}}", "mul", "yr")
	def test_mul_ipa(self):
		self.run_test("물", "{{ko-IPA|a=y}}", "[muɭ]", "ipa")

	def test_bida_ph(self):
		self.run_test("비다", "{{ko-IPA|l=y}}", "비(ː)다", "ph")
	def test_bida_rr(self):
		self.run_test("비다", "{{ko-IPA|l=y}}", "bida", "rr")
	def test_bida_rrr(self):
		self.run_test("비다", "{{ko-IPA|l=y}}", "bida", "rrr")
	def test_bida_mr(self):
		self.run_test("비다", "{{ko-IPA|l=y}}", "pida", "mr")
	def test_bida_yr(self):
		self.run_test("비다", "{{ko-IPA|l=y}}", "pīta", "yr")
	def test_bida_ipa(self):
		self.run_test("비다", "{{ko-IPA|l=y}}", "[ˈpi(ː)da̠]", "ipa")

	def test_biuda_ph(self):
		self.run_test("비우다", "{{ko-IPA}}", "비우다", "ph")
	def test_biuda_rr(self):
		self.run_test("비우다", "{{ko-IPA}}", "biuda", "rr")
	def test_biuda_rrr(self):
		self.run_test("비우다", "{{ko-IPA}}", "biuda", "rrr")
	def test_biuda_mr(self):
		self.run_test("비우다", "{{ko-IPA}}", "piuda", "mr")
	def test_biuda_yr(self):
		self.run_test("비우다", "{{ko-IPA}}", "piwuta", "yr")
	def test_biuda_ipa(self):
		self.run_test("비우다", "{{ko-IPA}}", "[piuda̠]", "ipa")

	def test_eopseotda_ph(self):
		self.run_test("없었다", "{{ko-IPA|l=y}}", "업(ː)썯따", "ph")
	def test_eopseotda_rr(self):
		self.run_test("없었다", "{{ko-IPA|l=y}}", "eopseotda", "rr")
	def test_eopseotda_rrr(self):
		self.run_test("없었다", "{{ko-IPA|l=y}}", "eobs'eossda", "rrr")
	def test_eopseotda_mr(self):
		self.run_test("없었다", "{{ko-IPA|l=y}}", "ŏpsŏtta", "mr")
	def test_eopseotda_yr(self):
		self.run_test("없었다", "{{ko-IPA|l=y}}", "ēps.essta", "yr")
	def test_eopseotda_ipa(self):
		self.run_test("없었다", "{{ko-IPA|l=y}}", "[ˈɘ(ː)ps͈ʌ̹t̚t͈a̠]", "ipa")



	def test_goyo_ph(self):
		self.run_test("고요", "{{ko-IPA}}", "고요", "ph")
	def test_goyo_rr(self):
		self.run_test("고요", "{{ko-IPA}}", "goyo", "rr")
	def test_goyo_rrr(self):
		self.run_test("고요", "{{ko-IPA}}", "goyo", "rrr")
	def test_goyo_mr(self):
		self.run_test("고요", "{{ko-IPA}}", "koyo", "mr")
	def test_goyo_yr(self):
		self.run_test("고요", "{{ko-IPA}}", "ko.yo", "yr")
	def test_goyo_ipa(self):
		self.run_test("고요", "{{ko-IPA}}", "[ko̞jo]", "ipa")

	def test_hansagun_ph(self):
		self.run_test("한사군", "{{ko-IPA|l=y}}", "한(ː)사군", "ph")
	def test_hansagun_rr(self):
		self.run_test("한사군", "{{ko-IPA|l=y}}", "hansagun", "rr")
	def test_hansagun_rrr(self):
		self.run_test("한사군", "{{ko-IPA|l=y}}", "hansagun", "rrr")
	def test_hansagun_mr(self):
		self.run_test("한사군", "{{ko-IPA|l=y}}", "hansagun", "mr")
	def test_hansagun_yr(self):
		self.run_test("한사군", "{{ko-IPA|l=y}}", "hānsakwun", "yr")
	def test_hansagun_ipa(self):
		self.run_test("한사군", "{{ko-IPA|l=y}}", "[ˈha̠(ː)nsʰa̠ɡun]", "ipa")

	def test_jagal_ph(self):
		self.run_test("자갈", "{{ko-ipa}}", "자갈", "ph")
	def test_jagal_rr(self):
		self.run_test("자갈", "{{ko-ipa}}", "jagal", "rr")
	def test_jagal_rrr(self):
		self.run_test("자갈", "{{ko-ipa}}", "jagal", "rrr")
	def test_jagal_mr(self):
		self.run_test("자갈", "{{ko-ipa}}", "chagal", "mr")
	def test_jagal_yr(self):
		self.run_test("자갈", "{{ko-ipa}}", "cakal", "yr")
	def test_jagal_ipa(self):
		self.run_test("자갈", "{{ko-ipa}}", "[t͡ɕa̠ɡa̠ɭ]", "ipa")

	def test_joyakdol_ph(self):
		self.run_test("조약돌", "{{ko-IPA}}", "조약똘", "ph")
	def test_joyakdol_rr(self):
		self.run_test("조약돌", "{{ko-IPA}}", "joyakdol", "rr")
	def test_joyakdol_rrr(self):
		self.run_test("조약돌", "{{ko-IPA}}", "joyagdol", "rrr")
	def test_joyakdol_mr(self):
		self.run_test("조약돌", "{{ko-IPA}}", "choyaktol", "mr")
	def test_joyakdol_yr(self):
		self.run_test("조약돌", "{{ko-IPA}}", "co.yaktol", "yr")
	def test_joyakdol_ipa(self):
		self.run_test("조약돌", "{{ko-IPA}}", "[t͡ɕo̞ja̠k̚t͈o̞ɭ]", "ipa")

	def test_bawi_ph(self):
		self.run_test("바위", "{{ko-IPA}}", "바위", "ph")
	def test_bawi_rr(self):
		self.run_test("바위", "{{ko-IPA}}", "bawi", "rr")
	def test_bawi_rrr(self):
		self.run_test("바위", "{{ko-IPA}}", "bawi", "rrr")
	def test_bawi_mr(self):
		self.run_test("바위", "{{ko-IPA}}", "pawi", "mr")
	def test_bawi_yr(self):
		self.run_test("바위", "{{ko-IPA}}", "pawi", "yr")
	def test_bawi_ipa(self):
		self.run_test("바위", "{{ko-IPA}}", "[pa̠ɥi] ~ [pa̠y]", "ipa")

	def test_sumbakkokjil_ph(self):
		self.run_test("숨바꼭질", "{{ko-IPA}}", "숨바꼭찔", "ph")
	def test_sumbakkokjil_rr(self):
		self.run_test("숨바꼭질", "{{ko-IPA}}", "sumbakkokjil", "rr")
	def test_sumbakkokjil_rrr(self):
		self.run_test("숨바꼭질", "{{ko-IPA}}", "sumba'kkogjil", "rrr")
	def test_sumbakkokjil_mr(self):
		self.run_test("숨바꼭질", "{{ko-IPA}}", "sumbakkokchil", "mr")
	def test_sumbakkokjil_yr(self):
		self.run_test("숨바꼭질", "{{ko-IPA}}", "swumpa.kkokcil", "yr")
	def test_sumbakkokjil_ipa(self):
		self.run_test("숨바꼭질", "{{ko-IPA}}", "[sʰumba̠k͈o̞k̚t͡ɕ͈iɭ]", "ipa")

	def test_kkakka_ph(self):
		self.run_test("까까", "{{ko-IPA}}", "까까", "ph")
	def test_kkakka_rr(self):
		self.run_test("까까", "{{ko-IPA}}", "kkakka", "rr")
	def test_kkakka_rrr(self):
		self.run_test("까까", "{{ko-IPA}}", "kka'kka", "rrr")
	def test_kkakka_mr(self):
		self.run_test("까까", "{{ko-IPA}}", "kkakka", "mr")
	def test_kkakka_yr(self):
		self.run_test("까까", "{{ko-IPA}}", "kka.kka", "yr")
	def test_kkakka_ipa(self):
		self.run_test("까까", "{{ko-IPA}}", "[k͈a̠k͈a̠]", "ipa")

	def test_gwaja_ph(self):
		self.run_test("과자", "{{ko-IPA}}", "과자", "ph")
	def test_gwaja_rr(self):
		self.run_test("과자", "{{ko-IPA}}", "gwaja", "rr")
	def test_gwaja_rrr(self):
		self.run_test("과자", "{{ko-IPA}}", "gwaja", "rrr")
	def test_gwaja_mr(self):
		self.run_test("과자", "{{ko-IPA}}", "kwaja", "mr")
	def test_gwaja_yr(self):
		self.run_test("과자", "{{ko-IPA}}", "kwaca", "yr")
	def test_gwaja_ipa(self):
		self.run_test("과자", "{{ko-IPA}}", "[kwa̠d͡ʑa̠]", "ipa")

	def test_keik_ph(self):
		self.run_test("케익", "{{ko-IPA}}", "케익", "ph")
	def test_keik_rr(self):
		self.run_test("케익", "{{ko-IPA}}", "keik", "rr")
	def test_keik_rrr(self):
		self.run_test("케익", "{{ko-IPA}}", "keig", "rrr")
	def test_keik_mr(self):
		self.run_test("케익", "{{ko-IPA}}", "k'eik", "mr")
	def test_keik_yr(self):
		self.run_test("케익", "{{ko-IPA}}", "kheyik", "yr")
	def test_keik_ipa(self):
		self.run_test("케익", "{{ko-IPA}}", "[kʰe̞ik̚]", "ipa")

	def test_saengtaehak_ph(self):
		self.run_test("생태학", "{{ko-IPA}}", "생태학/셍테학", "ph")
	def test_saengtaehak_rr(self):
		self.run_test("생태학", "{{ko-IPA}}", "saengtaehak", "rr")
	def test_saengtaehak_rrr(self):
		self.run_test("생태학", "{{ko-IPA}}", "saengtaehag", "rrr")
	def test_saengtaehak_mr(self):
		self.run_test("생태학", "{{ko-IPA}}", "saengt'aehak", "mr")
	def test_saengtaehak_yr(self):
		self.run_test("생태학", "{{ko-IPA}}", "sayngthayhak", "yr")
	def test_saengtaehak_ipa(self):
		self.run_test("생태학", "{{ko-IPA}}", "[sʰɛŋtʰɛɦa̠k̚] ~ [sʰe̞ŋtʰe̞ɦa̠k̚]", "ipa")

	def test_mot_ph(self):
		self.run_test("못", "{{ko-IPA}}", "몯", "ph")
	def test_mot_rr(self):
		self.run_test("못", "{{ko-IPA}}", "mot", "rr")
	def test_mot_rrr(self):
		self.run_test("못", "{{ko-IPA}}", "mos", "rrr")
	def test_mot_mr(self):
		self.run_test("못", "{{ko-IPA}}", "mot", "mr")
	def test_mot_yr(self):
		self.run_test("못", "{{ko-IPA}}", "mos", "yr")
	def test_mot_ipa(self):
		self.run_test("못", "{{ko-IPA}}", "[mo̞t̚]", "ipa")
	def test_mot_ph_1(self):
		self.run_test("못", "{{ko-IPA}}", "몯", "ph")
	def test_mot_rr_1(self):
		self.run_test("못", "{{ko-IPA}}", "mot", "rr")
	def test_mot_rrr_1(self):
		self.run_test("못", "{{ko-IPA}}", "mos", "rrr")
	def test_mot_mr_1(self):
		self.run_test("못", "{{ko-IPA}}", "mot", "mr")
	def test_mot_yr_1(self):
		self.run_test("못", "{{ko-IPA}}", "mos", "yr")
	def test_mot_ipa_1(self):
		self.run_test("못", "{{ko-IPA}}", "[mo̞t̚]", "ipa")
	def test_mot_ph_2(self):
		self.run_test("못", "{{ko-IPA|l=y}}", "몯(ː)", "ph")
	def test_mot_rr_2(self):
		self.run_test("못", "{{ko-IPA|l=y}}", "mot", "rr")
	def test_mot_rrr_2(self):
		self.run_test("못", "{{ko-IPA|l=y}}", "mos", "rrr")
	def test_mot_mr_2(self):
		self.run_test("못", "{{ko-IPA|l=y}}", "mot", "mr")
	def test_mot_yr_2(self):
		self.run_test("못", "{{ko-IPA|l=y}}", "mōs", "yr")
	def test_mot_ipa_2(self):
		self.run_test("못", "{{ko-IPA|l=y}}", "[mo̞(ː)t̚]", "ipa")

	def test_bareuda_ph(self):
		self.run_test("바르다", "{{ko-IPA}}", "바르다", "ph")
	def test_bareuda_rr(self):
		self.run_test("바르다", "{{ko-IPA}}", "bareuda", "rr")
	def test_bareuda_rrr(self):
		self.run_test("바르다", "{{ko-IPA}}", "baleuda", "rrr")
	def test_bareuda_mr(self):
		self.run_test("바르다", "{{ko-IPA}}", "parŭda", "mr")
	def test_bareuda_yr(self):
		self.run_test("바르다", "{{ko-IPA}}", "paluta", "yr")
	def test_bareuda_ipa(self):
		self.run_test("바르다", "{{ko-IPA}}", "[pa̠ɾɯda̠]", "ipa")

	def test_chamdoeda_ph(self):
		self.run_test("참되다", "{{ko-IPA|com=1}}", "참뛔다/참뙤다", "ph")
	def test_chamdoeda_rr(self):
		self.run_test("참되다", "{{ko-IPA|com=1}}", "chamdoeda", "rr")
	def test_chamdoeda_rrr(self):
		self.run_test("참되다", "{{ko-IPA|com=1}}", "chamdoeda", "rrr")
	def test_chamdoeda_mr(self):
		self.run_test("참되다", "{{ko-IPA|com=1}}", "ch'amtoeda", "mr")
	def test_chamdoeda_yr(self):
		self.run_test("참되다", "{{ko-IPA|com=1}}", "chamqtoyta", "yr")
	def test_chamdoeda_ipa(self):
		self.run_test("참되다", "{{ko-IPA|com=1}}", "[t͡ɕʰa̠mt͈we̞da̠] ~ [t͡ɕʰa̠mt͈ø̞da̠]", "ipa")

	def test_matchuda_ph(self):
		self.run_test("맞추다", "{{ko-IPA}}", "맏추다", "ph")
	def test_matchuda_rr(self):
		self.run_test("맞추다", "{{ko-IPA}}", "matchuda", "rr")
	def test_matchuda_rrr(self):
		self.run_test("맞추다", "{{ko-IPA}}", "majchuda", "rrr")
	def test_matchuda_mr(self):
		self.run_test("맞추다", "{{ko-IPA}}", "match'uda", "mr")
	def test_matchuda_yr(self):
		self.run_test("맞추다", "{{ko-IPA}}", "macchwuta", "yr")
	def test_matchuda_ipa(self):
		self.run_test("맞추다", "{{ko-IPA}}", "[ma̠t̚t͡ɕʰuda̠]", "ipa")

	def test_chai_ph(self):
		self.run_test("차이", "{{ko-IPA}}", "차이", "ph")
	def test_chai_rr(self):
		self.run_test("차이", "{{ko-IPA}}", "chai", "rr")
	def test_chai_rrr(self):
		self.run_test("차이", "{{ko-IPA}}", "chai", "rrr")
	def test_chai_mr(self):
		self.run_test("차이", "{{ko-IPA}}", "ch'ai", "mr")
	def test_chai_yr(self):
		self.run_test("차이", "{{ko-IPA}}", "chai", "yr")
	def test_chai_ipa(self):
		self.run_test("차이", "{{ko-IPA}}", "[t͡ɕʰa̠i]", "ipa")

	def test_noinhak_ph(self):
		self.run_test("노인학", "{{ko-IPA|l=y}}", "노(ː)인학", "ph")
	def test_noinhak_rr(self):
		self.run_test("노인학", "{{ko-IPA|l=y}}", "noinhak", "rr")
	def test_noinhak_rrr(self):
		self.run_test("노인학", "{{ko-IPA|l=y}}", "noinhag", "rrr")
	def test_noinhak_mr(self):
		self.run_test("노인학", "{{ko-IPA|l=y}}", "noinhak", "mr")
	def test_noinhak_yr(self):
		self.run_test("노인학", "{{ko-IPA|l=y}}", "nōin.hak", "yr")
	def test_noinhak_ipa(self):
		self.run_test("노인학", "{{ko-IPA|l=y}}", "[ˈno̞(ː)inɦa̠k̚]", "ipa")

	def test_nohwa_ph(self):
		self.run_test("노화", "{{ko-IPA|l=y}}", "노(ː)화", "ph")
	def test_nohwa_rr(self):
		self.run_test("노화", "{{ko-IPA|l=y}}", "nohwa", "rr")
	def test_nohwa_rrr(self):
		self.run_test("노화", "{{ko-IPA|l=y}}", "nohwa", "rrr")
	def test_nohwa_mr(self):
		self.run_test("노화", "{{ko-IPA|l=y}}", "nohwa", "mr")
	def test_nohwa_yr(self):
		self.run_test("노화", "{{ko-IPA|l=y}}", "nōhwa", "yr")
	def test_nohwa_ipa(self):
		self.run_test("노화", "{{ko-IPA|l=y}}", "[ˈno̞(ː)βwa̠]", "ipa")

	def test_olta_ph(self):
		self.run_test("옳다", "{{ko-IPA}}", "올타", "ph")
	def test_olta_rr(self):
		self.run_test("옳다", "{{ko-IPA}}", "olta", "rr")
	def test_olta_rrr(self):
		self.run_test("옳다", "{{ko-IPA}}", "olhda", "rrr")
	def test_olta_mr(self):
		self.run_test("옳다", "{{ko-IPA}}", "olt'a", "mr")
	def test_olta_yr(self):
		self.run_test("옳다", "{{ko-IPA}}", "olhta", "yr")
	def test_olta_ipa(self):
		self.run_test("옳다", "{{ko-IPA}}", "[o̞ɭtʰa̠]", "ipa")

	def test_umurumul_ph(self):
		self.run_test("우물우물", "{{ko-IPA}}", "우무루물", "ph")
	def test_umurumul_rr(self):
		self.run_test("우물우물", "{{ko-IPA}}", "umurumul", "rr")
	def test_umurumul_rrr(self):
		self.run_test("우물우물", "{{ko-IPA}}", "umul'umul", "rrr")
	def test_umurumul_mr(self):
		self.run_test("우물우물", "{{ko-IPA}}", "umurumul", "mr")
	def test_umurumul_yr(self):
		self.run_test("우물우물", "{{ko-IPA}}", "wumul.wumul", "yr")
	def test_umurumul_ipa(self):
		self.run_test("우물우물", "{{ko-IPA}}", "[umuɾumuɭ]", "ipa")

	def test_umuljjumul_ph(self):
		self.run_test("우물쭈물", "{{ko-IPA}}", "우물쭈물", "ph")
	def test_umuljjumul_rr(self):
		self.run_test("우물쭈물", "{{ko-IPA}}", "umuljjumul", "rr")
	def test_umuljjumul_rrr(self):
		self.run_test("우물쭈물", "{{ko-IPA}}", "umuljjumul", "rrr")
	def test_umuljjumul_mr(self):
		self.run_test("우물쭈물", "{{ko-IPA}}", "umultchumul", "mr")
	def test_umuljjumul_yr(self):
		self.run_test("우물쭈물", "{{ko-IPA}}", "wumulccwumul", "yr")
	def test_umuljjumul_ipa(self):
		self.run_test("우물쭈물", "{{ko-IPA}}", "[umuʎt͡ɕ͈umuɭ]", "ipa")

	def test_okapi_ph(self):
		self.run_test("오카피", "{{ko-IPA}}", "오카피", "ph")
	def test_okapi_rr(self):
		self.run_test("오카피", "{{ko-IPA}}", "okapi", "rr")
	def test_okapi_rrr(self):
		self.run_test("오카피", "{{ko-IPA}}", "okapi", "rrr")
	def test_okapi_mr(self):
		self.run_test("오카피", "{{ko-IPA}}", "ok'ap'i", "mr")
	def test_okapi_yr(self):
		self.run_test("오카피", "{{ko-IPA}}", "o.kha.phi", "yr")
	def test_okapi_ipa(self):
		self.run_test("오카피", "{{ko-IPA}}", "[o̞kʰa̠pʰi]", "ipa")

	def test_maeda_ph(self):
		self.run_test("매다", "{{ko-IPA|l=y}}", "매(ː)다/메(ː)다", "ph")
	def test_maeda_rr(self):
		self.run_test("매다", "{{ko-IPA|l=y}}", "maeda", "rr")
	def test_maeda_rrr(self):
		self.run_test("매다", "{{ko-IPA|l=y}}", "maeda", "rrr")
	def test_maeda_mr(self):
		self.run_test("매다", "{{ko-IPA|l=y}}", "maeda", "mr")
	def test_maeda_yr(self):
		self.run_test("매다", "{{ko-IPA|l=y}}", "māyta", "yr")
	def test_maeda_ipa(self):
		self.run_test("매다", "{{ko-IPA|l=y}}", "[ˈmɛ(ː)da̠] ~ [ˈme̞(ː)da̠]", "ipa")

	def test_gim_ph(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "김(ː)", "ph")
	def test_gim_rr(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "gim", "rr")
	def test_gim_rrr(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "gim", "rrr")
	def test_gim_mr(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "kim", "mr")
	def test_gim_yr(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "kīm", "yr")
	def test_gim_ipa(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "[ki(ː)m]", "ipa")
	def test_gim_ph_1(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "김(ː)", "ph")
	def test_gim_rr_1(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "gim", "rr")
	def test_gim_rrr_1(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "gim", "rrr")
	def test_gim_mr_1(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "kim", "mr")
	def test_gim_yr_1(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "kīm", "yr")
	def test_gim_ipa_1(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "[ki(ː)m]", "ipa")
	def test_gim_ph_2(self):
		self.run_test("김", "{{ko-IPA}}", "김", "ph")
	def test_gim_rr_2(self):
		self.run_test("김", "{{ko-IPA}}", "gim", "rr")
	def test_gim_rrr_2(self):
		self.run_test("김", "{{ko-IPA}}", "gim", "rrr")
	def test_gim_mr_2(self):
		self.run_test("김", "{{ko-IPA}}", "kim", "mr")
	def test_gim_yr_2(self):
		self.run_test("김", "{{ko-IPA}}", "kim", "yr")
	def test_gim_ipa_2(self):
		self.run_test("김", "{{ko-IPA}}", "[kim]", "ipa")
	def test_gim_ph_3(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "김(ː)", "ph")
	def test_gim_rr_3(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "gim", "rr")
	def test_gim_rrr_3(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "gim", "rrr")
	def test_gim_mr_3(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "kim", "mr")
	def test_gim_yr_3(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "kīm", "yr")
	def test_gim_ipa_3(self):
		self.run_test("김", "{{ko-IPA|l=y}}", "[ki(ː)m]", "ipa")
	def test_gim_ph_4(self):
		self.run_test("김", "{{ko-IPA}}", "김", "ph")
	def test_gim_rr_4(self):
		self.run_test("김", "{{ko-IPA}}", "gim", "rr")
	def test_gim_rrr_4(self):
		self.run_test("김", "{{ko-IPA}}", "gim", "rrr")
	def test_gim_mr_4(self):
		self.run_test("김", "{{ko-IPA}}", "kim", "mr")
	def test_gim_yr_4(self):
		self.run_test("김", "{{ko-IPA}}", "kim", "yr")
	def test_gim_ipa_4(self):
		self.run_test("김", "{{ko-IPA}}", "[kim]", "ipa")

	def test_ji_ph(self):
		self.run_test("지", "{{ko-ipa}}", "지", "ph")
	def test_ji_rr(self):
		self.run_test("지", "{{ko-ipa}}", "ji", "rr")
	def test_ji_rrr(self):
		self.run_test("지", "{{ko-ipa}}", "ji", "rrr")
	def test_ji_mr(self):
		self.run_test("지", "{{ko-ipa}}", "chi", "mr")
	def test_ji_yr(self):
		self.run_test("지", "{{ko-ipa}}", "ci", "yr")
	def test_ji_ipa(self):
		self.run_test("지", "{{ko-ipa}}", "[t͡ɕi]", "ipa")
	def test_ji_ph_1(self):
		self.run_test("지", "{{ko-IPA}}", "지", "ph")
	def test_ji_rr_1(self):
		self.run_test("지", "{{ko-IPA}}", "ji", "rr")
	def test_ji_rrr_1(self):
		self.run_test("지", "{{ko-IPA}}", "ji", "rrr")
	def test_ji_mr_1(self):
		self.run_test("지", "{{ko-IPA}}", "chi", "mr")
	def test_ji_yr_1(self):
		self.run_test("지", "{{ko-IPA}}", "ci", "yr")
	def test_ji_ipa_1(self):
		self.run_test("지", "{{ko-IPA}}", "[t͡ɕi]", "ipa")
	def test_ji_ph_2(self):
		self.run_test("지", "{{ko-IPA}}", "지", "ph")
	def test_ji_rr_2(self):
		self.run_test("지", "{{ko-IPA}}", "ji", "rr")
	def test_ji_rrr_2(self):
		self.run_test("지", "{{ko-IPA}}", "ji", "rrr")
	def test_ji_mr_2(self):
		self.run_test("지", "{{ko-IPA}}", "chi", "mr")
	def test_ji_yr_2(self):
		self.run_test("지", "{{ko-IPA}}", "ci", "yr")
	def test_ji_ipa_2(self):
		self.run_test("지", "{{ko-IPA}}", "[t͡ɕi]", "ipa")
	def test_ji_ph_3(self):
		self.run_test("지", "{{ko-IPA|l=y}}", "지(ː)", "ph")
	def test_ji_rr_3(self):
		self.run_test("지", "{{ko-IPA|l=y}}", "ji", "rr")
	def test_ji_rrr_3(self):
		self.run_test("지", "{{ko-IPA|l=y}}", "ji", "rrr")
	def test_ji_mr_3(self):
		self.run_test("지", "{{ko-IPA|l=y}}", "chi", "mr")
	def test_ji_yr_3(self):
		self.run_test("지", "{{ko-IPA|l=y}}", "cī", "yr")
	def test_ji_ipa_3(self):
		self.run_test("지", "{{ko-IPA|l=y}}", "[t͡ɕi(ː)]", "ipa")

	def test_dueom_ph(self):
		self.run_test("두엄", "{{ko-IPA}}", "두엄", "ph")
	def test_dueom_rr(self):
		self.run_test("두엄", "{{ko-IPA}}", "dueom", "rr")
	def test_dueom_rrr(self):
		self.run_test("두엄", "{{ko-IPA}}", "dueom", "rrr")
	def test_dueom_mr(self):
		self.run_test("두엄", "{{ko-IPA}}", "tuŏm", "mr")
	def test_dueom_yr(self):
		self.run_test("두엄", "{{ko-IPA}}", "twuem", "yr")
	def test_dueom_ipa(self):
		self.run_test("두엄", "{{ko-IPA}}", "[tuʌ̹m]", "ipa")

	def test_ttonggeoreum_ph(self):
		self.run_test("똥거름", "{{ko-IPA}}", "똥거름", "ph")
	def test_ttonggeoreum_rr(self):
		self.run_test("똥거름", "{{ko-IPA}}", "ttonggeoreum", "rr")
	def test_ttonggeoreum_rrr(self):
		self.run_test("똥거름", "{{ko-IPA}}", "ttonggeoleum", "rrr")
	def test_ttonggeoreum_mr(self):
		self.run_test("똥거름", "{{ko-IPA}}", "ttonggŏrŭm", "mr")
	def test_ttonggeoreum_yr(self):
		self.run_test("똥거름", "{{ko-IPA}}", "ttongkelum", "yr")
	def test_ttonggeoreum_ipa(self):
		self.run_test("똥거름", "{{ko-IPA}}", "[t͈o̞ŋɡʌ̹ɾɯm]", "ipa")

	def test_georeum_ph(self):
		self.run_test("거름", "{{ko-IPA}}", "거름", "ph")
	def test_georeum_rr(self):
		self.run_test("거름", "{{ko-IPA}}", "georeum", "rr")
	def test_georeum_rrr(self):
		self.run_test("거름", "{{ko-IPA}}", "geoleum", "rrr")
	def test_georeum_mr(self):
		self.run_test("거름", "{{ko-IPA}}", "kŏrŭm", "mr")
	def test_georeum_yr(self):
		self.run_test("거름", "{{ko-IPA}}", "kelum", "yr")
	def test_georeum_ipa(self):
		self.run_test("거름", "{{ko-IPA}}", "[kʌ̹ɾɯm]", "ipa")

	def test_garu_ph(self):
		self.run_test("가루", "{{ko-IPA|a=y}}", "가루", "ph")
	def test_garu_rr(self):
		self.run_test("가루", "{{ko-IPA|a=y}}", "garu", "rr")
	def test_garu_rrr(self):
		self.run_test("가루", "{{ko-IPA|a=y}}", "galu", "rrr")
	def test_garu_mr(self):
		self.run_test("가루", "{{ko-IPA|a=y}}", "karu", "mr")
	def test_garu_yr(self):
		self.run_test("가루", "{{ko-IPA|a=y}}", "kalwu", "yr")
	def test_garu_ipa(self):
		self.run_test("가루", "{{ko-IPA|a=y}}", "[ka̠ɾu]", "ipa")

	def test_ppurida_ph(self):
		self.run_test("뿌리다", "{{ko-IPA}}", "뿌리다", "ph")
	def test_ppurida_rr(self):
		self.run_test("뿌리다", "{{ko-IPA}}", "ppurida", "rr")
	def test_ppurida_rrr(self):
		self.run_test("뿌리다", "{{ko-IPA}}", "ppulida", "rrr")
	def test_ppurida_mr(self):
		self.run_test("뿌리다", "{{ko-IPA}}", "ppurida", "mr")
	def test_ppurida_yr(self):
		self.run_test("뿌리다", "{{ko-IPA}}", "ppulita", "yr")
	def test_ppurida_ipa(self):
		self.run_test("뿌리다", "{{ko-IPA}}", "[p͈uɾida̠]", "ipa")

	def test_Yerusallem_ph(self):
		self.run_test("예루살렘", "{{ko-IPA|cap=y}}", "예루살렘", "ph")
	def test_Yerusallem_rr(self):
		self.run_test("예루살렘", "{{ko-IPA|cap=y}}", "Yerusallem", "rr")
	def test_Yerusallem_rrr(self):
		self.run_test("예루살렘", "{{ko-IPA|cap=y}}", "Yelusallem", "rrr")
	def test_Yerusallem_mr(self):
		self.run_test("예루살렘", "{{ko-IPA|cap=y}}", "Yerusallem", "mr")
	def test_Yerusallem_yr(self):
		self.run_test("예루살렘", "{{ko-IPA|cap=y}}", "yeylwusalleym", "yr")
	def test_Yerusallem_ipa(self):
		self.run_test("예루살렘", "{{ko-IPA|cap=y}}", "[je̞ɾusʰa̠ɭɭe̞m]", "ipa")

	def test_heutda_ph(self):
		self.run_test("흩다", "{{ko-IPA}}", "흗따", "ph")
	def test_heutda_rr(self):
		self.run_test("흩다", "{{ko-IPA}}", "heutda", "rr")
	def test_heutda_rrr(self):
		self.run_test("흩다", "{{ko-IPA}}", "heutda", "rrr")
	def test_heutda_mr(self):
		self.run_test("흩다", "{{ko-IPA}}", "hŭtta", "mr")
	def test_heutda_yr(self):
		self.run_test("흩다", "{{ko-IPA}}", "huthta", "yr")
	def test_heutda_ipa(self):
		self.run_test("흩다", "{{ko-IPA}}", "[xɯt̚t͈a̠]", "ipa")

	def test_mulle_ph(self):
		self.run_test("물레", "{{ko-ipa}}", "물레", "ph")
	def test_mulle_rr(self):
		self.run_test("물레", "{{ko-ipa}}", "mulle", "rr")
	def test_mulle_rrr(self):
		self.run_test("물레", "{{ko-ipa}}", "mulle", "rrr")
	def test_mulle_mr(self):
		self.run_test("물레", "{{ko-ipa}}", "mulle", "mr")
	def test_mulle_yr(self):
		self.run_test("물레", "{{ko-ipa}}", "mulley", "yr")
	def test_mulle_ipa(self):
		self.run_test("물레", "{{ko-ipa}}", "[muɭɭe̞]", "ipa")

	def test_noreunjawi_ph(self):
		self.run_test("노른자위", "{{ko-IPA}}", "노른자위", "ph")
	def test_noreunjawi_rr(self):
		self.run_test("노른자위", "{{ko-IPA}}", "noreunjawi", "rr")
	def test_noreunjawi_rrr(self):
		self.run_test("노른자위", "{{ko-IPA}}", "noleunjawi", "rrr")
	def test_noreunjawi_mr(self):
		self.run_test("노른자위", "{{ko-IPA}}", "norŭnjawi", "mr")
	def test_noreunjawi_yr(self):
		self.run_test("노른자위", "{{ko-IPA}}", "nolun.cawi", "yr")
	def test_noreunjawi_ipa(self):
		self.run_test("노른자위", "{{ko-IPA}}", "[no̞ɾɯɲd͡ʑa̠ɥi] ~ [no̞ɾɯɲd͡ʑa̠y]", "ipa")

	def test_uran_ph(self):
		self.run_test("울안", "{{ko-IPA}}", "우란", "ph")
	def test_uran_rr(self):
		self.run_test("울안", "{{ko-IPA}}", "uran", "rr")
	def test_uran_rrr(self):
		self.run_test("울안", "{{ko-IPA}}", "ul'an", "rrr")
	def test_uran_mr(self):
		self.run_test("울안", "{{ko-IPA}}", "uran", "mr")
	def test_uran_yr(self):
		self.run_test("울안", "{{ko-IPA}}", "wul.an", "yr")
	def test_uran_ipa(self):
		self.run_test("울안", "{{ko-IPA}}", "[uɾa̠n]", "ipa")

	def test_sal_ph(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "살", "ph")
	def test_sal_rr(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "rr")
	def test_sal_rrr(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "rrr")
	def test_sal_mr(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "mr")
	def test_sal_yr(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "yr")
	def test_sal_ipa(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "[sʰa̠ɭ]", "ipa")
	def test_sal_ph_1(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "살", "ph")
	def test_sal_rr_1(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "rr")
	def test_sal_rrr_1(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "rrr")
	def test_sal_mr_1(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "mr")
	def test_sal_yr_1(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "yr")
	def test_sal_ipa_1(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "[sʰa̠ɭ]", "ipa")
	def test_sal_ph_2(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "살", "ph")
	def test_sal_rr_2(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "rr")
	def test_sal_rrr_2(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "rrr")
	def test_sal_mr_2(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "mr")
	def test_sal_yr_2(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "yr")
	def test_sal_ipa_2(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "[sʰa̠ɭ]", "ipa")
	def test_sal_ph_3(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "살", "ph")
	def test_sal_rr_3(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "rr")
	def test_sal_rrr_3(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "rrr")
	def test_sal_mr_3(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "mr")
	def test_sal_yr_3(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "sal", "yr")
	def test_sal_ipa_3(self):
		self.run_test("살", "{{ko-IPA|a=y}}", "[sʰa̠ɭ]", "ipa")
	def test_sal_ph_4(self):
		self.run_test("살", "{{ko-IPA|a=y|l=y}}", "살(ː)", "ph")
	def test_sal_rr_4(self):
		self.run_test("살", "{{ko-IPA|a=y|l=y}}", "sal", "rr")
	def test_sal_rrr_4(self):
		self.run_test("살", "{{ko-IPA|a=y|l=y}}", "sal", "rrr")
	def test_sal_mr_4(self):
		self.run_test("살", "{{ko-IPA|a=y|l=y}}", "sal", "mr")
	def test_sal_yr_4(self):
		self.run_test("살", "{{ko-IPA|a=y|l=y}}", "sāl", "yr")
	def test_sal_ipa_4(self):
		self.run_test("살", "{{ko-IPA|a=y|l=y}}", "[sʰa̠(ː)ɭ]", "ipa")

	def test_gyeol_ph(self):
		self.run_test("결", "{{ko-ipa}}", "결", "ph")
	def test_gyeol_rr(self):
		self.run_test("결", "{{ko-ipa}}", "gyeol", "rr")
	def test_gyeol_rrr(self):
		self.run_test("결", "{{ko-ipa}}", "gyeol", "rrr")
	def test_gyeol_mr(self):
		self.run_test("결", "{{ko-ipa}}", "kyŏl", "mr")
	def test_gyeol_yr(self):
		self.run_test("결", "{{ko-ipa}}", "kyel", "yr")
	def test_gyeol_ipa(self):
		self.run_test("결", "{{ko-ipa}}", "[kjʌ̹ɭ]", "ipa")

	def test_gyeoreul_ph(self):
		self.run_test("겨를", "{{ko-ipa}}", "겨를", "ph")
	def test_gyeoreul_rr(self):
		self.run_test("겨를", "{{ko-ipa}}", "gyeoreul", "rr")
	def test_gyeoreul_rrr(self):
		self.run_test("겨를", "{{ko-ipa}}", "gyeoleul", "rrr")
	def test_gyeoreul_mr(self):
		self.run_test("겨를", "{{ko-ipa}}", "kyŏrŭl", "mr")
	def test_gyeoreul_yr(self):
		self.run_test("겨를", "{{ko-ipa}}", "kyelul", "yr")
	def test_gyeoreul_ipa(self):
		self.run_test("겨를", "{{ko-ipa}}", "[kjʌ̹ɾɯɭ]", "ipa")

	def test_yeop_ph(self):
		self.run_test("옆", "{{ko-IPA}}", "엽", "ph")
	def test_yeop_rr(self):
		self.run_test("옆", "{{ko-IPA}}", "yeop", "rr")
	def test_yeop_rrr(self):
		self.run_test("옆", "{{ko-IPA}}", "yeop", "rrr")
	def test_yeop_mr(self):
		self.run_test("옆", "{{ko-IPA}}", "yŏp", "mr")
	def test_yeop_yr(self):
		self.run_test("옆", "{{ko-IPA}}", "yeph", "yr")
	def test_yeop_ipa(self):
		self.run_test("옆", "{{ko-IPA}}", "[jʌ̹p̚]", "ipa")

	def test_nyeok_ph(self):
		self.run_test("녘", "{{ko-IPA}}", "녁", "ph")
	def test_nyeok_rr(self):
		self.run_test("녘", "{{ko-IPA}}", "nyeok", "rr")
	def test_nyeok_rrr(self):
		self.run_test("녘", "{{ko-IPA}}", "nyeok", "rrr")
	def test_nyeok_mr(self):
		self.run_test("녘", "{{ko-IPA}}", "nyŏk", "mr")
	def test_nyeok_yr(self):
		self.run_test("녘", "{{ko-IPA}}", "nyekh", "yr")
	def test_nyeok_ipa(self):
		self.run_test("녘", "{{ko-IPA}}", "[ɲʌ̹k̚]", "ipa")

	def test_jeup_ph(self):
		self.run_test("즙", "{{ko-IPA}}", "즙", "ph")
	def test_jeup_rr(self):
		self.run_test("즙", "{{ko-IPA}}", "jeup", "rr")
	def test_jeup_rrr(self):
		self.run_test("즙", "{{ko-IPA}}", "jeub", "rrr")
	def test_jeup_mr(self):
		self.run_test("즙", "{{ko-IPA}}", "chŭp", "mr")
	def test_jeup_yr(self):
		self.run_test("즙", "{{ko-IPA}}", "cup", "yr")
	def test_jeup_ipa(self):
		self.run_test("즙", "{{ko-IPA}}", "[t͡ɕɯp̚]", "ipa")

	def test_juseu_ph(self):
		self.run_test("주스", "{{ko-IPA}}", "주스", "ph")
	def test_juseu_rr(self):
		self.run_test("주스", "{{ko-IPA}}", "juseu", "rr")
	def test_juseu_rrr(self):
		self.run_test("주스", "{{ko-IPA}}", "juseu", "rrr")
	def test_juseu_mr(self):
		self.run_test("주스", "{{ko-IPA}}", "chusŭ", "mr")
	def test_juseu_yr(self):
		self.run_test("주스", "{{ko-IPA}}", "cwusu", "yr")
	def test_juseu_ipa(self):
		self.run_test("주스", "{{ko-IPA}}", "[t͡ɕusʰɯ]", "ipa")

	def test_seoltang_ph(self):
		self.run_test("설탕", "{{ko-IPA}}", "설탕", "ph")
	def test_seoltang_rr(self):
		self.run_test("설탕", "{{ko-IPA}}", "seoltang", "rr")
	def test_seoltang_rrr(self):
		self.run_test("설탕", "{{ko-IPA}}", "seoltang", "rrr")
	def test_seoltang_mr(self):
		self.run_test("설탕", "{{ko-IPA}}", "sŏlt'ang", "mr")
	def test_seoltang_yr(self):
		self.run_test("설탕", "{{ko-IPA}}", "sel.thang", "yr")
	def test_seoltang_ipa(self):
		self.run_test("설탕", "{{ko-IPA}}", "[sʰʌ̹ɭtʰa̠ŋ]", "ipa")

	def test_gamno_ph(self):
		self.run_test("감로", "{{ko-IPA}}", "감노", "ph")
	def test_gamno_rr(self):
		self.run_test("감로", "{{ko-IPA}}", "gamno", "rr")
	def test_gamno_rrr(self):
		self.run_test("감로", "{{ko-IPA}}", "gamlo", "rrr")
	def test_gamno_mr(self):
		self.run_test("감로", "{{ko-IPA}}", "kamno", "mr")
	def test_gamno_yr(self):
		self.run_test("감로", "{{ko-IPA}}", "kamlo", "yr")
	def test_gamno_ipa(self):
		self.run_test("감로", "{{ko-IPA}}", "[ka̠mno̞]", "ipa")

	def test_oreun_ph(self):
		self.run_test("오른", "{{ko-IPA}}", "오른", "ph")
	def test_oreun_rr(self):
		self.run_test("오른", "{{ko-IPA}}", "oreun", "rr")
	def test_oreun_rrr(self):
		self.run_test("오른", "{{ko-IPA}}", "oleun", "rrr")
	def test_oreun_mr(self):
		self.run_test("오른", "{{ko-IPA}}", "orŭn", "mr")
	def test_oreun_yr(self):
		self.run_test("오른", "{{ko-IPA}}", "olun", "yr")
	def test_oreun_ipa(self):
		self.run_test("오른", "{{ko-IPA}}", "[o̞ɾɯn]", "ipa")


	def test_bareun_ph(self):
		self.run_test("바른", "{{ko-IPA}}", "바른", "ph")
	def test_bareun_rr(self):
		self.run_test("바른", "{{ko-IPA}}", "bareun", "rr")
	def test_bareun_rrr(self):
		self.run_test("바른", "{{ko-IPA}}", "baleun", "rrr")
	def test_bareun_mr(self):
		self.run_test("바른", "{{ko-IPA}}", "parŭn", "mr")
	def test_bareun_yr(self):
		self.run_test("바른", "{{ko-IPA}}", "palun", "yr")
	def test_bareun_ipa(self):
		self.run_test("바른", "{{ko-IPA}}", "[pa̠ɾɯn]", "ipa")

	def test_tong_ph(self):
		self.run_test("통", "{{ko-IPA}}", "통", "ph")
	def test_tong_rr(self):
		self.run_test("통", "{{ko-IPA}}", "tong", "rr")
	def test_tong_rrr(self):
		self.run_test("통", "{{ko-IPA}}", "tong", "rrr")
	def test_tong_mr(self):
		self.run_test("통", "{{ko-IPA}}", "t'ong", "mr")
	def test_tong_yr(self):
		self.run_test("통", "{{ko-IPA}}", "thong", "yr")
	def test_tong_ipa(self):
		self.run_test("통", "{{ko-IPA}}", "[tʰo̞ŋ]", "ipa")

	def test_annyeong_ph(self):
		self.run_test("안녕", "{{ko-IPA}}", "안녕", "ph")
	def test_annyeong_rr(self):
		self.run_test("안녕", "{{ko-IPA}}", "annyeong", "rr")
	def test_annyeong_rrr(self):
		self.run_test("안녕", "{{ko-IPA}}", "annyeong", "rrr")
	def test_annyeong_mr(self):
		self.run_test("안녕", "{{ko-IPA}}", "annyŏng", "mr")
	def test_annyeong_yr(self):
		self.run_test("안녕", "{{ko-IPA}}", "annyeng", "yr")
	def test_annyeong_ipa(self):
		self.run_test("안녕", "{{ko-IPA}}", "[a̠nɲʌ̹ŋ]", "ipa")


	def test_teurim_ph(self):
		self.run_test("트림", "{{ko-IPA|l=y}}", "트(ː)림", "ph")
	def test_teurim_rr(self):
		self.run_test("트림", "{{ko-IPA|l=y}}", "teurim", "rr")
	def test_teurim_rrr(self):
		self.run_test("트림", "{{ko-IPA|l=y}}", "teulim", "rrr")
	def test_teurim_mr(self):
		self.run_test("트림", "{{ko-IPA|l=y}}", "t'ŭrim", "mr")
	def test_teurim_yr(self):
		self.run_test("트림", "{{ko-IPA|l=y}}", "thūlim", "yr")
	def test_teurim_ipa(self):
		self.run_test("트림", "{{ko-IPA|l=y}}", "[ˈtʰɯ(ː)ɾim]", "ipa")

	def test_gullida_ph(self):
		self.run_test("굴리다", "{{ko-IPA|l=y}}", "굴(ː)리다", "ph")
	def test_gullida_rr(self):
		self.run_test("굴리다", "{{ko-IPA|l=y}}", "gullida", "rr")
	def test_gullida_rrr(self):
		self.run_test("굴리다", "{{ko-IPA|l=y}}", "gullida", "rrr")
	def test_gullida_mr(self):
		self.run_test("굴리다", "{{ko-IPA|l=y}}", "kullida", "mr")
	def test_gullida_yr(self):
		self.run_test("굴리다", "{{ko-IPA|l=y}}", "kwūllita", "yr")
	def test_gullida_ipa(self):
		self.run_test("굴리다", "{{ko-IPA|l=y}}", "[ˈku(ː)ʎʎida̠]", "ipa")

	def test_no_ph(self):
		self.run_test("노", "{{ko-IPA}}", "노", "ph")
	def test_no_rr(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rr")
	def test_no_rrr(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rrr")
	def test_no_mr(self):
		self.run_test("노", "{{ko-IPA}}", "no", "mr")
	def test_no_yr(self):
		self.run_test("노", "{{ko-IPA}}", "no", "yr")
	def test_no_ipa(self):
		self.run_test("노", "{{ko-IPA}}", "[no̞]", "ipa")
	def test_no_ph_1(self):
		self.run_test("노", "{{ko-IPA}}", "노", "ph")
	def test_no_rr_1(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rr")
	def test_no_rrr_1(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rrr")
	def test_no_mr_1(self):
		self.run_test("노", "{{ko-IPA}}", "no", "mr")
	def test_no_yr_1(self):
		self.run_test("노", "{{ko-IPA}}", "no", "yr")
	def test_no_ipa_1(self):
		self.run_test("노", "{{ko-IPA}}", "[no̞]", "ipa")
	def test_no_ph_2(self):
		self.run_test("노", "{{ko-IPA}}", "노", "ph")
	def test_no_rr_2(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rr")
	def test_no_rrr_2(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rrr")
	def test_no_mr_2(self):
		self.run_test("노", "{{ko-IPA}}", "no", "mr")
	def test_no_yr_2(self):
		self.run_test("노", "{{ko-IPA}}", "no", "yr")
	def test_no_ipa_2(self):
		self.run_test("노", "{{ko-IPA}}", "[no̞]", "ipa")
	def test_no_ph_3(self):
		self.run_test("노", "{{ko-IPA}}", "노", "ph")
	def test_no_rr_3(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rr")
	def test_no_rrr_3(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rrr")
	def test_no_mr_3(self):
		self.run_test("노", "{{ko-IPA}}", "no", "mr")
	def test_no_yr_3(self):
		self.run_test("노", "{{ko-IPA}}", "no", "yr")
	def test_no_ipa_3(self):
		self.run_test("노", "{{ko-IPA}}", "[no̞]", "ipa")
	def test_no_ph_4(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "노(ː)", "ph")
	def test_no_rr_4(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "no", "rr")
	def test_no_rrr_4(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "no", "rrr")
	def test_no_mr_4(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "no", "mr")
	def test_no_yr_4(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "nō", "yr")
	def test_no_ipa_4(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "[no̞(ː)]", "ipa")
	def test_no_ph_5(self):
		self.run_test("노", "{{ko-IPA}}", "노", "ph")
	def test_no_rr_5(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rr")
	def test_no_rrr_5(self):
		self.run_test("노", "{{ko-IPA}}", "no", "rrr")
	def test_no_mr_5(self):
		self.run_test("노", "{{ko-IPA}}", "no", "mr")
	def test_no_yr_5(self):
		self.run_test("노", "{{ko-IPA}}", "no", "yr")
	def test_no_ipa_5(self):
		self.run_test("노", "{{ko-IPA}}", "[no̞]", "ipa")
	def test_No_ph_6(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "노", "ph")
	def test_No_rr_6(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "No", "rr")
	def test_No_rrr_6(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "No", "rrr")
	def test_No_mr_6(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "No", "mr")
	def test_No_yr_6(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "no", "yr")
	def test_No_ipa_6(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "[no̞]", "ipa")
	def test_No_ph_7(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "노", "ph")
	def test_No_rr_7(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "No", "rr")
	def test_No_rrr_7(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "No", "rrr")
	def test_No_mr_7(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "No", "mr")
	def test_No_yr_7(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "no", "yr")
	def test_No_ipa_7(self):
		self.run_test("노", "{{ko-IPA|cap=y}}", "[no̞]", "ipa")
	def test_no_ph_8(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "노(ː)", "ph")
	def test_no_rr_8(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "no", "rr")
	def test_no_rrr_8(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "no", "rrr")
	def test_no_mr_8(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "no", "mr")
	def test_no_yr_8(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "nō", "yr")
	def test_no_ipa_8(self):
		self.run_test("노", "{{ko-IPA|l=y}}", "[no̞(ː)]", "ipa")

	def test_ppyam_ph(self):
		self.run_test("뺨", "{{ko-IPA}}", "뺨", "ph")
	def test_ppyam_rr(self):
		self.run_test("뺨", "{{ko-IPA}}", "ppyam", "rr")
	def test_ppyam_rrr(self):
		self.run_test("뺨", "{{ko-IPA}}", "ppyam", "rrr")
	def test_ppyam_mr(self):
		self.run_test("뺨", "{{ko-IPA}}", "ppyam", "mr")
	def test_ppyam_yr(self):
		self.run_test("뺨", "{{ko-IPA}}", "ppyam", "yr")
	def test_ppyam_ipa(self):
		self.run_test("뺨", "{{ko-IPA}}", "[p͈ja̠m]", "ipa")

	def test_ssipda_ph(self):
		self.run_test("씹다", "{{ko-IPA}}", "씹따", "ph")
	def test_ssipda_rr(self):
		self.run_test("씹다", "{{ko-IPA}}", "ssipda", "rr")
	def test_ssipda_rrr(self):
		self.run_test("씹다", "{{ko-IPA}}", "ssibda", "rrr")
	def test_ssipda_mr(self):
		self.run_test("씹다", "{{ko-IPA}}", "ssipta", "mr")
	def test_ssipda_yr(self):
		self.run_test("씹다", "{{ko-IPA}}", "ssipta", "yr")
	def test_ssipda_ipa(self):
		self.run_test("씹다", "{{ko-IPA}}", "[ɕ͈ip̚t͈a̠]", "ipa")

	def test_sswaegi_ph(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "쐐(ː)기/쒜(ː)기", "ph")
	def test_sswaegi_rr(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "sswaegi", "rr")
	def test_sswaegi_rrr(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "sswaegi", "rrr")
	def test_sswaegi_mr(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "sswaegi", "mr")
	def test_sswaegi_yr(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "sswāyki", "yr")
	def test_sswaegi_ipa(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "[ˈs͈wɛ(ː)ɡi] ~ [ˈs͈we̞(ː)ɡi]", "ipa")
	def test_sswaegi_ph_1(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "쐐(ː)기/쒜(ː)기", "ph")
	def test_sswaegi_rr_1(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "sswaegi", "rr")
	def test_sswaegi_rrr_1(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "sswaegi", "rrr")
	def test_sswaegi_mr_1(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "sswaegi", "mr")
	def test_sswaegi_yr_1(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "sswāyki", "yr")
	def test_sswaegi_ipa_1(self):
		self.run_test("쐐기", "{{ko-IPA|l=y}}", "[ˈs͈wɛ(ː)ɡi] ~ [ˈs͈we̞(ː)ɡi]", "ipa")

	def test_dokki_ph(self):
		self.run_test("도끼", "{{ko-ipa|l=y}}", "도(ː)끼", "ph")
	def test_dokki_rr(self):
		self.run_test("도끼", "{{ko-ipa|l=y}}", "dokki", "rr")
	def test_dokki_rrr(self):
		self.run_test("도끼", "{{ko-ipa|l=y}}", "do'kki", "rrr")
	def test_dokki_mr(self):
		self.run_test("도끼", "{{ko-ipa|l=y}}", "tokki", "mr")
	def test_dokki_yr(self):
		self.run_test("도끼", "{{ko-ipa|l=y}}", "tō.kki", "yr")
	def test_dokki_ipa(self):
		self.run_test("도끼", "{{ko-ipa|l=y}}", "[ˈto̞(ː)k͈i]", "ipa")

	def test_ppalda_ph(self):
		self.run_test("빨다", "{{ko-IPA}}", "빨다", "ph")
	def test_ppalda_rr(self):
		self.run_test("빨다", "{{ko-IPA}}", "ppalda", "rr")
	def test_ppalda_rrr(self):
		self.run_test("빨다", "{{ko-IPA}}", "ppalda", "rrr")
	def test_ppalda_mr(self):
		self.run_test("빨다", "{{ko-IPA}}", "ppalda", "mr")
	def test_ppalda_yr(self):
		self.run_test("빨다", "{{ko-IPA}}", "ppalta", "yr")
	def test_ppalda_ipa(self):
		self.run_test("빨다", "{{ko-IPA}}", "[p͈a̠ɭda̠]", "ipa")

	def test_haksaeng_ph(self):
		self.run_test("학생", "{{ko-IPA|a=y}}", "학쌩/학쎙", "ph")
	def test_haksaeng_rr(self):
		self.run_test("학생", "{{ko-IPA|a=y}}", "haksaeng", "rr")
	def test_haksaeng_rrr(self):
		self.run_test("학생", "{{ko-IPA|a=y}}", "hagsaeng", "rrr")
	def test_haksaeng_mr(self):
		self.run_test("학생", "{{ko-IPA|a=y}}", "haksaeng", "mr")
	def test_haksaeng_yr(self):
		self.run_test("학생", "{{ko-IPA|a=y}}", "hak.sayng", "yr")
	def test_haksaeng_ipa(self):
		self.run_test("학생", "{{ko-IPA|a=y}}", "[ha̠ks͈ɛŋ] ~ [ha̠ks͈e̞ŋ]", "ipa")

	def test_jo_ph(self):
		self.run_test("조", "{{ko-IPA}}", "조", "ph")
	def test_jo_rr(self):
		self.run_test("조", "{{ko-IPA}}", "jo", "rr")
	def test_jo_rrr(self):
		self.run_test("조", "{{ko-IPA}}", "jo", "rrr")
	def test_jo_mr(self):
		self.run_test("조", "{{ko-IPA}}", "cho", "mr")
	def test_jo_yr(self):
		self.run_test("조", "{{ko-IPA}}", "co", "yr")
	def test_jo_ipa(self):
		self.run_test("조", "{{ko-IPA}}", "[t͡ɕo̞]", "ipa")
	def test_jo_ph_1(self):
		self.run_test("조", "{{ko-IPA}}", "조", "ph")
	def test_jo_rr_1(self):
		self.run_test("조", "{{ko-IPA}}", "jo", "rr")
	def test_jo_rrr_1(self):
		self.run_test("조", "{{ko-IPA}}", "jo", "rrr")
	def test_jo_mr_1(self):
		self.run_test("조", "{{ko-IPA}}", "cho", "mr")
	def test_jo_yr_1(self):
		self.run_test("조", "{{ko-IPA}}", "co", "yr")
	def test_jo_ipa_1(self):
		self.run_test("조", "{{ko-IPA}}", "[t͡ɕo̞]", "ipa")

	def test_dongsaeng_ph(self):
		self.run_test("동생", "{{ko-IPA}}", "동생/동셍", "ph")
	def test_dongsaeng_rr(self):
		self.run_test("동생", "{{ko-IPA}}", "dongsaeng", "rr")
	def test_dongsaeng_rrr(self):
		self.run_test("동생", "{{ko-IPA}}", "dongsaeng", "rrr")
	def test_dongsaeng_mr(self):
		self.run_test("동생", "{{ko-IPA}}", "tongsaeng", "mr")
	def test_dongsaeng_yr(self):
		self.run_test("동생", "{{ko-IPA}}", "tongsayng", "yr")
	def test_dongsaeng_ipa(self):
		self.run_test("동생", "{{ko-IPA}}", "[to̞ŋsʰɛŋ] ~ [to̞ŋsʰe̞ŋ]", "ipa")

	def test_nakcheonjuuija_ph(self):
		self.run_test("낙천주의자", "{{ko-IPA|ui=4}}", "낙천주의자/낙천주이자", "ph")
	def test_nakcheonjuuija_rr(self):
		self.run_test("낙천주의자", "{{ko-IPA|ui=4}}", "nakcheonjuuija", "rr")
	def test_nakcheonjuuija_rrr(self):
		self.run_test("낙천주의자", "{{ko-IPA|ui=4}}", "nagcheonjuuija", "rrr")
	def test_nakcheonjuuija_mr(self):
		self.run_test("낙천주의자", "{{ko-IPA|ui=4}}", "nakch'ŏnjuŭija", "mr")
	def test_nakcheonjuuija_yr(self):
		self.run_test("낙천주의자", "{{ko-IPA|ui=4}}", "nakchen.cwuuyca", "yr")
	def test_nakcheonjuuija_ipa(self):
		self.run_test("낙천주의자", "{{ko-IPA|ui=4}}", "[na̠k̚t͡ɕʰʌ̹ɲd͡ʑuɰid͡ʑa̠] ~ [na̠k̚t͡ɕʰʌ̹ɲd͡ʑuid͡ʑa̠]", "ipa")

	def test_beoteo_ph(self):
		self.run_test("버터", "{{ko-IPA}}", "버터", "ph")
	def test_beoteo_rr(self):
		self.run_test("버터", "{{ko-IPA}}", "beoteo", "rr")
	def test_beoteo_rrr(self):
		self.run_test("버터", "{{ko-IPA}}", "beoteo", "rrr")
	def test_beoteo_mr(self):
		self.run_test("버터", "{{ko-IPA}}", "pŏt'ŏ", "mr")
	def test_beoteo_yr(self):
		self.run_test("버터", "{{ko-IPA}}", "pe.the", "yr")
	def test_beoteo_ipa(self):
		self.run_test("버터", "{{ko-IPA}}", "[pʌ̹tʰʌ̹]", "ipa")

	def test_gureuda_ph(self):
		self.run_test("구르다", "{{ko-IPA}}", "구르다", "ph")
	def test_gureuda_rr(self):
		self.run_test("구르다", "{{ko-IPA}}", "gureuda", "rr")
	def test_gureuda_rrr(self):
		self.run_test("구르다", "{{ko-IPA}}", "guleuda", "rrr")
	def test_gureuda_mr(self):
		self.run_test("구르다", "{{ko-IPA}}", "kurŭda", "mr")
	def test_gureuda_yr(self):
		self.run_test("구르다", "{{ko-IPA}}", "kwuluta", "yr")
	def test_gureuda_ipa(self):
		self.run_test("구르다", "{{ko-IPA}}", "[kuɾɯda̠]", "ipa")
	def test_gureuda_ph_1(self):
		self.run_test("구르다", "{{ko-IPA|l=y}}", "구(ː)르다", "ph")
	def test_gureuda_rr_1(self):
		self.run_test("구르다", "{{ko-IPA|l=y}}", "gureuda", "rr")
	def test_gureuda_rrr_1(self):
		self.run_test("구르다", "{{ko-IPA|l=y}}", "guleuda", "rrr")
	def test_gureuda_mr_1(self):
		self.run_test("구르다", "{{ko-IPA|l=y}}", "kurŭda", "mr")
	def test_gureuda_yr_1(self):
		self.run_test("구르다", "{{ko-IPA|l=y}}", "kwūluta", "yr")
	def test_gureuda_ipa_1(self):
		self.run_test("구르다", "{{ko-IPA|l=y}}", "[ˈku(ː)ɾɯda̠]", "ipa")

	def test_sure_ph(self):
		self.run_test("수레", "{{ko-ipa}}", "수레", "ph")
	def test_sure_rr(self):
		self.run_test("수레", "{{ko-ipa}}", "sure", "rr")
	def test_sure_rrr(self):
		self.run_test("수레", "{{ko-ipa}}", "sule", "rrr")
	def test_sure_mr(self):
		self.run_test("수레", "{{ko-ipa}}", "sure", "mr")
	def test_sure_yr(self):
		self.run_test("수레", "{{ko-ipa}}", "swuley", "yr")
	def test_sure_ipa(self):
		self.run_test("수레", "{{ko-ipa}}", "[sʰuɾe̞]", "ipa")

	def test_Ssoryeon_ph(self):
		self.run_test("쏘련", "{{ko-IPA|cap=y}}", "쏘련", "ph")
	def test_Ssoryeon_rr(self):
		self.run_test("쏘련", "{{ko-IPA|cap=y}}", "Ssoryeon", "rr")
	def test_Ssoryeon_rrr(self):
		self.run_test("쏘련", "{{ko-IPA|cap=y}}", "Ssolyeon", "rrr")
	def test_Ssoryeon_mr(self):
		self.run_test("쏘련", "{{ko-IPA|cap=y}}", "Ssoryŏn", "mr")
	def test_Ssoryeon_yr(self):
		self.run_test("쏘련", "{{ko-IPA|cap=y}}", "ssolyen", "yr")
	def test_Ssoryeon_ipa(self):
		self.run_test("쏘련", "{{ko-IPA|cap=y}}", "[s͈o̞ɾjʌ̹n]", "ipa")

	def test_silmari_ph(self):
		self.run_test("실마리", "{{ko-IPA|l=y}}", "실(ː)마리", "ph")
	def test_silmari_rr(self):
		self.run_test("실마리", "{{ko-IPA|l=y}}", "silmari", "rr")
	def test_silmari_rrr(self):
		self.run_test("실마리", "{{ko-IPA|l=y}}", "silmali", "rrr")
	def test_silmari_mr(self):
		self.run_test("실마리", "{{ko-IPA|l=y}}", "silmari", "mr")
	def test_silmari_yr(self):
		self.run_test("실마리", "{{ko-IPA|l=y}}", "sīl.mali", "yr")
	def test_silmari_ipa(self):
		self.run_test("실마리", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)ɭma̠ɾi]", "ipa")

	def test_eseo_ph(self):
		self.run_test("-에서", "{{ko-ipa}}", "에서", "ph")
	def test_eseo_rr(self):
		self.run_test("-에서", "{{ko-ipa}}", "eseo", "rr")
	def test_eseo_rrr(self):
		self.run_test("-에서", "{{ko-ipa}}", "eseo", "rrr")
	def test_eseo_mr(self):
		self.run_test("-에서", "{{ko-ipa}}", "esŏ", "mr")
	def test_eseo_yr(self):
		self.run_test("-에서", "{{ko-ipa}}", "eyse", "yr")
	def test_eseo_ipa(self):
		self.run_test("-에서", "{{ko-ipa}}", "[e̞sʰʌ̹]", "ipa")

	def test_chatda_ph(self):
		self.run_test("찾다", "{{ko-IPA|a=y}}", "찯따", "ph")
	def test_chatda_rr(self):
		self.run_test("찾다", "{{ko-IPA|a=y}}", "chatda", "rr")
	def test_chatda_rrr(self):
		self.run_test("찾다", "{{ko-IPA|a=y}}", "chajda", "rrr")
	def test_chatda_mr(self):
		self.run_test("찾다", "{{ko-IPA|a=y}}", "ch'atta", "mr")
	def test_chatda_yr(self):
		self.run_test("찾다", "{{ko-IPA|a=y}}", "chacta", "yr")
	def test_chatda_ipa(self):
		self.run_test("찾다", "{{ko-IPA|a=y}}", "[t͡ɕʰa̠t̚t͈a̠]", "ipa")

	def test_neomu_ph(self):
		self.run_test("너무", "{{ko-IPA|a=y}}", "너무", "ph")
	def test_neomu_rr(self):
		self.run_test("너무", "{{ko-IPA|a=y}}", "neomu", "rr")
	def test_neomu_rrr(self):
		self.run_test("너무", "{{ko-IPA|a=y}}", "neomu", "rrr")
	def test_neomu_mr(self):
		self.run_test("너무", "{{ko-IPA|a=y}}", "nŏmu", "mr")
	def test_neomu_yr(self):
		self.run_test("너무", "{{ko-IPA|a=y}}", "nemu", "yr")
	def test_neomu_ipa(self):
		self.run_test("너무", "{{ko-IPA|a=y}}", "[nʌ̹mu]", "ipa")

	def test_garakjippang_ph(self):
		self.run_test("가락지빵", "{{ko-ipa}}", "가락찌빵", "ph")
	def test_garakjippang_rr(self):
		self.run_test("가락지빵", "{{ko-ipa}}", "garakjippang", "rr")
	def test_garakjippang_rrr(self):
		self.run_test("가락지빵", "{{ko-ipa}}", "galagji'ppang", "rrr")
	def test_garakjippang_mr(self):
		self.run_test("가락지빵", "{{ko-ipa}}", "karakchippang", "mr")
	def test_garakjippang_yr(self):
		self.run_test("가락지빵", "{{ko-ipa}}", "kalakci.ppang", "yr")
	def test_garakjippang_ipa(self):
		self.run_test("가락지빵", "{{ko-ipa}}", "[ka̠ɾa̠k̚t͡ɕ͈ip͈a̠ŋ]", "ipa")

	def test_apateu_ph(self):
		self.run_test("아파트", "{{ko-IPA}}", "아파트", "ph")
	def test_apateu_rr(self):
		self.run_test("아파트", "{{ko-IPA}}", "apateu", "rr")
	def test_apateu_rrr(self):
		self.run_test("아파트", "{{ko-IPA}}", "apateu", "rrr")
	def test_apateu_mr(self):
		self.run_test("아파트", "{{ko-IPA}}", "ap'at'ŭ", "mr")
	def test_apateu_yr(self):
		self.run_test("아파트", "{{ko-IPA}}", "a.pha.thu", "yr")
	def test_apateu_ipa(self):
		self.run_test("아파트", "{{ko-IPA}}", "[a̠pʰa̠tʰɯ]", "ipa")

	def test_daemyeongsa_ph(self):
		self.run_test("대명사", "{{ko-IPA|l=y}}", "대(ː)명사/데(ː)명사", "ph")
	def test_daemyeongsa_rr(self):
		self.run_test("대명사", "{{ko-IPA|l=y}}", "daemyeongsa", "rr")
	def test_daemyeongsa_rrr(self):
		self.run_test("대명사", "{{ko-IPA|l=y}}", "daemyeongsa", "rrr")
	def test_daemyeongsa_mr(self):
		self.run_test("대명사", "{{ko-IPA|l=y}}", "taemyŏngsa", "mr")
	def test_daemyeongsa_yr(self):
		self.run_test("대명사", "{{ko-IPA|l=y}}", "tāymyengsa", "yr")
	def test_daemyeongsa_ipa(self):
		self.run_test("대명사", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)mjʌ̹ŋsʰa̠] ~ [ˈte̞(ː)mjʌ̹ŋsʰa̠]", "ipa")

	def test_myeongsa_ph(self):
		self.run_test("명사", "{{ko-ipa}}", "명사", "ph")
	def test_myeongsa_rr(self):
		self.run_test("명사", "{{ko-ipa}}", "myeongsa", "rr")
	def test_myeongsa_rrr(self):
		self.run_test("명사", "{{ko-ipa}}", "myeongsa", "rrr")
	def test_myeongsa_mr(self):
		self.run_test("명사", "{{ko-ipa}}", "myŏngsa", "mr")
	def test_myeongsa_yr(self):
		self.run_test("명사", "{{ko-ipa}}", "myengsa", "yr")
	def test_myeongsa_ipa(self):
		self.run_test("명사", "{{ko-ipa}}", "[mjʌ̹ŋsʰa̠]", "ipa")

	def test_gage_ph(self):
		self.run_test("가게", "{{ko-IPA|l=y|a=y}}", "가(ː)게", "ph")
	def test_gage_rr(self):
		self.run_test("가게", "{{ko-IPA|l=y|a=y}}", "gage", "rr")
	def test_gage_rrr(self):
		self.run_test("가게", "{{ko-IPA|l=y|a=y}}", "gage", "rrr")
	def test_gage_mr(self):
		self.run_test("가게", "{{ko-IPA|l=y|a=y}}", "kage", "mr")
	def test_gage_yr(self):
		self.run_test("가게", "{{ko-IPA|l=y|a=y}}", "kākey", "yr")
	def test_gage_ipa(self):
		self.run_test("가게", "{{ko-IPA|l=y|a=y}}", "[ˈka̠(ː)ɡe̞]", "ipa")

	def test_ganeunghada_ph(self):
		self.run_test("가능하다", "{{ko-IPA|l=y|a=y}}", "가(ː)능하다", "ph")
	def test_ganeunghada_rr(self):
		self.run_test("가능하다", "{{ko-IPA|l=y|a=y}}", "ganeunghada", "rr")
	def test_ganeunghada_rrr(self):
		self.run_test("가능하다", "{{ko-IPA|l=y|a=y}}", "ganeunghada", "rrr")
	def test_ganeunghada_mr(self):
		self.run_test("가능하다", "{{ko-IPA|l=y|a=y}}", "kanŭnghada", "mr")
	def test_ganeunghada_yr(self):
		self.run_test("가능하다", "{{ko-IPA|l=y|a=y}}", "kānunghata", "yr")
	def test_ganeunghada_ipa(self):
		self.run_test("가능하다", "{{ko-IPA|l=y|a=y}}", "[ˈka̠(ː)nɯŋɦa̠da̠]", "ipa")

	def test_munsin_ph(self):
		self.run_test("문신", "{{ko-IPA}}", "문신", "ph")
	def test_munsin_rr(self):
		self.run_test("문신", "{{ko-IPA}}", "munsin", "rr")
	def test_munsin_rrr(self):
		self.run_test("문신", "{{ko-IPA}}", "munsin", "rrr")
	def test_munsin_mr(self):
		self.run_test("문신", "{{ko-IPA}}", "munsin", "mr")
	def test_munsin_yr(self):
		self.run_test("문신", "{{ko-IPA}}", "munsin", "yr")
	def test_munsin_ipa(self):
		self.run_test("문신", "{{ko-IPA}}", "[munɕʰin]", "ipa")

	def test_gantong_ph(self):
		self.run_test("간통", "{{ko-IPA|l=y}}", "간(ː)통", "ph")
	def test_gantong_rr(self):
		self.run_test("간통", "{{ko-IPA|l=y}}", "gantong", "rr")
	def test_gantong_rrr(self):
		self.run_test("간통", "{{ko-IPA|l=y}}", "gantong", "rrr")
	def test_gantong_mr(self):
		self.run_test("간통", "{{ko-IPA|l=y}}", "kant'ong", "mr")
	def test_gantong_yr(self):
		self.run_test("간통", "{{ko-IPA|l=y}}", "kānthong", "yr")
	def test_gantong_ipa(self):
		self.run_test("간통", "{{ko-IPA|l=y}}", "[ˈka̠(ː)ntʰo̞ŋ]", "ipa")

	def test_gamsa_ph(self):
		self.run_test("감사", "{{ko-ipa|l=y}}", "감(ː)사", "ph")
	def test_gamsa_rr(self):
		self.run_test("감사", "{{ko-ipa|l=y}}", "gamsa", "rr")
	def test_gamsa_rrr(self):
		self.run_test("감사", "{{ko-ipa|l=y}}", "gamsa", "rrr")
	def test_gamsa_mr(self):
		self.run_test("감사", "{{ko-ipa|l=y}}", "kamsa", "mr")
	def test_gamsa_yr(self):
		self.run_test("감사", "{{ko-ipa|l=y}}", "kāmsa", "yr")
	def test_gamsa_ipa(self):
		self.run_test("감사", "{{ko-ipa|l=y}}", "[ˈka̠(ː)msʰa̠]", "ipa")
	def test_gamsa_ph_1(self):
		self.run_test("감사", "{{ko-ipa}}", "감사", "ph")
	def test_gamsa_rr_1(self):
		self.run_test("감사", "{{ko-ipa}}", "gamsa", "rr")
	def test_gamsa_rrr_1(self):
		self.run_test("감사", "{{ko-ipa}}", "gamsa", "rrr")
	def test_gamsa_mr_1(self):
		self.run_test("감사", "{{ko-ipa}}", "kamsa", "mr")
	def test_gamsa_yr_1(self):
		self.run_test("감사", "{{ko-ipa}}", "kamsa", "yr")
	def test_gamsa_ipa_1(self):
		self.run_test("감사", "{{ko-ipa}}", "[ka̠msʰa̠]", "ipa")

	def test_gap_ph(self):
		self.run_test("값", "{{ko-IPA}}", "갑", "ph")
	def test_gap_rr(self):
		self.run_test("값", "{{ko-IPA}}", "gap", "rr")
	def test_gap_rrr(self):
		self.run_test("값", "{{ko-IPA}}", "gabs", "rrr")
	def test_gap_mr(self):
		self.run_test("값", "{{ko-IPA}}", "kap", "mr")
	def test_gap_yr(self):
		self.run_test("값", "{{ko-IPA}}", "kaps", "yr")
	def test_gap_ipa(self):
		self.run_test("값", "{{ko-IPA}}", "[ka̠p̚]", "ipa")

	def test_gang_ph(self):
		self.run_test("강", "{{ko-IPA}}", "강", "ph")
	def test_gang_rr(self):
		self.run_test("강", "{{ko-IPA}}", "gang", "rr")
	def test_gang_rrr(self):
		self.run_test("강", "{{ko-IPA}}", "gang", "rrr")
	def test_gang_mr(self):
		self.run_test("강", "{{ko-IPA}}", "kang", "mr")
	def test_gang_yr(self):
		self.run_test("강", "{{ko-IPA}}", "kang", "yr")
	def test_gang_ipa(self):
		self.run_test("강", "{{ko-IPA}}", "[ka̠ŋ]", "ipa")

	def test_geoul_ph(self):
		self.run_test("거울", "{{ko-IPA}}", "거울", "ph")
	def test_geoul_rr(self):
		self.run_test("거울", "{{ko-IPA}}", "geoul", "rr")
	def test_geoul_rrr(self):
		self.run_test("거울", "{{ko-IPA}}", "geoul", "rrr")
	def test_geoul_mr(self):
		self.run_test("거울", "{{ko-IPA}}", "kŏul", "mr")
	def test_geoul_yr(self):
		self.run_test("거울", "{{ko-IPA}}", "kewul", "yr")
	def test_geoul_ipa(self):
		self.run_test("거울", "{{ko-IPA}}", "[kʌ̹uɭ]", "ipa")

	def test_geonmul_ph(self):
		self.run_test("건물", "{{ko-IPA|l=y}}", "건(ː)물", "ph")
	def test_geonmul_rr(self):
		self.run_test("건물", "{{ko-IPA|l=y}}", "geonmul", "rr")
	def test_geonmul_rrr(self):
		self.run_test("건물", "{{ko-IPA|l=y}}", "geonmul", "rrr")
	def test_geonmul_mr(self):
		self.run_test("건물", "{{ko-IPA|l=y}}", "kŏnmul", "mr")
	def test_geonmul_yr(self):
		self.run_test("건물", "{{ko-IPA|l=y}}", "kēnmul", "yr")
	def test_geonmul_ipa(self):
		self.run_test("건물", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)nmuɭ]", "ipa")

	def test_sahyanggoyangi_ph(self):
		self.run_test("사향고양이", "{{ko-ipa}}", "사향고양이", "ph")
	def test_sahyanggoyangi_rr(self):
		self.run_test("사향고양이", "{{ko-ipa}}", "sahyanggoyang'i", "rr")
	def test_sahyanggoyangi_rrr(self):
		self.run_test("사향고양이", "{{ko-ipa}}", "sahyanggoyang'i", "rrr")
	def test_sahyanggoyangi_mr(self):
		self.run_test("사향고양이", "{{ko-ipa}}", "sahyanggoyangi", "mr")
	def test_sahyanggoyangi_yr(self):
		self.run_test("사향고양이", "{{ko-ipa}}", "sahyangko.yangi", "yr")
	def test_sahyanggoyangi_ipa(self):
		self.run_test("사향고양이", "{{ko-ipa}}", "[sʰa̠ʝa̠ŋɡo̞ja̠ŋi]", "ipa")

	def test_yuinwon_ph(self):
		self.run_test("유인원", "{{ko-ipa|l=y}}", "유(ː)이눤", "ph")
	def test_yuinwon_rr(self):
		self.run_test("유인원", "{{ko-ipa|l=y}}", "yuinwon", "rr")
	def test_yuinwon_rrr(self):
		self.run_test("유인원", "{{ko-ipa|l=y}}", "yuin'won", "rrr")
	def test_yuinwon_mr(self):
		self.run_test("유인원", "{{ko-ipa|l=y}}", "yuinwŏn", "mr")
	def test_yuinwon_yr(self):
		self.run_test("유인원", "{{ko-ipa|l=y}}", "yūin.wen", "yr")
	def test_yuinwon_ipa(self):
		self.run_test("유인원", "{{ko-ipa|l=y}}", "[ˈju(ː)inwʌ̹n]", "ipa")

	def test_geuda_ph(self):
		self.run_test("게우다", "{{ko-IPA}}", "게우다", "ph")
	def test_geuda_rr(self):
		self.run_test("게우다", "{{ko-IPA}}", "ge'uda", "rr")
	def test_geuda_rrr(self):
		self.run_test("게우다", "{{ko-IPA}}", "ge'uda", "rrr")
	def test_geuda_mr(self):
		self.run_test("게우다", "{{ko-IPA}}", "keuda", "mr")
	def test_geuda_yr(self):
		self.run_test("게우다", "{{ko-IPA}}", "keywuta", "yr")
	def test_geuda_ipa(self):
		self.run_test("게우다", "{{ko-IPA}}", "[ke̞uda̠]", "ipa")

	def test_bureojida_ph(self):
		self.run_test("부러지다", "{{ko-IPA}}", "부러지다", "ph")
	def test_bureojida_rr(self):
		self.run_test("부러지다", "{{ko-IPA}}", "bureojida", "rr")
	def test_bureojida_rrr(self):
		self.run_test("부러지다", "{{ko-IPA}}", "buleojida", "rrr")
	def test_bureojida_mr(self):
		self.run_test("부러지다", "{{ko-IPA}}", "purŏjida", "mr")
	def test_bureojida_yr(self):
		self.run_test("부러지다", "{{ko-IPA}}", "pulecita", "yr")
	def test_bureojida_ipa(self):
		self.run_test("부러지다", "{{ko-IPA}}", "[puɾʌ̹d͡ʑida̠]", "ipa")

	def test_yatboda_ph(self):
		self.run_test("얕보다", "{{ko-IPA}}", "얃뽀다", "ph")
	def test_yatboda_rr(self):
		self.run_test("얕보다", "{{ko-IPA}}", "yatboda", "rr")
	def test_yatboda_rrr(self):
		self.run_test("얕보다", "{{ko-IPA}}", "yatboda", "rrr")
	def test_yatboda_mr(self):
		self.run_test("얕보다", "{{ko-IPA}}", "yatpoda", "mr")
	def test_yatboda_yr(self):
		self.run_test("얕보다", "{{ko-IPA}}", "yathpota", "yr")
	def test_yatboda_ipa(self):
		self.run_test("얕보다", "{{ko-IPA}}", "[ja̠t̚p͈o̞da̠]", "ipa")

	def test_eoneo_ph(self):
		self.run_test("언어", "{{ko-IPA}}", "어너", "ph")
	def test_eoneo_rr(self):
		self.run_test("언어", "{{ko-IPA}}", "eoneo", "rr")
	def test_eoneo_rrr(self):
		self.run_test("언어", "{{ko-IPA}}", "eon'eo", "rrr")
	def test_eoneo_mr(self):
		self.run_test("언어", "{{ko-IPA}}", "ŏnŏ", "mr")
	def test_eoneo_yr(self):
		self.run_test("언어", "{{ko-IPA}}", "en.e", "yr")
	def test_eoneo_ipa(self):
		self.run_test("언어", "{{ko-IPA}}", "[ʌ̹nʌ̹]", "ipa")

	def test_teseuteu_ph(self):
		self.run_test("테스트", "{{ko-IPA}}", "테스트", "ph")
	def test_teseuteu_rr(self):
		self.run_test("테스트", "{{ko-IPA}}", "teseuteu", "rr")
	def test_teseuteu_rrr(self):
		self.run_test("테스트", "{{ko-IPA}}", "teseuteu", "rrr")
	def test_teseuteu_mr(self):
		self.run_test("테스트", "{{ko-IPA}}", "t'esŭt'ŭ", "mr")
	def test_teseuteu_yr(self):
		self.run_test("테스트", "{{ko-IPA}}", "theysu.thu", "yr")
	def test_teseuteu_ipa(self):
		self.run_test("테스트", "{{ko-IPA}}", "[tʰe̞sʰɯtʰɯ]", "ipa")

	def test_yugio_ph(self):
		self.run_test("육이오", "{{ko-IPA}}", "유기오", "ph")
	def test_yugio_rr(self):
		self.run_test("육이오", "{{ko-IPA}}", "yugio", "rr")
	def test_yugio_rrr(self):
		self.run_test("육이오", "{{ko-IPA}}", "yug'io", "rrr")
	def test_yugio_mr(self):
		self.run_test("육이오", "{{ko-IPA}}", "yugio", "mr")
	def test_yugio_yr(self):
		self.run_test("육이오", "{{ko-IPA}}", "yuk.io", "yr")
	def test_yugio_ipa(self):
		self.run_test("육이오", "{{ko-IPA}}", "[juɡio̞]", "ipa")

	def test_gaega_ph(self):
		self.run_test("개가", "{{ko-IPA|l=y}}", "개(ː)가/게(ː)가", "ph")
	def test_gaega_rr(self):
		self.run_test("개가", "{{ko-IPA|l=y}}", "gaega", "rr")
	def test_gaega_rrr(self):
		self.run_test("개가", "{{ko-IPA|l=y}}", "gaega", "rrr")
	def test_gaega_mr(self):
		self.run_test("개가", "{{ko-IPA|l=y}}", "kaega", "mr")
	def test_gaega_yr(self):
		self.run_test("개가", "{{ko-IPA|l=y}}", "kāyka", "yr")
	def test_gaega_ipa(self):
		self.run_test("개가", "{{ko-IPA|l=y}}", "[ˈkɛ(ː)ɡa̠] ~ [ˈke̞(ː)ɡa̠]", "ipa")

	def test_got_ph(self):
		self.run_test("곧", "{{ko-IPA|a=y}}", "곧", "ph")
	def test_got_rr(self):
		self.run_test("곧", "{{ko-IPA|a=y}}", "got", "rr")
	def test_got_rrr(self):
		self.run_test("곧", "{{ko-IPA|a=y}}", "god", "rrr")
	def test_got_mr(self):
		self.run_test("곧", "{{ko-IPA|a=y}}", "kot", "mr")
	def test_got_yr(self):
		self.run_test("곧", "{{ko-IPA|a=y}}", "kot", "yr")
	def test_got_ipa(self):
		self.run_test("곧", "{{ko-IPA|a=y}}", "[ko̞t̚]", "ipa")

	def test_dosirak_ph(self):
		self.run_test("도시락", "{{ko-IPA}}", "도시락", "ph")
	def test_dosirak_rr(self):
		self.run_test("도시락", "{{ko-IPA}}", "dosirak", "rr")
	def test_dosirak_rrr(self):
		self.run_test("도시락", "{{ko-IPA}}", "dosilag", "rrr")
	def test_dosirak_mr(self):
		self.run_test("도시락", "{{ko-IPA}}", "tosirak", "mr")
	def test_dosirak_yr(self):
		self.run_test("도시락", "{{ko-IPA}}", "tosilak", "yr")
	def test_dosirak_ipa(self):
		self.run_test("도시락", "{{ko-IPA}}", "[to̞ɕʰiɾa̠k̚]", "ipa")

	def test_palgeori_ph(self):
		self.run_test("팔걸이", "{{ko-IPA}}", "팔거리", "ph")
	def test_palgeori_rr(self):
		self.run_test("팔걸이", "{{ko-IPA}}", "palgeori", "rr")
	def test_palgeori_rrr(self):
		self.run_test("팔걸이", "{{ko-IPA}}", "palgeol'i", "rrr")
	def test_palgeori_mr(self):
		self.run_test("팔걸이", "{{ko-IPA}}", "p'algŏri", "mr")
	def test_palgeori_yr(self):
		self.run_test("팔걸이", "{{ko-IPA}}", "phal.kel.i", "yr")
	def test_palgeori_ipa(self):
		self.run_test("팔걸이", "{{ko-IPA}}", "[pʰa̠ɭɡʌ̹ɾi]", "ipa")

	def test_hanmul_ph(self):
		self.run_test("한물", "{{ko-ipa}}", "한물", "ph")
	def test_hanmul_rr(self):
		self.run_test("한물", "{{ko-ipa}}", "hanmul", "rr")
	def test_hanmul_rrr(self):
		self.run_test("한물", "{{ko-ipa}}", "hanmul", "rrr")
	def test_hanmul_mr(self):
		self.run_test("한물", "{{ko-ipa}}", "hanmul", "mr")
	def test_hanmul_yr(self):
		self.run_test("한물", "{{ko-ipa}}", "hanmul", "yr")
	def test_hanmul_ipa(self):
		self.run_test("한물", "{{ko-ipa}}", "[ha̠nmuɭ]", "ipa")

	def test_bija_ph(self):
		self.run_test("비자", "{{ko-IPA}}", "비자", "ph")
	def test_bija_rr(self):
		self.run_test("비자", "{{ko-IPA}}", "bija", "rr")
	def test_bija_rrr(self):
		self.run_test("비자", "{{ko-IPA}}", "bija", "rrr")
	def test_bija_mr(self):
		self.run_test("비자", "{{ko-IPA}}", "pija", "mr")
	def test_bija_yr(self):
		self.run_test("비자", "{{ko-IPA}}", "pica", "yr")
	def test_bija_ipa(self):
		self.run_test("비자", "{{ko-IPA}}", "[pid͡ʑa̠]", "ipa")
	def test_bija_ph_1(self):
		self.run_test("비자", "{{ko-IPA|l=y}}", "비(ː)자", "ph")
	def test_bija_rr_1(self):
		self.run_test("비자", "{{ko-IPA|l=y}}", "bija", "rr")
	def test_bija_rrr_1(self):
		self.run_test("비자", "{{ko-IPA|l=y}}", "bija", "rrr")
	def test_bija_mr_1(self):
		self.run_test("비자", "{{ko-IPA|l=y}}", "pija", "mr")
	def test_bija_yr_1(self):
		self.run_test("비자", "{{ko-IPA|l=y}}", "pīca", "yr")
	def test_bija_ipa_1(self):
		self.run_test("비자", "{{ko-IPA|l=y}}", "[ˈpi(ː)d͡ʑa̠]", "ipa")

	def test_jigeum_ph(self):
		self.run_test("지금", "{{ko-IPA}}", "지금", "ph")
	def test_jigeum_rr(self):
		self.run_test("지금", "{{ko-IPA}}", "jigeum", "rr")
	def test_jigeum_rrr(self):
		self.run_test("지금", "{{ko-IPA}}", "jigeum", "rrr")
	def test_jigeum_mr(self):
		self.run_test("지금", "{{ko-IPA}}", "chigŭm", "mr")
	def test_jigeum_yr(self):
		self.run_test("지금", "{{ko-IPA}}", "cikum", "yr")
	def test_jigeum_ipa(self):
		self.run_test("지금", "{{ko-IPA}}", "[t͡ɕiɡɯm]", "ipa")

	def test_hago_ph(self):
		self.run_test("-하고", "{{ko-IPA}}", "하고", "ph")
	def test_hago_rr(self):
		self.run_test("-하고", "{{ko-IPA}}", "hago", "rr")
	def test_hago_rrr(self):
		self.run_test("-하고", "{{ko-IPA}}", "hago", "rrr")
	def test_hago_mr(self):
		self.run_test("-하고", "{{ko-IPA}}", "hago", "mr")
	def test_hago_yr(self):
		self.run_test("-하고", "{{ko-IPA}}", "hako", "yr")
	def test_hago_ipa(self):
		self.run_test("-하고", "{{ko-IPA}}", "[ha̠ɡo̞]", "ipa")

	def test_uri_ph(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "우리", "ph")
	def test_uri_rr(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "uri", "rr")
	def test_uri_rrr(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "uli", "rrr")
	def test_uri_mr(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "uri", "mr")
	def test_uri_yr(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "wuli", "yr")
	def test_uri_ipa(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "[uɾi]", "ipa")
	def test_uri_ph_1(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "우리", "ph")
	def test_uri_rr_1(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "uri", "rr")
	def test_uri_rrr_1(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "uli", "rrr")
	def test_uri_mr_1(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "uri", "mr")
	def test_uri_yr_1(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "wuli", "yr")
	def test_uri_ipa_1(self):
		self.run_test("우리", "{{ko-IPA|a=y}}", "[uɾi]", "ipa")

	def test_deureogada_ph(self):
		self.run_test("들어가다", "{{ko-IPA|a=y}}", "드러가다", "ph")
	def test_deureogada_rr(self):
		self.run_test("들어가다", "{{ko-IPA|a=y}}", "deureogada", "rr")
	def test_deureogada_rrr(self):
		self.run_test("들어가다", "{{ko-IPA|a=y}}", "deul'eogada", "rrr")
	def test_deureogada_mr(self):
		self.run_test("들어가다", "{{ko-IPA|a=y}}", "tŭrŏgada", "mr")
	def test_deureogada_yr(self):
		self.run_test("들어가다", "{{ko-IPA|a=y}}", "tul.ekata", "yr")
	def test_deureogada_ipa(self):
		self.run_test("들어가다", "{{ko-IPA|a=y}}", "[tɯɾʌ̹ɡa̠da̠]", "ipa")

	def test_mireu_ph(self):
		self.run_test("미르", "{{ko-IPA}}", "미르", "ph")
	def test_mireu_rr(self):
		self.run_test("미르", "{{ko-IPA}}", "mireu", "rr")
	def test_mireu_rrr(self):
		self.run_test("미르", "{{ko-IPA}}", "mileu", "rrr")
	def test_mireu_mr(self):
		self.run_test("미르", "{{ko-IPA}}", "mirŭ", "mr")
	def test_mireu_yr(self):
		self.run_test("미르", "{{ko-IPA}}", "milu", "yr")
	def test_mireu_ipa(self):
		self.run_test("미르", "{{ko-IPA}}", "[miɾɯ]", "ipa")

	def test_bukkeureoum_ph(self):
		self.run_test("부끄러움", "{{ko-IPA}}", "부끄러움", "ph")
	def test_bukkeureoum_rr(self):
		self.run_test("부끄러움", "{{ko-IPA}}", "bukkeureoum", "rr")
	def test_bukkeureoum_rrr(self):
		self.run_test("부끄러움", "{{ko-IPA}}", "bu'kkeuleoum", "rrr")
	def test_bukkeureoum_mr(self):
		self.run_test("부끄러움", "{{ko-IPA}}", "pukkŭrŏum", "mr")
	def test_bukkeureoum_yr(self):
		self.run_test("부끄러움", "{{ko-IPA}}", "pu.kkulewum", "yr")
	def test_bukkeureoum_ipa(self):
		self.run_test("부끄러움", "{{ko-IPA}}", "[puk͈ɯɾʌ̹um]", "ipa")


	def test_juda_ph(self):
		self.run_test("주다", "{{ko-IPA|a=y}}", "주다", "ph")
	def test_juda_rr(self):
		self.run_test("주다", "{{ko-IPA|a=y}}", "juda", "rr")
	def test_juda_rrr(self):
		self.run_test("주다", "{{ko-IPA|a=y}}", "juda", "rrr")
	def test_juda_mr(self):
		self.run_test("주다", "{{ko-IPA|a=y}}", "chuda", "mr")
	def test_juda_yr(self):
		self.run_test("주다", "{{ko-IPA|a=y}}", "cwuta", "yr")
	def test_juda_ipa(self):
		self.run_test("주다", "{{ko-IPA|a=y}}", "[t͡ɕuda̠]", "ipa")

	def test_iri_ph(self):
		self.run_test("이리", "{{ko-IPA}}", "이리", "ph")
	def test_iri_rr(self):
		self.run_test("이리", "{{ko-IPA}}", "iri", "rr")
	def test_iri_rrr(self):
		self.run_test("이리", "{{ko-IPA}}", "ili", "rrr")
	def test_iri_mr(self):
		self.run_test("이리", "{{ko-IPA}}", "iri", "mr")
	def test_iri_yr(self):
		self.run_test("이리", "{{ko-IPA}}", "ili", "yr")
	def test_iri_ipa(self):
		self.run_test("이리", "{{ko-IPA}}", "[iɾi]", "ipa")

	def test_guk_ph(self):
		self.run_test("국", "{{ko-ipa}}", "국", "ph")
	def test_guk_rr(self):
		self.run_test("국", "{{ko-ipa}}", "guk", "rr")
	def test_guk_rrr(self):
		self.run_test("국", "{{ko-ipa}}", "gug", "rrr")
	def test_guk_mr(self):
		self.run_test("국", "{{ko-ipa}}", "kuk", "mr")
	def test_guk_yr(self):
		self.run_test("국", "{{ko-ipa}}", "kwuk", "yr")
	def test_guk_ipa(self):
		self.run_test("국", "{{ko-ipa}}", "[kuk̚]", "ipa")

	def test_jil_ph(self):
		self.run_test("질", "{{ko-IPA}}", "질", "ph")
	def test_jil_rr(self):
		self.run_test("질", "{{ko-IPA}}", "jil", "rr")
	def test_jil_rrr(self):
		self.run_test("질", "{{ko-IPA}}", "jil", "rrr")
	def test_jil_mr(self):
		self.run_test("질", "{{ko-IPA}}", "chil", "mr")
	def test_jil_yr(self):
		self.run_test("질", "{{ko-IPA}}", "cil", "yr")
	def test_jil_ipa(self):
		self.run_test("질", "{{ko-IPA}}", "[t͡ɕiɭ]", "ipa")

	def test_bun_ph(self):
		self.run_test("분", "{{ko-IPA}}", "분", "ph")
	def test_bun_rr(self):
		self.run_test("분", "{{ko-IPA}}", "bun", "rr")
	def test_bun_rrr(self):
		self.run_test("분", "{{ko-IPA}}", "bun", "rrr")
	def test_bun_mr(self):
		self.run_test("분", "{{ko-IPA}}", "pun", "mr")
	def test_bun_yr(self):
		self.run_test("분", "{{ko-IPA}}", "pun", "yr")
	def test_bun_ipa(self):
		self.run_test("분", "{{ko-IPA}}", "[pun]", "ipa")
	def test_bun_ph_1(self):
		self.run_test("분", "{{ko-IPA}}", "분", "ph")
	def test_bun_rr_1(self):
		self.run_test("분", "{{ko-IPA}}", "bun", "rr")
	def test_bun_rrr_1(self):
		self.run_test("분", "{{ko-IPA}}", "bun", "rrr")
	def test_bun_mr_1(self):
		self.run_test("분", "{{ko-IPA}}", "pun", "mr")
	def test_bun_yr_1(self):
		self.run_test("분", "{{ko-IPA}}", "pun", "yr")
	def test_bun_ipa_1(self):
		self.run_test("분", "{{ko-IPA}}", "[pun]", "ipa")

	def test_go_ph(self):
		self.run_test("고", "{{ko-IPA}}", "고", "ph")
	def test_go_rr(self):
		self.run_test("고", "{{ko-IPA}}", "go", "rr")
	def test_go_rrr(self):
		self.run_test("고", "{{ko-IPA}}", "go", "rrr")
	def test_go_mr(self):
		self.run_test("고", "{{ko-IPA}}", "ko", "mr")
	def test_go_yr(self):
		self.run_test("고", "{{ko-IPA}}", "ko", "yr")
	def test_go_ipa(self):
		self.run_test("고", "{{ko-IPA}}", "[ko̞]", "ipa")
	def test_go_ph_1(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "고(ː)", "ph")
	def test_go_rr_1(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "go", "rr")
	def test_go_rrr_1(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "go", "rrr")
	def test_go_mr_1(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "ko", "mr")
	def test_go_yr_1(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "kō", "yr")
	def test_go_ipa_1(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "[ko̞(ː)]", "ipa")
	def test_go_ph_2(self):
		self.run_test("고", "{{ko-IPA}}", "고", "ph")
	def test_go_rr_2(self):
		self.run_test("고", "{{ko-IPA}}", "go", "rr")
	def test_go_rrr_2(self):
		self.run_test("고", "{{ko-IPA}}", "go", "rrr")
	def test_go_mr_2(self):
		self.run_test("고", "{{ko-IPA}}", "ko", "mr")
	def test_go_yr_2(self):
		self.run_test("고", "{{ko-IPA}}", "ko", "yr")
	def test_go_ipa_2(self):
		self.run_test("고", "{{ko-IPA}}", "[ko̞]", "ipa")
	def test_go_ph_3(self):
		self.run_test("고", "{{ko-IPA}}", "고", "ph")
	def test_go_rr_3(self):
		self.run_test("고", "{{ko-IPA}}", "go", "rr")
	def test_go_rrr_3(self):
		self.run_test("고", "{{ko-IPA}}", "go", "rrr")
	def test_go_mr_3(self):
		self.run_test("고", "{{ko-IPA}}", "ko", "mr")
	def test_go_yr_3(self):
		self.run_test("고", "{{ko-IPA}}", "ko", "yr")
	def test_go_ipa_3(self):
		self.run_test("고", "{{ko-IPA}}", "[ko̞]", "ipa")
	def test_go_ph_4(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "고(ː)", "ph")
	def test_go_rr_4(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "go", "rr")
	def test_go_rrr_4(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "go", "rrr")
	def test_go_mr_4(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "ko", "mr")
	def test_go_yr_4(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "kō", "yr")
	def test_go_ipa_4(self):
		self.run_test("고", "{{ko-IPA|l=y}}", "[ko̞(ː)]", "ipa")
	def test_go_ph_5(self):
		self.run_test("고", "{{ko-IPA}}", "고", "ph")
	def test_go_rr_5(self):
		self.run_test("고", "{{ko-IPA}}", "go", "rr")
	def test_go_rrr_5(self):
		self.run_test("고", "{{ko-IPA}}", "go", "rrr")
	def test_go_mr_5(self):
		self.run_test("고", "{{ko-IPA}}", "ko", "mr")
	def test_go_yr_5(self):
		self.run_test("고", "{{ko-IPA}}", "ko", "yr")
	def test_go_ipa_5(self):
		self.run_test("고", "{{ko-IPA}}", "[ko̞]", "ipa")

	def test_juyeon_ph(self):
		self.run_test("주연", "{{ko-IPA}}", "주연", "ph")
	def test_juyeon_rr(self):
		self.run_test("주연", "{{ko-IPA}}", "juyeon", "rr")
	def test_juyeon_rrr(self):
		self.run_test("주연", "{{ko-IPA}}", "juyeon", "rrr")
	def test_juyeon_mr(self):
		self.run_test("주연", "{{ko-IPA}}", "chuyŏn", "mr")
	def test_juyeon_yr(self):
		self.run_test("주연", "{{ko-IPA}}", "cwu.yen", "yr")
	def test_juyeon_ipa(self):
		self.run_test("주연", "{{ko-IPA}}", "[t͡ɕujʌ̹n]", "ipa")

	def test_sasang_ph(self):
		self.run_test("사상", "{{ko-IPA|l=y}}", "사(ː)상", "ph")
	def test_sasang_rr(self):
		self.run_test("사상", "{{ko-IPA|l=y}}", "sasang", "rr")
	def test_sasang_rrr(self):
		self.run_test("사상", "{{ko-IPA|l=y}}", "sasang", "rrr")
	def test_sasang_mr(self):
		self.run_test("사상", "{{ko-IPA|l=y}}", "sasang", "mr")
	def test_sasang_yr(self):
		self.run_test("사상", "{{ko-IPA|l=y}}", "sāsang", "yr")
	def test_sasang_ipa(self):
		self.run_test("사상", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)sʰa̠ŋ]", "ipa")

	def test_Upsalla_ph(self):
		self.run_test("웁살라", "{{ko-IPA|cap=y}}", "웁쌀라", "ph")
	def test_Upsalla_rr(self):
		self.run_test("웁살라", "{{ko-IPA|cap=y}}", "Upsalla", "rr")
	def test_Upsalla_rrr(self):
		self.run_test("웁살라", "{{ko-IPA|cap=y}}", "Ubsalla", "rrr")
	def test_Upsalla_mr(self):
		self.run_test("웁살라", "{{ko-IPA|cap=y}}", "Upsalla", "mr")
	def test_Upsalla_yr(self):
		self.run_test("웁살라", "{{ko-IPA|cap=y}}", "wup.salla", "yr")
	def test_Upsalla_ipa(self):
		self.run_test("웁살라", "{{ko-IPA|cap=y}}", "[ups͈a̠ɭɭa̠]", "ipa")

	def test_si_ph(self):
		self.run_test("시", "{{ko-IPA}}", "시", "ph")
	def test_si_rr(self):
		self.run_test("시", "{{ko-IPA}}", "si", "rr")
	def test_si_rrr(self):
		self.run_test("시", "{{ko-IPA}}", "si", "rrr")
	def test_si_mr(self):
		self.run_test("시", "{{ko-IPA}}", "si", "mr")
	def test_si_yr(self):
		self.run_test("시", "{{ko-IPA}}", "si", "yr")
	def test_si_ipa(self):
		self.run_test("시", "{{ko-IPA}}", "[ɕʰi]", "ipa")
	def test_si_ph_1(self):
		self.run_test("시", "{{ko-IPA|l=y}}", "시(ː)", "ph")
	def test_si_rr_1(self):
		self.run_test("시", "{{ko-IPA|l=y}}", "si", "rr")
	def test_si_rrr_1(self):
		self.run_test("시", "{{ko-IPA|l=y}}", "si", "rrr")
	def test_si_mr_1(self):
		self.run_test("시", "{{ko-IPA|l=y}}", "si", "mr")
	def test_si_yr_1(self):
		self.run_test("시", "{{ko-IPA|l=y}}", "sī", "yr")
	def test_si_ipa_1(self):
		self.run_test("시", "{{ko-IPA|l=y}}", "[ɕʰi(ː)]", "ipa")
	def test_si_ph_2(self):
		self.run_test("시", "{{ko-IPA}}", "시", "ph")
	def test_si_rr_2(self):
		self.run_test("시", "{{ko-IPA}}", "si", "rr")
	def test_si_rrr_2(self):
		self.run_test("시", "{{ko-IPA}}", "si", "rrr")
	def test_si_mr_2(self):
		self.run_test("시", "{{ko-IPA}}", "si", "mr")
	def test_si_yr_2(self):
		self.run_test("시", "{{ko-IPA}}", "si", "yr")
	def test_si_ipa_2(self):
		self.run_test("시", "{{ko-IPA}}", "[ɕʰi]", "ipa")
	def test_si_ph_3(self):
		self.run_test("시", "{{ko-IPA}}", "시", "ph")
	def test_si_rr_3(self):
		self.run_test("시", "{{ko-IPA}}", "si", "rr")
	def test_si_rrr_3(self):
		self.run_test("시", "{{ko-IPA}}", "si", "rrr")
	def test_si_mr_3(self):
		self.run_test("시", "{{ko-IPA}}", "si", "mr")
	def test_si_yr_3(self):
		self.run_test("시", "{{ko-IPA}}", "si", "yr")
	def test_si_ipa_3(self):
		self.run_test("시", "{{ko-IPA}}", "[ɕʰi]", "ipa")

	def test_ho_ph(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "호(ː)", "ph")
	def test_ho_rr(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "ho", "rr")
	def test_ho_rrr(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "ho", "rrr")
	def test_ho_mr(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "ho", "mr")
	def test_ho_yr(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "hō", "yr")
	def test_ho_ipa(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "[ɸʷo̞(ː)]", "ipa")
	def test_ho_ph_1(self):
		self.run_test("호", "{{ko-IPA}}", "호", "ph")
	def test_ho_rr_1(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "rr")
	def test_ho_rrr_1(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "rrr")
	def test_ho_mr_1(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "mr")
	def test_ho_yr_1(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "yr")
	def test_ho_ipa_1(self):
		self.run_test("호", "{{ko-IPA}}", "[ɸʷo̞]", "ipa")
	def test_ho_ph_2(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "호(ː)", "ph")
	def test_ho_rr_2(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "ho", "rr")
	def test_ho_rrr_2(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "ho", "rrr")
	def test_ho_mr_2(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "ho", "mr")
	def test_ho_yr_2(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "hō", "yr")
	def test_ho_ipa_2(self):
		self.run_test("호", "{{ko-IPA|l=y}}", "[ɸʷo̞(ː)]", "ipa")
	def test_ho_ph_3(self):
		self.run_test("호", "{{ko-IPA}}", "호", "ph")
	def test_ho_rr_3(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "rr")
	def test_ho_rrr_3(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "rrr")
	def test_ho_mr_3(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "mr")
	def test_ho_yr_3(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "yr")
	def test_ho_ipa_3(self):
		self.run_test("호", "{{ko-IPA}}", "[ɸʷo̞]", "ipa")
	def test_ho_ph_4(self):
		self.run_test("호", "{{ko-IPA}}", "호", "ph")
	def test_ho_rr_4(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "rr")
	def test_ho_rrr_4(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "rrr")
	def test_ho_mr_4(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "mr")
	def test_ho_yr_4(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "yr")
	def test_ho_ipa_4(self):
		self.run_test("호", "{{ko-IPA}}", "[ɸʷo̞]", "ipa")
	def test_ho_ph_5(self):
		self.run_test("호", "{{ko-IPA}}", "호", "ph")
	def test_ho_rr_5(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "rr")
	def test_ho_rrr_5(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "rrr")
	def test_ho_mr_5(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "mr")
	def test_ho_yr_5(self):
		self.run_test("호", "{{ko-IPA}}", "ho", "yr")
	def test_ho_ipa_5(self):
		self.run_test("호", "{{ko-IPA}}", "[ɸʷo̞]", "ipa")

	def test_danggida_ph(self):
		self.run_test("당기다", "{{ko-IPA}}", "당기다", "ph")
	def test_danggida_rr(self):
		self.run_test("당기다", "{{ko-IPA}}", "danggida", "rr")
	def test_danggida_rrr(self):
		self.run_test("당기다", "{{ko-IPA}}", "danggida", "rrr")
	def test_danggida_mr(self):
		self.run_test("당기다", "{{ko-IPA}}", "tanggida", "mr")
	def test_danggida_yr(self):
		self.run_test("당기다", "{{ko-IPA}}", "tangkita", "yr")
	def test_danggida_ipa(self):
		self.run_test("당기다", "{{ko-IPA}}", "[ta̠ŋɡida̠]", "ipa")

	def test_dokja_ph(self):
		self.run_test("독자", "{{ko-IPA}}", "독짜", "ph")
	def test_dokja_rr(self):
		self.run_test("독자", "{{ko-IPA}}", "dokja", "rr")
	def test_dokja_rrr(self):
		self.run_test("독자", "{{ko-IPA}}", "dogja", "rrr")
	def test_dokja_mr(self):
		self.run_test("독자", "{{ko-IPA}}", "tokcha", "mr")
	def test_dokja_yr(self):
		self.run_test("독자", "{{ko-IPA}}", "tokca", "yr")
	def test_dokja_ipa(self):
		self.run_test("독자", "{{ko-IPA}}", "[to̞k̚t͡ɕ͈a̠]", "ipa")

	def test_gubyeolhada_ph(self):
		self.run_test("구별하다", "{{ko-IPA}}", "구별하다", "ph")
	def test_gubyeolhada_rr(self):
		self.run_test("구별하다", "{{ko-IPA}}", "gubyeolhada", "rr")
	def test_gubyeolhada_rrr(self):
		self.run_test("구별하다", "{{ko-IPA}}", "gubyeolhada", "rrr")
	def test_gubyeolhada_mr(self):
		self.run_test("구별하다", "{{ko-IPA}}", "kubyŏrhada", "mr")
	def test_gubyeolhada_yr(self):
		self.run_test("구별하다", "{{ko-IPA}}", "kwupyel.hata", "yr")
	def test_gubyeolhada_ipa(self):
		self.run_test("구별하다", "{{ko-IPA}}", "[kubjʌ̹ɾɦa̠da̠]", "ipa")

	def test_ssangdongi_ph(self):
		self.run_test("쌍동이", "{{ko-IPA}}", "쌍동이", "ph")
	def test_ssangdongi_rr(self):
		self.run_test("쌍동이", "{{ko-IPA}}", "ssangdong'i", "rr")
	def test_ssangdongi_rrr(self):
		self.run_test("쌍동이", "{{ko-IPA}}", "ssangdong'i", "rrr")
	def test_ssangdongi_mr(self):
		self.run_test("쌍동이", "{{ko-IPA}}", "ssangdongi", "mr")
	def test_ssangdongi_yr(self):
		self.run_test("쌍동이", "{{ko-IPA}}", "ssangtongi", "yr")
	def test_ssangdongi_ipa(self):
		self.run_test("쌍동이", "{{ko-IPA}}", "[s͈a̠ŋdo̞ŋi]", "ipa")

	def test_geeureum_ph(self):
		self.run_test("게으름", "{{ko-ipa}}", "게으름", "ph")
	def test_geeureum_rr(self):
		self.run_test("게으름", "{{ko-ipa}}", "geeureum", "rr")
	def test_geeureum_rrr(self):
		self.run_test("게으름", "{{ko-ipa}}", "geeuleum", "rrr")
	def test_geeureum_mr(self):
		self.run_test("게으름", "{{ko-ipa}}", "keŭrŭm", "mr")
	def test_geeureum_yr(self):
		self.run_test("게으름", "{{ko-ipa}}", "key.ulum", "yr")
	def test_geeureum_ipa(self):
		self.run_test("게으름", "{{ko-ipa}}", "[ke̞ɯɾɯm]", "ipa")

	def test_hok_ph(self):
		self.run_test("혹", "{{ko-IPA}}", "혹", "ph")
	def test_hok_rr(self):
		self.run_test("혹", "{{ko-IPA}}", "hok", "rr")
	def test_hok_rrr(self):
		self.run_test("혹", "{{ko-IPA}}", "hog", "rrr")
	def test_hok_mr(self):
		self.run_test("혹", "{{ko-IPA}}", "hok", "mr")
	def test_hok_yr(self):
		self.run_test("혹", "{{ko-IPA}}", "hok", "yr")
	def test_hok_ipa(self):
		self.run_test("혹", "{{ko-IPA}}", "[ɸʷo̞k̚]", "ipa")

	def test_kenggida_ph(self):
		self.run_test("켕기다", "{{ko-IPA}}", "켕기다", "ph")
	def test_kenggida_rr(self):
		self.run_test("켕기다", "{{ko-IPA}}", "kenggida", "rr")
	def test_kenggida_rrr(self):
		self.run_test("켕기다", "{{ko-IPA}}", "kenggida", "rrr")
	def test_kenggida_mr(self):
		self.run_test("켕기다", "{{ko-IPA}}", "k'enggida", "mr")
	def test_kenggida_yr(self):
		self.run_test("켕기다", "{{ko-IPA}}", "kheyngkita", "yr")
	def test_kenggida_ipa(self):
		self.run_test("켕기다", "{{ko-IPA}}", "[kʰe̞ŋɡida̠]", "ipa")

	def test_gyeousari_ph(self):
		self.run_test("겨우살이", "{{ko-IPA}}", "겨우사리", "ph")
	def test_gyeousari_rr(self):
		self.run_test("겨우살이", "{{ko-IPA}}", "gyeousari", "rr")
	def test_gyeousari_rrr(self):
		self.run_test("겨우살이", "{{ko-IPA}}", "gyeousal'i", "rrr")
	def test_gyeousari_mr(self):
		self.run_test("겨우살이", "{{ko-IPA}}", "kyŏusari", "mr")
	def test_gyeousari_yr(self):
		self.run_test("겨우살이", "{{ko-IPA}}", "kyewusal.i", "yr")
	def test_gyeousari_ipa(self):
		self.run_test("겨우살이", "{{ko-IPA}}", "[kjʌ̹usʰa̠ɾi]", "ipa")


	def test_teokppyeo_ph(self):
		self.run_test("턱뼈", "{{ko-IPA}}", "턱뼈", "ph")
	def test_teokppyeo_rr(self):
		self.run_test("턱뼈", "{{ko-IPA}}", "teokppyeo", "rr")
	def test_teokppyeo_rrr(self):
		self.run_test("턱뼈", "{{ko-IPA}}", "teogppyeo", "rrr")
	def test_teokppyeo_mr(self):
		self.run_test("턱뼈", "{{ko-IPA}}", "t'ŏkppyŏ", "mr")
	def test_teokppyeo_yr(self):
		self.run_test("턱뼈", "{{ko-IPA}}", "thekppye", "yr")
	def test_teokppyeo_ipa(self):
		self.run_test("턱뼈", "{{ko-IPA}}", "[tʰʌ̹k̚p͈jʌ̹]", "ipa")

	def test_sul_ph(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "술", "ph")
	def test_sul_rr(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "sul", "rr")
	def test_sul_rrr(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "sul", "rrr")
	def test_sul_mr(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "sul", "mr")
	def test_sul_yr(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "swul", "yr")
	def test_sul_ipa(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "[sʰuɭ]", "ipa")
	def test_sul_ph_1(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "술", "ph")
	def test_sul_rr_1(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "sul", "rr")
	def test_sul_rrr_1(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "sul", "rrr")
	def test_sul_mr_1(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "sul", "mr")
	def test_sul_yr_1(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "swul", "yr")
	def test_sul_ipa_1(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav}}", "[sʰuɭ]", "ipa")
	def test_sul_ph_2(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav|l=y}}", "술(ː)", "ph")
	def test_sul_rr_2(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav|l=y}}", "sul", "rr")
	def test_sul_rrr_2(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav|l=y}}", "sul", "rrr")
	def test_sul_mr_2(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav|l=y}}", "sul", "mr")
	def test_sul_yr_2(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav|l=y}}", "swūl", "yr")
	def test_sul_ipa_2(self):
		self.run_test("술", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-술.wav|l=y}}", "[sʰu(ː)ɭ]", "ipa")

	def test_pul_ph(self):
		self.run_test("풀", "{{ko-ipa}}", "풀", "ph")
	def test_pul_rr(self):
		self.run_test("풀", "{{ko-ipa}}", "pul", "rr")
	def test_pul_rrr(self):
		self.run_test("풀", "{{ko-ipa}}", "pul", "rrr")
	def test_pul_mr(self):
		self.run_test("풀", "{{ko-ipa}}", "p'ul", "mr")
	def test_pul_yr(self):
		self.run_test("풀", "{{ko-ipa}}", "phul", "yr")
	def test_pul_ipa(self):
		self.run_test("풀", "{{ko-ipa}}", "[pʰuɭ]", "ipa")

	def test_tul_ph(self):
		self.run_test("툴", "{{ko-IPA}}", "툴", "ph")
	def test_tul_rr(self):
		self.run_test("툴", "{{ko-IPA}}", "tul", "rr")
	def test_tul_rrr(self):
		self.run_test("툴", "{{ko-IPA}}", "tul", "rrr")
	def test_tul_mr(self):
		self.run_test("툴", "{{ko-IPA}}", "t'ul", "mr")
	def test_tul_yr(self):
		self.run_test("툴", "{{ko-IPA}}", "thwul", "yr")
	def test_tul_ipa(self):
		self.run_test("툴", "{{ko-IPA}}", "[tʰuɭ]", "ipa")

	def test_ppyeo_ph(self):
		self.run_test("뼈", "{{ko-IPA}}", "뼈", "ph")
	def test_ppyeo_rr(self):
		self.run_test("뼈", "{{ko-IPA}}", "ppyeo", "rr")
	def test_ppyeo_rrr(self):
		self.run_test("뼈", "{{ko-IPA}}", "ppyeo", "rrr")
	def test_ppyeo_mr(self):
		self.run_test("뼈", "{{ko-IPA}}", "ppyŏ", "mr")
	def test_ppyeo_yr(self):
		self.run_test("뼈", "{{ko-IPA}}", "ppye", "yr")
	def test_ppyeo_ipa(self):
		self.run_test("뼈", "{{ko-IPA}}", "[p͈jʌ̹]", "ipa")

	def test_ttulta_ph(self):
		self.run_test("뚫다", "{{ko-IPA}}", "뚤타", "ph")
	def test_ttulta_rr(self):
		self.run_test("뚫다", "{{ko-IPA}}", "ttulta", "rr")
	def test_ttulta_rrr(self):
		self.run_test("뚫다", "{{ko-IPA}}", "ttulhda", "rrr")
	def test_ttulta_mr(self):
		self.run_test("뚫다", "{{ko-IPA}}", "ttult'a", "mr")
	def test_ttulta_yr(self):
		self.run_test("뚫다", "{{ko-IPA}}", "ttwulhta", "yr")
	def test_ttulta_ipa(self):
		self.run_test("뚫다", "{{ko-IPA}}", "[t͈uɭtʰa̠]", "ipa")

	def test_baeteori_ph(self):
		self.run_test("배터리", "{{ko-IPA}}", "배터리/베터리", "ph")
	def test_baeteori_rr(self):
		self.run_test("배터리", "{{ko-IPA}}", "baeteori", "rr")
	def test_baeteori_rrr(self):
		self.run_test("배터리", "{{ko-IPA}}", "baeteoli", "rrr")
	def test_baeteori_mr(self):
		self.run_test("배터리", "{{ko-IPA}}", "paet'ŏri", "mr")
	def test_baeteori_yr(self):
		self.run_test("배터리", "{{ko-IPA}}", "pay.theli", "yr")
	def test_baeteori_ipa(self):
		self.run_test("배터리", "{{ko-IPA}}", "[pɛtʰʌ̹ɾi] ~ [pe̞tʰʌ̹ɾi]", "ipa")

	def test_saekkisongarak_ph(self):
		self.run_test("새끼손가락", "{{ko-ipa}}", "새끼손가락/세끼손가락", "ph")
	def test_saekkisongarak_rr(self):
		self.run_test("새끼손가락", "{{ko-ipa}}", "saekkison'garak", "rr")
	def test_saekkisongarak_rrr(self):
		self.run_test("새끼손가락", "{{ko-ipa}}", "sae'kkisongalag", "rrr")
	def test_saekkisongarak_mr(self):
		self.run_test("새끼손가락", "{{ko-ipa}}", "saekkison'garak", "mr")
	def test_saekkisongarak_yr(self):
		self.run_test("새끼손가락", "{{ko-ipa}}", "say.kkisonkalak", "yr")
	def test_saekkisongarak_ipa(self):
		self.run_test("새끼손가락", "{{ko-ipa}}", "[sʰɛk͈isʰo̞nɡa̠ɾa̠k̚] ~ [sʰe̞k͈isʰo̞nɡa̠ɾa̠k̚]", "ipa")

	def test_songarak_ph(self):
		self.run_test("손가락", "{{ko-IPA|com=1}}", "손까락", "ph")
	def test_songarak_rr(self):
		self.run_test("손가락", "{{ko-IPA|com=1}}", "son'garak", "rr")
	def test_songarak_rrr(self):
		self.run_test("손가락", "{{ko-IPA|com=1}}", "songalag", "rrr")
	def test_songarak_mr(self):
		self.run_test("손가락", "{{ko-IPA|com=1}}", "sonkarak", "mr")
	def test_songarak_yr(self):
		self.run_test("손가락", "{{ko-IPA|com=1}}", "sonqkalak", "yr")
	def test_songarak_ipa(self):
		self.run_test("손가락", "{{ko-IPA|com=1}}", "[sʰo̞nk͈a̠ɾa̠k̚]", "ipa")

	def test_geolsin_ph(self):
		self.run_test("걸신", "{{ko-IPA|com=1}}", "걸씬", "ph")
	def test_geolsin_rr(self):
		self.run_test("걸신", "{{ko-IPA|com=1}}", "geolsin", "rr")
	def test_geolsin_rrr(self):
		self.run_test("걸신", "{{ko-IPA|com=1}}", "geolsin", "rrr")
	def test_geolsin_mr(self):
		self.run_test("걸신", "{{ko-IPA|com=1}}", "kŏlssin", "mr")
	def test_geolsin_yr(self):
		self.run_test("걸신", "{{ko-IPA|com=1}}", "kelqsin", "yr")
	def test_geolsin_ipa(self):
		self.run_test("걸신", "{{ko-IPA|com=1}}", "[kʌ̹ɭɕ͈in]", "ipa")

	def test_byeorak_ph(self):
		self.run_test("벼락", "{{ko-IPA}}", "벼락", "ph")
	def test_byeorak_rr(self):
		self.run_test("벼락", "{{ko-IPA}}", "byeorak", "rr")
	def test_byeorak_rrr(self):
		self.run_test("벼락", "{{ko-IPA}}", "byeolag", "rrr")
	def test_byeorak_mr(self):
		self.run_test("벼락", "{{ko-IPA}}", "pyŏrak", "mr")
	def test_byeorak_yr(self):
		self.run_test("벼락", "{{ko-IPA}}", "pyelak", "yr")
	def test_byeorak_ipa(self):
		self.run_test("벼락", "{{ko-IPA}}", "[pjʌ̹ɾa̠k̚]", "ipa")


	def test_yachae_ph(self):
		self.run_test("야채", "{{ko-IPA|l=y}}", "야(ː)채/야(ː)체", "ph")
	def test_yachae_rr(self):
		self.run_test("야채", "{{ko-IPA|l=y}}", "yachae", "rr")
	def test_yachae_rrr(self):
		self.run_test("야채", "{{ko-IPA|l=y}}", "yachae", "rrr")
	def test_yachae_mr(self):
		self.run_test("야채", "{{ko-IPA|l=y}}", "yach'ae", "mr")
	def test_yachae_yr(self):
		self.run_test("야채", "{{ko-IPA|l=y}}", "yā.chay", "yr")
	def test_yachae_ipa(self):
		self.run_test("야채", "{{ko-IPA|l=y}}", "[ˈja̠(ː)t͡ɕʰɛ] ~ [ˈja̠(ː)t͡ɕʰe̞]", "ipa")
	def test_yachae_ph_1(self):
		self.run_test("야채", "{{ko-IPA}}", "야채/야체", "ph")
	def test_yachae_rr_1(self):
		self.run_test("야채", "{{ko-IPA}}", "yachae", "rr")
	def test_yachae_rrr_1(self):
		self.run_test("야채", "{{ko-IPA}}", "yachae", "rrr")
	def test_yachae_mr_1(self):
		self.run_test("야채", "{{ko-IPA}}", "yach'ae", "mr")
	def test_yachae_yr_1(self):
		self.run_test("야채", "{{ko-IPA}}", "ya.chay", "yr")
	def test_yachae_ipa_1(self):
		self.run_test("야채", "{{ko-IPA}}", "[ja̠t͡ɕʰɛ] ~ [ja̠t͡ɕʰe̞]", "ipa")

	def test_budeureopda_ph(self):
		self.run_test("부드럽다", "{{ko-IPA}}", "부드럽따", "ph")
	def test_budeureopda_rr(self):
		self.run_test("부드럽다", "{{ko-IPA}}", "budeureopda", "rr")
	def test_budeureopda_rrr(self):
		self.run_test("부드럽다", "{{ko-IPA}}", "budeuleobda", "rrr")
	def test_budeureopda_mr(self):
		self.run_test("부드럽다", "{{ko-IPA}}", "pudŭrŏpta", "mr")
	def test_budeureopda_yr(self):
		self.run_test("부드럽다", "{{ko-IPA}}", "putulepta", "yr")
	def test_budeureopda_ipa(self):
		self.run_test("부드럽다", "{{ko-IPA}}", "[pudɯɾʌ̹p̚t͈a̠]", "ipa")

	def test_haeja_ph(self):
		self.run_test("해자", "{{ko-IPA}}", "해자/헤자", "ph")
	def test_haeja_rr(self):
		self.run_test("해자", "{{ko-IPA}}", "haeja", "rr")
	def test_haeja_rrr(self):
		self.run_test("해자", "{{ko-IPA}}", "haeja", "rrr")
	def test_haeja_mr(self):
		self.run_test("해자", "{{ko-IPA}}", "haeja", "mr")
	def test_haeja_yr(self):
		self.run_test("해자", "{{ko-IPA}}", "hayca", "yr")
	def test_haeja_ipa(self):
		self.run_test("해자", "{{ko-IPA}}", "[hɛd͡ʑa̠] ~ [he̞d͡ʑa̠]", "ipa")

	def test_jeonmeogi_ph(self):
		self.run_test("젖먹이", "{{ko-IPA}}", "전머기", "ph")
	def test_jeonmeogi_rr(self):
		self.run_test("젖먹이", "{{ko-IPA}}", "jeonmeogi", "rr")
	def test_jeonmeogi_rrr(self):
		self.run_test("젖먹이", "{{ko-IPA}}", "jeojmeog'i", "rrr")
	def test_jeonmeogi_mr(self):
		self.run_test("젖먹이", "{{ko-IPA}}", "chŏnmŏgi", "mr")
	def test_jeonmeogi_yr(self):
		self.run_test("젖먹이", "{{ko-IPA}}", "cecmek.i", "yr")
	def test_jeonmeogi_ipa(self):
		self.run_test("젖먹이", "{{ko-IPA}}", "[t͡ɕʌ̹nmʌ̹ɡi]", "ipa")

	def test_nappeuda_ph(self):
		self.run_test("나쁘다", "{{ko-IPA}}", "나쁘다", "ph")
	def test_nappeuda_rr(self):
		self.run_test("나쁘다", "{{ko-IPA}}", "nappeuda", "rr")
	def test_nappeuda_rrr(self):
		self.run_test("나쁘다", "{{ko-IPA}}", "na'ppeuda", "rrr")
	def test_nappeuda_mr(self):
		self.run_test("나쁘다", "{{ko-IPA}}", "nappŭda", "mr")
	def test_nappeuda_yr(self):
		self.run_test("나쁘다", "{{ko-IPA}}", "na.pputa", "yr")
	def test_nappeuda_ipa(self):
		self.run_test("나쁘다", "{{ko-IPA}}", "[na̠p͈ɯda̠]", "ipa")

	def test_namuneulbo_ph(self):
		self.run_test("나무늘보", "{{ko-IPA}}", "나무늘보", "ph")
	def test_namuneulbo_rr(self):
		self.run_test("나무늘보", "{{ko-IPA}}", "namuneulbo", "rr")
	def test_namuneulbo_rrr(self):
		self.run_test("나무늘보", "{{ko-IPA}}", "namuneulbo", "rrr")
	def test_namuneulbo_mr(self):
		self.run_test("나무늘보", "{{ko-IPA}}", "namunŭlbo", "mr")
	def test_namuneulbo_yr(self):
		self.run_test("나무늘보", "{{ko-IPA}}", "namunul.po", "yr")
	def test_namuneulbo_ipa(self):
		self.run_test("나무늘보", "{{ko-IPA}}", "[na̠munɯɭbo̞]", "ipa")

	def test_bongsa_ph(self):
		self.run_test("봉사", "{{ko-IPA|l=y}}", "봉(ː)사", "ph")
	def test_bongsa_rr(self):
		self.run_test("봉사", "{{ko-IPA|l=y}}", "bongsa", "rr")
	def test_bongsa_rrr(self):
		self.run_test("봉사", "{{ko-IPA|l=y}}", "bongsa", "rrr")
	def test_bongsa_mr(self):
		self.run_test("봉사", "{{ko-IPA|l=y}}", "pongsa", "mr")
	def test_bongsa_yr(self):
		self.run_test("봉사", "{{ko-IPA|l=y}}", "pōngsa", "yr")
	def test_bongsa_ipa(self):
		self.run_test("봉사", "{{ko-IPA|l=y}}", "[ˈpo̞(ː)ŋsʰa̠]", "ipa")

	def test_mudang_ph(self):
		self.run_test("무당", "{{ko-ipa|l=y}}", "무(ː)당", "ph")
	def test_mudang_rr(self):
		self.run_test("무당", "{{ko-ipa|l=y}}", "mudang", "rr")
	def test_mudang_rrr(self):
		self.run_test("무당", "{{ko-ipa|l=y}}", "mudang", "rrr")
	def test_mudang_mr(self):
		self.run_test("무당", "{{ko-ipa|l=y}}", "mudang", "mr")
	def test_mudang_yr(self):
		self.run_test("무당", "{{ko-ipa|l=y}}", "mūtang", "yr")
	def test_mudang_ipa(self):
		self.run_test("무당", "{{ko-ipa|l=y}}", "[ˈmu(ː)da̠ŋ]", "ipa")

	def test_akdae_ph(self):
		self.run_test("악대", "{{ko-IPA}}", "악때/악떼", "ph")
	def test_akdae_rr(self):
		self.run_test("악대", "{{ko-IPA}}", "akdae", "rr")
	def test_akdae_rrr(self):
		self.run_test("악대", "{{ko-IPA}}", "agdae", "rrr")
	def test_akdae_mr(self):
		self.run_test("악대", "{{ko-IPA}}", "aktae", "mr")
	def test_akdae_yr(self):
		self.run_test("악대", "{{ko-IPA}}", "aktay", "yr")
	def test_akdae_ipa(self):
		self.run_test("악대", "{{ko-IPA}}", "[a̠k̚t͈ɛ] ~ [a̠k̚t͈e̞]", "ipa")

	def test_hellikopteo_ph(self):
		self.run_test("헬리콥터", "{{ko-IPA}}", "헬리콥터", "ph")
	def test_hellikopteo_rr(self):
		self.run_test("헬리콥터", "{{ko-IPA}}", "hellikopteo", "rr")
	def test_hellikopteo_rrr(self):
		self.run_test("헬리콥터", "{{ko-IPA}}", "hellikobteo", "rrr")
	def test_hellikopteo_mr(self):
		self.run_test("헬리콥터", "{{ko-IPA}}", "hellik'opt'ŏ", "mr")
	def test_hellikopteo_yr(self):
		self.run_test("헬리콥터", "{{ko-IPA}}", "heylli.khopthe", "yr")
	def test_hellikopteo_ipa(self):
		self.run_test("헬리콥터", "{{ko-IPA}}", "[he̞ʎʎikʰo̞p̚tʰʌ̹]", "ipa")

	def test_nureuda_ph(self):
		self.run_test("누르다", "{{ko-IPA|l=y}}", "누(ː)르다", "ph")
	def test_nureuda_rr(self):
		self.run_test("누르다", "{{ko-IPA|l=y}}", "nureuda", "rr")
	def test_nureuda_rrr(self):
		self.run_test("누르다", "{{ko-IPA|l=y}}", "nuleuda", "rrr")
	def test_nureuda_mr(self):
		self.run_test("누르다", "{{ko-IPA|l=y}}", "nurŭda", "mr")
	def test_nureuda_yr(self):
		self.run_test("누르다", "{{ko-IPA|l=y}}", "nwūluta", "yr")
	def test_nureuda_ipa(self):
		self.run_test("누르다", "{{ko-IPA|l=y}}", "[ˈnu(ː)ɾɯda̠]", "ipa")
	def test_nureuda_ph_1(self):
		self.run_test("누르다", "{{ko-IPA}}", "누르다", "ph")
	def test_nureuda_rr_1(self):
		self.run_test("누르다", "{{ko-IPA}}", "nureuda", "rr")
	def test_nureuda_rrr_1(self):
		self.run_test("누르다", "{{ko-IPA}}", "nuleuda", "rrr")
	def test_nureuda_mr_1(self):
		self.run_test("누르다", "{{ko-IPA}}", "nurŭda", "mr")
	def test_nureuda_yr_1(self):
		self.run_test("누르다", "{{ko-IPA}}", "nwuluta", "yr")
	def test_nureuda_ipa_1(self):
		self.run_test("누르다", "{{ko-IPA}}", "[nuɾɯda̠]", "ipa")

	def test_ttang_ph(self):
		self.run_test("땅", "{{ko-IPA|a=y}}", "땅", "ph")
	def test_ttang_rr(self):
		self.run_test("땅", "{{ko-IPA|a=y}}", "ttang", "rr")
	def test_ttang_rrr(self):
		self.run_test("땅", "{{ko-IPA|a=y}}", "ttang", "rrr")
	def test_ttang_mr(self):
		self.run_test("땅", "{{ko-IPA|a=y}}", "ttang", "mr")
	def test_ttang_yr(self):
		self.run_test("땅", "{{ko-IPA|a=y}}", "ttang", "yr")
	def test_ttang_ipa(self):
		self.run_test("땅", "{{ko-IPA|a=y}}", "[t͈a̠ŋ]", "ipa")

	def test_jangjak_ph(self):
		self.run_test("장작", "{{ko-IPA}}", "장작", "ph")
	def test_jangjak_rr(self):
		self.run_test("장작", "{{ko-IPA}}", "jangjak", "rr")
	def test_jangjak_rrr(self):
		self.run_test("장작", "{{ko-IPA}}", "jangjag", "rrr")
	def test_jangjak_mr(self):
		self.run_test("장작", "{{ko-IPA}}", "changjak", "mr")
	def test_jangjak_yr(self):
		self.run_test("장작", "{{ko-IPA}}", "cangcak", "yr")
	def test_jangjak_ipa(self):
		self.run_test("장작", "{{ko-IPA}}", "[t͡ɕa̠ŋd͡ʑa̠k̚]", "ipa")

	def test_sut_ph(self):
		self.run_test("숯", "{{ko-IPA}}", "숟", "ph")
	def test_sut_rr(self):
		self.run_test("숯", "{{ko-IPA}}", "sut", "rr")
	def test_sut_rrr(self):
		self.run_test("숯", "{{ko-IPA}}", "such", "rrr")
	def test_sut_mr(self):
		self.run_test("숯", "{{ko-IPA}}", "sut", "mr")
	def test_sut_yr(self):
		self.run_test("숯", "{{ko-IPA}}", "swuch", "yr")
	def test_sut_ipa(self):
		self.run_test("숯", "{{ko-IPA}}", "[sʰut̚]", "ipa")

	def test_gupda_ph(self):
		self.run_test("굽다", "{{ko-IPA}}", "굽따", "ph")
	def test_gupda_rr(self):
		self.run_test("굽다", "{{ko-IPA}}", "gupda", "rr")
	def test_gupda_rrr(self):
		self.run_test("굽다", "{{ko-IPA}}", "gubda", "rrr")
	def test_gupda_mr(self):
		self.run_test("굽다", "{{ko-IPA}}", "kupta", "mr")
	def test_gupda_yr(self):
		self.run_test("굽다", "{{ko-IPA}}", "kwupta", "yr")
	def test_gupda_ipa(self):
		self.run_test("굽다", "{{ko-IPA}}", "[kup̚t͈a̠]", "ipa")
	def test_gupda_ph_1(self):
		self.run_test("굽다", "{{ko-IPA|l=y}}", "굽(ː)따", "ph")
	def test_gupda_rr_1(self):
		self.run_test("굽다", "{{ko-IPA|l=y}}", "gupda", "rr")
	def test_gupda_rrr_1(self):
		self.run_test("굽다", "{{ko-IPA|l=y}}", "gubda", "rrr")
	def test_gupda_mr_1(self):
		self.run_test("굽다", "{{ko-IPA|l=y}}", "kupta", "mr")
	def test_gupda_yr_1(self):
		self.run_test("굽다", "{{ko-IPA|l=y}}", "kwūpta", "yr")
	def test_gupda_ipa_1(self):
		self.run_test("굽다", "{{ko-IPA|l=y}}", "[ˈku(ː)p̚t͈a̠]", "ipa")

	def test_ja_ph(self):
		self.run_test("자", "{{ko-IPA}}", "자", "ph")
	def test_ja_rr(self):
		self.run_test("자", "{{ko-IPA}}", "ja", "rr")
	def test_ja_rrr(self):
		self.run_test("자", "{{ko-IPA}}", "ja", "rrr")
	def test_ja_mr(self):
		self.run_test("자", "{{ko-IPA}}", "cha", "mr")
	def test_ja_yr(self):
		self.run_test("자", "{{ko-IPA}}", "ca", "yr")
	def test_ja_ipa(self):
		self.run_test("자", "{{ko-IPA}}", "[t͡ɕa̠]", "ipa")

	def test_guri_ph(self):
		self.run_test("구리", "{{ko-IPA}}", "구리", "ph")
	def test_guri_rr(self):
		self.run_test("구리", "{{ko-IPA}}", "guri", "rr")
	def test_guri_rrr(self):
		self.run_test("구리", "{{ko-IPA}}", "guli", "rrr")
	def test_guri_mr(self):
		self.run_test("구리", "{{ko-IPA}}", "kuri", "mr")
	def test_guri_yr(self):
		self.run_test("구리", "{{ko-IPA}}", "kwuli", "yr")
	def test_guri_ipa(self):
		self.run_test("구리", "{{ko-IPA}}", "[kuɾi]", "ipa")

	def test_noeul_ph(self):
		self.run_test("노을", "{{ko-IPA}}", "노을", "ph")
	def test_noeul_rr(self):
		self.run_test("노을", "{{ko-IPA}}", "no'eul", "rr")
	def test_noeul_rrr(self):
		self.run_test("노을", "{{ko-IPA}}", "no'eul", "rrr")
	def test_noeul_mr(self):
		self.run_test("노을", "{{ko-IPA}}", "noŭl", "mr")
	def test_noeul_yr(self):
		self.run_test("노을", "{{ko-IPA}}", "noul", "yr")
	def test_noeul_ipa(self):
		self.run_test("노을", "{{ko-IPA}}", "[no̞ɯɭ]", "ipa")

	def test_nol_ph(self):
		self.run_test("놀", "{{ko-IPA|l=y}}", "놀(ː)", "ph")
	def test_nol_rr(self):
		self.run_test("놀", "{{ko-IPA|l=y}}", "nol", "rr")
	def test_nol_rrr(self):
		self.run_test("놀", "{{ko-IPA|l=y}}", "nol", "rrr")
	def test_nol_mr(self):
		self.run_test("놀", "{{ko-IPA|l=y}}", "nol", "mr")
	def test_nol_yr(self):
		self.run_test("놀", "{{ko-IPA|l=y}}", "nōl", "yr")
	def test_nol_ipa(self):
		self.run_test("놀", "{{ko-IPA|l=y}}", "[no̞(ː)ɭ]", "ipa")

	def test_haesseukhada_ph(self):
		self.run_test("해쓱하다", "{{ko-IPA}}", "해쓰카다/헤쓰카다", "ph")
	def test_haesseukhada_rr(self):
		self.run_test("해쓱하다", "{{ko-IPA}}", "haesseukhada", "rr")
	def test_haesseukhada_rrr(self):
		self.run_test("해쓱하다", "{{ko-IPA}}", "hae'sseughada", "rrr")
	def test_haesseukhada_mr(self):
		self.run_test("해쓱하다", "{{ko-IPA}}", "haessŭkhada", "mr")
	def test_haesseukhada_yr(self):
		self.run_test("해쓱하다", "{{ko-IPA}}", "hay.ssuk.hata", "yr")
	def test_haesseukhada_ipa(self):
		self.run_test("해쓱하다", "{{ko-IPA}}", "[hɛs͈ɯkʰa̠da̠] ~ [he̞s͈ɯkʰa̠da̠]", "ipa")

	def test_parihada_ph(self):
		self.run_test("파리하다", "{{ko-IPA}}", "파리하다", "ph")
	def test_parihada_rr(self):
		self.run_test("파리하다", "{{ko-IPA}}", "parihada", "rr")
	def test_parihada_rrr(self):
		self.run_test("파리하다", "{{ko-IPA}}", "palihada", "rrr")
	def test_parihada_mr(self):
		self.run_test("파리하다", "{{ko-IPA}}", "p'arihada", "mr")
	def test_parihada_yr(self):
		self.run_test("파리하다", "{{ko-IPA}}", "phalihata", "yr")
	def test_parihada_ipa(self):
		self.run_test("파리하다", "{{ko-IPA}}", "[pʰa̠ɾiɦa̠da̠]", "ipa")

	def test_Heigeu_ph(self):
		self.run_test("헤이그", "{{ko-IPA|cap=y}}", "헤이그", "ph")
	def test_Heigeu_rr(self):
		self.run_test("헤이그", "{{ko-IPA|cap=y}}", "Heigeu", "rr")
	def test_Heigeu_rrr(self):
		self.run_test("헤이그", "{{ko-IPA|cap=y}}", "Heigeu", "rrr")
	def test_Heigeu_mr(self):
		self.run_test("헤이그", "{{ko-IPA|cap=y}}", "Heigŭ", "mr")
	def test_Heigeu_yr(self):
		self.run_test("헤이그", "{{ko-IPA|cap=y}}", "heyiku", "yr")
	def test_Heigeu_ipa(self):
		self.run_test("헤이그", "{{ko-IPA|cap=y}}", "[he̞iɡɯ]", "ipa")

	def test_bandal_ph(self):
		self.run_test("반달", "{{ko-IPA|l=y}}", "반(ː)달", "ph")
	def test_bandal_rr(self):
		self.run_test("반달", "{{ko-IPA|l=y}}", "bandal", "rr")
	def test_bandal_rrr(self):
		self.run_test("반달", "{{ko-IPA|l=y}}", "bandal", "rrr")
	def test_bandal_mr(self):
		self.run_test("반달", "{{ko-IPA|l=y}}", "pandal", "mr")
	def test_bandal_yr(self):
		self.run_test("반달", "{{ko-IPA|l=y}}", "pāntal", "yr")
	def test_bandal_ipa(self):
		self.run_test("반달", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)nda̠ɭ]", "ipa")
	def test_bandal_ph_1(self):
		self.run_test("반달", "{{ko-IPA}}", "반달", "ph")
	def test_bandal_rr_1(self):
		self.run_test("반달", "{{ko-IPA}}", "bandal", "rr")
	def test_bandal_rrr_1(self):
		self.run_test("반달", "{{ko-IPA}}", "bandal", "rrr")
	def test_bandal_mr_1(self):
		self.run_test("반달", "{{ko-IPA}}", "pandal", "mr")
	def test_bandal_yr_1(self):
		self.run_test("반달", "{{ko-IPA}}", "pantal", "yr")
	def test_bandal_ipa_1(self):
		self.run_test("반달", "{{ko-IPA}}", "[pa̠nda̠ɭ]", "ipa")

	def test_ut_ph(self):
		self.run_test("웃-", "{{ko-IPA}}", "욷", "ph")
	def test_ut_rr(self):
		self.run_test("웃-", "{{ko-IPA}}", "ut", "rr")
	def test_ut_rrr(self):
		self.run_test("웃-", "{{ko-IPA}}", "us", "rrr")
	def test_ut_mr(self):
		self.run_test("웃-", "{{ko-IPA}}", "ut", "mr")
	def test_ut_yr(self):
		self.run_test("웃-", "{{ko-IPA}}", "wus", "yr")
	def test_ut_ipa(self):
		self.run_test("웃-", "{{ko-IPA}}", "[ut̚]", "ipa")

	def test_Benuseu_ph(self):
		self.run_test("베누스", "{{ko-ipa|cap=y}}", "베누스", "ph")
	def test_Benuseu_rr(self):
		self.run_test("베누스", "{{ko-ipa|cap=y}}", "Benuseu", "rr")
	def test_Benuseu_rrr(self):
		self.run_test("베누스", "{{ko-ipa|cap=y}}", "Benuseu", "rrr")
	def test_Benuseu_mr(self):
		self.run_test("베누스", "{{ko-ipa|cap=y}}", "Penusŭ", "mr")
	def test_Benuseu_yr(self):
		self.run_test("베누스", "{{ko-ipa|cap=y}}", "peynwusu", "yr")
	def test_Benuseu_ipa(self):
		self.run_test("베누스", "{{ko-ipa|cap=y}}", "[pe̞nusʰɯ]", "ipa")

	def test_mechuragi_ph(self):
		self.run_test("메추라기", "{{ko-IPA}}", "메추라기", "ph")
	def test_mechuragi_rr(self):
		self.run_test("메추라기", "{{ko-IPA}}", "mechuragi", "rr")
	def test_mechuragi_rrr(self):
		self.run_test("메추라기", "{{ko-IPA}}", "mechulagi", "rrr")
	def test_mechuragi_mr(self):
		self.run_test("메추라기", "{{ko-IPA}}", "mech'uragi", "mr")
	def test_mechuragi_yr(self):
		self.run_test("메추라기", "{{ko-IPA}}", "mey.chwulaki", "yr")
	def test_mechuragi_ipa(self):
		self.run_test("메추라기", "{{ko-IPA}}", "[me̞t͡ɕʰuɾa̠ɡi]", "ipa")

	def test_metdak_ph(self):
		self.run_test("멧닭", "{{ko-IPA|nobc=1}}", "멛딱/메딱", "ph")
	def test_metdak_rr(self):
		self.run_test("멧닭", "{{ko-IPA|nobc=1}}", "metdak", "rr")
	def test_metdak_rrr(self):
		self.run_test("멧닭", "{{ko-IPA|nobc=1}}", "mesdalg", "rrr")
	def test_metdak_mr(self):
		self.run_test("멧닭", "{{ko-IPA|nobc=1}}", "mettak", "mr")
	def test_metdak_yr(self):
		self.run_test("멧닭", "{{ko-IPA|nobc=1}}", "meystalk", "yr")
	def test_metdak_ipa(self):
		self.run_test("멧닭", "{{ko-IPA|nobc=1}}", "[me̞t̚t͈a̠k̚] ~ [me̞t͈a̠k̚]", "ipa")

	def test_deulkkwong_ph(self):
		self.run_test("들꿩", "{{ko-IPA|l=y}}", "들(ː)꿩", "ph")
	def test_deulkkwong_rr(self):
		self.run_test("들꿩", "{{ko-IPA|l=y}}", "deulkkwong", "rr")
	def test_deulkkwong_rrr(self):
		self.run_test("들꿩", "{{ko-IPA|l=y}}", "deulkkwong", "rrr")
	def test_deulkkwong_mr(self):
		self.run_test("들꿩", "{{ko-IPA|l=y}}", "tŭlkkwŏng", "mr")
	def test_deulkkwong_yr(self):
		self.run_test("들꿩", "{{ko-IPA|l=y}}", "tūl.kkweng", "yr")
	def test_deulkkwong_ipa(self):
		self.run_test("들꿩", "{{ko-IPA|l=y}}", "[ˈtɯ(ː)ɭk͈wʌ̹ŋ]", "ipa")

	def test_me_ph(self):
		self.run_test("메", "{{ko-IPA}}", "메", "ph")
	def test_me_rr(self):
		self.run_test("메", "{{ko-IPA}}", "me", "rr")
	def test_me_rrr(self):
		self.run_test("메", "{{ko-IPA}}", "me", "rrr")
	def test_me_mr(self):
		self.run_test("메", "{{ko-IPA}}", "me", "mr")
	def test_me_yr(self):
		self.run_test("메", "{{ko-IPA}}", "mey", "yr")
	def test_me_ipa(self):
		self.run_test("메", "{{ko-IPA}}", "[me̞]", "ipa")

	def test_dori_ph(self):
		self.run_test("도리", "{{ko-ipa}}", "도리", "ph")
	def test_dori_rr(self):
		self.run_test("도리", "{{ko-ipa}}", "dori", "rr")
	def test_dori_rrr(self):
		self.run_test("도리", "{{ko-ipa}}", "doli", "rrr")
	def test_dori_mr(self):
		self.run_test("도리", "{{ko-ipa}}", "tori", "mr")
	def test_dori_yr(self):
		self.run_test("도리", "{{ko-ipa}}", "toli", "yr")
	def test_dori_ipa(self):
		self.run_test("도리", "{{ko-ipa}}", "[to̞ɾi]", "ipa")
	def test_dori_ph_1(self):
		self.run_test("도리", "{{ko-ipa|l=y}}", "도(ː)리", "ph")
	def test_dori_rr_1(self):
		self.run_test("도리", "{{ko-ipa|l=y}}", "dori", "rr")
	def test_dori_rrr_1(self):
		self.run_test("도리", "{{ko-ipa|l=y}}", "doli", "rrr")
	def test_dori_mr_1(self):
		self.run_test("도리", "{{ko-ipa|l=y}}", "tori", "mr")
	def test_dori_yr_1(self):
		self.run_test("도리", "{{ko-ipa|l=y}}", "tōli", "yr")
	def test_dori_ipa_1(self):
		self.run_test("도리", "{{ko-ipa|l=y}}", "[ˈto̞(ː)ɾi]", "ipa")

	def test_simbang_ph(self):
		self.run_test("심방", "{{ko-ipa}}", "심방", "ph")
	def test_simbang_rr(self):
		self.run_test("심방", "{{ko-ipa}}", "simbang", "rr")
	def test_simbang_rrr(self):
		self.run_test("심방", "{{ko-ipa}}", "simbang", "rrr")
	def test_simbang_mr(self):
		self.run_test("심방", "{{ko-ipa}}", "simbang", "mr")
	def test_simbang_yr(self):
		self.run_test("심방", "{{ko-ipa}}", "simpang", "yr")
	def test_simbang_ipa(self):
		self.run_test("심방", "{{ko-ipa}}", "[ɕʰimba̠ŋ]", "ipa")

	def test_seokkarae_ph(self):
		self.run_test("서까래", "{{ko-IPA}}", "서까래/서까레", "ph")
	def test_seokkarae_rr(self):
		self.run_test("서까래", "{{ko-IPA}}", "seokkarae", "rr")
	def test_seokkarae_rrr(self):
		self.run_test("서까래", "{{ko-IPA}}", "seo'kkalae", "rrr")
	def test_seokkarae_mr(self):
		self.run_test("서까래", "{{ko-IPA}}", "sŏkkarae", "mr")
	def test_seokkarae_yr(self):
		self.run_test("서까래", "{{ko-IPA}}", "se.kkalay", "yr")
	def test_seokkarae_ipa(self):
		self.run_test("서까래", "{{ko-IPA}}", "[sʰʌ̹k͈a̠ɾɛ] ~ [sʰʌ̹k͈a̠ɾe̞]", "ipa")

	def test_abi_ph(self):
		self.run_test("아비", "{{ko-IPA}}", "아비", "ph")
	def test_abi_rr(self):
		self.run_test("아비", "{{ko-IPA}}", "abi", "rr")
	def test_abi_rrr(self):
		self.run_test("아비", "{{ko-IPA}}", "abi", "rrr")
	def test_abi_mr(self):
		self.run_test("아비", "{{ko-IPA}}", "abi", "mr")
	def test_abi_yr(self):
		self.run_test("아비", "{{ko-IPA}}", "api", "yr")
	def test_abi_ipa(self):
		self.run_test("아비", "{{ko-IPA}}", "[a̠bi]", "ipa")

	def test_keunhoesaengmeoriabi_ph(self):
		self.run_test("큰회색머리아비", "{{ko-IPA}}", "큰훼생머리아비/큰회생머리아비/큰훼셍머리아비/큰회셍머리아비", "ph")
	def test_keunhoesaengmeoriabi_rr(self):
		self.run_test("큰회색머리아비", "{{ko-IPA}}", "keunhoesaengmeoriabi", "rr")
	def test_keunhoesaengmeoriabi_rrr(self):
		self.run_test("큰회색머리아비", "{{ko-IPA}}", "keunhoesaegmeoliabi", "rrr")
	def test_keunhoesaengmeoriabi_mr(self):
		self.run_test("큰회색머리아비", "{{ko-IPA}}", "k'ŭnhoesaengmŏriabi", "mr")
	def test_keunhoesaengmeoriabi_yr(self):
		self.run_test("큰회색머리아비", "{{ko-IPA}}", "khun.hoysaykmeliapi", "yr")
	def test_keunhoesaengmeoriabi_ipa(self):
		self.run_test("큰회색머리아비", "{{ko-IPA}}", "[kxɯnβwe̞sʰɛŋmʌ̹ɾia̠bi] ~ [kxɯnɦø̞sʰɛŋmʌ̹ɾia̠bi] ~ [kxɯnβwe̞sʰe̞ŋmʌ̹ɾia̠bi] ~ [kxɯnɦø̞sʰe̞ŋmʌ̹ɾia̠bi]", "ipa")

	def test_hoesaengmeoriabi_ph(self):
		self.run_test("회색머리아비", "{{ko-IPA}}", "훼생머리아비/회생머리아비/훼셍머리아비/회셍머리아비", "ph")
	def test_hoesaengmeoriabi_rr(self):
		self.run_test("회색머리아비", "{{ko-IPA}}", "hoesaengmeoriabi", "rr")
	def test_hoesaengmeoriabi_rrr(self):
		self.run_test("회색머리아비", "{{ko-IPA}}", "hoesaegmeoliabi", "rrr")
	def test_hoesaengmeoriabi_mr(self):
		self.run_test("회색머리아비", "{{ko-IPA}}", "hoesaengmŏriabi", "mr")
	def test_hoesaengmeoriabi_yr(self):
		self.run_test("회색머리아비", "{{ko-IPA}}", "hoysaykmeliapi", "yr")
	def test_hoesaengmeoriabi_ipa(self):
		self.run_test("회색머리아비", "{{ko-IPA}}", "[ɸwe̞sʰɛŋmʌ̹ɾia̠bi] ~ [hø̞sʰɛŋmʌ̹ɾia̠bi] ~ [ɸwe̞sʰe̞ŋmʌ̹ɾia̠bi] ~ [hø̞sʰe̞ŋmʌ̹ɾia̠bi]", "ipa")

	def test_huinburiabi_ph(self):
		self.run_test("흰부리아비", "{{ko-IPA}}", "힌부리아비", "ph")
	def test_huinburiabi_rr(self):
		self.run_test("흰부리아비", "{{ko-IPA}}", "huinburiabi", "rr")
	def test_huinburiabi_rrr(self):
		self.run_test("흰부리아비", "{{ko-IPA}}", "huinbuliabi", "rrr")
	def test_huinburiabi_mr(self):
		self.run_test("흰부리아비", "{{ko-IPA}}", "hŭinburiabi", "mr")
	def test_huinburiabi_yr(self):
		self.run_test("흰부리아비", "{{ko-IPA}}", "huynpuliapi", "yr")
	def test_huinburiabi_ipa(self):
		self.run_test("흰부리아비", "{{ko-IPA}}", "[çinbuɾia̠bi]", "ipa")

	def test_nonbyeongari_ph(self):
		self.run_test("논병아리", "{{ko-IPA}}", "논병아리", "ph")
	def test_nonbyeongari_rr(self):
		self.run_test("논병아리", "{{ko-IPA}}", "nonbyeong'ari", "rr")
	def test_nonbyeongari_rrr(self):
		self.run_test("논병아리", "{{ko-IPA}}", "nonbyeong'ali", "rrr")
	def test_nonbyeongari_mr(self):
		self.run_test("논병아리", "{{ko-IPA}}", "nonbyŏngari", "mr")
	def test_nonbyeongari_yr(self):
		self.run_test("논병아리", "{{ko-IPA}}", "nonpyengali", "yr")
	def test_nonbyeongari_ipa(self):
		self.run_test("논병아리", "{{ko-IPA}}", "[no̞nbjʌ̹ŋa̠ɾi]", "ipa")

	def test_meori_ph(self):
		self.run_test("머리", "{{ko-IPA|a=y}}", "머리", "ph")
	def test_meori_rr(self):
		self.run_test("머리", "{{ko-IPA|a=y}}", "meori", "rr")
	def test_meori_rrr(self):
		self.run_test("머리", "{{ko-IPA|a=y}}", "meoli", "rrr")
	def test_meori_mr(self):
		self.run_test("머리", "{{ko-IPA|a=y}}", "mŏri", "mr")
	def test_meori_yr(self):
		self.run_test("머리", "{{ko-IPA|a=y}}", "meli", "yr")
	def test_meori_ipa(self):
		self.run_test("머리", "{{ko-IPA|a=y}}", "[mʌ̹ɾi]", "ipa")

	def test_keunnonbyeongari_ph(self):
		self.run_test("큰논병아리", "{{ko-IPA}}", "큰논병아리", "ph")
	def test_keunnonbyeongari_rr(self):
		self.run_test("큰논병아리", "{{ko-IPA}}", "keunnonbyeong'ari", "rr")
	def test_keunnonbyeongari_rrr(self):
		self.run_test("큰논병아리", "{{ko-IPA}}", "keunnonbyeong'ali", "rrr")
	def test_keunnonbyeongari_mr(self):
		self.run_test("큰논병아리", "{{ko-IPA}}", "k'ŭnnonbyŏngari", "mr")
	def test_keunnonbyeongari_yr(self):
		self.run_test("큰논병아리", "{{ko-IPA}}", "khunnonpyengali", "yr")
	def test_keunnonbyeongari_ipa(self):
		self.run_test("큰논병아리", "{{ko-IPA}}", "[kxɯnno̞nbjʌ̹ŋa̠ɾi]", "ipa")

	def test_ppullonbyeongari_ph(self):
		self.run_test("뿔논병아리", "{{ko-IPA}}", "뿔론병아리", "ph")
	def test_ppullonbyeongari_rr(self):
		self.run_test("뿔논병아리", "{{ko-IPA}}", "ppullonbyeong'ari", "rr")
	def test_ppullonbyeongari_rrr(self):
		self.run_test("뿔논병아리", "{{ko-IPA}}", "ppulnonbyeong'ali", "rrr")
	def test_ppullonbyeongari_mr(self):
		self.run_test("뿔논병아리", "{{ko-IPA}}", "ppullonbyŏngari", "mr")
	def test_ppullonbyeongari_yr(self):
		self.run_test("뿔논병아리", "{{ko-IPA}}", "ppulnonpyengali", "yr")
	def test_ppullonbyeongari_ipa(self):
		self.run_test("뿔논병아리", "{{ko-IPA}}", "[p͈uɭɭo̞nbjʌ̹ŋa̠ɾi]", "ipa")

	def test_gwippullonbyeongari_ph(self):
		self.run_test("귀뿔논병아리", "{{ko-IPA}}", "귀뿔론병아리", "ph")
	def test_gwippullonbyeongari_rr(self):
		self.run_test("귀뿔논병아리", "{{ko-IPA}}", "gwippullonbyeong'ari", "rr")
	def test_gwippullonbyeongari_rrr(self):
		self.run_test("귀뿔논병아리", "{{ko-IPA}}", "gwi'ppulnonbyeong'ali", "rrr")
	def test_gwippullonbyeongari_mr(self):
		self.run_test("귀뿔논병아리", "{{ko-IPA}}", "kwippullonbyŏngari", "mr")
	def test_gwippullonbyeongari_yr(self):
		self.run_test("귀뿔논병아리", "{{ko-IPA}}", "kwi.ppulnonpyengali", "yr")
	def test_gwippullonbyeongari_ipa(self):
		self.run_test("귀뿔논병아리", "{{ko-IPA}}", "[kɥip͈uɭɭo̞nbjʌ̹ŋa̠ɾi] ~ [kyp͈uɭɭo̞nbjʌ̹ŋa̠ɾi]", "ipa")

	def test_geomeunmongnonbyeongari_ph(self):
		self.run_test("검은목논병아리", "{{ko-IPA}}", "거믄몽논병아리", "ph")
	def test_geomeunmongnonbyeongari_rr(self):
		self.run_test("검은목논병아리", "{{ko-IPA}}", "geomeunmongnonbyeong'ari", "rr")
	def test_geomeunmongnonbyeongari_rrr(self):
		self.run_test("검은목논병아리", "{{ko-IPA}}", "geom'eunmognonbyeong'ali", "rrr")
	def test_geomeunmongnonbyeongari_mr(self):
		self.run_test("검은목논병아리", "{{ko-IPA}}", "kŏmŭnmongnonbyŏngari", "mr")
	def test_geomeunmongnonbyeongari_yr(self):
		self.run_test("검은목논병아리", "{{ko-IPA}}", "kem.unmoknonpyengali", "yr")
	def test_geomeunmongnonbyeongari_ipa(self):
		self.run_test("검은목논병아리", "{{ko-IPA}}", "[kʌ̹mɯnmo̞ŋno̞nbjʌ̹ŋa̠ɾi]", "ipa")

	def test_seumsae_ph(self):
		self.run_test("슴새", "{{ko-IPA}}", "슴새/슴세", "ph")
	def test_seumsae_rr(self):
		self.run_test("슴새", "{{ko-IPA}}", "seumsae", "rr")
	def test_seumsae_rrr(self):
		self.run_test("슴새", "{{ko-IPA}}", "seumsae", "rrr")
	def test_seumsae_mr(self):
		self.run_test("슴새", "{{ko-IPA}}", "sŭmsae", "mr")
	def test_seumsae_yr(self):
		self.run_test("슴새", "{{ko-IPA}}", "sumsay", "yr")
	def test_seumsae_ipa(self):
		self.run_test("슴새", "{{ko-IPA}}", "[sʰɯmsʰɛ] ~ [sʰɯmsʰe̞]", "ipa")

	def test_chincheok_ph(self):
		self.run_test("친척", "{{ko-IPA}}", "친척", "ph")
	def test_chincheok_rr(self):
		self.run_test("친척", "{{ko-IPA}}", "chincheok", "rr")
	def test_chincheok_rrr(self):
		self.run_test("친척", "{{ko-IPA}}", "chincheog", "rrr")
	def test_chincheok_mr(self):
		self.run_test("친척", "{{ko-IPA}}", "ch'inch'ŏk", "mr")
	def test_chincheok_yr(self):
		self.run_test("친척", "{{ko-IPA}}", "chin.chek", "yr")
	def test_chincheok_ipa(self):
		self.run_test("친척", "{{ko-IPA}}", "[t͡ɕʰiɲt͡ɕʰʌ̹k̚]", "ipa")

	def test_soeburiseumsae_ph(self):
		self.run_test("쇠부리슴새", "{{ko-IPA}}", "쉐부리슴새/쇠부리슴새/쉐부리슴세/쇠부리슴세", "ph")
	def test_soeburiseumsae_rr(self):
		self.run_test("쇠부리슴새", "{{ko-IPA}}", "soeburiseumsae", "rr")
	def test_soeburiseumsae_rrr(self):
		self.run_test("쇠부리슴새", "{{ko-IPA}}", "soebuliseumsae", "rrr")
	def test_soeburiseumsae_mr(self):
		self.run_test("쇠부리슴새", "{{ko-IPA}}", "soeburisŭmsae", "mr")
	def test_soeburiseumsae_yr(self):
		self.run_test("쇠부리슴새", "{{ko-IPA}}", "soypulisumsay", "yr")
	def test_soeburiseumsae_ipa(self):
		self.run_test("쇠부리슴새", "{{ko-IPA}}", "[sʰwe̞buɾisʰɯmsʰɛ] ~ [sʰø̞buɾisʰɯmsʰɛ] ~ [sʰwe̞buɾisʰɯmsʰe̞] ~ [sʰø̞buɾisʰɯmsʰe̞]", "ipa")

	def test_huinbaeseumsae_ph(self):
		self.run_test("흰배슴새", "{{ko-IPA}}", "힌배슴새/힌베슴세", "ph")
	def test_huinbaeseumsae_rr(self):
		self.run_test("흰배슴새", "{{ko-IPA}}", "huinbaeseumsae", "rr")
	def test_huinbaeseumsae_rrr(self):
		self.run_test("흰배슴새", "{{ko-IPA}}", "huinbaeseumsae", "rrr")
	def test_huinbaeseumsae_mr(self):
		self.run_test("흰배슴새", "{{ko-IPA}}", "hŭinbaesŭmsae", "mr")
	def test_huinbaeseumsae_yr(self):
		self.run_test("흰배슴새", "{{ko-IPA}}", "huynpaysumsay", "yr")
	def test_huinbaeseumsae_ipa(self):
		self.run_test("흰배슴새", "{{ko-IPA}}", "[çinbɛsʰɯmsʰɛ] ~ [çinbe̞sʰɯmsʰe̞]", "ipa")

	def test_badajebi_ph(self):
		self.run_test("바다제비", "{{ko-IPA}}", "바다제비", "ph")
	def test_badajebi_rr(self):
		self.run_test("바다제비", "{{ko-IPA}}", "badajebi", "rr")
	def test_badajebi_rrr(self):
		self.run_test("바다제비", "{{ko-IPA}}", "badajebi", "rrr")
	def test_badajebi_mr(self):
		self.run_test("바다제비", "{{ko-IPA}}", "padajebi", "mr")
	def test_badajebi_yr(self):
		self.run_test("바다제비", "{{ko-IPA}}", "pataceypi", "yr")
	def test_badajebi_ipa(self):
		self.run_test("바다제비", "{{ko-IPA}}", "[pa̠da̠d͡ʑe̞bi]", "ipa")

	def test_bulgeunbalseumsae_ph(self):
		self.run_test("붉은발슴새", "{{ko-IPA}}", "불근발슴새/불근발슴세", "ph")
	def test_bulgeunbalseumsae_rr(self):
		self.run_test("붉은발슴새", "{{ko-IPA}}", "bulgeunbalseumsae", "rr")
	def test_bulgeunbalseumsae_rrr(self):
		self.run_test("붉은발슴새", "{{ko-IPA}}", "bulg'eunbalseumsae", "rrr")
	def test_bulgeunbalseumsae_mr(self):
		self.run_test("붉은발슴새", "{{ko-IPA}}", "pulgŭnbalsŭmsae", "mr")
	def test_bulgeunbalseumsae_yr(self):
		self.run_test("붉은발슴새", "{{ko-IPA}}", "pulk.unpal.sumsay", "yr")
	def test_bulgeunbalseumsae_ipa(self):
		self.run_test("붉은발슴새", "{{ko-IPA}}", "[puɭɡɯnba̠ɭsʰɯmsʰɛ] ~ [puɭɡɯnba̠ɭsʰɯmsʰe̞]", "ipa")

	def test_sadasae_ph(self):
		self.run_test("사다새", "{{ko-IPA}}", "사다새/사다세", "ph")
	def test_sadasae_rr(self):
		self.run_test("사다새", "{{ko-IPA}}", "sadasae", "rr")
	def test_sadasae_rrr(self):
		self.run_test("사다새", "{{ko-IPA}}", "sadasae", "rrr")
	def test_sadasae_mr(self):
		self.run_test("사다새", "{{ko-IPA}}", "sadasae", "mr")
	def test_sadasae_yr(self):
		self.run_test("사다새", "{{ko-IPA}}", "satasay", "yr")
	def test_sadasae_ipa(self):
		self.run_test("사다새", "{{ko-IPA}}", "[sʰa̠da̠sʰɛ] ~ [sʰa̠da̠sʰe̞]", "ipa")

	def test_galsaegeolganisae_ph(self):
		self.run_test("갈색얼가니새", "{{ko-IPA}}", "갈새걸가니새/갈세걸가니세", "ph")
	def test_galsaegeolganisae_rr(self):
		self.run_test("갈색얼가니새", "{{ko-IPA}}", "galsaegeolganisae", "rr")
	def test_galsaegeolganisae_rrr(self):
		self.run_test("갈색얼가니새", "{{ko-IPA}}", "galsaeg'eolganisae", "rrr")
	def test_galsaegeolganisae_mr(self):
		self.run_test("갈색얼가니새", "{{ko-IPA}}", "kalsaegŏlganisae", "mr")
	def test_galsaegeolganisae_yr(self):
		self.run_test("갈색얼가니새", "{{ko-IPA}}", "kal.sayk.el.kanisay", "yr")
	def test_galsaegeolganisae_ipa(self):
		self.run_test("갈색얼가니새", "{{ko-IPA}}", "[ka̠ɭsʰɛɡʌ̹ɭɡa̠nisʰɛ] ~ [ka̠ɭsʰe̞ɡʌ̹ɭɡa̠nisʰe̞]", "ipa")

	def test_pureuneolgureolganisae_ph(self):
		self.run_test("푸른얼굴얼가니새", "{{ko-IPA}}", "푸르널구럴가니새/푸르널구럴가니세", "ph")
	def test_pureuneolgureolganisae_rr(self):
		self.run_test("푸른얼굴얼가니새", "{{ko-IPA}}", "pureuneolgureolganisae", "rr")
	def test_pureuneolgureolganisae_rrr(self):
		self.run_test("푸른얼굴얼가니새", "{{ko-IPA}}", "puleun'eolgul'eolganisae", "rrr")
	def test_pureuneolgureolganisae_mr(self):
		self.run_test("푸른얼굴얼가니새", "{{ko-IPA}}", "p'urŭnŏlgurŏlganisae", "mr")
	def test_pureuneolgureolganisae_yr(self):
		self.run_test("푸른얼굴얼가니새", "{{ko-IPA}}", "phulun.el.kwul.el.kanisay", "yr")
	def test_pureuneolgureolganisae_ipa(self):
		self.run_test("푸른얼굴얼가니새", "{{ko-IPA}}", "[pʰuɾɯnʌ̹ɭɡuɾʌ̹ɭɡa̠nisʰɛ] ~ [pʰuɾɯnʌ̹ɭɡuɾʌ̹ɭɡa̠nisʰe̞]", "ipa")


	def test_minmulgamauji_ph(self):
		self.run_test("민물가마우지", "{{ko-IPA}}", "민물가마우지", "ph")
	def test_minmulgamauji_rr(self):
		self.run_test("민물가마우지", "{{ko-IPA}}", "minmulgamauji", "rr")
	def test_minmulgamauji_rrr(self):
		self.run_test("민물가마우지", "{{ko-IPA}}", "minmulgamauji", "rrr")
	def test_minmulgamauji_mr(self):
		self.run_test("민물가마우지", "{{ko-IPA}}", "minmulgamauji", "mr")
	def test_minmulgamauji_yr(self):
		self.run_test("민물가마우지", "{{ko-IPA}}", "minmul.kamawuci", "yr")
	def test_minmulgamauji_ipa(self):
		self.run_test("민물가마우지", "{{ko-IPA}}", "[minmuɭɡa̠ma̠ud͡ʑi]", "ipa")

	def test_gamauji_ph(self):
		self.run_test("가마우지", "{{ko-IPA}}", "가마우지", "ph")
	def test_gamauji_rr(self):
		self.run_test("가마우지", "{{ko-IPA}}", "gamauji", "rr")
	def test_gamauji_rrr(self):
		self.run_test("가마우지", "{{ko-IPA}}", "gamauji", "rrr")
	def test_gamauji_mr(self):
		self.run_test("가마우지", "{{ko-IPA}}", "kamauji", "mr")
	def test_gamauji_yr(self):
		self.run_test("가마우지", "{{ko-IPA}}", "kamawuci", "yr")
	def test_gamauji_ipa(self):
		self.run_test("가마우지", "{{ko-IPA}}", "[ka̠ma̠ud͡ʑi]", "ipa")

	def test_soegamauji_ph(self):
		self.run_test("쇠가마우지", "{{ko-IPA}}", "쉐가마우지/쇠가마우지", "ph")
	def test_soegamauji_rr(self):
		self.run_test("쇠가마우지", "{{ko-IPA}}", "soegamauji", "rr")
	def test_soegamauji_rrr(self):
		self.run_test("쇠가마우지", "{{ko-IPA}}", "soegamauji", "rrr")
	def test_soegamauji_mr(self):
		self.run_test("쇠가마우지", "{{ko-IPA}}", "soegamauji", "mr")
	def test_soegamauji_yr(self):
		self.run_test("쇠가마우지", "{{ko-IPA}}", "soykamawuci", "yr")
	def test_soegamauji_ipa(self):
		self.run_test("쇠가마우지", "{{ko-IPA}}", "[sʰwe̞ɡa̠ma̠ud͡ʑi] ~ [sʰø̞ɡa̠ma̠ud͡ʑi]", "ipa")

	def test_bulgeunppyamgamauji_ph(self):
		self.run_test("붉은뺨가마우지", "{{ko-IPA}}", "불근뺨가마우지", "ph")
	def test_bulgeunppyamgamauji_rr(self):
		self.run_test("붉은뺨가마우지", "{{ko-IPA}}", "bulgeunppyamgamauji", "rr")
	def test_bulgeunppyamgamauji_rrr(self):
		self.run_test("붉은뺨가마우지", "{{ko-IPA}}", "bulg'eunppyamgamauji", "rrr")
	def test_bulgeunppyamgamauji_mr(self):
		self.run_test("붉은뺨가마우지", "{{ko-IPA}}", "pulgŭnppyamgamauji", "mr")
	def test_bulgeunppyamgamauji_yr(self):
		self.run_test("붉은뺨가마우지", "{{ko-IPA}}", "pulk.unppyamkamawuci", "yr")
	def test_bulgeunppyamgamauji_ipa(self):
		self.run_test("붉은뺨가마우지", "{{ko-IPA}}", "[puɭɡɯnp͈ja̠mɡa̠ma̠ud͡ʑi]", "ipa")

	def test_gunhamjo_ph(self):
		self.run_test("군함조", "{{ko-IPA}}", "군함조", "ph")
	def test_gunhamjo_rr(self):
		self.run_test("군함조", "{{ko-IPA}}", "gunhamjo", "rr")
	def test_gunhamjo_rrr(self):
		self.run_test("군함조", "{{ko-IPA}}", "gunhamjo", "rrr")
	def test_gunhamjo_mr(self):
		self.run_test("군함조", "{{ko-IPA}}", "kunhamjo", "mr")
	def test_gunhamjo_yr(self):
		self.run_test("군함조", "{{ko-IPA}}", "kwun.hamco", "yr")
	def test_gunhamjo_ipa(self):
		self.run_test("군함조", "{{ko-IPA}}", "[kunɦa̠md͡ʑo̞]", "ipa")

	def test_soebaengno_ph(self):
		self.run_test("쇠백로", "{{ko-IPA}}", "쉐뱅노/쇠뱅노/쉐벵노/쇠벵노", "ph")
	def test_soebaengno_rr(self):
		self.run_test("쇠백로", "{{ko-IPA}}", "soebaengno", "rr")
	def test_soebaengno_rrr(self):
		self.run_test("쇠백로", "{{ko-IPA}}", "soebaeglo", "rrr")
	def test_soebaengno_mr(self):
		self.run_test("쇠백로", "{{ko-IPA}}", "soebaengno", "mr")
	def test_soebaengno_yr(self):
		self.run_test("쇠백로", "{{ko-IPA}}", "soypayklo", "yr")
	def test_soebaengno_ipa(self):
		self.run_test("쇠백로", "{{ko-IPA}}", "[sʰwe̞bɛŋno̞] ~ [sʰø̞bɛŋno̞] ~ [sʰwe̞be̞ŋno̞] ~ [sʰø̞be̞ŋno̞]", "ipa")

	def test_norangburibaengno_ph(self):
		self.run_test("노랑부리백로", "{{ko-IPA}}", "노랑부리뱅노/노랑부리벵노", "ph")
	def test_norangburibaengno_rr(self):
		self.run_test("노랑부리백로", "{{ko-IPA}}", "norangburibaengno", "rr")
	def test_norangburibaengno_rrr(self):
		self.run_test("노랑부리백로", "{{ko-IPA}}", "nolangbulibaeglo", "rrr")
	def test_norangburibaengno_mr(self):
		self.run_test("노랑부리백로", "{{ko-IPA}}", "norangburibaengno", "mr")
	def test_norangburibaengno_yr(self):
		self.run_test("노랑부리백로", "{{ko-IPA}}", "nolangpulipayklo", "yr")
	def test_norangburibaengno_ipa(self):
		self.run_test("노랑부리백로", "{{ko-IPA}}", "[no̞ɾa̠ŋbuɾibɛŋno̞] ~ [no̞ɾa̠ŋbuɾibe̞ŋno̞]", "ipa")

	def test_jungbaengno_ph(self):
		self.run_test("중백로", "{{ko-IPA}}", "중뱅노/중벵노", "ph")
	def test_jungbaengno_rr(self):
		self.run_test("중백로", "{{ko-IPA}}", "jungbaengno", "rr")
	def test_jungbaengno_rrr(self):
		self.run_test("중백로", "{{ko-IPA}}", "jungbaeglo", "rrr")
	def test_jungbaengno_mr(self):
		self.run_test("중백로", "{{ko-IPA}}", "chungbaengno", "mr")
	def test_jungbaengno_yr(self):
		self.run_test("중백로", "{{ko-IPA}}", "cwungpayklo", "yr")
	def test_jungbaengno_ipa(self):
		self.run_test("중백로", "{{ko-IPA}}", "[t͡ɕuŋbɛŋno̞] ~ [t͡ɕuŋbe̞ŋno̞]", "ipa")

	def test_jungdaebaengno_ph(self):
		self.run_test("중대백로", "{{ko-IPA}}", "중대뱅노/중데벵노", "ph")
	def test_jungdaebaengno_rr(self):
		self.run_test("중대백로", "{{ko-IPA}}", "jungdaebaengno", "rr")
	def test_jungdaebaengno_rrr(self):
		self.run_test("중대백로", "{{ko-IPA}}", "jungdaebaeglo", "rrr")
	def test_jungdaebaengno_mr(self):
		self.run_test("중대백로", "{{ko-IPA}}", "chungdaebaengno", "mr")
	def test_jungdaebaengno_yr(self):
		self.run_test("중대백로", "{{ko-IPA}}", "cwungtaypayklo", "yr")
	def test_jungdaebaengno_ipa(self):
		self.run_test("중대백로", "{{ko-IPA}}", "[t͡ɕuŋdɛbɛŋno̞] ~ [t͡ɕuŋde̞be̞ŋno̞]", "ipa")

	def test_allakhaeoragi_ph(self):
		self.run_test("알락해오라기", "{{ko-IPA}}", "알라캐오라기/알라케오라기", "ph")
	def test_allakhaeoragi_rr(self):
		self.run_test("알락해오라기", "{{ko-IPA}}", "allakhae'oragi", "rr")
	def test_allakhaeoragi_rrr(self):
		self.run_test("알락해오라기", "{{ko-IPA}}", "allaghae'olagi", "rrr")
	def test_allakhaeoragi_mr(self):
		self.run_test("알락해오라기", "{{ko-IPA}}", "allakhaeoragi", "mr")
	def test_allakhaeoragi_yr(self):
		self.run_test("알락해오라기", "{{ko-IPA}}", "allak.hay.olaki", "yr")
	def test_allakhaeoragi_ipa(self):
		self.run_test("알락해오라기", "{{ko-IPA}}", "[a̠ɭɭa̠kʰɛo̞ɾa̠ɡi] ~ [a̠ɭɭa̠kʰe̞o̞ɾa̠ɡi]", "ipa")

	def test_heungno_ph(self):
		self.run_test("흑로", "{{ko-IPA}}", "흥노", "ph")
	def test_heungno_rr(self):
		self.run_test("흑로", "{{ko-IPA}}", "heungno", "rr")
	def test_heungno_rrr(self):
		self.run_test("흑로", "{{ko-IPA}}", "heuglo", "rrr")
	def test_heungno_mr(self):
		self.run_test("흑로", "{{ko-IPA}}", "hŭngno", "mr")
	def test_heungno_yr(self):
		self.run_test("흑로", "{{ko-IPA}}", "huklo", "yr")
	def test_heungno_ipa(self):
		self.run_test("흑로", "{{ko-IPA}}", "[xɯŋno̞]", "ipa")

	def test_waegari_ph(self):
		self.run_test("왜가리", "{{ko-IPA|l=y}}", "왜(ː)가리/웨(ː)가리", "ph")
	def test_waegari_rr(self):
		self.run_test("왜가리", "{{ko-IPA|l=y}}", "waegari", "rr")
	def test_waegari_rrr(self):
		self.run_test("왜가리", "{{ko-IPA|l=y}}", "waegali", "rrr")
	def test_waegari_mr(self):
		self.run_test("왜가리", "{{ko-IPA|l=y}}", "waegari", "mr")
	def test_waegari_yr(self):
		self.run_test("왜가리", "{{ko-IPA|l=y}}", "wāykali", "yr")
	def test_waegari_ipa(self):
		self.run_test("왜가리", "{{ko-IPA|l=y}}", "[ˈwɛ(ː)ɡa̠ɾi] ~ [ˈwe̞(ː)ɡa̠ɾi]", "ipa")

	def test_bulgeunwaegari_ph(self):
		self.run_test("붉은왜가리", "{{ko-IPA}}", "불그놰가리/불그눼가리", "ph")
	def test_bulgeunwaegari_rr(self):
		self.run_test("붉은왜가리", "{{ko-IPA}}", "bulgeunwaegari", "rr")
	def test_bulgeunwaegari_rrr(self):
		self.run_test("붉은왜가리", "{{ko-IPA}}", "bulg'eun'waegali", "rrr")
	def test_bulgeunwaegari_mr(self):
		self.run_test("붉은왜가리", "{{ko-IPA}}", "pulgŭnwaegari", "mr")
	def test_bulgeunwaegari_yr(self):
		self.run_test("붉은왜가리", "{{ko-IPA}}", "pulk.un.waykali", "yr")
	def test_bulgeunwaegari_ipa(self):
		self.run_test("붉은왜가리", "{{ko-IPA}}", "[puɭɡɯnwɛɡa̠ɾi] ~ [puɭɡɯnwe̞ɡa̠ɾi]", "ipa")

	def test_hwangno_ph(self):
		self.run_test("황로", "{{ko-IPA}}", "황노", "ph")
	def test_hwangno_rr(self):
		self.run_test("황로", "{{ko-IPA}}", "hwangno", "rr")
	def test_hwangno_rrr(self):
		self.run_test("황로", "{{ko-IPA}}", "hwanglo", "rrr")
	def test_hwangno_mr(self):
		self.run_test("황로", "{{ko-IPA}}", "hwangno", "mr")
	def test_hwangno_yr(self):
		self.run_test("황로", "{{ko-IPA}}", "hwanglo", "yr")
	def test_hwangno_ipa(self):
		self.run_test("황로", "{{ko-IPA}}", "[ɸwa̠ŋno̞]", "ipa")

	def test_huinnalgaehaeoragi_ph(self):
		self.run_test("흰날개해오라기", "{{ko-IPA}}", "힌날개해오라기/힌날게헤오라기", "ph")
	def test_huinnalgaehaeoragi_rr(self):
		self.run_test("흰날개해오라기", "{{ko-IPA}}", "huinnalgaehae'oragi", "rr")
	def test_huinnalgaehaeoragi_rrr(self):
		self.run_test("흰날개해오라기", "{{ko-IPA}}", "huinnalgaehae'olagi", "rrr")
	def test_huinnalgaehaeoragi_mr(self):
		self.run_test("흰날개해오라기", "{{ko-IPA}}", "hŭinnalgaehaeoragi", "mr")
	def test_huinnalgaehaeoragi_yr(self):
		self.run_test("흰날개해오라기", "{{ko-IPA}}", "huynnal.kayhay.olaki", "yr")
	def test_huinnalgaehaeoragi_ipa(self):
		self.run_test("흰날개해오라기", "{{ko-IPA}}", "[çinna̠ɭɡɛɦɛo̞ɾa̠ɡi] ~ [çinna̠ɭɡe̞ɦe̞o̞ɾa̠ɡi]", "ipa")

	def test_geomeundaenggihaeoragi_ph(self):
		self.run_test("검은댕기해오라기", "{{ko-IPA}}", "거믄댕기해오라기/거믄뎅기헤오라기", "ph")
	def test_geomeundaenggihaeoragi_rr(self):
		self.run_test("검은댕기해오라기", "{{ko-IPA}}", "geomeundaenggihae'oragi", "rr")
	def test_geomeundaenggihaeoragi_rrr(self):
		self.run_test("검은댕기해오라기", "{{ko-IPA}}", "geom'eundaenggihae'olagi", "rrr")
	def test_geomeundaenggihaeoragi_mr(self):
		self.run_test("검은댕기해오라기", "{{ko-IPA}}", "kŏmŭndaenggihaeoragi", "mr")
	def test_geomeundaenggihaeoragi_yr(self):
		self.run_test("검은댕기해오라기", "{{ko-IPA}}", "kem.untayngkihay.olaki", "yr")
	def test_geomeundaenggihaeoragi_ipa(self):
		self.run_test("검은댕기해오라기", "{{ko-IPA}}", "[kʌ̹mɯndɛŋɡiɦɛo̞ɾa̠ɡi] ~ [kʌ̹mɯnde̞ŋɡiɦe̞o̞ɾa̠ɡi]", "ipa")

	def test_bulgeunhaeoragi_ph(self):
		self.run_test("붉은해오라기", "{{ko-IPA}}", "불근해오라기/불근헤오라기", "ph")
	def test_bulgeunhaeoragi_rr(self):
		self.run_test("붉은해오라기", "{{ko-IPA}}", "bulgeunhae'oragi", "rr")
	def test_bulgeunhaeoragi_rrr(self):
		self.run_test("붉은해오라기", "{{ko-IPA}}", "bulg'eunhae'olagi", "rrr")
	def test_bulgeunhaeoragi_mr(self):
		self.run_test("붉은해오라기", "{{ko-IPA}}", "pulgŭnhaeoragi", "mr")
	def test_bulgeunhaeoragi_yr(self):
		self.run_test("붉은해오라기", "{{ko-IPA}}", "pulk.un.hay.olaki", "yr")
	def test_bulgeunhaeoragi_ipa(self):
		self.run_test("붉은해오라기", "{{ko-IPA}}", "[puɭɡɯnɦɛo̞ɾa̠ɡi] ~ [puɭɡɯnɦe̞o̞ɾa̠ɡi]", "ipa")

	def test_deombulhaeoragi_ph(self):
		self.run_test("덤불해오라기", "{{ko-IPA}}", "덤불해오라기/덤불헤오라기", "ph")
	def test_deombulhaeoragi_rr(self):
		self.run_test("덤불해오라기", "{{ko-IPA}}", "deombulhae'oragi", "rr")
	def test_deombulhaeoragi_rrr(self):
		self.run_test("덤불해오라기", "{{ko-IPA}}", "deombulhae'olagi", "rrr")
	def test_deombulhaeoragi_mr(self):
		self.run_test("덤불해오라기", "{{ko-IPA}}", "tŏmburhaeoragi", "mr")
	def test_deombulhaeoragi_yr(self):
		self.run_test("덤불해오라기", "{{ko-IPA}}", "tempul.hay.olaki", "yr")
	def test_deombulhaeoragi_ipa(self):
		self.run_test("덤불해오라기", "{{ko-IPA}}", "[tʌ̹mbuɾɦɛo̞ɾa̠ɡi] ~ [tʌ̹mbuɾɦe̞o̞ɾa̠ɡi]", "ipa")

	def test_keundeombulhaeoragi_ph(self):
		self.run_test("큰덤불해오라기", "{{ko-IPA}}", "큰덤불해오라기/큰덤불헤오라기", "ph")
	def test_keundeombulhaeoragi_rr(self):
		self.run_test("큰덤불해오라기", "{{ko-IPA}}", "keundeombulhae'oragi", "rr")
	def test_keundeombulhaeoragi_rrr(self):
		self.run_test("큰덤불해오라기", "{{ko-IPA}}", "keundeombulhae'olagi", "rrr")
	def test_keundeombulhaeoragi_mr(self):
		self.run_test("큰덤불해오라기", "{{ko-IPA}}", "k'ŭndŏmburhaeoragi", "mr")
	def test_keundeombulhaeoragi_yr(self):
		self.run_test("큰덤불해오라기", "{{ko-IPA}}", "khuntempul.hay.olaki", "yr")
	def test_keundeombulhaeoragi_ipa(self):
		self.run_test("큰덤불해오라기", "{{ko-IPA}}", "[kxɯndʌ̹mbuɾɦɛo̞ɾa̠ɡi] ~ [kxɯndʌ̹mbuɾɦe̞o̞ɾa̠ɡi]", "ipa")

	def test_yeoldaebulgeunhaeoragi_ph(self):
		self.run_test("열대붉은해오라기", "{{ko-IPA}}", "열대불근해오라기/열데불근헤오라기", "ph")
	def test_yeoldaebulgeunhaeoragi_rr(self):
		self.run_test("열대붉은해오라기", "{{ko-IPA}}", "yeoldaebulgeunhae'oragi", "rr")
	def test_yeoldaebulgeunhaeoragi_rrr(self):
		self.run_test("열대붉은해오라기", "{{ko-IPA}}", "yeoldaebulg'eunhae'olagi", "rrr")
	def test_yeoldaebulgeunhaeoragi_mr(self):
		self.run_test("열대붉은해오라기", "{{ko-IPA}}", "yŏldaebulgŭnhaeoragi", "mr")
	def test_yeoldaebulgeunhaeoragi_yr(self):
		self.run_test("열대붉은해오라기", "{{ko-IPA}}", "yeltaypulk.un.hay.olaki", "yr")
	def test_yeoldaebulgeunhaeoragi_ipa(self):
		self.run_test("열대붉은해오라기", "{{ko-IPA}}", "[jʌ̹ɭdɛbuɭɡɯnɦɛo̞ɾa̠ɡi] ~ [jʌ̹ɭde̞buɭɡɯnɦe̞o̞ɾa̠ɡi]", "ipa")

	def test_geomeunhaeoragi_ph(self):
		self.run_test("검은해오라기", "{{ko-IPA}}", "거믄해오라기/거믄헤오라기", "ph")
	def test_geomeunhaeoragi_rr(self):
		self.run_test("검은해오라기", "{{ko-IPA}}", "geomeunhae'oragi", "rr")
	def test_geomeunhaeoragi_rrr(self):
		self.run_test("검은해오라기", "{{ko-IPA}}", "geom'eunhae'olagi", "rrr")
	def test_geomeunhaeoragi_mr(self):
		self.run_test("검은해오라기", "{{ko-IPA}}", "kŏmŭnhaeoragi", "mr")
	def test_geomeunhaeoragi_yr(self):
		self.run_test("검은해오라기", "{{ko-IPA}}", "kem.un.hay.olaki", "yr")
	def test_geomeunhaeoragi_ipa(self):
		self.run_test("검은해오라기", "{{ko-IPA}}", "[kʌ̹mɯnɦɛo̞ɾa̠ɡi] ~ [kʌ̹mɯnɦe̞o̞ɾa̠ɡi]", "ipa")

	def test_gama_ph(self):
		self.run_test("가마", "{{ko-IPA}}", "가마", "ph")
	def test_gama_rr(self):
		self.run_test("가마", "{{ko-IPA}}", "gama", "rr")
	def test_gama_rrr(self):
		self.run_test("가마", "{{ko-IPA}}", "gama", "rrr")
	def test_gama_mr(self):
		self.run_test("가마", "{{ko-IPA}}", "kama", "mr")
	def test_gama_yr(self):
		self.run_test("가마", "{{ko-IPA}}", "kama", "yr")
	def test_gama_ipa(self):
		self.run_test("가마", "{{ko-IPA}}", "[ka̠ma̠]", "ipa")
	def test_gama_ph_1(self):
		self.run_test("가마", "{{ko-IPA}}", "가마", "ph")
	def test_gama_rr_1(self):
		self.run_test("가마", "{{ko-IPA}}", "gama", "rr")
	def test_gama_rrr_1(self):
		self.run_test("가마", "{{ko-IPA}}", "gama", "rrr")
	def test_gama_mr_1(self):
		self.run_test("가마", "{{ko-IPA}}", "kama", "mr")
	def test_gama_yr_1(self):
		self.run_test("가마", "{{ko-IPA}}", "kama", "yr")
	def test_gama_ipa_1(self):
		self.run_test("가마", "{{ko-IPA}}", "[ka̠ma̠]", "ipa")
	def test_gama_ph_2(self):
		self.run_test("가마", "{{ko-IPA}}", "가마", "ph")
	def test_gama_rr_2(self):
		self.run_test("가마", "{{ko-IPA}}", "gama", "rr")
	def test_gama_rrr_2(self):
		self.run_test("가마", "{{ko-IPA}}", "gama", "rrr")
	def test_gama_mr_2(self):
		self.run_test("가마", "{{ko-IPA}}", "kama", "mr")
	def test_gama_yr_2(self):
		self.run_test("가마", "{{ko-IPA}}", "kama", "yr")
	def test_gama_ipa_2(self):
		self.run_test("가마", "{{ko-IPA}}", "[ka̠ma̠]", "ipa")
	def test_gama_ph_3(self):
		self.run_test("가마", "{{ko-IPA|l=y}}", "가(ː)마", "ph")
	def test_gama_rr_3(self):
		self.run_test("가마", "{{ko-IPA|l=y}}", "gama", "rr")
	def test_gama_rrr_3(self):
		self.run_test("가마", "{{ko-IPA|l=y}}", "gama", "rrr")
	def test_gama_mr_3(self):
		self.run_test("가마", "{{ko-IPA|l=y}}", "kama", "mr")
	def test_gama_yr_3(self):
		self.run_test("가마", "{{ko-IPA|l=y}}", "kāma", "yr")
	def test_gama_ipa_3(self):
		self.run_test("가마", "{{ko-IPA|l=y}}", "[ˈka̠(ː)ma̠]", "ipa")

	def test_dosi_ph(self):
		self.run_test("도시", "{{ko-IPA}}", "도시", "ph")
	def test_dosi_rr(self):
		self.run_test("도시", "{{ko-IPA}}", "dosi", "rr")
	def test_dosi_rrr(self):
		self.run_test("도시", "{{ko-IPA}}", "dosi", "rrr")
	def test_dosi_mr(self):
		self.run_test("도시", "{{ko-IPA}}", "tosi", "mr")
	def test_dosi_yr(self):
		self.run_test("도시", "{{ko-IPA}}", "tosi", "yr")
	def test_dosi_ipa(self):
		self.run_test("도시", "{{ko-IPA}}", "[to̞ɕʰi]", "ipa")

	def test_gapda_ph(self):
		self.run_test("갚다", "{{ko-IPA|a=Ko-갚다.oga}}", "갑따", "ph")
	def test_gapda_rr(self):
		self.run_test("갚다", "{{ko-IPA|a=Ko-갚다.oga}}", "gapda", "rr")
	def test_gapda_rrr(self):
		self.run_test("갚다", "{{ko-IPA|a=Ko-갚다.oga}}", "gapda", "rrr")
	def test_gapda_mr(self):
		self.run_test("갚다", "{{ko-IPA|a=Ko-갚다.oga}}", "kapta", "mr")
	def test_gapda_yr(self):
		self.run_test("갚다", "{{ko-IPA|a=Ko-갚다.oga}}", "kaphta", "yr")
	def test_gapda_ipa(self):
		self.run_test("갚다", "{{ko-IPA|a=Ko-갚다.oga}}", "[ka̠p̚t͈a̠]", "ipa")

	def test_neukkim_ph(self):
		self.run_test("느낌", "{{ko-IPA}}", "느낌", "ph")
	def test_neukkim_rr(self):
		self.run_test("느낌", "{{ko-IPA}}", "neukkim", "rr")
	def test_neukkim_rrr(self):
		self.run_test("느낌", "{{ko-IPA}}", "neu'kkim", "rrr")
	def test_neukkim_mr(self):
		self.run_test("느낌", "{{ko-IPA}}", "nŭkkim", "mr")
	def test_neukkim_yr(self):
		self.run_test("느낌", "{{ko-IPA}}", "nu.kkim", "yr")
	def test_neukkim_ipa(self):
		self.run_test("느낌", "{{ko-IPA}}", "[nɯk͈im]", "ipa")

	def test_gwa_kkwa_ph(self):
		self.run_test("과", "{{ko-IPA|과|꽈}}", "과/꽈", "ph")
	def test_gwa_kkwa_rr(self):
		self.run_test("과", "{{ko-IPA|과|꽈}}", "gwa/kkwa", "rr")
	def test_gwa_kkwa_rrr(self):
		self.run_test("과", "{{ko-IPA|과|꽈}}", "gwa/kkwa", "rrr")
	def test_gwa_kkwa_mr(self):
		self.run_test("과", "{{ko-IPA|과|꽈}}", "kwa/kkwa", "mr")
	def test_gwa_kkwa_yr(self):
		self.run_test("과", "{{ko-IPA|과|꽈}}", "kwa/kkwa", "yr")
	def test_gwa_kkwa_ipa(self):
		self.run_test("과", "{{ko-IPA|과|꽈}}", "[kwa̠] ~ [k͈wa̠]", "ipa")
	def test_gwa_ph_1(self):
		self.run_test("과", "{{ko-IPA}}", "과", "ph")
	def test_gwa_rr_1(self):
		self.run_test("과", "{{ko-IPA}}", "gwa", "rr")
	def test_gwa_rrr_1(self):
		self.run_test("과", "{{ko-IPA}}", "gwa", "rrr")
	def test_gwa_mr_1(self):
		self.run_test("과", "{{ko-IPA}}", "kwa", "mr")
	def test_gwa_yr_1(self):
		self.run_test("과", "{{ko-IPA}}", "kwa", "yr")
	def test_gwa_ipa_1(self):
		self.run_test("과", "{{ko-IPA}}", "[kwa̠]", "ipa")

	def test_maneun_ph(self):
		self.run_test("많은", "{{ko-IPA|l=y}}", "마(ː)는", "ph")
	def test_maneun_rr(self):
		self.run_test("많은", "{{ko-IPA|l=y}}", "maneun", "rr")
	def test_maneun_rrr(self):
		self.run_test("많은", "{{ko-IPA|l=y}}", "manh'eun", "rrr")
	def test_maneun_mr(self):
		self.run_test("많은", "{{ko-IPA|l=y}}", "manŭn", "mr")
	def test_maneun_yr(self):
		self.run_test("많은", "{{ko-IPA|l=y}}", "mānh.un", "yr")
	def test_maneun_ipa(self):
		self.run_test("많은", "{{ko-IPA|l=y}}", "[ˈma̠(ː)nɯn]", "ipa")

	def test_gajang_ph(self):
		self.run_test("가장", "{{ko-IPA}}", "가장", "ph")
	def test_gajang_rr(self):
		self.run_test("가장", "{{ko-IPA}}", "gajang", "rr")
	def test_gajang_rrr(self):
		self.run_test("가장", "{{ko-IPA}}", "gajang", "rrr")
	def test_gajang_mr(self):
		self.run_test("가장", "{{ko-IPA}}", "kajang", "mr")
	def test_gajang_yr(self):
		self.run_test("가장", "{{ko-IPA}}", "kacang", "yr")
	def test_gajang_ipa(self):
		self.run_test("가장", "{{ko-IPA}}", "[ka̠d͡ʑa̠ŋ]", "ipa")
	def test_gajang_ph_1(self):
		self.run_test("가장", "{{ko-IPA|l=y}}", "가(ː)장", "ph")
	def test_gajang_rr_1(self):
		self.run_test("가장", "{{ko-IPA|l=y}}", "gajang", "rr")
	def test_gajang_rrr_1(self):
		self.run_test("가장", "{{ko-IPA|l=y}}", "gajang", "rrr")
	def test_gajang_mr_1(self):
		self.run_test("가장", "{{ko-IPA|l=y}}", "kajang", "mr")
	def test_gajang_yr_1(self):
		self.run_test("가장", "{{ko-IPA|l=y}}", "kācang", "yr")
	def test_gajang_ipa_1(self):
		self.run_test("가장", "{{ko-IPA|l=y}}", "[ˈka̠(ː)d͡ʑa̠ŋ]", "ipa")
	def test_gajang_ph_2(self):
		self.run_test("가장", "{{ko-IPA}}", "가장", "ph")
	def test_gajang_rr_2(self):
		self.run_test("가장", "{{ko-IPA}}", "gajang", "rr")
	def test_gajang_rrr_2(self):
		self.run_test("가장", "{{ko-IPA}}", "gajang", "rrr")
	def test_gajang_mr_2(self):
		self.run_test("가장", "{{ko-IPA}}", "kajang", "mr")
	def test_gajang_yr_2(self):
		self.run_test("가장", "{{ko-IPA}}", "kacang", "yr")
	def test_gajang_ipa_2(self):
		self.run_test("가장", "{{ko-IPA}}", "[ka̠d͡ʑa̠ŋ]", "ipa")

	def test_ingu_ph(self):
		self.run_test("인구", "{{ko-IPA}}", "인구", "ph")
	def test_ingu_rr(self):
		self.run_test("인구", "{{ko-IPA}}", "in'gu", "rr")
	def test_ingu_rrr(self):
		self.run_test("인구", "{{ko-IPA}}", "ingu", "rrr")
	def test_ingu_mr(self):
		self.run_test("인구", "{{ko-IPA}}", "in'gu", "mr")
	def test_ingu_yr(self):
		self.run_test("인구", "{{ko-IPA}}", "inkwu", "yr")
	def test_ingu_ipa(self):
		self.run_test("인구", "{{ko-IPA}}", "[inɡu]", "ipa")

	def test_jungbu_ph(self):
		self.run_test("중부", "{{ko-IPA}}", "중부", "ph")
	def test_jungbu_rr(self):
		self.run_test("중부", "{{ko-IPA}}", "jungbu", "rr")
	def test_jungbu_rrr(self):
		self.run_test("중부", "{{ko-IPA}}", "jungbu", "rrr")
	def test_jungbu_mr(self):
		self.run_test("중부", "{{ko-IPA}}", "chungbu", "mr")
	def test_jungbu_yr(self):
		self.run_test("중부", "{{ko-IPA}}", "cwungpu", "yr")
	def test_jungbu_ipa(self):
		self.run_test("중부", "{{ko-IPA}}", "[t͡ɕuŋbu]", "ipa")

	def test_geunyang_ph(self):
		self.run_test("그냥", "{{ko-IPA|a=y}}", "그냥", "ph")
	def test_geunyang_rr(self):
		self.run_test("그냥", "{{ko-IPA|a=y}}", "geunyang", "rr")
	def test_geunyang_rrr(self):
		self.run_test("그냥", "{{ko-IPA|a=y}}", "geunyang", "rrr")
	def test_geunyang_mr(self):
		self.run_test("그냥", "{{ko-IPA|a=y}}", "kŭnyang", "mr")
	def test_geunyang_yr(self):
		self.run_test("그냥", "{{ko-IPA|a=y}}", "kunyang", "yr")
	def test_geunyang_ipa(self):
		self.run_test("그냥", "{{ko-IPA|a=y}}", "[kɯɲa̠ŋ]", "ipa")

	def test_yaegi_ph(self):
		self.run_test("얘기", "{{ko-IPA|l=y|audio=Ko-얘기.ogg}}", "얘(ː)기/예(ː)기", "ph")
	def test_yaegi_rr(self):
		self.run_test("얘기", "{{ko-IPA|l=y|audio=Ko-얘기.ogg}}", "yaegi", "rr")
	def test_yaegi_rrr(self):
		self.run_test("얘기", "{{ko-IPA|l=y|audio=Ko-얘기.ogg}}", "yaegi", "rrr")
	def test_yaegi_mr(self):
		self.run_test("얘기", "{{ko-IPA|l=y|audio=Ko-얘기.ogg}}", "yaegi", "mr")
	def test_yaegi_yr(self):
		self.run_test("얘기", "{{ko-IPA|l=y|audio=Ko-얘기.ogg}}", "yāyki", "yr")
	def test_yaegi_ipa(self):
		self.run_test("얘기", "{{ko-IPA|l=y|audio=Ko-얘기.ogg}}", "[ˈjɛ(ː)ɡi] ~ [ˈje̞(ː)ɡi]", "ipa")

	def test_iyagi_ph(self):
		self.run_test("이야기", "{{ko-IPA|a=y}}", "이야기", "ph")
	def test_iyagi_rr(self):
		self.run_test("이야기", "{{ko-IPA|a=y}}", "iyagi", "rr")
	def test_iyagi_rrr(self):
		self.run_test("이야기", "{{ko-IPA|a=y}}", "iyagi", "rrr")
	def test_iyagi_mr(self):
		self.run_test("이야기", "{{ko-IPA|a=y}}", "iyagi", "mr")
	def test_iyagi_yr(self):
		self.run_test("이야기", "{{ko-IPA|a=y}}", "iyaki", "yr")
	def test_iyagi_ipa(self):
		self.run_test("이야기", "{{ko-IPA|a=y}}", "[ija̠ɡi]", "ipa")

	def test_sip_ph(self):
		self.run_test("십", "{{ko-IPA}}", "십", "ph")
	def test_sip_rr(self):
		self.run_test("십", "{{ko-IPA}}", "sip", "rr")
	def test_sip_rrr(self):
		self.run_test("십", "{{ko-IPA}}", "sib", "rrr")
	def test_sip_mr(self):
		self.run_test("십", "{{ko-IPA}}", "sip", "mr")
	def test_sip_yr(self):
		self.run_test("십", "{{ko-IPA}}", "sip", "yr")
	def test_sip_ipa(self):
		self.run_test("십", "{{ko-IPA}}", "[ɕʰip̚]", "ipa")

	def test_wae_ph(self):
		self.run_test("왜", "{{ko-IPA|l=y}}", "왜(ː)/웨(ː)", "ph")
	def test_wae_rr(self):
		self.run_test("왜", "{{ko-IPA|l=y}}", "wae", "rr")
	def test_wae_rrr(self):
		self.run_test("왜", "{{ko-IPA|l=y}}", "wae", "rrr")
	def test_wae_mr(self):
		self.run_test("왜", "{{ko-IPA|l=y}}", "wae", "mr")
	def test_wae_yr(self):
		self.run_test("왜", "{{ko-IPA|l=y}}", "wāy", "yr")
	def test_wae_ipa(self):
		self.run_test("왜", "{{ko-IPA|l=y}}", "[wɛ(ː)] ~ [we̞(ː)]", "ipa")
	def test_wae_ph_1(self):
		self.run_test("왜", "{{ko-IPA}}", "왜/웨", "ph")
	def test_wae_rr_1(self):
		self.run_test("왜", "{{ko-IPA}}", "wae", "rr")
	def test_wae_rrr_1(self):
		self.run_test("왜", "{{ko-IPA}}", "wae", "rrr")
	def test_wae_mr_1(self):
		self.run_test("왜", "{{ko-IPA}}", "wae", "mr")
	def test_wae_yr_1(self):
		self.run_test("왜", "{{ko-IPA}}", "way", "yr")
	def test_wae_ipa_1(self):
		self.run_test("왜", "{{ko-IPA}}", "[wɛ] ~ [we̞]", "ipa")

	def test_imyeo_ph(self):
		self.run_test("-이며", "{{ko-IPA}}", "이며", "ph")
	def test_imyeo_rr(self):
		self.run_test("-이며", "{{ko-IPA}}", "imyeo", "rr")
	def test_imyeo_rrr(self):
		self.run_test("-이며", "{{ko-IPA}}", "imyeo", "rrr")
	def test_imyeo_mr(self):
		self.run_test("-이며", "{{ko-IPA}}", "imyŏ", "mr")
	def test_imyeo_yr(self):
		self.run_test("-이며", "{{ko-IPA}}", "imye", "yr")
	def test_imyeo_ipa(self):
		self.run_test("-이며", "{{ko-IPA}}", "[imjʌ̹]", "ipa")

	def test_junggugeo_ph(self):
		self.run_test("중국어", "{{ko-IPA}}", "중구거", "ph")
	def test_junggugeo_rr(self):
		self.run_test("중국어", "{{ko-IPA}}", "junggugeo", "rr")
	def test_junggugeo_rrr(self):
		self.run_test("중국어", "{{ko-IPA}}", "junggug'eo", "rrr")
	def test_junggugeo_mr(self):
		self.run_test("중국어", "{{ko-IPA}}", "chunggugŏ", "mr")
	def test_junggugeo_yr(self):
		self.run_test("중국어", "{{ko-IPA}}", "cwungkwuk.e", "yr")
	def test_junggugeo_ipa(self):
		self.run_test("중국어", "{{ko-IPA}}", "[t͡ɕuŋɡuɡʌ̹]", "ipa")

	def test_wiwonhoe_ph(self):
		self.run_test("위원회", "{{ko-IPA}}", "위원훼/위원회", "ph")
	def test_wiwonhoe_rr(self):
		self.run_test("위원회", "{{ko-IPA}}", "wiwonhoe", "rr")
	def test_wiwonhoe_rrr(self):
		self.run_test("위원회", "{{ko-IPA}}", "wiwonhoe", "rrr")
	def test_wiwonhoe_mr(self):
		self.run_test("위원회", "{{ko-IPA}}", "wiwŏnhoe", "mr")
	def test_wiwonhoe_yr(self):
		self.run_test("위원회", "{{ko-IPA}}", "wiwen.hoy", "yr")
	def test_wiwonhoe_ipa(self):
		self.run_test("위원회", "{{ko-IPA}}", "[ɥiwʌ̹nβwe̞] ~ [ɥiwʌ̹nɦø̞] ~ [ywʌ̹nβwe̞] ~ [ywʌ̹nɦø̞]", "ipa")

	def test_gipda_ph(self):
		self.run_test("깊다", "{{ko-IPA}}", "깁따", "ph")
	def test_gipda_rr(self):
		self.run_test("깊다", "{{ko-IPA}}", "gipda", "rr")
	def test_gipda_rrr(self):
		self.run_test("깊다", "{{ko-IPA}}", "gipda", "rrr")
	def test_gipda_mr(self):
		self.run_test("깊다", "{{ko-IPA}}", "kipta", "mr")
	def test_gipda_yr(self):
		self.run_test("깊다", "{{ko-IPA}}", "kiphta", "yr")
	def test_gipda_ipa(self):
		self.run_test("깊다", "{{ko-IPA}}", "[kip̚t͈a̠]", "ipa")

	def test_jitda_ph(self):
		self.run_test("짙다", "{{ko-IPA}}", "짇따", "ph")
	def test_jitda_rr(self):
		self.run_test("짙다", "{{ko-IPA}}", "jitda", "rr")
	def test_jitda_rrr(self):
		self.run_test("짙다", "{{ko-IPA}}", "jitda", "rrr")
	def test_jitda_mr(self):
		self.run_test("짙다", "{{ko-IPA}}", "chitta", "mr")
	def test_jitda_yr(self):
		self.run_test("짙다", "{{ko-IPA}}", "cithta", "yr")
	def test_jitda_ipa(self):
		self.run_test("짙다", "{{ko-IPA}}", "[t͡ɕit̚t͈a̠]", "ipa")

	def test_nopda_ph(self):
		self.run_test("높다", "{{ko-IPA|a=y}}", "놉따", "ph")
	def test_nopda_rr(self):
		self.run_test("높다", "{{ko-IPA|a=y}}", "nopda", "rr")
	def test_nopda_rrr(self):
		self.run_test("높다", "{{ko-IPA|a=y}}", "nopda", "rrr")
	def test_nopda_mr(self):
		self.run_test("높다", "{{ko-IPA|a=y}}", "nopta", "mr")
	def test_nopda_yr(self):
		self.run_test("높다", "{{ko-IPA|a=y}}", "nophta", "yr")
	def test_nopda_ipa(self):
		self.run_test("높다", "{{ko-IPA|a=y}}", "[no̞p̚t͈a̠]", "ipa")

	def test_yatda_ph(self):
		self.run_test("얕다", "{{ko-IPA}}", "얃따", "ph")
	def test_yatda_rr(self):
		self.run_test("얕다", "{{ko-IPA}}", "yatda", "rr")
	def test_yatda_rrr(self):
		self.run_test("얕다", "{{ko-IPA}}", "yatda", "rrr")
	def test_yatda_mr(self):
		self.run_test("얕다", "{{ko-IPA}}", "yatta", "mr")
	def test_yatda_yr(self):
		self.run_test("얕다", "{{ko-IPA}}", "yathta", "yr")
	def test_yatda_ipa(self):
		self.run_test("얕다", "{{ko-IPA}}", "[ja̠t̚t͈a̠]", "ipa")

	def test_got_ph(self):
		self.run_test("곳", "{{ko-ipa}}", "곧", "ph")
	def test_got_rr(self):
		self.run_test("곳", "{{ko-ipa}}", "got", "rr")
	def test_got_rrr(self):
		self.run_test("곳", "{{ko-ipa}}", "gos", "rrr")
	def test_got_mr(self):
		self.run_test("곳", "{{ko-ipa}}", "kot", "mr")
	def test_got_yr(self):
		self.run_test("곳", "{{ko-ipa}}", "kos", "yr")
	def test_got_ipa(self):
		self.run_test("곳", "{{ko-ipa}}", "[ko̞t̚]", "ipa")

	def test_meokhwangsae_ph(self):
		self.run_test("먹황새", "{{ko-IPA}}", "머쾅새/머쾅세", "ph")
	def test_meokhwangsae_rr(self):
		self.run_test("먹황새", "{{ko-IPA}}", "meokhwangsae", "rr")
	def test_meokhwangsae_rrr(self):
		self.run_test("먹황새", "{{ko-IPA}}", "meoghwangsae", "rrr")
	def test_meokhwangsae_mr(self):
		self.run_test("먹황새", "{{ko-IPA}}", "mŏkhwangsae", "mr")
	def test_meokhwangsae_yr(self):
		self.run_test("먹황새", "{{ko-IPA}}", "mek.hwangsay", "yr")
	def test_meokhwangsae_ipa(self):
		self.run_test("먹황새", "{{ko-IPA}}", "[mʌ̹kʰwa̠ŋsʰɛ] ~ [mʌ̹kʰwa̠ŋsʰe̞]", "ipa")

	def test_kaljip_ph(self):
		self.run_test("칼집", "{{ko-IPA|com=1}}", "칼찝", "ph")
	def test_kaljip_rr(self):
		self.run_test("칼집", "{{ko-IPA|com=1}}", "kaljip", "rr")
	def test_kaljip_rrr(self):
		self.run_test("칼집", "{{ko-IPA|com=1}}", "kaljib", "rrr")
	def test_kaljip_mr(self):
		self.run_test("칼집", "{{ko-IPA|com=1}}", "k'alchip", "mr")
	def test_kaljip_yr(self):
		self.run_test("칼집", "{{ko-IPA|com=1}}", "khalqcip", "yr")
	def test_kaljip_ipa(self):
		self.run_test("칼집", "{{ko-IPA|com=1}}", "[kʰa̠ʎt͡ɕ͈ip̚]", "ipa")

	def test_kal_ph(self):
		self.run_test("칼", "{{ko-IPA}}", "칼", "ph")
	def test_kal_rr(self):
		self.run_test("칼", "{{ko-IPA}}", "kal", "rr")
	def test_kal_rrr(self):
		self.run_test("칼", "{{ko-IPA}}", "kal", "rrr")
	def test_kal_mr(self):
		self.run_test("칼", "{{ko-IPA}}", "k'al", "mr")
	def test_kal_yr(self):
		self.run_test("칼", "{{ko-IPA}}", "khal", "yr")
	def test_kal_ipa(self):
		self.run_test("칼", "{{ko-IPA}}", "[kʰa̠ɭ]", "ipa")

	def test_ttaogi_ph(self):
		self.run_test("따오기", "{{ko-IPA}}", "따오기", "ph")
	def test_ttaogi_rr(self):
		self.run_test("따오기", "{{ko-IPA}}", "ttaogi", "rr")
	def test_ttaogi_rrr(self):
		self.run_test("따오기", "{{ko-IPA}}", "ttaogi", "rrr")
	def test_ttaogi_mr(self):
		self.run_test("따오기", "{{ko-IPA}}", "ttaogi", "mr")
	def test_ttaogi_yr(self):
		self.run_test("따오기", "{{ko-IPA}}", "ttaoki", "yr")
	def test_ttaogi_ipa(self):
		self.run_test("따오기", "{{ko-IPA}}", "[t͈a̠o̞ɡi]", "ipa")

	def test_geomeunmeorihuinttaogi_ph(self):
		self.run_test("검은머리흰따오기", "{{ko-IPA}}", "거믄머리힌따오기", "ph")
	def test_geomeunmeorihuinttaogi_rr(self):
		self.run_test("검은머리흰따오기", "{{ko-IPA}}", "geomeunmeorihuinttaogi", "rr")
	def test_geomeunmeorihuinttaogi_rrr(self):
		self.run_test("검은머리흰따오기", "{{ko-IPA}}", "geom'eunmeolihuinttaogi", "rrr")
	def test_geomeunmeorihuinttaogi_mr(self):
		self.run_test("검은머리흰따오기", "{{ko-IPA}}", "kŏmŭnmŏrihŭinttaogi", "mr")
	def test_geomeunmeorihuinttaogi_yr(self):
		self.run_test("검은머리흰따오기", "{{ko-IPA}}", "kem.unmelihuynttaoki", "yr")
	def test_geomeunmeorihuinttaogi_ipa(self):
		self.run_test("검은머리흰따오기", "{{ko-IPA}}", "[kʌ̹mɯnmʌ̹ɾiʝint͈a̠o̞ɡi]", "ipa")

	def test_jeoeosae_ph(self):
		self.run_test("저어새", "{{ko-IPA}}", "저어새/저어세", "ph")
	def test_jeoeosae_rr(self):
		self.run_test("저어새", "{{ko-IPA}}", "jeo'eosae", "rr")
	def test_jeoeosae_rrr(self):
		self.run_test("저어새", "{{ko-IPA}}", "jeo'eosae", "rrr")
	def test_jeoeosae_mr(self):
		self.run_test("저어새", "{{ko-IPA}}", "chŏŏsae", "mr")
	def test_jeoeosae_yr(self):
		self.run_test("저어새", "{{ko-IPA}}", "ceesay", "yr")
	def test_jeoeosae_ipa(self):
		self.run_test("저어새", "{{ko-IPA}}", "[t͡ɕʌ̹ʌ̹sʰɛ] ~ [t͡ɕʌ̹ʌ̹sʰe̞]", "ipa")

	def test_norangburijeoeosae_ph(self):
		self.run_test("노랑부리저어새", "{{ko-IPA}}", "노랑부리저어새/노랑부리저어세", "ph")
	def test_norangburijeoeosae_rr(self):
		self.run_test("노랑부리저어새", "{{ko-IPA}}", "norangburijeo'eosae", "rr")
	def test_norangburijeoeosae_rrr(self):
		self.run_test("노랑부리저어새", "{{ko-IPA}}", "nolangbulijeo'eosae", "rrr")
	def test_norangburijeoeosae_mr(self):
		self.run_test("노랑부리저어새", "{{ko-IPA}}", "norangburijŏŏsae", "mr")
	def test_norangburijeoeosae_yr(self):
		self.run_test("노랑부리저어새", "{{ko-IPA}}", "nolangpuliceesay", "yr")
	def test_norangburijeoeosae_ipa(self):
		self.run_test("노랑부리저어새", "{{ko-IPA}}", "[no̞ɾa̠ŋbuɾid͡ʑʌ̹ʌ̹sʰɛ] ~ [no̞ɾa̠ŋbuɾid͡ʑʌ̹ʌ̹sʰe̞]", "ipa")

	def test_hokgoni_ph(self):
		self.run_test("혹고니", "{{ko-IPA}}", "혹꼬니", "ph")
	def test_hokgoni_rr(self):
		self.run_test("혹고니", "{{ko-IPA}}", "hokgoni", "rr")
	def test_hokgoni_rrr(self):
		self.run_test("혹고니", "{{ko-IPA}}", "hoggoni", "rrr")
	def test_hokgoni_mr(self):
		self.run_test("혹고니", "{{ko-IPA}}", "hokkoni", "mr")
	def test_hokgoni_yr(self):
		self.run_test("혹고니", "{{ko-IPA}}", "hok.koni", "yr")
	def test_hokgoni_ipa(self):
		self.run_test("혹고니", "{{ko-IPA}}", "[ɸʷo̞k̚k͈o̞ni]", "ipa")

	def test_keungoni_ph(self):
		self.run_test("큰고니", "{{ko-IPA}}", "큰고니", "ph")
	def test_keungoni_rr(self):
		self.run_test("큰고니", "{{ko-IPA}}", "keun'goni", "rr")
	def test_keungoni_rrr(self):
		self.run_test("큰고니", "{{ko-IPA}}", "keungoni", "rrr")
	def test_keungoni_mr(self):
		self.run_test("큰고니", "{{ko-IPA}}", "k'ŭn'goni", "mr")
	def test_keungoni_yr(self):
		self.run_test("큰고니", "{{ko-IPA}}", "khunkoni", "yr")
	def test_keungoni_ipa(self):
		self.run_test("큰고니", "{{ko-IPA}}", "[kxɯnɡo̞ni]", "ipa")

	def test_gaeri_ph(self):
		self.run_test("개리", "{{ko-IPA}}", "개리/게리", "ph")
	def test_gaeri_rr(self):
		self.run_test("개리", "{{ko-IPA}}", "gaeri", "rr")
	def test_gaeri_rrr(self):
		self.run_test("개리", "{{ko-IPA}}", "gaeli", "rrr")
	def test_gaeri_mr(self):
		self.run_test("개리", "{{ko-IPA}}", "kaeri", "mr")
	def test_gaeri_yr(self):
		self.run_test("개리", "{{ko-IPA}}", "kayli", "yr")
	def test_gaeri_ipa(self):
		self.run_test("개리", "{{ko-IPA}}", "[kɛɾi] ~ [ke̞ɾi]", "ipa")

	def test_keungireogi_ph(self):
		self.run_test("큰기러기", "{{ko-IPA}}", "큰기러기", "ph")
	def test_keungireogi_rr(self):
		self.run_test("큰기러기", "{{ko-IPA}}", "keun'gireogi", "rr")
	def test_keungireogi_rrr(self):
		self.run_test("큰기러기", "{{ko-IPA}}", "keungileogi", "rrr")
	def test_keungireogi_mr(self):
		self.run_test("큰기러기", "{{ko-IPA}}", "k'ŭn'girŏgi", "mr")
	def test_keungireogi_yr(self):
		self.run_test("큰기러기", "{{ko-IPA}}", "khunkileki", "yr")
	def test_keungireogi_ipa(self):
		self.run_test("큰기러기", "{{ko-IPA}}", "[kxɯnɡiɾʌ̹ɡi]", "ipa")

	def test_soegireogi_ph(self):
		self.run_test("쇠기러기", "{{ko-IPA}}", "쉐기러기/쇠기러기", "ph")
	def test_soegireogi_rr(self):
		self.run_test("쇠기러기", "{{ko-IPA}}", "soegireogi", "rr")
	def test_soegireogi_rrr(self):
		self.run_test("쇠기러기", "{{ko-IPA}}", "soegileogi", "rrr")
	def test_soegireogi_mr(self):
		self.run_test("쇠기러기", "{{ko-IPA}}", "soegirŏgi", "mr")
	def test_soegireogi_yr(self):
		self.run_test("쇠기러기", "{{ko-IPA}}", "soykileki", "yr")
	def test_soegireogi_ipa(self):
		self.run_test("쇠기러기", "{{ko-IPA}}", "[sʰwe̞ɡiɾʌ̹ɡi] ~ [sʰø̞ɡiɾʌ̹ɡi]", "ipa")

	def test_gireogi_ph(self):
		self.run_test("기러기", "{{ko-IPA}}", "기러기", "ph")
	def test_gireogi_rr(self):
		self.run_test("기러기", "{{ko-IPA}}", "gireogi", "rr")
	def test_gireogi_rrr(self):
		self.run_test("기러기", "{{ko-IPA}}", "gileogi", "rrr")
	def test_gireogi_mr(self):
		self.run_test("기러기", "{{ko-IPA}}", "kirŏgi", "mr")
	def test_gireogi_yr(self):
		self.run_test("기러기", "{{ko-IPA}}", "kileki", "yr")
	def test_gireogi_ipa(self):
		self.run_test("기러기", "{{ko-IPA}}", "[kiɾʌ̹ɡi]", "ipa")

	def test_huinnimagireogi_ph(self):
		self.run_test("흰이마기러기", "{{ko-IPA|ni=2}}", "힌니마기러기", "ph")
	def test_huinnimagireogi_rr(self):
		self.run_test("흰이마기러기", "{{ko-IPA|ni=2}}", "huinnimagireogi", "rr")
	def test_huinnimagireogi_rrr(self):
		self.run_test("흰이마기러기", "{{ko-IPA|ni=2}}", "huin'imagileogi", "rrr")
	def test_huinnimagireogi_mr(self):
		self.run_test("흰이마기러기", "{{ko-IPA|ni=2}}", "hŭinnimagirŏgi", "mr")
	def test_huinnimagireogi_yr(self):
		self.run_test("흰이마기러기", "{{ko-IPA|ni=2}}", "huynnimakileki", "yr")
	def test_huinnimagireogi_ipa(self):
		self.run_test("흰이마기러기", "{{ko-IPA|ni=2}}", "[çinnima̠ɡiɾʌ̹ɡi]", "ipa")

	def test_hoesaekgireogi_ph(self):
		self.run_test("회색기러기", "{{ko-IPA}}", "훼색끼러기/회색끼러기/훼섹끼러기/회섹끼러기", "ph")
	def test_hoesaekgireogi_rr(self):
		self.run_test("회색기러기", "{{ko-IPA}}", "hoesaekgireogi", "rr")
	def test_hoesaekgireogi_rrr(self):
		self.run_test("회색기러기", "{{ko-IPA}}", "hoesaeggileogi", "rrr")
	def test_hoesaekgireogi_mr(self):
		self.run_test("회색기러기", "{{ko-IPA}}", "hoesaekkirŏgi", "mr")
	def test_hoesaekgireogi_yr(self):
		self.run_test("회색기러기", "{{ko-IPA}}", "hoysayk.kileki", "yr")
	def test_hoesaekgireogi_ipa(self):
		self.run_test("회색기러기", "{{ko-IPA}}", "[ɸwe̞sʰɛk̚k͈iɾʌ̹ɡi] ~ [hø̞sʰɛk̚k͈iɾʌ̹ɡi] ~ [ɸwe̞sʰe̞k̚k͈iɾʌ̹ɡi] ~ [hø̞sʰe̞k̚k͈iɾʌ̹ɡi]", "ipa")

	def test_huingireogi_ph(self):
		self.run_test("흰기러기", "{{ko-IPA}}", "힌기러기", "ph")
	def test_huingireogi_rr(self):
		self.run_test("흰기러기", "{{ko-IPA}}", "huin'gireogi", "rr")
	def test_huingireogi_rrr(self):
		self.run_test("흰기러기", "{{ko-IPA}}", "huingileogi", "rrr")
	def test_huingireogi_mr(self):
		self.run_test("흰기러기", "{{ko-IPA}}", "hŭin'girŏgi", "mr")
	def test_huingireogi_yr(self):
		self.run_test("흰기러기", "{{ko-IPA}}", "huynkileki", "yr")
	def test_huingireogi_ipa(self):
		self.run_test("흰기러기", "{{ko-IPA}}", "[çinɡiɾʌ̹ɡi]", "ipa")

	def test_huinmeorigireogi_ph(self):
		self.run_test("흰머리기러기", "{{ko-IPA}}", "힌머리기러기", "ph")
	def test_huinmeorigireogi_rr(self):
		self.run_test("흰머리기러기", "{{ko-IPA}}", "huinmeorigireogi", "rr")
	def test_huinmeorigireogi_rrr(self):
		self.run_test("흰머리기러기", "{{ko-IPA}}", "huinmeoligileogi", "rrr")
	def test_huinmeorigireogi_mr(self):
		self.run_test("흰머리기러기", "{{ko-IPA}}", "hŭinmŏrigirŏgi", "mr")
	def test_huinmeorigireogi_yr(self):
		self.run_test("흰머리기러기", "{{ko-IPA}}", "huynmelikileki", "yr")
	def test_huinmeorigireogi_ipa(self):
		self.run_test("흰머리기러기", "{{ko-IPA}}", "[çinmʌ̹ɾiɡiɾʌ̹ɡi]", "ipa")

	def test_kaenadagireogi_ph(self):
		self.run_test("캐나다기러기", "{{ko-IPA}}", "캐나다기러기/케나다기러기", "ph")
	def test_kaenadagireogi_rr(self):
		self.run_test("캐나다기러기", "{{ko-IPA}}", "kaenadagireogi", "rr")
	def test_kaenadagireogi_rrr(self):
		self.run_test("캐나다기러기", "{{ko-IPA}}", "kaenadagileogi", "rrr")
	def test_kaenadagireogi_mr(self):
		self.run_test("캐나다기러기", "{{ko-IPA}}", "k'aenadagirŏgi", "mr")
	def test_kaenadagireogi_yr(self):
		self.run_test("캐나다기러기", "{{ko-IPA}}", "khaynatakileki", "yr")
	def test_kaenadagireogi_ipa(self):
		self.run_test("캐나다기러기", "{{ko-IPA}}", "[kʰɛna̠da̠ɡiɾʌ̹ɡi] ~ [kʰe̞na̠da̠ɡiɾʌ̹ɡi]", "ipa")

	def test_heukgireogi_ph(self):
		self.run_test("흑기러기", "{{ko-IPA}}", "흑끼러기", "ph")
	def test_heukgireogi_rr(self):
		self.run_test("흑기러기", "{{ko-IPA}}", "heukgireogi", "rr")
	def test_heukgireogi_rrr(self):
		self.run_test("흑기러기", "{{ko-IPA}}", "heuggileogi", "rrr")
	def test_heukgireogi_mr(self):
		self.run_test("흑기러기", "{{ko-IPA}}", "hŭkkirŏgi", "mr")
	def test_heukgireogi_yr(self):
		self.run_test("흑기러기", "{{ko-IPA}}", "huk.kileki", "yr")
	def test_heukgireogi_ipa(self):
		self.run_test("흑기러기", "{{ko-IPA}}", "[xɯk̚k͈iɾʌ̹ɡi]", "ipa")

	def test_bureuda_ph(self):
		self.run_test("부르다", "{{ko-IPA}}", "부르다", "ph")
	def test_bureuda_rr(self):
		self.run_test("부르다", "{{ko-IPA}}", "bureuda", "rr")
	def test_bureuda_rrr(self):
		self.run_test("부르다", "{{ko-IPA}}", "buleuda", "rrr")
	def test_bureuda_mr(self):
		self.run_test("부르다", "{{ko-IPA}}", "purŭda", "mr")
	def test_bureuda_yr(self):
		self.run_test("부르다", "{{ko-IPA}}", "puluta", "yr")
	def test_bureuda_ipa(self):
		self.run_test("부르다", "{{ko-IPA}}", "[puɾɯda̠]", "ipa")

	def test_hwangori_ph(self):
		self.run_test("황오리", "{{ko-IPA}}", "황오리", "ph")
	def test_hwangori_rr(self):
		self.run_test("황오리", "{{ko-IPA}}", "hwang'ori", "rr")
	def test_hwangori_rrr(self):
		self.run_test("황오리", "{{ko-IPA}}", "hwang'oli", "rrr")
	def test_hwangori_mr(self):
		self.run_test("황오리", "{{ko-IPA}}", "hwangori", "mr")
	def test_hwangori_yr(self):
		self.run_test("황오리", "{{ko-IPA}}", "hwangoli", "yr")
	def test_hwangori_ipa(self):
		self.run_test("황오리", "{{ko-IPA}}", "[ɸwa̠ŋo̞ɾi]", "ipa")

	def test_wonangsachon_ph(self):
		self.run_test("원앙사촌", "{{ko-IPA}}", "워낭사촌", "ph")
	def test_wonangsachon_rr(self):
		self.run_test("원앙사촌", "{{ko-IPA}}", "wonangsachon", "rr")
	def test_wonangsachon_rrr(self):
		self.run_test("원앙사촌", "{{ko-IPA}}", "won'angsachon", "rrr")
	def test_wonangsachon_mr(self):
		self.run_test("원앙사촌", "{{ko-IPA}}", "wŏnangsach'on", "mr")
	def test_wonangsachon_yr(self):
		self.run_test("원앙사촌", "{{ko-IPA}}", "wen.angsa.chon", "yr")
	def test_wonangsachon_ipa(self):
		self.run_test("원앙사촌", "{{ko-IPA}}", "[wʌ̹na̠ŋsʰa̠t͡ɕʰo̞n]", "ipa")

	def test_hokburiori_ph(self):
		self.run_test("혹부리오리", "{{ko-IPA}}", "혹뿌리오리", "ph")
	def test_hokburiori_rr(self):
		self.run_test("혹부리오리", "{{ko-IPA}}", "hokburiori", "rr")
	def test_hokburiori_rrr(self):
		self.run_test("혹부리오리", "{{ko-IPA}}", "hogbulioli", "rrr")
	def test_hokburiori_mr(self):
		self.run_test("혹부리오리", "{{ko-IPA}}", "hokpuriori", "mr")
	def test_hokburiori_yr(self):
		self.run_test("혹부리오리", "{{ko-IPA}}", "hokpulioli", "yr")
	def test_hokburiori_ipa(self):
		self.run_test("혹부리오리", "{{ko-IPA}}", "[ɸʷo̞k̚p͈uɾio̞ɾi]", "ipa")

	def test_wonang_ph(self):
		self.run_test("원앙", "{{ko-IPA}}", "워낭", "ph")
	def test_wonang_rr(self):
		self.run_test("원앙", "{{ko-IPA}}", "wonang", "rr")
	def test_wonang_rrr(self):
		self.run_test("원앙", "{{ko-IPA}}", "won'ang", "rrr")
	def test_wonang_mr(self):
		self.run_test("원앙", "{{ko-IPA}}", "wŏnang", "mr")
	def test_wonang_yr(self):
		self.run_test("원앙", "{{ko-IPA}}", "wen.ang", "yr")
	def test_wonang_ipa(self):
		self.run_test("원앙", "{{ko-IPA}}", "[wʌ̹na̠ŋ]", "ipa")

	def test_cheongmeoriori_ph(self):
		self.run_test("청머리오리", "{{ko-IPA}}", "청머리오리", "ph")
	def test_cheongmeoriori_rr(self):
		self.run_test("청머리오리", "{{ko-IPA}}", "cheongmeoriori", "rr")
	def test_cheongmeoriori_rrr(self):
		self.run_test("청머리오리", "{{ko-IPA}}", "cheongmeolioli", "rrr")
	def test_cheongmeoriori_mr(self):
		self.run_test("청머리오리", "{{ko-IPA}}", "ch'ŏngmŏriori", "mr")
	def test_cheongmeoriori_yr(self):
		self.run_test("청머리오리", "{{ko-IPA}}", "chengmelioli", "yr")
	def test_cheongmeoriori_ipa(self):
		self.run_test("청머리오리", "{{ko-IPA}}", "[t͡ɕʰʌ̹ŋmʌ̹ɾio̞ɾi]", "ipa")

	def test_allagori_ph(self):
		self.run_test("알락오리", "{{ko-IPA}}", "알라고리", "ph")
	def test_allagori_rr(self):
		self.run_test("알락오리", "{{ko-IPA}}", "allagori", "rr")
	def test_allagori_rrr(self):
		self.run_test("알락오리", "{{ko-IPA}}", "allag'oli", "rrr")
	def test_allagori_mr(self):
		self.run_test("알락오리", "{{ko-IPA}}", "allagori", "mr")
	def test_allagori_yr(self):
		self.run_test("알락오리", "{{ko-IPA}}", "allak.oli", "yr")
	def test_allagori_ipa(self):
		self.run_test("알락오리", "{{ko-IPA}}", "[a̠ɭɭa̠ɡo̞ɾi]", "ipa")

	def test_hongmeoriori_ph(self):
		self.run_test("홍머리오리", "{{ko-IPA}}", "홍머리오리", "ph")
	def test_hongmeoriori_rr(self):
		self.run_test("홍머리오리", "{{ko-IPA}}", "hongmeoriori", "rr")
	def test_hongmeoriori_rrr(self):
		self.run_test("홍머리오리", "{{ko-IPA}}", "hongmeolioli", "rrr")
	def test_hongmeoriori_mr(self):
		self.run_test("홍머리오리", "{{ko-IPA}}", "hongmŏriori", "mr")
	def test_hongmeoriori_yr(self):
		self.run_test("홍머리오리", "{{ko-IPA}}", "hongmelioli", "yr")
	def test_hongmeoriori_ipa(self):
		self.run_test("홍머리오리", "{{ko-IPA}}", "[ɸʷo̞ŋmʌ̹ɾio̞ɾi]", "ipa")

	def test_amerikahongmeoriori_ph(self):
		self.run_test("아메리카홍머리오리", "{{ko-IPA}}", "아메리카홍머리오리", "ph")
	def test_amerikahongmeoriori_rr(self):
		self.run_test("아메리카홍머리오리", "{{ko-IPA}}", "amerikahongmeoriori", "rr")
	def test_amerikahongmeoriori_rrr(self):
		self.run_test("아메리카홍머리오리", "{{ko-IPA}}", "amelikahongmeolioli", "rrr")
	def test_amerikahongmeoriori_mr(self):
		self.run_test("아메리카홍머리오리", "{{ko-IPA}}", "amerik'ahongmŏriori", "mr")
	def test_amerikahongmeoriori_yr(self):
		self.run_test("아메리카홍머리오리", "{{ko-IPA}}", "ameyli.khahongmelioli", "yr")
	def test_amerikahongmeoriori_ipa(self):
		self.run_test("아메리카홍머리오리", "{{ko-IPA}}", "[a̠me̞ɾikʰa̠βo̞ŋmʌ̹ɾio̞ɾi]", "ipa")

	def test_miguk_ori_ph(self):
		self.run_test("미국오리", "{{ko-IPA|미국 오리|l=4}}", "미국 오(ː)리", "ph")
	def test_miguk_ori_rr(self):
		self.run_test("미국오리", "{{ko-IPA|미국 오리|l=4}}", "miguk ori", "rr")
	def test_miguk_ori_rrr(self):
		self.run_test("미국오리", "{{ko-IPA|미국 오리|l=4}}", "migug oli", "rrr")
	def test_miguk_ori_mr(self):
		self.run_test("미국오리", "{{ko-IPA|미국 오리|l=4}}", "miguk ori", "mr")
	def test_miguk_ori_yr(self):
		self.run_test("미국오리", "{{ko-IPA|미국 오리|l=4}}", "mikwuk ōli", "yr")
	def test_miguk_ori_ipa(self):
		self.run_test("미국오리", "{{ko-IPA|미국 오리|l=4}}", "[miɡuk̚ o̞(ː)ɾi]", "ipa")

	def test_huinppyamgeomdungori_ph(self):
		self.run_test("흰뺨검둥오리", "{{ko-IPA}}", "힌뺨검둥오리", "ph")
	def test_huinppyamgeomdungori_rr(self):
		self.run_test("흰뺨검둥오리", "{{ko-IPA}}", "huinppyamgeomdung'ori", "rr")
	def test_huinppyamgeomdungori_rrr(self):
		self.run_test("흰뺨검둥오리", "{{ko-IPA}}", "huinppyamgeomdung'oli", "rrr")
	def test_huinppyamgeomdungori_mr(self):
		self.run_test("흰뺨검둥오리", "{{ko-IPA}}", "hŭinppyamgŏmdungori", "mr")
	def test_huinppyamgeomdungori_yr(self):
		self.run_test("흰뺨검둥오리", "{{ko-IPA}}", "huynppyamkemtwungoli", "yr")
	def test_huinppyamgeomdungori_ipa(self):
		self.run_test("흰뺨검둥오리", "{{ko-IPA}}", "[çinp͈ja̠mɡʌ̹mduŋo̞ɾi]", "ipa")

	def test_neopjeokburi_ph(self):
		self.run_test("넓적부리", "{{ko-IPA}}", "넙쩍뿌리", "ph")
	def test_neopjeokburi_rr(self):
		self.run_test("넓적부리", "{{ko-IPA}}", "neopjeokburi", "rr")
	def test_neopjeokburi_rrr(self):
		self.run_test("넓적부리", "{{ko-IPA}}", "neolbjeogbuli", "rrr")
	def test_neopjeokburi_mr(self):
		self.run_test("넓적부리", "{{ko-IPA}}", "nŏpchŏkpuri", "mr")
	def test_neopjeokburi_yr(self):
		self.run_test("넓적부리", "{{ko-IPA}}", "nelpcekpuli", "yr")
	def test_neopjeokburi_ipa(self):
		self.run_test("넓적부리", "{{ko-IPA}}", "[nʌ̹p̚t͡ɕ͈ʌ̹k̚p͈uɾi]", "ipa")

	def test_gobangori_ph(self):
		self.run_test("고방오리", "{{ko-IPA}}", "고방오리", "ph")
	def test_gobangori_rr(self):
		self.run_test("고방오리", "{{ko-IPA}}", "gobang'ori", "rr")
	def test_gobangori_rrr(self):
		self.run_test("고방오리", "{{ko-IPA}}", "gobang'oli", "rrr")
	def test_gobangori_mr(self):
		self.run_test("고방오리", "{{ko-IPA}}", "kobangori", "mr")
	def test_gobangori_yr(self):
		self.run_test("고방오리", "{{ko-IPA}}", "kopangoli", "yr")
	def test_gobangori_ipa(self):
		self.run_test("고방오리", "{{ko-IPA}}", "[ko̞ba̠ŋo̞ɾi]", "ipa")

	def test_balguji_ph(self):
		self.run_test("발구지", "{{ko-IPA}}", "발구지", "ph")
	def test_balguji_rr(self):
		self.run_test("발구지", "{{ko-IPA}}", "balguji", "rr")
	def test_balguji_rrr(self):
		self.run_test("발구지", "{{ko-IPA}}", "balguji", "rrr")
	def test_balguji_mr(self):
		self.run_test("발구지", "{{ko-IPA}}", "palguji", "mr")
	def test_balguji_yr(self):
		self.run_test("발구지", "{{ko-IPA}}", "pal.kwuci", "yr")
	def test_balguji_ipa(self):
		self.run_test("발구지", "{{ko-IPA}}", "[pa̠ɭɡud͡ʑi]", "ipa")

	def test_gachangori_ph(self):
		self.run_test("가창오리", "{{ko-IPA}}", "가창오리", "ph")
	def test_gachangori_rr(self):
		self.run_test("가창오리", "{{ko-IPA}}", "gachang'ori", "rr")
	def test_gachangori_rrr(self):
		self.run_test("가창오리", "{{ko-IPA}}", "gachang'oli", "rrr")
	def test_gachangori_mr(self):
		self.run_test("가창오리", "{{ko-IPA}}", "kach'angori", "mr")
	def test_gachangori_yr(self):
		self.run_test("가창오리", "{{ko-IPA}}", "ka.changoli", "yr")
	def test_gachangori_ipa(self):
		self.run_test("가창오리", "{{ko-IPA}}", "[ka̠t͡ɕʰa̠ŋo̞ɾi]", "ipa")

	def test_soeori_ph(self):
		self.run_test("쇠오리", "{{ko-IPA}}", "쉐오리/쇠오리", "ph")
	def test_soeori_rr(self):
		self.run_test("쇠오리", "{{ko-IPA}}", "soe'ori", "rr")
	def test_soeori_rrr(self):
		self.run_test("쇠오리", "{{ko-IPA}}", "soe'oli", "rrr")
	def test_soeori_mr(self):
		self.run_test("쇠오리", "{{ko-IPA}}", "soeori", "mr")
	def test_soeori_yr(self):
		self.run_test("쇠오리", "{{ko-IPA}}", "soy.oli", "yr")
	def test_soeori_ipa(self):
		self.run_test("쇠오리", "{{ko-IPA}}", "[sʰwe̞o̞ɾi] ~ [sʰø̞o̞ɾi]", "ipa")

	def test_huinjukji_ph(self):
		self.run_test("흰죽지", "{{ko-IPA}}", "힌죽찌", "ph")
	def test_huinjukji_rr(self):
		self.run_test("흰죽지", "{{ko-IPA}}", "huinjukji", "rr")
	def test_huinjukji_rrr(self):
		self.run_test("흰죽지", "{{ko-IPA}}", "huinjugji", "rrr")
	def test_huinjukji_mr(self):
		self.run_test("흰죽지", "{{ko-IPA}}", "hŭinjukchi", "mr")
	def test_huinjukji_yr(self):
		self.run_test("흰죽지", "{{ko-IPA}}", "huyn.cwukci", "yr")
	def test_huinjukji_ipa(self):
		self.run_test("흰죽지", "{{ko-IPA}}", "[çiɲd͡ʑuk̚t͡ɕ͈i]", "ipa")

	def test_keunhuinjukji_ph(self):
		self.run_test("큰흰죽지", "{{ko-IPA}}", "큰힌죽찌", "ph")
	def test_keunhuinjukji_rr(self):
		self.run_test("큰흰죽지", "{{ko-IPA}}", "keunhuinjukji", "rr")
	def test_keunhuinjukji_rrr(self):
		self.run_test("큰흰죽지", "{{ko-IPA}}", "keunhuinjugji", "rrr")
	def test_keunhuinjukji_mr(self):
		self.run_test("큰흰죽지", "{{ko-IPA}}", "k'ŭnhŭinjukchi", "mr")
	def test_keunhuinjukji_yr(self):
		self.run_test("큰흰죽지", "{{ko-IPA}}", "khun.huyn.cwukci", "yr")
	def test_keunhuinjukji_ipa(self):
		self.run_test("큰흰죽지", "{{ko-IPA}}", "[kxɯnʝiɲd͡ʑuk̚t͡ɕ͈i]", "ipa")

	def test_migukhuinjukji_ph(self):
		self.run_test("미국흰죽지", "{{ko-IPA}}", "미구킨죽찌", "ph")
	def test_migukhuinjukji_rr(self):
		self.run_test("미국흰죽지", "{{ko-IPA}}", "migukhuinjukji", "rr")
	def test_migukhuinjukji_rrr(self):
		self.run_test("미국흰죽지", "{{ko-IPA}}", "migughuinjugji", "rrr")
	def test_migukhuinjukji_mr(self):
		self.run_test("미국흰죽지", "{{ko-IPA}}", "migukhŭinjukchi", "mr")
	def test_migukhuinjukji_yr(self):
		self.run_test("미국흰죽지", "{{ko-IPA}}", "mikwuk.huyn.cwukci", "yr")
	def test_migukhuinjukji_ipa(self):
		self.run_test("미국흰죽지", "{{ko-IPA}}", "[miɡucçiɲd͡ʑuk̚t͡ɕ͈i]", "ipa")

	def test_bulgeungaseumhuinjukji_ph(self):
		self.run_test("붉은가슴흰죽지", "{{ko-IPA}}", "불근가슴힌죽찌", "ph")
	def test_bulgeungaseumhuinjukji_rr(self):
		self.run_test("붉은가슴흰죽지", "{{ko-IPA}}", "bulgeun'gaseumhuinjukji", "rr")
	def test_bulgeungaseumhuinjukji_rrr(self):
		self.run_test("붉은가슴흰죽지", "{{ko-IPA}}", "bulg'eungaseumhuinjugji", "rrr")
	def test_bulgeungaseumhuinjukji_mr(self):
		self.run_test("붉은가슴흰죽지", "{{ko-IPA}}", "pulgŭn'gasŭmhŭinjukchi", "mr")
	def test_bulgeungaseumhuinjukji_yr(self):
		self.run_test("붉은가슴흰죽지", "{{ko-IPA}}", "pulk.unkasumhuyn.cwukci", "yr")
	def test_bulgeungaseumhuinjukji_ipa(self):
		self.run_test("붉은가슴흰죽지", "{{ko-IPA}}", "[puɭɡɯnɡa̠sʰɯmʝiɲd͡ʑuk̚t͡ɕ͈i]", "ipa")

	def test_daenggihuinjukji_ph(self):
		self.run_test("댕기흰죽지", "{{ko-IPA}}", "댕기힌죽찌/뎅기힌죽찌", "ph")
	def test_daenggihuinjukji_rr(self):
		self.run_test("댕기흰죽지", "{{ko-IPA}}", "daenggihuinjukji", "rr")
	def test_daenggihuinjukji_rrr(self):
		self.run_test("댕기흰죽지", "{{ko-IPA}}", "daenggihuinjugji", "rrr")
	def test_daenggihuinjukji_mr(self):
		self.run_test("댕기흰죽지", "{{ko-IPA}}", "taenggihŭinjukchi", "mr")
	def test_daenggihuinjukji_yr(self):
		self.run_test("댕기흰죽지", "{{ko-IPA}}", "tayngkihuyn.cwukci", "yr")
	def test_daenggihuinjukji_ipa(self):
		self.run_test("댕기흰죽지", "{{ko-IPA}}", "[tɛŋɡiʝiɲd͡ʑuk̚t͡ɕ͈i] ~ [te̞ŋɡiʝiɲd͡ʑuk̚t͡ɕ͈i]", "ipa")

	def test_geomeunmeorihuinjukji_ph(self):
		self.run_test("검은머리흰죽지", "{{ko-IPA}}", "거믄머리힌죽찌", "ph")
	def test_geomeunmeorihuinjukji_rr(self):
		self.run_test("검은머리흰죽지", "{{ko-IPA}}", "geomeunmeorihuinjukji", "rr")
	def test_geomeunmeorihuinjukji_rrr(self):
		self.run_test("검은머리흰죽지", "{{ko-IPA}}", "geom'eunmeolihuinjugji", "rrr")
	def test_geomeunmeorihuinjukji_mr(self):
		self.run_test("검은머리흰죽지", "{{ko-IPA}}", "kŏmŭnmŏrihŭinjukchi", "mr")
	def test_geomeunmeorihuinjukji_yr(self):
		self.run_test("검은머리흰죽지", "{{ko-IPA}}", "kem.unmelihuyn.cwukci", "yr")
	def test_geomeunmeorihuinjukji_ipa(self):
		self.run_test("검은머리흰죽지", "{{ko-IPA}}", "[kʌ̹mɯnmʌ̹ɾiʝiɲd͡ʑuk̚t͡ɕ͈i]", "ipa")

	def test_bulgeunburihuinjukji_ph(self):
		self.run_test("붉은부리흰죽지", "{{ko-IPA}}", "불근부리힌죽찌", "ph")
	def test_bulgeunburihuinjukji_rr(self):
		self.run_test("붉은부리흰죽지", "{{ko-IPA}}", "bulgeunburihuinjukji", "rr")
	def test_bulgeunburihuinjukji_rrr(self):
		self.run_test("붉은부리흰죽지", "{{ko-IPA}}", "bulg'eunbulihuinjugji", "rrr")
	def test_bulgeunburihuinjukji_mr(self):
		self.run_test("붉은부리흰죽지", "{{ko-IPA}}", "pulgŭnburihŭinjukchi", "mr")
	def test_bulgeunburihuinjukji_yr(self):
		self.run_test("붉은부리흰죽지", "{{ko-IPA}}", "pulk.unpulihuyn.cwukci", "yr")
	def test_bulgeunburihuinjukji_ipa(self):
		self.run_test("붉은부리흰죽지", "{{ko-IPA}}", "[puɭɡɯnbuɾiʝiɲd͡ʑuk̚t͡ɕ͈i]", "ipa")

	def test_huinjulbagiori_ph(self):
		self.run_test("흰줄박이오리", "{{ko-IPA}}", "힌줄바기오리", "ph")
	def test_huinjulbagiori_rr(self):
		self.run_test("흰줄박이오리", "{{ko-IPA}}", "huinjulbagiori", "rr")
	def test_huinjulbagiori_rrr(self):
		self.run_test("흰줄박이오리", "{{ko-IPA}}", "huinjulbag'ioli", "rrr")
	def test_huinjulbagiori_mr(self):
		self.run_test("흰줄박이오리", "{{ko-IPA}}", "hŭinjulbagiori", "mr")
	def test_huinjulbagiori_yr(self):
		self.run_test("흰줄박이오리", "{{ko-IPA}}", "huyn.cwul.pak.ioli", "yr")
	def test_huinjulbagiori_ipa(self):
		self.run_test("흰줄박이오리", "{{ko-IPA}}", "[çiɲd͡ʑuɭba̠ɡio̞ɾi]", "ipa")

	def test_badakkwong_ph(self):
		self.run_test("바다꿩", "{{ko-IPA}}", "바다꿩", "ph")
	def test_badakkwong_rr(self):
		self.run_test("바다꿩", "{{ko-IPA}}", "badakkwong", "rr")
	def test_badakkwong_rrr(self):
		self.run_test("바다꿩", "{{ko-IPA}}", "bada'kkwong", "rrr")
	def test_badakkwong_mr(self):
		self.run_test("바다꿩", "{{ko-IPA}}", "padakkwŏng", "mr")
	def test_badakkwong_yr(self):
		self.run_test("바다꿩", "{{ko-IPA}}", "pata.kkweng", "yr")
	def test_badakkwong_ipa(self):
		self.run_test("바다꿩", "{{ko-IPA}}", "[pa̠da̠k͈wʌ̹ŋ]", "ipa")

	def test_geomdungori_ph(self):
		self.run_test("검둥오리", "{{ko-IPA}}", "검둥오리", "ph")
	def test_geomdungori_rr(self):
		self.run_test("검둥오리", "{{ko-IPA}}", "geomdung'ori", "rr")
	def test_geomdungori_rrr(self):
		self.run_test("검둥오리", "{{ko-IPA}}", "geomdung'oli", "rrr")
	def test_geomdungori_mr(self):
		self.run_test("검둥오리", "{{ko-IPA}}", "kŏmdungori", "mr")
	def test_geomdungori_yr(self):
		self.run_test("검둥오리", "{{ko-IPA}}", "kemtwungoli", "yr")
	def test_geomdungori_ipa(self):
		self.run_test("검둥오리", "{{ko-IPA}}", "[kʌ̹mduŋo̞ɾi]", "ipa")

	def test_geomdungorisachon_ph(self):
		self.run_test("검둥오리사촌", "{{ko-IPA}}", "검둥오리사촌", "ph")
	def test_geomdungorisachon_rr(self):
		self.run_test("검둥오리사촌", "{{ko-IPA}}", "geomdung'orisachon", "rr")
	def test_geomdungorisachon_rrr(self):
		self.run_test("검둥오리사촌", "{{ko-IPA}}", "geomdung'olisachon", "rrr")
	def test_geomdungorisachon_mr(self):
		self.run_test("검둥오리사촌", "{{ko-IPA}}", "kŏmdungorisach'on", "mr")
	def test_geomdungorisachon_yr(self):
		self.run_test("검둥오리사촌", "{{ko-IPA}}", "kemtwungolisa.chon", "yr")
	def test_geomdungorisachon_ipa(self):
		self.run_test("검둥오리사촌", "{{ko-IPA}}", "[kʌ̹mduŋo̞ɾisʰa̠t͡ɕʰo̞n]", "ipa")

	def test_huinppyamori_ph(self):
		self.run_test("흰뺨오리", "{{ko-IPA}}", "힌뺘모리", "ph")
	def test_huinppyamori_rr(self):
		self.run_test("흰뺨오리", "{{ko-IPA}}", "huinppyamori", "rr")
	def test_huinppyamori_rrr(self):
		self.run_test("흰뺨오리", "{{ko-IPA}}", "huinppyam'oli", "rrr")
	def test_huinppyamori_mr(self):
		self.run_test("흰뺨오리", "{{ko-IPA}}", "hŭinppyamori", "mr")
	def test_huinppyamori_yr(self):
		self.run_test("흰뺨오리", "{{ko-IPA}}", "huynppyam.oli", "yr")
	def test_huinppyamori_ipa(self):
		self.run_test("흰뺨오리", "{{ko-IPA}}", "[çinp͈ja̠mo̞ɾi]", "ipa")

	def test_bukbanghuinppyamori_ph(self):
		self.run_test("북방흰뺨오리", "{{ko-IPA}}", "북빵힌뺘모리", "ph")
	def test_bukbanghuinppyamori_rr(self):
		self.run_test("북방흰뺨오리", "{{ko-IPA}}", "bukbanghuinppyamori", "rr")
	def test_bukbanghuinppyamori_rrr(self):
		self.run_test("북방흰뺨오리", "{{ko-IPA}}", "bugbanghuinppyam'oli", "rrr")
	def test_bukbanghuinppyamori_mr(self):
		self.run_test("북방흰뺨오리", "{{ko-IPA}}", "pukpanghŭinppyamori", "mr")
	def test_bukbanghuinppyamori_yr(self):
		self.run_test("북방흰뺨오리", "{{ko-IPA}}", "pukpanghuynppyam.oli", "yr")
	def test_bukbanghuinppyamori_ipa(self):
		self.run_test("북방흰뺨오리", "{{ko-IPA}}", "[puk̚p͈a̠ŋʝinp͈ja̠mo̞ɾi]", "ipa")

	def test_huinbiori_ph(self):
		self.run_test("흰비오리", "{{ko-IPA}}", "힌비오리", "ph")
	def test_huinbiori_rr(self):
		self.run_test("흰비오리", "{{ko-IPA}}", "huinbiori", "rr")
	def test_huinbiori_rrr(self):
		self.run_test("흰비오리", "{{ko-IPA}}", "huinbioli", "rrr")
	def test_huinbiori_mr(self):
		self.run_test("흰비오리", "{{ko-IPA}}", "hŭinbiori", "mr")
	def test_huinbiori_yr(self):
		self.run_test("흰비오리", "{{ko-IPA}}", "huynpioli", "yr")
	def test_huinbiori_ipa(self):
		self.run_test("흰비오리", "{{ko-IPA}}", "[çinbio̞ɾi]", "ipa")

	def test_biori_ph(self):
		self.run_test("비오리", "{{ko-IPA}}", "비오리", "ph")
	def test_biori_rr(self):
		self.run_test("비오리", "{{ko-IPA}}", "biori", "rr")
	def test_biori_rrr(self):
		self.run_test("비오리", "{{ko-IPA}}", "bioli", "rrr")
	def test_biori_mr(self):
		self.run_test("비오리", "{{ko-IPA}}", "piori", "mr")
	def test_biori_yr(self):
		self.run_test("비오리", "{{ko-IPA}}", "pioli", "yr")
	def test_biori_ipa(self):
		self.run_test("비오리", "{{ko-IPA}}", "[pio̞ɾi]", "ipa")

	def test_hosabiori_ph(self):
		self.run_test("호사비오리", "{{ko-IPA}}", "호사비오리", "ph")
	def test_hosabiori_rr(self):
		self.run_test("호사비오리", "{{ko-IPA}}", "hosabiori", "rr")
	def test_hosabiori_rrr(self):
		self.run_test("호사비오리", "{{ko-IPA}}", "hosabioli", "rrr")
	def test_hosabiori_mr(self):
		self.run_test("호사비오리", "{{ko-IPA}}", "hosabiori", "mr")
	def test_hosabiori_yr(self):
		self.run_test("호사비오리", "{{ko-IPA}}", "hosapioli", "yr")
	def test_hosabiori_ipa(self):
		self.run_test("호사비오리", "{{ko-IPA}}", "[ɸʷo̞sʰa̠bio̞ɾi]", "ipa")

	def test_badabiori_ph(self):
		self.run_test("바다비오리", "{{ko-IPA}}", "바다비오리", "ph")
	def test_badabiori_rr(self):
		self.run_test("바다비오리", "{{ko-IPA}}", "badabiori", "rr")
	def test_badabiori_rrr(self):
		self.run_test("바다비오리", "{{ko-IPA}}", "badabioli", "rrr")
	def test_badabiori_mr(self):
		self.run_test("바다비오리", "{{ko-IPA}}", "padabiori", "mr")
	def test_badabiori_yr(self):
		self.run_test("바다비오리", "{{ko-IPA}}", "patapioli", "yr")
	def test_badabiori_ipa(self):
		self.run_test("바다비오리", "{{ko-IPA}}", "[pa̠da̠bio̞ɾi]", "ipa")

	def test_mulsuri_ph(self):
		self.run_test("물수리", "{{ko-IPA|com=1}}", "물쑤리", "ph")
	def test_mulsuri_rr(self):
		self.run_test("물수리", "{{ko-IPA|com=1}}", "mulsuri", "rr")
	def test_mulsuri_rrr(self):
		self.run_test("물수리", "{{ko-IPA|com=1}}", "mulsuli", "rrr")
	def test_mulsuri_mr(self):
		self.run_test("물수리", "{{ko-IPA|com=1}}", "mulssuri", "mr")
	def test_mulsuri_yr(self):
		self.run_test("물수리", "{{ko-IPA|com=1}}", "mulqswuli", "yr")
	def test_mulsuri_ipa(self):
		self.run_test("물수리", "{{ko-IPA|com=1}}", "[muɭs͈uɾi]", "ipa")

	def test_beolmae_ph(self):
		self.run_test("벌매", "{{ko-IPA}}", "벌매/벌메", "ph")
	def test_beolmae_rr(self):
		self.run_test("벌매", "{{ko-IPA}}", "beolmae", "rr")
	def test_beolmae_rrr(self):
		self.run_test("벌매", "{{ko-IPA}}", "beolmae", "rrr")
	def test_beolmae_mr(self):
		self.run_test("벌매", "{{ko-IPA}}", "pŏlmae", "mr")
	def test_beolmae_yr(self):
		self.run_test("벌매", "{{ko-IPA}}", "pel.may", "yr")
	def test_beolmae_ipa(self):
		self.run_test("벌매", "{{ko-IPA}}", "[pʌ̹ɭmɛ] ~ [pʌ̹ɭme̞]", "ipa")

	def test_solgae_ph(self):
		self.run_test("솔개", "{{ko-IPA}}", "솔개/솔게", "ph")
	def test_solgae_rr(self):
		self.run_test("솔개", "{{ko-IPA}}", "solgae", "rr")
	def test_solgae_rrr(self):
		self.run_test("솔개", "{{ko-IPA}}", "solgae", "rrr")
	def test_solgae_mr(self):
		self.run_test("솔개", "{{ko-IPA}}", "solgae", "mr")
	def test_solgae_yr(self):
		self.run_test("솔개", "{{ko-IPA}}", "sol.kay", "yr")
	def test_solgae_ipa(self):
		self.run_test("솔개", "{{ko-IPA}}", "[sʰo̞ɭɡɛ] ~ [sʰo̞ɭɡe̞]", "ipa")

	def test_huinkkorisuri_ph(self):
		self.run_test("흰꼬리수리", "{{ko-IPA}}", "힌꼬리수리", "ph")
	def test_huinkkorisuri_rr(self):
		self.run_test("흰꼬리수리", "{{ko-IPA}}", "huinkkorisuri", "rr")
	def test_huinkkorisuri_rrr(self):
		self.run_test("흰꼬리수리", "{{ko-IPA}}", "huinkkolisuli", "rrr")
	def test_huinkkorisuri_mr(self):
		self.run_test("흰꼬리수리", "{{ko-IPA}}", "hŭinkkorisuri", "mr")
	def test_huinkkorisuri_yr(self):
		self.run_test("흰꼬리수리", "{{ko-IPA}}", "huynkkoliswuli", "yr")
	def test_huinkkorisuri_ipa(self):
		self.run_test("흰꼬리수리", "{{ko-IPA}}", "[çink͈o̞ɾisʰuɾi]", "ipa")

	def test_chamsuri_ph(self):
		self.run_test("참수리", "{{ko-IPA}}", "참수리", "ph")
	def test_chamsuri_rr(self):
		self.run_test("참수리", "{{ko-IPA}}", "chamsuri", "rr")
	def test_chamsuri_rrr(self):
		self.run_test("참수리", "{{ko-IPA}}", "chamsuli", "rrr")
	def test_chamsuri_mr(self):
		self.run_test("참수리", "{{ko-IPA}}", "ch'amsuri", "mr")
	def test_chamsuri_yr(self):
		self.run_test("참수리", "{{ko-IPA}}", "chamswuli", "yr")
	def test_chamsuri_ipa(self):
		self.run_test("참수리", "{{ko-IPA}}", "[t͡ɕʰa̠msʰuɾi]", "ipa")

	def test_suyeomsuri_ph(self):
		self.run_test("수염수리", "{{ko-IPA}}", "수염수리", "ph")
	def test_suyeomsuri_rr(self):
		self.run_test("수염수리", "{{ko-IPA}}", "suyeomsuri", "rr")
	def test_suyeomsuri_rrr(self):
		self.run_test("수염수리", "{{ko-IPA}}", "suyeomsuli", "rrr")
	def test_suyeomsuri_mr(self):
		self.run_test("수염수리", "{{ko-IPA}}", "suyŏmsuri", "mr")
	def test_suyeomsuri_yr(self):
		self.run_test("수염수리", "{{ko-IPA}}", "swu.yemswuli", "yr")
	def test_suyeomsuri_ipa(self):
		self.run_test("수염수리", "{{ko-IPA}}", "[sʰujʌ̹msʰuɾi]", "ipa")

	def test_huin_ph(self):
		self.run_test("흰", "{{ko-IPA}}", "힌", "ph")
	def test_huin_rr(self):
		self.run_test("흰", "{{ko-IPA}}", "huin", "rr")
	def test_huin_rrr(self):
		self.run_test("흰", "{{ko-IPA}}", "huin", "rrr")
	def test_huin_mr(self):
		self.run_test("흰", "{{ko-IPA}}", "hŭin", "mr")
	def test_huin_yr(self):
		self.run_test("흰", "{{ko-IPA}}", "huyn", "yr")
	def test_huin_ipa(self):
		self.run_test("흰", "{{ko-IPA}}", "[çin]", "ipa")

	def test_gaegurimae_ph(self):
		self.run_test("개구리매", "{{ko-IPA}}", "개구리매/게구리메", "ph")
	def test_gaegurimae_rr(self):
		self.run_test("개구리매", "{{ko-IPA}}", "gaegurimae", "rr")
	def test_gaegurimae_rrr(self):
		self.run_test("개구리매", "{{ko-IPA}}", "gaegulimae", "rrr")
	def test_gaegurimae_mr(self):
		self.run_test("개구리매", "{{ko-IPA}}", "kaegurimae", "mr")
	def test_gaegurimae_yr(self):
		self.run_test("개구리매", "{{ko-IPA}}", "kaykwulimay", "yr")
	def test_gaegurimae_ipa(self):
		self.run_test("개구리매", "{{ko-IPA}}", "[kɛɡuɾimɛ] ~ [ke̞ɡuɾime̞]", "ipa")

	def test_jaetbitgaegurimae_ph(self):
		self.run_test("잿빛개구리매", "{{ko-IPA|nobc=1}}", "잳삗깨구리매/재삗깨구리매/젣삗께구리메/제삗께구리메", "ph")
	def test_jaetbitgaegurimae_rr(self):
		self.run_test("잿빛개구리매", "{{ko-IPA|nobc=1}}", "jaetbitgaegurimae", "rr")
	def test_jaetbitgaegurimae_rrr(self):
		self.run_test("잿빛개구리매", "{{ko-IPA|nobc=1}}", "jaesbichgaegulimae", "rrr")
	def test_jaetbitgaegurimae_mr(self):
		self.run_test("잿빛개구리매", "{{ko-IPA|nobc=1}}", "chaetpitkaegurimae", "mr")
	def test_jaetbitgaegurimae_yr(self):
		self.run_test("잿빛개구리매", "{{ko-IPA|nobc=1}}", "cayspichkaykwulimay", "yr")
	def test_jaetbitgaegurimae_ipa(self):
		self.run_test("잿빛개구리매", "{{ko-IPA|nobc=1}}", "[t͡ɕɛt̚p͈it̚k͈ɛɡuɾimɛ] ~ [t͡ɕɛp͈it̚k͈ɛɡuɾimɛ] ~ [t͡ɕe̞t̚p͈it̚k͈e̞ɡuɾime̞] ~ [t͡ɕe̞p͈it̚k͈e̞ɡuɾime̞]", "ipa")

	def test_allakgaegurimae_ph(self):
		self.run_test("알락개구리매", "{{ko-IPA}}", "알락깨구리매/알락께구리메", "ph")
	def test_allakgaegurimae_rr(self):
		self.run_test("알락개구리매", "{{ko-IPA}}", "allakgaegurimae", "rr")
	def test_allakgaegurimae_rrr(self):
		self.run_test("알락개구리매", "{{ko-IPA}}", "allaggaegulimae", "rrr")
	def test_allakgaegurimae_mr(self):
		self.run_test("알락개구리매", "{{ko-IPA}}", "allakkaegurimae", "mr")
	def test_allakgaegurimae_yr(self):
		self.run_test("알락개구리매", "{{ko-IPA}}", "allak.kaykwulimay", "yr")
	def test_allakgaegurimae_ipa(self):
		self.run_test("알락개구리매", "{{ko-IPA}}", "[a̠ɭɭa̠k̚k͈ɛɡuɾimɛ] ~ [a̠ɭɭa̠k̚k͈e̞ɡuɾime̞]", "ipa")

	def test_suri_ph(self):
		self.run_test("수리", "{{ko-IPA}}", "수리", "ph")
	def test_suri_rr(self):
		self.run_test("수리", "{{ko-IPA}}", "suri", "rr")
	def test_suri_rrr(self):
		self.run_test("수리", "{{ko-IPA}}", "suli", "rrr")
	def test_suri_mr(self):
		self.run_test("수리", "{{ko-IPA}}", "suri", "mr")
	def test_suri_yr(self):
		self.run_test("수리", "{{ko-IPA}}", "swuli", "yr")
	def test_suri_ipa(self):
		self.run_test("수리", "{{ko-IPA}}", "[sʰuɾi]", "ipa")
	def test_suri_ph_1(self):
		self.run_test("수리", "{{ko-IPA}}", "수리", "ph")
	def test_suri_rr_1(self):
		self.run_test("수리", "{{ko-IPA}}", "suri", "rr")
	def test_suri_rrr_1(self):
		self.run_test("수리", "{{ko-IPA}}", "suli", "rrr")
	def test_suri_mr_1(self):
		self.run_test("수리", "{{ko-IPA}}", "suri", "mr")
	def test_suri_yr_1(self):
		self.run_test("수리", "{{ko-IPA}}", "swuli", "yr")
	def test_suri_ipa_1(self):
		self.run_test("수리", "{{ko-IPA}}", "[sʰuɾi]", "ipa")
	def test_suri_ph_2(self):
		self.run_test("수리", "{{ko-IPA|l=y}}", "수(ː)리", "ph")
	def test_suri_rr_2(self):
		self.run_test("수리", "{{ko-IPA|l=y}}", "suri", "rr")
	def test_suri_rrr_2(self):
		self.run_test("수리", "{{ko-IPA|l=y}}", "suli", "rrr")
	def test_suri_mr_2(self):
		self.run_test("수리", "{{ko-IPA|l=y}}", "suri", "mr")
	def test_suri_yr_2(self):
		self.run_test("수리", "{{ko-IPA|l=y}}", "swūli", "yr")
	def test_suri_ipa_2(self):
		self.run_test("수리", "{{ko-IPA|l=y}}", "[ˈsʰu(ː)ɾi]", "ipa")

	def test_jorongi_ph(self):
		self.run_test("조롱이", "{{ko-IPA}}", "조롱이", "ph")
	def test_jorongi_rr(self):
		self.run_test("조롱이", "{{ko-IPA}}", "jorong'i", "rr")
	def test_jorongi_rrr(self):
		self.run_test("조롱이", "{{ko-IPA}}", "jolong'i", "rrr")
	def test_jorongi_mr(self):
		self.run_test("조롱이", "{{ko-IPA}}", "chorongi", "mr")
	def test_jorongi_yr(self):
		self.run_test("조롱이", "{{ko-IPA}}", "colongi", "yr")
	def test_jorongi_ipa(self):
		self.run_test("조롱이", "{{ko-IPA}}", "[t͡ɕo̞ɾo̞ŋi]", "ipa")

	def test_saemae_ph(self):
		self.run_test("새매", "{{ko-IPA|l=y}}", "새(ː)매/세(ː)메", "ph")
	def test_saemae_rr(self):
		self.run_test("새매", "{{ko-IPA|l=y}}", "saemae", "rr")
	def test_saemae_rrr(self):
		self.run_test("새매", "{{ko-IPA|l=y}}", "saemae", "rrr")
	def test_saemae_mr(self):
		self.run_test("새매", "{{ko-IPA|l=y}}", "saemae", "mr")
	def test_saemae_yr(self):
		self.run_test("새매", "{{ko-IPA|l=y}}", "sāymay", "yr")
	def test_saemae_ipa(self):
		self.run_test("새매", "{{ko-IPA|l=y}}", "[ˈsʰɛ(ː)mɛ] ~ [ˈsʰe̞(ː)me̞]", "ipa")

	def test_chammae_ph(self):
		self.run_test("참매", "{{ko-IPA}}", "참매/참메", "ph")
	def test_chammae_rr(self):
		self.run_test("참매", "{{ko-IPA}}", "chammae", "rr")
	def test_chammae_rrr(self):
		self.run_test("참매", "{{ko-IPA}}", "chammae", "rrr")
	def test_chammae_mr(self):
		self.run_test("참매", "{{ko-IPA}}", "ch'ammae", "mr")
	def test_chammae_yr(self):
		self.run_test("참매", "{{ko-IPA}}", "chammay", "yr")
	def test_chammae_ipa(self):
		self.run_test("참매", "{{ko-IPA}}", "[t͡ɕʰa̠mmɛ] ~ [t͡ɕʰa̠mme̞]", "ipa")

	def test_bulgeunbaesaemae_ph(self):
		self.run_test("붉은배새매", "{{ko-IPA}}", "불근배새매/불근베세메", "ph")
	def test_bulgeunbaesaemae_rr(self):
		self.run_test("붉은배새매", "{{ko-IPA}}", "bulgeunbaesaemae", "rr")
	def test_bulgeunbaesaemae_rrr(self):
		self.run_test("붉은배새매", "{{ko-IPA}}", "bulg'eunbaesaemae", "rrr")
	def test_bulgeunbaesaemae_mr(self):
		self.run_test("붉은배새매", "{{ko-IPA}}", "pulgŭnbaesaemae", "mr")
	def test_bulgeunbaesaemae_yr(self):
		self.run_test("붉은배새매", "{{ko-IPA}}", "pulk.unpaysaymay", "yr")
	def test_bulgeunbaesaemae_ipa(self):
		self.run_test("붉은배새매", "{{ko-IPA}}", "[puɭɡɯnbɛsʰɛmɛ] ~ [puɭɡɯnbe̞sʰe̞me̞]", "ipa")

	def test_wangsaemae_ph(self):
		self.run_test("왕새매", "{{ko-IPA}}", "왕새매/왕세메", "ph")
	def test_wangsaemae_rr(self):
		self.run_test("왕새매", "{{ko-IPA}}", "wangsaemae", "rr")
	def test_wangsaemae_rrr(self):
		self.run_test("왕새매", "{{ko-IPA}}", "wangsaemae", "rrr")
	def test_wangsaemae_mr(self):
		self.run_test("왕새매", "{{ko-IPA}}", "wangsaemae", "mr")
	def test_wangsaemae_yr(self):
		self.run_test("왕새매", "{{ko-IPA}}", "wangsaymay", "yr")
	def test_wangsaemae_ipa(self):
		self.run_test("왕새매", "{{ko-IPA}}", "[wa̠ŋsʰɛmɛ] ~ [wa̠ŋsʰe̞me̞]", "ipa")

	def test_malttonggari_ph(self):
		self.run_test("말똥가리", "{{ko-IPA}}", "말똥가리", "ph")
	def test_malttonggari_rr(self):
		self.run_test("말똥가리", "{{ko-IPA}}", "malttonggari", "rr")
	def test_malttonggari_rrr(self):
		self.run_test("말똥가리", "{{ko-IPA}}", "mal'ttonggali", "rrr")
	def test_malttonggari_mr(self):
		self.run_test("말똥가리", "{{ko-IPA}}", "malttonggari", "mr")
	def test_malttonggari_yr(self):
		self.run_test("말똥가리", "{{ko-IPA}}", "malttongkali", "yr")
	def test_malttonggari_ipa(self):
		self.run_test("말똥가리", "{{ko-IPA}}", "[ma̠ɭt͈o̞ŋɡa̠ɾi]", "ipa")

	def test_keunmalttonggari_ph(self):
		self.run_test("큰말똥가리", "{{ko-IPA}}", "큰말똥가리", "ph")
	def test_keunmalttonggari_rr(self):
		self.run_test("큰말똥가리", "{{ko-IPA}}", "keunmalttonggari", "rr")
	def test_keunmalttonggari_rrr(self):
		self.run_test("큰말똥가리", "{{ko-IPA}}", "keunmal'ttonggali", "rrr")
	def test_keunmalttonggari_mr(self):
		self.run_test("큰말똥가리", "{{ko-IPA}}", "k'ŭnmalttonggari", "mr")
	def test_keunmalttonggari_yr(self):
		self.run_test("큰말똥가리", "{{ko-IPA}}", "khunmalttongkali", "yr")
	def test_keunmalttonggari_ipa(self):
		self.run_test("큰말똥가리", "{{ko-IPA}}", "[kxɯnma̠ɭt͈o̞ŋɡa̠ɾi]", "ipa")

	def test_teolbalmalttonggari_ph(self):
		self.run_test("털발말똥가리", "{{ko-IPA}}", "털발말똥가리", "ph")
	def test_teolbalmalttonggari_rr(self):
		self.run_test("털발말똥가리", "{{ko-IPA}}", "teolbalmalttonggari", "rr")
	def test_teolbalmalttonggari_rrr(self):
		self.run_test("털발말똥가리", "{{ko-IPA}}", "teolbalmal'ttonggali", "rrr")
	def test_teolbalmalttonggari_mr(self):
		self.run_test("털발말똥가리", "{{ko-IPA}}", "t'ŏlbalmalttonggari", "mr")
	def test_teolbalmalttonggari_yr(self):
		self.run_test("털발말똥가리", "{{ko-IPA}}", "thel.pal.malttongkali", "yr")
	def test_teolbalmalttonggari_ipa(self):
		self.run_test("털발말똥가리", "{{ko-IPA}}", "[tʰʌ̹ɭba̠ɭma̠ɭt͈o̞ŋɡa̠ɾi]", "ipa")

	def test_hangnameorigeomdoksuri_ph(self):
		self.run_test("항라머리검독수리", "{{ko-IPA|l=y}}", "항(ː)나머리검독쑤리", "ph")
	def test_hangnameorigeomdoksuri_rr(self):
		self.run_test("항라머리검독수리", "{{ko-IPA|l=y}}", "hangnameorigeomdoksuri", "rr")
	def test_hangnameorigeomdoksuri_rrr(self):
		self.run_test("항라머리검독수리", "{{ko-IPA|l=y}}", "hanglameoligeomdogsuli", "rrr")
	def test_hangnameorigeomdoksuri_mr(self):
		self.run_test("항라머리검독수리", "{{ko-IPA|l=y}}", "hangnamŏrigŏmdoksuri", "mr")
	def test_hangnameorigeomdoksuri_yr(self):
		self.run_test("항라머리검독수리", "{{ko-IPA|l=y}}", "hānglamelikemtok.swuli", "yr")
	def test_hangnameorigeomdoksuri_ipa(self):
		self.run_test("항라머리검독수리", "{{ko-IPA|l=y}}", "[ˈha̠(ː)ŋna̠mʌ̹ɾiɡʌ̹mdo̞ks͈uɾi]", "ipa")

	def test_chowonsuri_ph(self):
		self.run_test("초원수리", "{{ko-IPA}}", "초원수리", "ph")
	def test_chowonsuri_rr(self):
		self.run_test("초원수리", "{{ko-IPA}}", "chowonsuri", "rr")
	def test_chowonsuri_rrr(self):
		self.run_test("초원수리", "{{ko-IPA}}", "chowonsuli", "rrr")
	def test_chowonsuri_mr(self):
		self.run_test("초원수리", "{{ko-IPA}}", "ch'owŏnsuri", "mr")
	def test_chowonsuri_yr(self):
		self.run_test("초원수리", "{{ko-IPA}}", "chowenswuli", "yr")
	def test_chowonsuri_ipa(self):
		self.run_test("초원수리", "{{ko-IPA}}", "[t͡ɕʰo̞wʌ̹nsʰuɾi]", "ipa")

	def test_huinjukjisuri_ph(self):
		self.run_test("흰죽지수리", "{{ko-IPA}}", "힌죽찌수리", "ph")
	def test_huinjukjisuri_rr(self):
		self.run_test("흰죽지수리", "{{ko-IPA}}", "huinjukjisuri", "rr")
	def test_huinjukjisuri_rrr(self):
		self.run_test("흰죽지수리", "{{ko-IPA}}", "huinjugjisuli", "rrr")
	def test_huinjukjisuri_mr(self):
		self.run_test("흰죽지수리", "{{ko-IPA}}", "hŭinjukchisuri", "mr")
	def test_huinjukjisuri_yr(self):
		self.run_test("흰죽지수리", "{{ko-IPA}}", "huyn.cwukciswuli", "yr")
	def test_huinjukjisuri_ipa(self):
		self.run_test("흰죽지수리", "{{ko-IPA}}", "[çiɲd͡ʑuk̚t͡ɕ͈isʰuɾi]", "ipa")

	def test_geomdoksuri_ph(self):
		self.run_test("검독수리", "{{ko-IPA}}", "검독쑤리", "ph")
	def test_geomdoksuri_rr(self):
		self.run_test("검독수리", "{{ko-IPA}}", "geomdoksuri", "rr")
	def test_geomdoksuri_rrr(self):
		self.run_test("검독수리", "{{ko-IPA}}", "geomdogsuli", "rrr")
	def test_geomdoksuri_mr(self):
		self.run_test("검독수리", "{{ko-IPA}}", "kŏmdoksuri", "mr")
	def test_geomdoksuri_yr(self):
		self.run_test("검독수리", "{{ko-IPA}}", "kemtok.swuli", "yr")
	def test_geomdoksuri_ipa(self):
		self.run_test("검독수리", "{{ko-IPA}}", "[kʌ̹mdo̞ks͈uɾi]", "ipa")

	def test_ppulmae_ph(self):
		self.run_test("뿔매", "{{ko-IPA}}", "뿔매/뿔메", "ph")
	def test_ppulmae_rr(self):
		self.run_test("뿔매", "{{ko-IPA}}", "ppulmae", "rr")
	def test_ppulmae_rrr(self):
		self.run_test("뿔매", "{{ko-IPA}}", "ppulmae", "rrr")
	def test_ppulmae_mr(self):
		self.run_test("뿔매", "{{ko-IPA}}", "ppulmae", "mr")
	def test_ppulmae_yr(self):
		self.run_test("뿔매", "{{ko-IPA}}", "ppul.may", "yr")
	def test_ppulmae_ipa(self):
		self.run_test("뿔매", "{{ko-IPA}}", "[p͈uɭmɛ] ~ [p͈uɭme̞]", "ipa")

	def test_gwansuri_ph(self):
		self.run_test("관수리", "{{ko-IPA}}", "관수리", "ph")
	def test_gwansuri_rr(self):
		self.run_test("관수리", "{{ko-IPA}}", "gwansuri", "rr")
	def test_gwansuri_rrr(self):
		self.run_test("관수리", "{{ko-IPA}}", "gwansuli", "rrr")
	def test_gwansuri_mr(self):
		self.run_test("관수리", "{{ko-IPA}}", "kwansuri", "mr")
	def test_gwansuri_yr(self):
		self.run_test("관수리", "{{ko-IPA}}", "kwanswuli", "yr")
	def test_gwansuri_ipa(self):
		self.run_test("관수리", "{{ko-IPA}}", "[kwa̠nsʰuɾi]", "ipa")

	def test_ureoreuda_ph(self):
		self.run_test("우러르다", "{{ko-IPA}}", "우러르다", "ph")
	def test_ureoreuda_rr(self):
		self.run_test("우러르다", "{{ko-IPA}}", "ureoreuda", "rr")
	def test_ureoreuda_rrr(self):
		self.run_test("우러르다", "{{ko-IPA}}", "uleoleuda", "rrr")
	def test_ureoreuda_mr(self):
		self.run_test("우러르다", "{{ko-IPA}}", "urŏrŭda", "mr")
	def test_ureoreuda_yr(self):
		self.run_test("우러르다", "{{ko-IPA}}", "wuleluta", "yr")
	def test_ureoreuda_ipa(self):
		self.run_test("우러르다", "{{ko-IPA}}", "[uɾʌ̹ɾɯda̠]", "ipa")

	def test_saeholligi_ph(self):
		self.run_test("새홀리기", "{{ko-IPA|l=y}}", "새(ː)홀리기/세(ː)홀리기", "ph")
	def test_saeholligi_rr(self):
		self.run_test("새홀리기", "{{ko-IPA|l=y}}", "saeholligi", "rr")
	def test_saeholligi_rrr(self):
		self.run_test("새홀리기", "{{ko-IPA|l=y}}", "saeholligi", "rrr")
	def test_saeholligi_mr(self):
		self.run_test("새홀리기", "{{ko-IPA|l=y}}", "saeholligi", "mr")
	def test_saeholligi_yr(self):
		self.run_test("새홀리기", "{{ko-IPA|l=y}}", "sāyholliki", "yr")
	def test_saeholligi_ipa(self):
		self.run_test("새홀리기", "{{ko-IPA|l=y}}", "[ˈsʰɛ(ː)βo̞ʎʎiɡi] ~ [ˈsʰe̞(ː)βo̞ʎʎiɡi]", "ipa")

	def test_hwangjorongi_ph(self):
		self.run_test("황조롱이", "{{ko-IPA}}", "황조롱이", "ph")
	def test_hwangjorongi_rr(self):
		self.run_test("황조롱이", "{{ko-IPA}}", "hwangjorong'i", "rr")
	def test_hwangjorongi_rrr(self):
		self.run_test("황조롱이", "{{ko-IPA}}", "hwangjolong'i", "rrr")
	def test_hwangjorongi_mr(self):
		self.run_test("황조롱이", "{{ko-IPA}}", "hwangjorongi", "mr")
	def test_hwangjorongi_yr(self):
		self.run_test("황조롱이", "{{ko-IPA}}", "hwangcolongi", "yr")
	def test_hwangjorongi_ipa(self):
		self.run_test("황조롱이", "{{ko-IPA}}", "[ɸwa̠ŋd͡ʑo̞ɾo̞ŋi]", "ipa")

	def test_soehwangjorongi_ph(self):
		self.run_test("쇠황조롱이", "{{ko-IPA}}", "쉐황조롱이/쇠황조롱이", "ph")
	def test_soehwangjorongi_rr(self):
		self.run_test("쇠황조롱이", "{{ko-IPA}}", "soehwangjorong'i", "rr")
	def test_soehwangjorongi_rrr(self):
		self.run_test("쇠황조롱이", "{{ko-IPA}}", "soehwangjolong'i", "rrr")
	def test_soehwangjorongi_mr(self):
		self.run_test("쇠황조롱이", "{{ko-IPA}}", "soehwangjorongi", "mr")
	def test_soehwangjorongi_yr(self):
		self.run_test("쇠황조롱이", "{{ko-IPA}}", "soyhwangcolongi", "yr")
	def test_soehwangjorongi_ipa(self):
		self.run_test("쇠황조롱이", "{{ko-IPA}}", "[sʰwe̞βwa̠ŋd͡ʑo̞ɾo̞ŋi] ~ [sʰø̞βwa̠ŋd͡ʑo̞ɾo̞ŋi]", "ipa")

	def test_segarangmechuragi_ph(self):
		self.run_test("세가락메추라기", "{{ko-IPA|l=y}}", "세(ː)가랑메추라기", "ph")
	def test_segarangmechuragi_rr(self):
		self.run_test("세가락메추라기", "{{ko-IPA|l=y}}", "segarangmechuragi", "rr")
	def test_segarangmechuragi_rrr(self):
		self.run_test("세가락메추라기", "{{ko-IPA|l=y}}", "segalagmechulagi", "rrr")
	def test_segarangmechuragi_mr(self):
		self.run_test("세가락메추라기", "{{ko-IPA|l=y}}", "segarangmech'uragi", "mr")
	def test_segarangmechuragi_yr(self):
		self.run_test("세가락메추라기", "{{ko-IPA|l=y}}", "sēykalakmey.chwulaki", "yr")
	def test_segarangmechuragi_ipa(self):
		self.run_test("세가락메추라기", "{{ko-IPA|l=y}}", "[ˈsʰe̞(ː)ɡa̠ɾa̠ŋme̞t͡ɕʰuɾa̠ɡi]", "ipa")

	def test_bidulgijorongi_ph(self):
		self.run_test("비둘기조롱이", "{{ko-IPA}}", "비둘기조롱이", "ph")
	def test_bidulgijorongi_rr(self):
		self.run_test("비둘기조롱이", "{{ko-IPA}}", "bidulgijorong'i", "rr")
	def test_bidulgijorongi_rrr(self):
		self.run_test("비둘기조롱이", "{{ko-IPA}}", "bidulgijolong'i", "rrr")
	def test_bidulgijorongi_mr(self):
		self.run_test("비둘기조롱이", "{{ko-IPA}}", "pidulgijorongi", "mr")
	def test_bidulgijorongi_yr(self):
		self.run_test("비둘기조롱이", "{{ko-IPA}}", "pitwul.kicolongi", "yr")
	def test_bidulgijorongi_ipa(self):
		self.run_test("비둘기조롱이", "{{ko-IPA}}", "[piduɭɡid͡ʑo̞ɾo̞ŋi]", "ipa")

	def test_se_ph(self):
		self.run_test("세", "{{ko-IPA|l=y}}", "세(ː)", "ph")
	def test_se_rr(self):
		self.run_test("세", "{{ko-IPA|l=y}}", "se", "rr")
	def test_se_rrr(self):
		self.run_test("세", "{{ko-IPA|l=y}}", "se", "rrr")
	def test_se_mr(self):
		self.run_test("세", "{{ko-IPA|l=y}}", "se", "mr")
	def test_se_yr(self):
		self.run_test("세", "{{ko-IPA|l=y}}", "sēy", "yr")
	def test_se_ipa(self):
		self.run_test("세", "{{ko-IPA|l=y}}", "[sʰe̞(ː)]", "ipa")
	def test_se_ph_1(self):
		self.run_test("세", "{{ko-IPA}}", "세", "ph")
	def test_se_rr_1(self):
		self.run_test("세", "{{ko-IPA}}", "se", "rr")
	def test_se_rrr_1(self):
		self.run_test("세", "{{ko-IPA}}", "se", "rrr")
	def test_se_mr_1(self):
		self.run_test("세", "{{ko-IPA}}", "se", "mr")
	def test_se_yr_1(self):
		self.run_test("세", "{{ko-IPA}}", "sey", "yr")
	def test_se_ipa_1(self):
		self.run_test("세", "{{ko-IPA}}", "[sʰe̞]", "ipa")

	def test_jongdari_ph(self):
		self.run_test("종다리", "{{ko-IPA}}", "종다리", "ph")
	def test_jongdari_rr(self):
		self.run_test("종다리", "{{ko-IPA}}", "jongdari", "rr")
	def test_jongdari_rrr(self):
		self.run_test("종다리", "{{ko-IPA}}", "jongdali", "rrr")
	def test_jongdari_mr(self):
		self.run_test("종다리", "{{ko-IPA}}", "chongdari", "mr")
	def test_jongdari_yr(self):
		self.run_test("종다리", "{{ko-IPA}}", "congtali", "yr")
	def test_jongdari_ipa(self):
		self.run_test("종다리", "{{ko-IPA}}", "[t͡ɕo̞ŋda̠ɾi]", "ipa")

	def test_nogojiri_ph(self):
		self.run_test("노고지리", "{{ko-IPA}}", "노고지리", "ph")
	def test_nogojiri_rr(self):
		self.run_test("노고지리", "{{ko-IPA}}", "nogojiri", "rr")
	def test_nogojiri_rrr(self):
		self.run_test("노고지리", "{{ko-IPA}}", "nogojili", "rrr")
	def test_nogojiri_mr(self):
		self.run_test("노고지리", "{{ko-IPA}}", "nogojiri", "mr")
	def test_nogojiri_yr(self):
		self.run_test("노고지리", "{{ko-IPA}}", "nokocili", "yr")
	def test_nogojiri_ipa(self):
		self.run_test("노고지리", "{{ko-IPA}}", "[no̞ɡo̞d͡ʑiɾi]", "ipa")

	def test_jongdalsae_ph(self):
		self.run_test("종달새", "{{ko-IPA}}", "종달새/종달세", "ph")
	def test_jongdalsae_rr(self):
		self.run_test("종달새", "{{ko-IPA}}", "jongdalsae", "rr")
	def test_jongdalsae_rrr(self):
		self.run_test("종달새", "{{ko-IPA}}", "jongdalsae", "rrr")
	def test_jongdalsae_mr(self):
		self.run_test("종달새", "{{ko-IPA}}", "chongdalsae", "mr")
	def test_jongdalsae_yr(self):
		self.run_test("종달새", "{{ko-IPA}}", "congtal.say", "yr")
	def test_jongdalsae_ipa(self):
		self.run_test("종달새", "{{ko-IPA}}", "[t͡ɕo̞ŋda̠ɭsʰɛ] ~ [t͡ɕo̞ŋda̠ɭsʰe̞]", "ipa")

	def test_dasi_ph(self):
		self.run_test("다시", "{{ko-IPA|a=Ko-다시.oga}}", "다시", "ph")
	def test_dasi_rr(self):
		self.run_test("다시", "{{ko-IPA|a=Ko-다시.oga}}", "dasi", "rr")
	def test_dasi_rrr(self):
		self.run_test("다시", "{{ko-IPA|a=Ko-다시.oga}}", "dasi", "rrr")
	def test_dasi_mr(self):
		self.run_test("다시", "{{ko-IPA|a=Ko-다시.oga}}", "tasi", "mr")
	def test_dasi_yr(self):
		self.run_test("다시", "{{ko-IPA|a=Ko-다시.oga}}", "tasi", "yr")
	def test_dasi_ipa(self):
		self.run_test("다시", "{{ko-IPA|a=Ko-다시.oga}}", "[ta̠ɕʰi]", "ipa")

	def test_jom_ph(self):
		self.run_test("좀", "{{ko-IPA|a=y}}", "좀", "ph")
	def test_jom_rr(self):
		self.run_test("좀", "{{ko-IPA|a=y}}", "jom", "rr")
	def test_jom_rrr(self):
		self.run_test("좀", "{{ko-IPA|a=y}}", "jom", "rrr")
	def test_jom_mr(self):
		self.run_test("좀", "{{ko-IPA|a=y}}", "chom", "mr")
	def test_jom_yr(self):
		self.run_test("좀", "{{ko-IPA|a=y}}", "com", "yr")
	def test_jom_ipa(self):
		self.run_test("좀", "{{ko-IPA|a=y}}", "[t͡ɕo̞m]", "ipa")

	def test_domabaem_ph(self):
		self.run_test("도마뱀", "{{ko-IPA}}", "도마뱀/도마벰", "ph")
	def test_domabaem_rr(self):
		self.run_test("도마뱀", "{{ko-IPA}}", "domabaem", "rr")
	def test_domabaem_rrr(self):
		self.run_test("도마뱀", "{{ko-IPA}}", "domabaem", "rrr")
	def test_domabaem_mr(self):
		self.run_test("도마뱀", "{{ko-IPA}}", "tomabaem", "mr")
	def test_domabaem_yr(self):
		self.run_test("도마뱀", "{{ko-IPA}}", "tomapaym", "yr")
	def test_domabaem_ipa(self):
		self.run_test("도마뱀", "{{ko-IPA}}", "[to̞ma̠bɛm] ~ [to̞ma̠be̞m]", "ipa")

	def test_molla_ph(self):
		self.run_test("몰라", "{{ko-IPA}}", "몰라", "ph")
	def test_molla_rr(self):
		self.run_test("몰라", "{{ko-IPA}}", "molla", "rr")
	def test_molla_rrr(self):
		self.run_test("몰라", "{{ko-IPA}}", "molla", "rrr")
	def test_molla_mr(self):
		self.run_test("몰라", "{{ko-IPA}}", "molla", "mr")
	def test_molla_yr(self):
		self.run_test("몰라", "{{ko-IPA}}", "molla", "yr")
	def test_molla_ipa(self):
		self.run_test("몰라", "{{ko-IPA}}", "[mo̞ɭɭa̠]", "ipa")

	def test_chineun_ph(self):
		self.run_test("치는", "{{ko-IPA}}", "치는", "ph")
	def test_chineun_rr(self):
		self.run_test("치는", "{{ko-IPA}}", "chineun", "rr")
	def test_chineun_rrr(self):
		self.run_test("치는", "{{ko-IPA}}", "chineun", "rrr")
	def test_chineun_mr(self):
		self.run_test("치는", "{{ko-IPA}}", "ch'inŭn", "mr")
	def test_chineun_yr(self):
		self.run_test("치는", "{{ko-IPA}}", "chinun", "yr")
	def test_chineun_ipa(self):
		self.run_test("치는", "{{ko-IPA}}", "[t͡ɕʰinɯn]", "ipa")

	def test_heukdurumi_ph(self):
		self.run_test("흑두루미", "{{ko-IPA}}", "흑뚜루미", "ph")
	def test_heukdurumi_rr(self):
		self.run_test("흑두루미", "{{ko-IPA}}", "heukdurumi", "rr")
	def test_heukdurumi_rrr(self):
		self.run_test("흑두루미", "{{ko-IPA}}", "heugdulumi", "rrr")
	def test_heukdurumi_mr(self):
		self.run_test("흑두루미", "{{ko-IPA}}", "hŭkturumi", "mr")
	def test_heukdurumi_yr(self):
		self.run_test("흑두루미", "{{ko-IPA}}", "huktwulwumi", "yr")
	def test_heukdurumi_ipa(self):
		self.run_test("흑두루미", "{{ko-IPA}}", "[xɯk̚t͈uɾumi]", "ipa")

	def test_jaedurumi_ph(self):
		self.run_test("재두루미", "{{ko-IPA}}", "재두루미/제두루미", "ph")
	def test_jaedurumi_rr(self):
		self.run_test("재두루미", "{{ko-IPA}}", "jaedurumi", "rr")
	def test_jaedurumi_rrr(self):
		self.run_test("재두루미", "{{ko-IPA}}", "jaedulumi", "rrr")
	def test_jaedurumi_mr(self):
		self.run_test("재두루미", "{{ko-IPA}}", "chaedurumi", "mr")
	def test_jaedurumi_yr(self):
		self.run_test("재두루미", "{{ko-IPA}}", "caytwulwumi", "yr")
	def test_jaedurumi_ipa(self):
		self.run_test("재두루미", "{{ko-IPA}}", "[t͡ɕɛduɾumi] ~ [t͡ɕe̞duɾumi]", "ipa")

	def test_soejaedurumi_ph(self):
		self.run_test("쇠재두루미", "{{ko-IPA}}", "쉐재두루미/쇠재두루미/쉐제두루미/쇠제두루미", "ph")
	def test_soejaedurumi_rr(self):
		self.run_test("쇠재두루미", "{{ko-IPA}}", "soejaedurumi", "rr")
	def test_soejaedurumi_rrr(self):
		self.run_test("쇠재두루미", "{{ko-IPA}}", "soejaedulumi", "rrr")
	def test_soejaedurumi_mr(self):
		self.run_test("쇠재두루미", "{{ko-IPA}}", "soejaedurumi", "mr")
	def test_soejaedurumi_yr(self):
		self.run_test("쇠재두루미", "{{ko-IPA}}", "soycaytwulwumi", "yr")
	def test_soejaedurumi_ipa(self):
		self.run_test("쇠재두루미", "{{ko-IPA}}", "[sʰwe̞d͡ʑɛduɾumi] ~ [sʰø̞d͡ʑɛduɾumi] ~ [sʰwe̞d͡ʑe̞duɾumi] ~ [sʰø̞d͡ʑe̞duɾumi]", "ipa")

	def test_mutaejangeo_ph(self):
		self.run_test("무태장어", "{{ko-IPA}}", "무태장어/무테장어", "ph")
	def test_mutaejangeo_rr(self):
		self.run_test("무태장어", "{{ko-IPA}}", "mutaejang'eo", "rr")
	def test_mutaejangeo_rrr(self):
		self.run_test("무태장어", "{{ko-IPA}}", "mutaejang'eo", "rrr")
	def test_mutaejangeo_mr(self):
		self.run_test("무태장어", "{{ko-IPA}}", "mut'aejangŏ", "mr")
	def test_mutaejangeo_yr(self):
		self.run_test("무태장어", "{{ko-IPA}}", "mu.thaycange", "yr")
	def test_mutaejangeo_ipa(self):
		self.run_test("무태장어", "{{ko-IPA}}", "[mutʰɛd͡ʑa̠ŋʌ̹] ~ [mutʰe̞d͡ʑa̠ŋʌ̹]", "ipa")

	def test_baemjangeo_ph(self):
		self.run_test("뱀장어", "{{ko-IPA|l=y}}", "뱀(ː)장어/벰(ː)장어", "ph")
	def test_baemjangeo_rr(self):
		self.run_test("뱀장어", "{{ko-IPA|l=y}}", "baemjang'eo", "rr")
	def test_baemjangeo_rrr(self):
		self.run_test("뱀장어", "{{ko-IPA|l=y}}", "baemjang'eo", "rrr")
	def test_baemjangeo_mr(self):
		self.run_test("뱀장어", "{{ko-IPA|l=y}}", "paemjangŏ", "mr")
	def test_baemjangeo_yr(self):
		self.run_test("뱀장어", "{{ko-IPA|l=y}}", "pāymcange", "yr")
	def test_baemjangeo_ipa(self):
		self.run_test("뱀장어", "{{ko-IPA|l=y}}", "[ˈpɛ(ː)md͡ʑa̠ŋʌ̹] ~ [ˈpe̞(ː)md͡ʑa̠ŋʌ̹]", "ipa")

	def test_yongsangeo_ph(self):
		self.run_test("용상어", "{{ko-IPA}}", "용상어", "ph")
	def test_yongsangeo_rr(self):
		self.run_test("용상어", "{{ko-IPA}}", "yongsang'eo", "rr")
	def test_yongsangeo_rrr(self):
		self.run_test("용상어", "{{ko-IPA}}", "yongsang'eo", "rrr")
	def test_yongsangeo_mr(self):
		self.run_test("용상어", "{{ko-IPA}}", "yongsangŏ", "mr")
	def test_yongsangeo_yr(self):
		self.run_test("용상어", "{{ko-IPA}}", "yongsange", "yr")
	def test_yongsangeo_ipa(self):
		self.run_test("용상어", "{{ko-IPA}}", "[joŋsʰa̠ŋʌ̹]", "ipa")

	def test_kalsangeo_ph(self):
		self.run_test("칼상어", "{{ko-IPA}}", "칼상어", "ph")
	def test_kalsangeo_rr(self):
		self.run_test("칼상어", "{{ko-IPA}}", "kalsang'eo", "rr")
	def test_kalsangeo_rrr(self):
		self.run_test("칼상어", "{{ko-IPA}}", "kalsang'eo", "rrr")
	def test_kalsangeo_mr(self):
		self.run_test("칼상어", "{{ko-IPA}}", "k'alsangŏ", "mr")
	def test_kalsangeo_yr(self):
		self.run_test("칼상어", "{{ko-IPA}}", "khal.sange", "yr")
	def test_kalsangeo_ipa(self):
		self.run_test("칼상어", "{{ko-IPA}}", "[kʰa̠ɭsʰa̠ŋʌ̹]", "ipa")

	def test_cheolgapsangeo_ph(self):
		self.run_test("철갑상어", "{{ko-IPA}}", "철갑쌍어", "ph")
	def test_cheolgapsangeo_rr(self):
		self.run_test("철갑상어", "{{ko-IPA}}", "cheolgapsang'eo", "rr")
	def test_cheolgapsangeo_rrr(self):
		self.run_test("철갑상어", "{{ko-IPA}}", "cheolgabsang'eo", "rrr")
	def test_cheolgapsangeo_mr(self):
		self.run_test("철갑상어", "{{ko-IPA}}", "ch'ŏlgapsangŏ", "mr")
	def test_cheolgapsangeo_yr(self):
		self.run_test("철갑상어", "{{ko-IPA}}", "chel.kap.sange", "yr")
	def test_cheolgapsangeo_ipa(self):
		self.run_test("철갑상어", "{{ko-IPA}}", "[t͡ɕʰʌ̹ɭɡa̠ps͈a̠ŋʌ̹]", "ipa")

	def test_chilseongmalbaekkop_ph(self):
		self.run_test("칠성말배꼽", "{{ko-IPA|com=1}}", "칠썽말배꼽/칠썽말베꼽", "ph")
	def test_chilseongmalbaekkop_rr(self):
		self.run_test("칠성말배꼽", "{{ko-IPA|com=1}}", "chilseongmalbaekkop", "rr")
	def test_chilseongmalbaekkop_rrr(self):
		self.run_test("칠성말배꼽", "{{ko-IPA|com=1}}", "chilseongmalbae'kkob", "rrr")
	def test_chilseongmalbaekkop_mr(self):
		self.run_test("칠성말배꼽", "{{ko-IPA|com=1}}", "ch'ilssŏngmalbaekkop", "mr")
	def test_chilseongmalbaekkop_yr(self):
		self.run_test("칠성말배꼽", "{{ko-IPA|com=1}}", "chilqsengmal.pay.kkop", "yr")
	def test_chilseongmalbaekkop_ipa(self):
		self.run_test("칠성말배꼽", "{{ko-IPA|com=1}}", "[t͡ɕʰiɭs͈ʌ̹ŋma̠ɭbɛk͈o̞p̚] ~ [t͡ɕʰiɭs͈ʌ̹ŋma̠ɭbe̞k͈o̞p̚]", "ipa")

	def test_damukjangeo_ph(self):
		self.run_test("다묵장어", "{{ko-IPA}}", "다묵짱어", "ph")
	def test_damukjangeo_rr(self):
		self.run_test("다묵장어", "{{ko-IPA}}", "damukjang'eo", "rr")
	def test_damukjangeo_rrr(self):
		self.run_test("다묵장어", "{{ko-IPA}}", "damugjang'eo", "rrr")
	def test_damukjangeo_mr(self):
		self.run_test("다묵장어", "{{ko-IPA}}", "tamukchangŏ", "mr")
	def test_damukjangeo_yr(self):
		self.run_test("다묵장어", "{{ko-IPA}}", "tamukcange", "yr")
	def test_damukjangeo_ipa(self):
		self.run_test("다묵장어", "{{ko-IPA}}", "[ta̠muk̚t͡ɕ͈a̠ŋʌ̹]", "ipa")

	def test_chilseongjangeo_ph(self):
		self.run_test("칠성장어", "{{ko-IPA|com=1}}", "칠썽장어", "ph")
	def test_chilseongjangeo_rr(self):
		self.run_test("칠성장어", "{{ko-IPA|com=1}}", "chilseongjang'eo", "rr")
	def test_chilseongjangeo_rrr(self):
		self.run_test("칠성장어", "{{ko-IPA|com=1}}", "chilseongjang'eo", "rrr")
	def test_chilseongjangeo_mr(self):
		self.run_test("칠성장어", "{{ko-IPA|com=1}}", "ch'ilssŏngjangŏ", "mr")
	def test_chilseongjangeo_yr(self):
		self.run_test("칠성장어", "{{ko-IPA|com=1}}", "chilqsengcange", "yr")
	def test_chilseongjangeo_ipa(self):
		self.run_test("칠성장어", "{{ko-IPA|com=1}}", "[t͡ɕʰiɭs͈ʌ̹ŋd͡ʑa̠ŋʌ̹]", "ipa")

	def test_ungeo_ph(self):
		self.run_test("웅어", "{{ko-IPA}}", "웅어", "ph")
	def test_ungeo_rr(self):
		self.run_test("웅어", "{{ko-IPA}}", "ung'eo", "rr")
	def test_ungeo_rrr(self):
		self.run_test("웅어", "{{ko-IPA}}", "ung'eo", "rrr")
	def test_ungeo_mr(self):
		self.run_test("웅어", "{{ko-IPA}}", "ungŏ", "mr")
	def test_ungeo_yr(self):
		self.run_test("웅어", "{{ko-IPA}}", "wunge", "yr")
	def test_ungeo_ipa(self):
		self.run_test("웅어", "{{ko-IPA}}", "[uŋʌ̹]", "ipa")

	def test_bujeong_ph(self):
		self.run_test("부정", "{{ko-ipa}}", "부정", "ph")
	def test_bujeong_rr(self):
		self.run_test("부정", "{{ko-ipa}}", "bujeong", "rr")
	def test_bujeong_rrr(self):
		self.run_test("부정", "{{ko-ipa}}", "bujeong", "rrr")
	def test_bujeong_mr(self):
		self.run_test("부정", "{{ko-ipa}}", "pujŏng", "mr")
	def test_bujeong_yr(self):
		self.run_test("부정", "{{ko-ipa}}", "puceng", "yr")
	def test_bujeong_ipa(self):
		self.run_test("부정", "{{ko-ipa}}", "[pud͡ʑʌ̹ŋ]", "ipa")
	def test_bujeong_ph_1(self):
		self.run_test("부정", "{{ko-ipa}}", "부정", "ph")
	def test_bujeong_rr_1(self):
		self.run_test("부정", "{{ko-ipa}}", "bujeong", "rr")
	def test_bujeong_rrr_1(self):
		self.run_test("부정", "{{ko-ipa}}", "bujeong", "rrr")
	def test_bujeong_mr_1(self):
		self.run_test("부정", "{{ko-ipa}}", "pujŏng", "mr")
	def test_bujeong_yr_1(self):
		self.run_test("부정", "{{ko-ipa}}", "puceng", "yr")
	def test_bujeong_ipa_1(self):
		self.run_test("부정", "{{ko-ipa}}", "[pud͡ʑʌ̹ŋ]", "ipa")
	def test_bujeong_ph_2(self):
		self.run_test("부정", "{{ko-ipa}}", "부정", "ph")
	def test_bujeong_rr_2(self):
		self.run_test("부정", "{{ko-ipa}}", "bujeong", "rr")
	def test_bujeong_rrr_2(self):
		self.run_test("부정", "{{ko-ipa}}", "bujeong", "rrr")
	def test_bujeong_mr_2(self):
		self.run_test("부정", "{{ko-ipa}}", "pujŏng", "mr")
	def test_bujeong_yr_2(self):
		self.run_test("부정", "{{ko-ipa}}", "puceng", "yr")
	def test_bujeong_ipa_2(self):
		self.run_test("부정", "{{ko-ipa}}", "[pud͡ʑʌ̹ŋ]", "ipa")
	def test_bujeong_ph_3(self):
		self.run_test("부정", "{{ko-ipa|l=y}}", "부(ː)정", "ph")
	def test_bujeong_rr_3(self):
		self.run_test("부정", "{{ko-ipa|l=y}}", "bujeong", "rr")
	def test_bujeong_rrr_3(self):
		self.run_test("부정", "{{ko-ipa|l=y}}", "bujeong", "rrr")
	def test_bujeong_mr_3(self):
		self.run_test("부정", "{{ko-ipa|l=y}}", "pujŏng", "mr")
	def test_bujeong_yr_3(self):
		self.run_test("부정", "{{ko-ipa|l=y}}", "pūceng", "yr")
	def test_bujeong_ipa_3(self):
		self.run_test("부정", "{{ko-ipa|l=y}}", "[ˈpu(ː)d͡ʑʌ̹ŋ]", "ipa")

	def test_imi_ph(self):
		self.run_test("이미", "{{ko-ipa|l=y|a=y}}", "이(ː)미", "ph")
	def test_imi_rr(self):
		self.run_test("이미", "{{ko-ipa|l=y|a=y}}", "imi", "rr")
	def test_imi_rrr(self):
		self.run_test("이미", "{{ko-ipa|l=y|a=y}}", "imi", "rrr")
	def test_imi_mr(self):
		self.run_test("이미", "{{ko-ipa|l=y|a=y}}", "imi", "mr")
	def test_imi_yr(self):
		self.run_test("이미", "{{ko-ipa|l=y|a=y}}", "īmi", "yr")
	def test_imi_ipa(self):
		self.run_test("이미", "{{ko-ipa|l=y|a=y}}", "[ˈi(ː)mi]", "ipa")

	def test_singeo_ph(self):
		self.run_test("싱어", "{{ko-IPA}}", "싱어", "ph")
	def test_singeo_rr(self):
		self.run_test("싱어", "{{ko-IPA}}", "sing'eo", "rr")
	def test_singeo_rrr(self):
		self.run_test("싱어", "{{ko-IPA}}", "sing'eo", "rrr")
	def test_singeo_mr(self):
		self.run_test("싱어", "{{ko-IPA}}", "singŏ", "mr")
	def test_singeo_yr(self):
		self.run_test("싱어", "{{ko-IPA}}", "singe", "yr")
	def test_singeo_ipa(self):
		self.run_test("싱어", "{{ko-IPA}}", "[ɕʰiŋʌ̹]", "ipa")
	def test_singeo_ph_1(self):
		self.run_test("싱어", "{{ko-IPA|com=0}}", "씽어", "ph")
	def test_singeo_rr_1(self):
		self.run_test("싱어", "{{ko-IPA|com=0}}", "sing'eo", "rr")
	def test_singeo_rrr_1(self):
		self.run_test("싱어", "{{ko-IPA|com=0}}", "sing'eo", "rrr")
	def test_singeo_mr_1(self):
		self.run_test("싱어", "{{ko-IPA|com=0}}", "ssingŏ", "mr")
	def test_singeo_yr_1(self):
		self.run_test("싱어", "{{ko-IPA|com=0}}", "qsinge", "yr")
	def test_singeo_ipa_1(self):
		self.run_test("싱어", "{{ko-IPA|com=0}}", "[ɕ͈iŋʌ̹]", "ipa")

	def test_jeoneo_ph(self):
		self.run_test("전어", "{{ko-IPA|l=y}}", "저(ː)너", "ph")
	def test_jeoneo_rr(self):
		self.run_test("전어", "{{ko-IPA|l=y}}", "jeoneo", "rr")
	def test_jeoneo_rrr(self):
		self.run_test("전어", "{{ko-IPA|l=y}}", "jeon'eo", "rrr")
	def test_jeoneo_mr(self):
		self.run_test("전어", "{{ko-IPA|l=y}}", "chŏnŏ", "mr")
	def test_jeoneo_yr(self):
		self.run_test("전어", "{{ko-IPA|l=y}}", "cēn.e", "yr")
	def test_jeoneo_ipa(self):
		self.run_test("전어", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)nʌ̹]", "ipa")

	def test_baendaengi_ph(self):
		self.run_test("밴댕이", "{{ko-IPA}}", "밴댕이/벤뎅이", "ph")
	def test_baendaengi_rr(self):
		self.run_test("밴댕이", "{{ko-IPA}}", "baendaeng'i", "rr")
	def test_baendaengi_rrr(self):
		self.run_test("밴댕이", "{{ko-IPA}}", "baendaeng'i", "rrr")
	def test_baendaengi_mr(self):
		self.run_test("밴댕이", "{{ko-IPA}}", "paendaengi", "mr")
	def test_baendaengi_yr(self):
		self.run_test("밴댕이", "{{ko-IPA}}", "payntayngi", "yr")
	def test_baendaengi_ipa(self):
		self.run_test("밴댕이", "{{ko-IPA}}", "[pɛndɛŋi] ~ [pe̞nde̞ŋi]", "ipa")

	def test_bungeo_ph(self):
		self.run_test("붕어", "{{ko-IPA|l=y}}", "붕(ː)어", "ph")
	def test_bungeo_rr(self):
		self.run_test("붕어", "{{ko-IPA|l=y}}", "bung'eo", "rr")
	def test_bungeo_rrr(self):
		self.run_test("붕어", "{{ko-IPA|l=y}}", "bung'eo", "rrr")
	def test_bungeo_mr(self):
		self.run_test("붕어", "{{ko-IPA|l=y}}", "pungŏ", "mr")
	def test_bungeo_yr(self):
		self.run_test("붕어", "{{ko-IPA|l=y}}", "pūnge", "yr")
	def test_bungeo_ipa(self):
		self.run_test("붕어", "{{ko-IPA|l=y}}", "[ˈpu(ː)ŋʌ̹]", "ipa")

	def test_moraemuji_ph(self):
		self.run_test("모래무지", "{{ko-IPA}}", "모래무지/모레무지", "ph")
	def test_moraemuji_rr(self):
		self.run_test("모래무지", "{{ko-IPA}}", "moraemuji", "rr")
	def test_moraemuji_rrr(self):
		self.run_test("모래무지", "{{ko-IPA}}", "molaemuji", "rrr")
	def test_moraemuji_mr(self):
		self.run_test("모래무지", "{{ko-IPA}}", "moraemuji", "mr")
	def test_moraemuji_yr(self):
		self.run_test("모래무지", "{{ko-IPA}}", "molaymuci", "yr")
	def test_moraemuji_ipa(self):
		self.run_test("모래무지", "{{ko-IPA}}", "[mo̞ɾɛmud͡ʑi] ~ [mo̞ɾe̞mud͡ʑi]", "ipa")

	def test_huinjullapjulgae_ph(self):
		self.run_test("흰줄납줄개", "{{ko-IPA}}", "힌줄랍쭐개/힌줄랍쭐게", "ph")
	def test_huinjullapjulgae_rr(self):
		self.run_test("흰줄납줄개", "{{ko-IPA}}", "huinjullapjulgae", "rr")
	def test_huinjullapjulgae_rrr(self):
		self.run_test("흰줄납줄개", "{{ko-IPA}}", "huinjulnabjulgae", "rrr")
	def test_huinjullapjulgae_mr(self):
		self.run_test("흰줄납줄개", "{{ko-IPA}}", "hŭinjullapchulgae", "mr")
	def test_huinjullapjulgae_yr(self):
		self.run_test("흰줄납줄개", "{{ko-IPA}}", "huyn.cwulnapcwul.kay", "yr")
	def test_huinjullapjulgae_ipa(self):
		self.run_test("흰줄납줄개", "{{ko-IPA}}", "[çiɲd͡ʑuɭɭa̠p̚t͡ɕ͈uɭɡɛ] ~ [çiɲd͡ʑuɭɭa̠p̚t͡ɕ͈uɭɡe̞]", "ipa")

	def test_badanmulgogi_ph(self):
		self.run_test("바닷물고기", "{{ko-IPA|com=3}}", "바단물꼬기", "ph")
	def test_badanmulgogi_rr(self):
		self.run_test("바닷물고기", "{{ko-IPA|com=3}}", "badanmulgogi", "rr")
	def test_badanmulgogi_rrr(self):
		self.run_test("바닷물고기", "{{ko-IPA|com=3}}", "badasmulgogi", "rrr")
	def test_badanmulgogi_mr(self):
		self.run_test("바닷물고기", "{{ko-IPA|com=3}}", "padanmulkogi", "mr")
	def test_badanmulgogi_yr(self):
		self.run_test("바닷물고기", "{{ko-IPA|com=3}}", "patasmulqkoki", "yr")
	def test_badanmulgogi_ipa(self):
		self.run_test("바닷물고기", "{{ko-IPA|com=3}}", "[pa̠da̠nmuɭk͈o̞ɡi]", "ipa")

	def test_eoreumchi_ph(self):
		self.run_test("어름치", "{{ko-IPA}}", "어름치", "ph")
	def test_eoreumchi_rr(self):
		self.run_test("어름치", "{{ko-IPA}}", "eoreumchi", "rr")
	def test_eoreumchi_rrr(self):
		self.run_test("어름치", "{{ko-IPA}}", "eoleumchi", "rrr")
	def test_eoreumchi_mr(self):
		self.run_test("어름치", "{{ko-IPA}}", "ŏrŭmch'i", "mr")
	def test_eoreumchi_yr(self):
		self.run_test("어름치", "{{ko-IPA}}", "elumchi", "yr")
	def test_eoreumchi_ipa(self):
		self.run_test("어름치", "{{ko-IPA}}", "[ʌ̹ɾɯmt͡ɕʰi]", "ipa")

	def test_imsillapjaru_ph(self):
		self.run_test("임실납자루", "{{ko-IPA}}", "임실랍짜루", "ph")
	def test_imsillapjaru_rr(self):
		self.run_test("임실납자루", "{{ko-IPA}}", "imsillapjaru", "rr")
	def test_imsillapjaru_rrr(self):
		self.run_test("임실납자루", "{{ko-IPA}}", "imsilnabjalu", "rrr")
	def test_imsillapjaru_mr(self):
		self.run_test("임실납자루", "{{ko-IPA}}", "imsillapcharu", "mr")
	def test_imsillapjaru_yr(self):
		self.run_test("임실납자루", "{{ko-IPA}}", "imsilnapcalwu", "yr")
	def test_imsillapjaru_ipa(self):
		self.run_test("임실납자루", "{{ko-IPA}}", "[imɕʰiɭɭa̠p̚t͡ɕ͈a̠ɾu]", "ipa")

	def test_kallapjaru_ph(self):
		self.run_test("칼납자루", "{{ko-IPA}}", "칼랍짜루", "ph")
	def test_kallapjaru_rr(self):
		self.run_test("칼납자루", "{{ko-IPA}}", "kallapjaru", "rr")
	def test_kallapjaru_rrr(self):
		self.run_test("칼납자루", "{{ko-IPA}}", "kalnabjalu", "rrr")
	def test_kallapjaru_mr(self):
		self.run_test("칼납자루", "{{ko-IPA}}", "k'allapcharu", "mr")
	def test_kallapjaru_yr(self):
		self.run_test("칼납자루", "{{ko-IPA}}", "khalnapcalwu", "yr")
	def test_kallapjaru_ipa(self):
		self.run_test("칼납자루", "{{ko-IPA}}", "[kʰa̠ɭɭa̠p̚t͡ɕ͈a̠ɾu]", "ipa")

	def test_mungnapjaru_ph(self):
		self.run_test("묵납자루", "{{ko-IPA}}", "뭉납짜루", "ph")
	def test_mungnapjaru_rr(self):
		self.run_test("묵납자루", "{{ko-IPA}}", "mungnapjaru", "rr")
	def test_mungnapjaru_rrr(self):
		self.run_test("묵납자루", "{{ko-IPA}}", "mugnabjalu", "rrr")
	def test_mungnapjaru_mr(self):
		self.run_test("묵납자루", "{{ko-IPA}}", "mungnapcharu", "mr")
	def test_mungnapjaru_yr(self):
		self.run_test("묵납자루", "{{ko-IPA}}", "muknapcalwu", "yr")
	def test_mungnapjaru_ipa(self):
		self.run_test("묵납자루", "{{ko-IPA}}", "[muŋna̠p̚t͡ɕ͈a̠ɾu]", "ipa")

	def test_keunjullapjaru_ph(self):
		self.run_test("큰줄납자루", "{{ko-IPA}}", "큰줄랍짜루", "ph")
	def test_keunjullapjaru_rr(self):
		self.run_test("큰줄납자루", "{{ko-IPA}}", "keunjullapjaru", "rr")
	def test_keunjullapjaru_rrr(self):
		self.run_test("큰줄납자루", "{{ko-IPA}}", "keunjulnabjalu", "rrr")
	def test_keunjullapjaru_mr(self):
		self.run_test("큰줄납자루", "{{ko-IPA}}", "k'ŭnjullapcharu", "mr")
	def test_keunjullapjaru_yr(self):
		self.run_test("큰줄납자루", "{{ko-IPA}}", "khun.cwulnapcalwu", "yr")
	def test_keunjullapjaru_ipa(self):
		self.run_test("큰줄납자루", "{{ko-IPA}}", "[kxɯɲd͡ʑuɭɭa̠p̚t͡ɕ͈a̠ɾu]", "ipa")

	def test_keunnapjiri_ph(self):
		self.run_test("큰납지리", "{{ko-IPA}}", "큰납찌리", "ph")
	def test_keunnapjiri_rr(self):
		self.run_test("큰납지리", "{{ko-IPA}}", "keunnapjiri", "rr")
	def test_keunnapjiri_rrr(self):
		self.run_test("큰납지리", "{{ko-IPA}}", "keunnabjili", "rrr")
	def test_keunnapjiri_mr(self):
		self.run_test("큰납지리", "{{ko-IPA}}", "k'ŭnnapchiri", "mr")
	def test_keunnapjiri_yr(self):
		self.run_test("큰납지리", "{{ko-IPA}}", "khunnapcili", "yr")
	def test_keunnapjiri_ipa(self):
		self.run_test("큰납지리", "{{ko-IPA}}", "[kxɯnna̠p̚t͡ɕ͈iɾi]", "ipa")

	def test_jullapjaru_ph(self):
		self.run_test("줄납자루", "{{ko-IPA}}", "줄랍짜루", "ph")
	def test_jullapjaru_rr(self):
		self.run_test("줄납자루", "{{ko-IPA}}", "jullapjaru", "rr")
	def test_jullapjaru_rrr(self):
		self.run_test("줄납자루", "{{ko-IPA}}", "julnabjalu", "rrr")
	def test_jullapjaru_mr(self):
		self.run_test("줄납자루", "{{ko-IPA}}", "chullapcharu", "mr")
	def test_jullapjaru_yr(self):
		self.run_test("줄납자루", "{{ko-IPA}}", "cwulnapcalwu", "yr")
	def test_jullapjaru_ipa(self):
		self.run_test("줄납자루", "{{ko-IPA}}", "[t͡ɕuɭɭa̠p̚t͡ɕ͈a̠ɾu]", "ipa")

	def test_gasinapjiri_ph(self):
		self.run_test("가시납지리", "{{ko-IPA}}", "가시납찌리", "ph")
	def test_gasinapjiri_rr(self):
		self.run_test("가시납지리", "{{ko-IPA}}", "gasinapjiri", "rr")
	def test_gasinapjiri_rrr(self):
		self.run_test("가시납지리", "{{ko-IPA}}", "gasinabjili", "rrr")
	def test_gasinapjiri_mr(self):
		self.run_test("가시납지리", "{{ko-IPA}}", "kasinapchiri", "mr")
	def test_gasinapjiri_yr(self):
		self.run_test("가시납지리", "{{ko-IPA}}", "kasinapcili", "yr")
	def test_gasinapjiri_ipa(self):
		self.run_test("가시납지리", "{{ko-IPA}}", "[ka̠ɕʰina̠p̚t͡ɕ͈iɾi]", "ipa")

	def test_dolgogi_ph(self):
		self.run_test("돌고기", "{{ko-IPA}}", "돌고기", "ph")
	def test_dolgogi_rr(self):
		self.run_test("돌고기", "{{ko-IPA}}", "dolgogi", "rr")
	def test_dolgogi_rrr(self):
		self.run_test("돌고기", "{{ko-IPA}}", "dolgogi", "rrr")
	def test_dolgogi_mr(self):
		self.run_test("돌고기", "{{ko-IPA}}", "tolgogi", "mr")
	def test_dolgogi_yr(self):
		self.run_test("돌고기", "{{ko-IPA}}", "tol.koki", "yr")
	def test_dolgogi_ipa(self):
		self.run_test("돌고기", "{{ko-IPA}}", "[to̞ɭɡo̞ɡi]", "ipa")

	def test_gamdolgogi_ph(self):
		self.run_test("감돌고기", "{{ko-IPA}}", "감돌고기", "ph")
	def test_gamdolgogi_rr(self):
		self.run_test("감돌고기", "{{ko-IPA}}", "gamdolgogi", "rr")
	def test_gamdolgogi_rrr(self):
		self.run_test("감돌고기", "{{ko-IPA}}", "gamdolgogi", "rrr")
	def test_gamdolgogi_mr(self):
		self.run_test("감돌고기", "{{ko-IPA}}", "kamdolgogi", "mr")
	def test_gamdolgogi_yr(self):
		self.run_test("감돌고기", "{{ko-IPA}}", "kamtol.koki", "yr")
	def test_gamdolgogi_ipa(self):
		self.run_test("감돌고기", "{{ko-IPA}}", "[ka̠mdo̞ɭɡo̞ɡi]", "ipa")

	def test_ganeundolgogi_ph(self):
		self.run_test("가는돌고기", "{{ko-IPA}}", "가는돌고기", "ph")
	def test_ganeundolgogi_rr(self):
		self.run_test("가는돌고기", "{{ko-IPA}}", "ganeundolgogi", "rr")
	def test_ganeundolgogi_rrr(self):
		self.run_test("가는돌고기", "{{ko-IPA}}", "ganeundolgogi", "rrr")
	def test_ganeundolgogi_mr(self):
		self.run_test("가는돌고기", "{{ko-IPA}}", "kanŭndolgogi", "mr")
	def test_ganeundolgogi_yr(self):
		self.run_test("가는돌고기", "{{ko-IPA}}", "kanuntol.koki", "yr")
	def test_ganeundolgogi_ipa(self):
		self.run_test("가는돌고기", "{{ko-IPA}}", "[ka̠nɯndo̞ɭɡo̞ɡi]", "ipa")

	def test_swiri_ph(self):
		self.run_test("쉬리", "{{ko-IPA}}", "쉬리", "ph")
	def test_swiri_rr(self):
		self.run_test("쉬리", "{{ko-IPA}}", "swiri", "rr")
	def test_swiri_rrr(self):
		self.run_test("쉬리", "{{ko-IPA}}", "swili", "rrr")
	def test_swiri_mr(self):
		self.run_test("쉬리", "{{ko-IPA}}", "shwiri", "mr")
	def test_swiri_yr(self):
		self.run_test("쉬리", "{{ko-IPA}}", "swili", "yr")
	def test_swiri_ipa(self):
		self.run_test("쉬리", "{{ko-IPA}}", "[ʃʰɥiɾi] ~ [ʃʰyɾi]", "ipa")
	def test_swiri_ph_1(self):
		self.run_test("쉬리", "{{ko-IPA|l=y}}", "쉬(ː)리", "ph")
	def test_swiri_rr_1(self):
		self.run_test("쉬리", "{{ko-IPA|l=y}}", "swiri", "rr")
	def test_swiri_rrr_1(self):
		self.run_test("쉬리", "{{ko-IPA|l=y}}", "swili", "rrr")
	def test_swiri_mr_1(self):
		self.run_test("쉬리", "{{ko-IPA|l=y}}", "shwiri", "mr")
	def test_swiri_yr_1(self):
		self.run_test("쉬리", "{{ko-IPA|l=y}}", "swīli", "yr")
	def test_swiri_ipa_1(self):
		self.run_test("쉬리", "{{ko-IPA|l=y}}", "[ˈʃʰɥi(ː)ɾi] ~ [ˈʃʰy(ː)ɾi]", "ipa")

	def test_saemi_ph(self):
		self.run_test("새미", "{{ko-IPA}}", "새미/세미", "ph")
	def test_saemi_rr(self):
		self.run_test("새미", "{{ko-IPA}}", "saemi", "rr")
	def test_saemi_rrr(self):
		self.run_test("새미", "{{ko-IPA}}", "saemi", "rrr")
	def test_saemi_mr(self):
		self.run_test("새미", "{{ko-IPA}}", "saemi", "mr")
	def test_saemi_yr(self):
		self.run_test("새미", "{{ko-IPA}}", "saymi", "yr")
	def test_saemi_ipa(self):
		self.run_test("새미", "{{ko-IPA}}", "[sʰɛmi] ~ [sʰe̞mi]", "ipa")

	def test_junggogi_ph(self):
		self.run_test("중고기", "{{ko-IPA|l=y}}", "중(ː)고기", "ph")
	def test_junggogi_rr(self):
		self.run_test("중고기", "{{ko-IPA|l=y}}", "junggogi", "rr")
	def test_junggogi_rrr(self):
		self.run_test("중고기", "{{ko-IPA|l=y}}", "junggogi", "rrr")
	def test_junggogi_mr(self):
		self.run_test("중고기", "{{ko-IPA|l=y}}", "chunggogi", "mr")
	def test_junggogi_yr(self):
		self.run_test("중고기", "{{ko-IPA|l=y}}", "cwūngkoki", "yr")
	def test_junggogi_ipa(self):
		self.run_test("중고기", "{{ko-IPA|l=y}}", "[ˈt͡ɕu(ː)ŋɡo̞ɡi]", "ipa")

	def test_julmolgae_ph(self):
		self.run_test("줄몰개", "{{ko-IPA}}", "줄몰개/줄몰게", "ph")
	def test_julmolgae_rr(self):
		self.run_test("줄몰개", "{{ko-IPA}}", "julmolgae", "rr")
	def test_julmolgae_rrr(self):
		self.run_test("줄몰개", "{{ko-IPA}}", "julmolgae", "rrr")
	def test_julmolgae_mr(self):
		self.run_test("줄몰개", "{{ko-IPA}}", "chulmolgae", "mr")
	def test_julmolgae_yr(self):
		self.run_test("줄몰개", "{{ko-IPA}}", "cwul.mol.kay", "yr")
	def test_julmolgae_ipa(self):
		self.run_test("줄몰개", "{{ko-IPA}}", "[t͡ɕuɭmo̞ɭɡɛ] ~ [t͡ɕuɭmo̞ɭɡe̞]", "ipa")

	def test_ginmolgae_ph(self):
		self.run_test("긴몰개", "{{ko-IPA|l=y}}", "긴(ː)몰개/긴(ː)몰게", "ph")
	def test_ginmolgae_rr(self):
		self.run_test("긴몰개", "{{ko-IPA|l=y}}", "ginmolgae", "rr")
	def test_ginmolgae_rrr(self):
		self.run_test("긴몰개", "{{ko-IPA|l=y}}", "ginmolgae", "rrr")
	def test_ginmolgae_mr(self):
		self.run_test("긴몰개", "{{ko-IPA|l=y}}", "kinmolgae", "mr")
	def test_ginmolgae_yr(self):
		self.run_test("긴몰개", "{{ko-IPA|l=y}}", "kīnmol.kay", "yr")
	def test_ginmolgae_ipa(self):
		self.run_test("긴몰개", "{{ko-IPA|l=y}}", "[ˈki(ː)nmo̞ɭɡɛ] ~ [ˈki(ː)nmo̞ɭɡe̞]", "ipa")

	def test_molgae_ph(self):
		self.run_test("몰개", "{{ko-IPA}}", "몰개/몰게", "ph")
	def test_molgae_rr(self):
		self.run_test("몰개", "{{ko-IPA}}", "molgae", "rr")
	def test_molgae_rrr(self):
		self.run_test("몰개", "{{ko-IPA}}", "molgae", "rrr")
	def test_molgae_mr(self):
		self.run_test("몰개", "{{ko-IPA}}", "molgae", "mr")
	def test_molgae_yr(self):
		self.run_test("몰개", "{{ko-IPA}}", "mol.kay", "yr")
	def test_molgae_ipa(self):
		self.run_test("몰개", "{{ko-IPA}}", "[mo̞ɭɡɛ] ~ [mo̞ɭɡe̞]", "ipa")

	def test_chammolgae_ph(self):
		self.run_test("참몰개", "{{ko-IPA}}", "참몰개/참몰게", "ph")
	def test_chammolgae_rr(self):
		self.run_test("참몰개", "{{ko-IPA}}", "chammolgae", "rr")
	def test_chammolgae_rrr(self):
		self.run_test("참몰개", "{{ko-IPA}}", "chammolgae", "rrr")
	def test_chammolgae_mr(self):
		self.run_test("참몰개", "{{ko-IPA}}", "ch'ammolgae", "mr")
	def test_chammolgae_yr(self):
		self.run_test("참몰개", "{{ko-IPA}}", "chammol.kay", "yr")
	def test_chammolgae_ipa(self):
		self.run_test("참몰개", "{{ko-IPA}}", "[t͡ɕʰa̠mmo̞ɭɡɛ] ~ [t͡ɕʰa̠mmo̞ɭɡe̞]", "ipa")

	def test_jeommolgae_ph(self):
		self.run_test("점몰개", "{{ko-IPA}}", "점몰개/점몰게", "ph")
	def test_jeommolgae_rr(self):
		self.run_test("점몰개", "{{ko-IPA}}", "jeommolgae", "rr")
	def test_jeommolgae_rrr(self):
		self.run_test("점몰개", "{{ko-IPA}}", "jeommolgae", "rrr")
	def test_jeommolgae_mr(self):
		self.run_test("점몰개", "{{ko-IPA}}", "chŏmmolgae", "mr")
	def test_jeommolgae_yr(self):
		self.run_test("점몰개", "{{ko-IPA}}", "cemmol.kay", "yr")
	def test_jeommolgae_ipa(self):
		self.run_test("점몰개", "{{ko-IPA}}", "[t͡ɕʌ̹mmo̞ɭɡɛ] ~ [t͡ɕʌ̹mmo̞ɭɡe̞]", "ipa")

	def test_nuchi_ph(self):
		self.run_test("누치", "{{ko-IPA}}", "누치", "ph")
	def test_nuchi_rr(self):
		self.run_test("누치", "{{ko-IPA}}", "nuchi", "rr")
	def test_nuchi_rrr(self):
		self.run_test("누치", "{{ko-IPA}}", "nuchi", "rrr")
	def test_nuchi_mr(self):
		self.run_test("누치", "{{ko-IPA}}", "nuch'i", "mr")
	def test_nuchi_yr(self):
		self.run_test("누치", "{{ko-IPA}}", "nwu.chi", "yr")
	def test_nuchi_ipa(self):
		self.run_test("누치", "{{ko-IPA}}", "[nut͡ɕʰi]", "ipa")

	def test_chammaja_ph(self):
		self.run_test("참마자", "{{ko-IPA}}", "참마자", "ph")
	def test_chammaja_rr(self):
		self.run_test("참마자", "{{ko-IPA}}", "chammaja", "rr")
	def test_chammaja_rrr(self):
		self.run_test("참마자", "{{ko-IPA}}", "chammaja", "rrr")
	def test_chammaja_mr(self):
		self.run_test("참마자", "{{ko-IPA}}", "ch'ammaja", "mr")
	def test_chammaja_yr(self):
		self.run_test("참마자", "{{ko-IPA}}", "chammaca", "yr")
	def test_chammaja_ipa(self):
		self.run_test("참마자", "{{ko-IPA}}", "[t͡ɕʰa̠mma̠d͡ʑa̠]", "ipa")

	def test_tteongnapjulgaengi_ph(self):
		self.run_test("떡납줄갱이", "{{ko-IPA}}", "떵납쭐갱이/떵납쭐겡이", "ph")
	def test_tteongnapjulgaengi_rr(self):
		self.run_test("떡납줄갱이", "{{ko-IPA}}", "tteongnapjulgaeng'i", "rr")
	def test_tteongnapjulgaengi_rrr(self):
		self.run_test("떡납줄갱이", "{{ko-IPA}}", "tteognabjulgaeng'i", "rrr")
	def test_tteongnapjulgaengi_mr(self):
		self.run_test("떡납줄갱이", "{{ko-IPA}}", "ttŏngnapchulgaengi", "mr")
	def test_tteongnapjulgaengi_yr(self):
		self.run_test("떡납줄갱이", "{{ko-IPA}}", "tteknapcwul.kayngi", "yr")
	def test_tteongnapjulgaengi_ipa(self):
		self.run_test("떡납줄갱이", "{{ko-IPA}}", "[t͈ʌ̹ŋna̠p̚t͡ɕ͈uɭɡɛŋi] ~ [t͈ʌ̹ŋna̠p̚t͡ɕ͈uɭɡe̞ŋi]", "ipa")

	def test_seohonapjulgaengi_ph(self):
		self.run_test("서호납줄갱이", "{{ko-IPA}}", "서호납쭐갱이/서호납쭐겡이", "ph")
	def test_seohonapjulgaengi_rr(self):
		self.run_test("서호납줄갱이", "{{ko-IPA}}", "seohonapjulgaeng'i", "rr")
	def test_seohonapjulgaengi_rrr(self):
		self.run_test("서호납줄갱이", "{{ko-IPA}}", "seohonabjulgaeng'i", "rrr")
	def test_seohonapjulgaengi_mr(self):
		self.run_test("서호납줄갱이", "{{ko-IPA}}", "sŏhonapchulgaengi", "mr")
	def test_seohonapjulgaengi_yr(self):
		self.run_test("서호납줄갱이", "{{ko-IPA}}", "sehonapcwul.kayngi", "yr")
	def test_seohonapjulgaengi_ipa(self):
		self.run_test("서호납줄갱이", "{{ko-IPA}}", "[sʰʌ̹βo̞na̠p̚t͡ɕ͈uɭɡɛŋi] ~ [sʰʌ̹βo̞na̠p̚t͡ɕ͈uɭɡe̞ŋi]", "ipa")

	def test_sat_ph(self):
		self.run_test("샅", "{{ko-IPA}}", "삳", "ph")
	def test_sat_rr(self):
		self.run_test("샅", "{{ko-IPA}}", "sat", "rr")
	def test_sat_rrr(self):
		self.run_test("샅", "{{ko-IPA}}", "sat", "rrr")
	def test_sat_mr(self):
		self.run_test("샅", "{{ko-IPA}}", "sat", "mr")
	def test_sat_yr(self):
		self.run_test("샅", "{{ko-IPA}}", "sath", "yr")
	def test_sat_ipa(self):
		self.run_test("샅", "{{ko-IPA}}", "[sʰa̠t̚]", "ipa")

	def test_napjaru_ph(self):
		self.run_test("납자루", "{{ko-IPA}}", "납짜루", "ph")
	def test_napjaru_rr(self):
		self.run_test("납자루", "{{ko-IPA}}", "napjaru", "rr")
	def test_napjaru_rrr(self):
		self.run_test("납자루", "{{ko-IPA}}", "nabjalu", "rrr")
	def test_napjaru_mr(self):
		self.run_test("납자루", "{{ko-IPA}}", "napcharu", "mr")
	def test_napjaru_yr(self):
		self.run_test("납자루", "{{ko-IPA}}", "napcalwu", "yr")
	def test_napjaru_ipa(self):
		self.run_test("납자루", "{{ko-IPA}}", "[na̠p̚t͡ɕ͈a̠ɾu]", "ipa")

	def test_mosaemchi_ph(self):
		self.run_test("모샘치", "{{ko-IPA}}", "모샘치/모셈치", "ph")
	def test_mosaemchi_rr(self):
		self.run_test("모샘치", "{{ko-IPA}}", "mosaemchi", "rr")
	def test_mosaemchi_rrr(self):
		self.run_test("모샘치", "{{ko-IPA}}", "mosaemchi", "rrr")
	def test_mosaemchi_mr(self):
		self.run_test("모샘치", "{{ko-IPA}}", "mosaemch'i", "mr")
	def test_mosaemchi_yr(self):
		self.run_test("모샘치", "{{ko-IPA}}", "mosaymchi", "yr")
	def test_mosaemchi_ipa(self):
		self.run_test("모샘치", "{{ko-IPA}}", "[mo̞sʰɛmt͡ɕʰi] ~ [mo̞sʰe̞mt͡ɕʰi]", "ipa")

	def test_getopchi_ph(self):
		self.run_test("게톱치", "{{ko-IPA}}", "게톱치", "ph")
	def test_getopchi_rr(self):
		self.run_test("게톱치", "{{ko-IPA}}", "getopchi", "rr")
	def test_getopchi_rrr(self):
		self.run_test("게톱치", "{{ko-IPA}}", "getobchi", "rrr")
	def test_getopchi_mr(self):
		self.run_test("게톱치", "{{ko-IPA}}", "ket'opch'i", "mr")
	def test_getopchi_yr(self):
		self.run_test("게톱치", "{{ko-IPA}}", "key.thopchi", "yr")
	def test_getopchi_ipa(self):
		self.run_test("게톱치", "{{ko-IPA}}", "[ke̞tʰo̞p̚t͡ɕʰi]", "ipa")

	def test_napjiri_ph(self):
		self.run_test("납지리", "{{ko-IPA}}", "납찌리", "ph")
	def test_napjiri_rr(self):
		self.run_test("납지리", "{{ko-IPA}}", "napjiri", "rr")
	def test_napjiri_rrr(self):
		self.run_test("납지리", "{{ko-IPA}}", "nabjili", "rrr")
	def test_napjiri_mr(self):
		self.run_test("납지리", "{{ko-IPA}}", "napchiri", "mr")
	def test_napjiri_yr(self):
		self.run_test("납지리", "{{ko-IPA}}", "napcili", "yr")
	def test_napjiri_ipa(self):
		self.run_test("납지리", "{{ko-IPA}}", "[na̠p̚t͡ɕ͈iɾi]", "ipa")

	def test_choeo_ph(self):
		self.run_test("초어", "{{ko-IPA}}", "초어", "ph")
	def test_choeo_rr(self):
		self.run_test("초어", "{{ko-IPA}}", "cho'eo", "rr")
	def test_choeo_rrr(self):
		self.run_test("초어", "{{ko-IPA}}", "cho'eo", "rrr")
	def test_choeo_mr(self):
		self.run_test("초어", "{{ko-IPA}}", "ch'oŏ", "mr")
	def test_choeo_yr(self):
		self.run_test("초어", "{{ko-IPA}}", "choe", "yr")
	def test_choeo_ipa(self):
		self.run_test("초어", "{{ko-IPA}}", "[t͡ɕʰo̞ʌ̹]", "ipa")

	def test_hangangnapjulgae_ph(self):
		self.run_test("한강납줄개", "{{ko-IPA}}", "한강납쭐개/한강납쭐게", "ph")
	def test_hangangnapjulgae_rr(self):
		self.run_test("한강납줄개", "{{ko-IPA}}", "han'gangnapjulgae", "rr")
	def test_hangangnapjulgae_rrr(self):
		self.run_test("한강납줄개", "{{ko-IPA}}", "hangangnabjulgae", "rrr")
	def test_hangangnapjulgae_mr(self):
		self.run_test("한강납줄개", "{{ko-IPA}}", "han'gangnapchulgae", "mr")
	def test_hangangnapjulgae_yr(self):
		self.run_test("한강납줄개", "{{ko-IPA}}", "hankangnapcwul.kay", "yr")
	def test_hangangnapjulgae_ipa(self):
		self.run_test("한강납줄개", "{{ko-IPA}}", "[ha̠nɡa̠ŋna̠p̚t͡ɕ͈uɭɡɛ] ~ [ha̠nɡa̠ŋna̠p̚t͡ɕ͈uɭɡe̞]", "ipa")

	def test_chambungeo_ph(self):
		self.run_test("참붕어", "{{ko-IPA}}", "참붕어", "ph")
	def test_chambungeo_rr(self):
		self.run_test("참붕어", "{{ko-IPA}}", "chambung'eo", "rr")
	def test_chambungeo_rrr(self):
		self.run_test("참붕어", "{{ko-IPA}}", "chambung'eo", "rrr")
	def test_chambungeo_mr(self):
		self.run_test("참붕어", "{{ko-IPA}}", "ch'ambungŏ", "mr")
	def test_chambungeo_yr(self):
		self.run_test("참붕어", "{{ko-IPA}}", "champunge", "yr")
	def test_chambungeo_ipa(self):
		self.run_test("참붕어", "{{ko-IPA}}", "[t͡ɕʰa̠mbuŋʌ̹]", "ipa")

	def test_gaksibungeo_ph(self):
		self.run_test("각시붕어", "{{ko-IPA}}", "각씨붕어", "ph")
	def test_gaksibungeo_rr(self):
		self.run_test("각시붕어", "{{ko-IPA}}", "gaksibung'eo", "rr")
	def test_gaksibungeo_rrr(self):
		self.run_test("각시붕어", "{{ko-IPA}}", "gagsibung'eo", "rrr")
	def test_gaksibungeo_mr(self):
		self.run_test("각시붕어", "{{ko-IPA}}", "kaksibungŏ", "mr")
	def test_gaksibungeo_yr(self):
		self.run_test("각시붕어", "{{ko-IPA}}", "kak.sipunge", "yr")
	def test_gaksibungeo_ipa(self):
		self.run_test("각시붕어", "{{ko-IPA}}", "[ka̠kɕ͈ibuŋʌ̹]", "ipa")

	def test_bukbangjunggogi_ph(self):
		self.run_test("북방중고기", "{{ko-IPA}}", "북빵중고기", "ph")
	def test_bukbangjunggogi_rr(self):
		self.run_test("북방중고기", "{{ko-IPA}}", "bukbangjunggogi", "rr")
	def test_bukbangjunggogi_rrr(self):
		self.run_test("북방중고기", "{{ko-IPA}}", "bugbangjunggogi", "rrr")
	def test_bukbangjunggogi_mr(self):
		self.run_test("북방중고기", "{{ko-IPA}}", "pukpangjunggogi", "mr")
	def test_bukbangjunggogi_yr(self):
		self.run_test("북방중고기", "{{ko-IPA}}", "pukpangcwungkoki", "yr")
	def test_bukbangjunggogi_ipa(self):
		self.run_test("북방중고기", "{{ko-IPA}}", "[puk̚p͈a̠ŋd͡ʑuŋɡo̞ɡi]", "ipa")

	def test_tteokbungeo_ph(self):
		self.run_test("떡붕어", "{{ko-IPA}}", "떡뿡어", "ph")
	def test_tteokbungeo_rr(self):
		self.run_test("떡붕어", "{{ko-IPA}}", "tteokbung'eo", "rr")
	def test_tteokbungeo_rrr(self):
		self.run_test("떡붕어", "{{ko-IPA}}", "tteogbung'eo", "rrr")
	def test_tteokbungeo_mr(self):
		self.run_test("떡붕어", "{{ko-IPA}}", "ttŏkpungŏ", "mr")
	def test_tteokbungeo_yr(self):
		self.run_test("떡붕어", "{{ko-IPA}}", "ttekpunge", "yr")
	def test_tteokbungeo_ipa(self):
		self.run_test("떡붕어", "{{ko-IPA}}", "[t͈ʌ̹k̚p͈uŋʌ̹]", "ipa")

	def test_chamjunggogi_ph(self):
		self.run_test("참중고기", "{{ko-IPA}}", "참중고기", "ph")
	def test_chamjunggogi_rr(self):
		self.run_test("참중고기", "{{ko-IPA}}", "chamjunggogi", "rr")
	def test_chamjunggogi_rrr(self):
		self.run_test("참중고기", "{{ko-IPA}}", "chamjunggogi", "rrr")
	def test_chamjunggogi_mr(self):
		self.run_test("참중고기", "{{ko-IPA}}", "ch'amjunggogi", "mr")
	def test_chamjunggogi_yr(self):
		self.run_test("참중고기", "{{ko-IPA}}", "chamcwungkoki", "yr")
	def test_chamjunggogi_ipa(self):
		self.run_test("참중고기", "{{ko-IPA}}", "[t͡ɕʰa̠md͡ʑuŋɡo̞ɡi]", "ipa")

	def test_mom_ph(self):
		self.run_test("몸", "{{ko-IPA|a=y}}", "몸", "ph")
	def test_mom_rr(self):
		self.run_test("몸", "{{ko-IPA|a=y}}", "mom", "rr")
	def test_mom_rrr(self):
		self.run_test("몸", "{{ko-IPA|a=y}}", "mom", "rrr")
	def test_mom_mr(self):
		self.run_test("몸", "{{ko-IPA|a=y}}", "mom", "mr")
	def test_mom_yr(self):
		self.run_test("몸", "{{ko-IPA|a=y}}", "mom", "yr")
	def test_mom_ipa(self):
		self.run_test("몸", "{{ko-IPA|a=y}}", "[mo̞m]", "ipa")

	def test_kkot_ph(self):
		self.run_test("꽃", "{{ko-IPA}}", "꼳", "ph")
	def test_kkot_rr(self):
		self.run_test("꽃", "{{ko-IPA}}", "kkot", "rr")
	def test_kkot_rrr(self):
		self.run_test("꽃", "{{ko-IPA}}", "kkoch", "rrr")
	def test_kkot_mr(self):
		self.run_test("꽃", "{{ko-IPA}}", "kkot", "mr")
	def test_kkot_yr(self):
		self.run_test("꽃", "{{ko-IPA}}", "kkoch", "yr")
	def test_kkot_ipa(self):
		self.run_test("꽃", "{{ko-IPA}}", "[k͈o̞t̚]", "ipa")

	def test_mugunghwa_ph(self):
		self.run_test("무궁화", "{{ko-IPA}}", "무궁화", "ph")
	def test_mugunghwa_rr(self):
		self.run_test("무궁화", "{{ko-IPA}}", "mugunghwa", "rr")
	def test_mugunghwa_rrr(self):
		self.run_test("무궁화", "{{ko-IPA}}", "mugunghwa", "rrr")
	def test_mugunghwa_mr(self):
		self.run_test("무궁화", "{{ko-IPA}}", "mugunghwa", "mr")
	def test_mugunghwa_yr(self):
		self.run_test("무궁화", "{{ko-IPA}}", "mukwunghwa", "yr")
	def test_mugunghwa_ipa(self):
		self.run_test("무궁화", "{{ko-IPA}}", "[muɡuŋβwa̠]", "ipa")

	def test_eoreun_ph(self):
		self.run_test("어른", "{{ko-IPA|l=y}}", "어(ː)른", "ph")
	def test_eoreun_rr(self):
		self.run_test("어른", "{{ko-IPA|l=y}}", "eoreun", "rr")
	def test_eoreun_rrr(self):
		self.run_test("어른", "{{ko-IPA|l=y}}", "eoleun", "rrr")
	def test_eoreun_mr(self):
		self.run_test("어른", "{{ko-IPA|l=y}}", "ŏrŭn", "mr")
	def test_eoreun_yr(self):
		self.run_test("어른", "{{ko-IPA|l=y}}", "ēlun", "yr")
	def test_eoreun_ipa(self):
		self.run_test("어른", "{{ko-IPA|l=y}}", "[ˈɘ(ː)ɾɯn]", "ipa")


	def test_che_ph(self):
		self.run_test("체", "{{ko-IPA}}", "체", "ph")
	def test_che_rr(self):
		self.run_test("체", "{{ko-IPA}}", "che", "rr")
	def test_che_rrr(self):
		self.run_test("체", "{{ko-IPA}}", "che", "rrr")
	def test_che_mr(self):
		self.run_test("체", "{{ko-IPA}}", "ch'e", "mr")
	def test_che_yr(self):
		self.run_test("체", "{{ko-IPA}}", "chey", "yr")
	def test_che_ipa(self):
		self.run_test("체", "{{ko-IPA}}", "[t͡ɕʰe̞]", "ipa")
	def test_che_ph_1(self):
		self.run_test("체", "{{ko-ipa}}", "체", "ph")
	def test_che_rr_1(self):
		self.run_test("체", "{{ko-ipa}}", "che", "rr")
	def test_che_rrr_1(self):
		self.run_test("체", "{{ko-ipa}}", "che", "rrr")
	def test_che_mr_1(self):
		self.run_test("체", "{{ko-ipa}}", "ch'e", "mr")
	def test_che_yr_1(self):
		self.run_test("체", "{{ko-ipa}}", "chey", "yr")
	def test_che_ipa_1(self):
		self.run_test("체", "{{ko-ipa}}", "[t͡ɕʰe̞]", "ipa")

	def test_bakwi_ph(self):
		self.run_test("바퀴", "{{ko-IPA}}", "바퀴", "ph")
	def test_bakwi_rr(self):
		self.run_test("바퀴", "{{ko-IPA}}", "bakwi", "rr")
	def test_bakwi_rrr(self):
		self.run_test("바퀴", "{{ko-IPA}}", "bakwi", "rrr")
	def test_bakwi_mr(self):
		self.run_test("바퀴", "{{ko-IPA}}", "pak'wi", "mr")
	def test_bakwi_yr(self):
		self.run_test("바퀴", "{{ko-IPA}}", "pa.khwi", "yr")
	def test_bakwi_ipa(self):
		self.run_test("바퀴", "{{ko-IPA}}", "[pa̠kʰɥi] ~ [pa̠kʰy]", "ipa")

	def test_guji_ph(self):
		self.run_test("굳이", "{{ko-IPA}}", "구지", "ph")
	def test_guji_rr(self):
		self.run_test("굳이", "{{ko-IPA}}", "guji", "rr")
	def test_guji_rrr(self):
		self.run_test("굳이", "{{ko-IPA}}", "gud'i", "rrr")
	def test_guji_mr(self):
		self.run_test("굳이", "{{ko-IPA}}", "kuji", "mr")
	def test_guji_yr(self):
		self.run_test("굳이", "{{ko-IPA}}", "kwut.i", "yr")
	def test_guji_ipa(self):
		self.run_test("굳이", "{{ko-IPA}}", "[kud͡ʑi]", "ipa")

	def test_gutda_ph(self):
		self.run_test("굳다", "{{ko-IPA}}", "굳따", "ph")
	def test_gutda_rr(self):
		self.run_test("굳다", "{{ko-IPA}}", "gutda", "rr")
	def test_gutda_rrr(self):
		self.run_test("굳다", "{{ko-IPA}}", "gudda", "rrr")
	def test_gutda_mr(self):
		self.run_test("굳다", "{{ko-IPA}}", "kutta", "mr")
	def test_gutda_yr(self):
		self.run_test("굳다", "{{ko-IPA}}", "kwut.ta", "yr")
	def test_gutda_ipa(self):
		self.run_test("굳다", "{{ko-IPA}}", "[kut̚t͈a̠]", "ipa")

	def test_georae_ph(self):
		self.run_test("거래", "{{ko-IPA|l=y}}", "거(ː)래/거(ː)레", "ph")
	def test_georae_rr(self):
		self.run_test("거래", "{{ko-IPA|l=y}}", "georae", "rr")
	def test_georae_rrr(self):
		self.run_test("거래", "{{ko-IPA|l=y}}", "geolae", "rrr")
	def test_georae_mr(self):
		self.run_test("거래", "{{ko-IPA|l=y}}", "kŏrae", "mr")
	def test_georae_yr(self):
		self.run_test("거래", "{{ko-IPA|l=y}}", "kēlay", "yr")
	def test_georae_ipa(self):
		self.run_test("거래", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)ɾɛ] ~ [ˈkɘ(ː)ɾe̞]", "ipa")

	def test_gongjeong_ph(self):
		self.run_test("공정", "{{ko-IPA}}", "공정", "ph")
	def test_gongjeong_rr(self):
		self.run_test("공정", "{{ko-IPA}}", "gongjeong", "rr")
	def test_gongjeong_rrr(self):
		self.run_test("공정", "{{ko-IPA}}", "gongjeong", "rrr")
	def test_gongjeong_mr(self):
		self.run_test("공정", "{{ko-IPA}}", "kongjŏng", "mr")
	def test_gongjeong_yr(self):
		self.run_test("공정", "{{ko-IPA}}", "kongceng", "yr")
	def test_gongjeong_ipa(self):
		self.run_test("공정", "{{ko-IPA}}", "[ko̞ŋd͡ʑʌ̹ŋ]", "ipa")
	def test_gongjeong_ph_1(self):
		self.run_test("공정", "{{ko-IPA}}", "공정", "ph")
	def test_gongjeong_rr_1(self):
		self.run_test("공정", "{{ko-IPA}}", "gongjeong", "rr")
	def test_gongjeong_rrr_1(self):
		self.run_test("공정", "{{ko-IPA}}", "gongjeong", "rrr")
	def test_gongjeong_mr_1(self):
		self.run_test("공정", "{{ko-IPA}}", "kongjŏng", "mr")
	def test_gongjeong_yr_1(self):
		self.run_test("공정", "{{ko-IPA}}", "kongceng", "yr")
	def test_gongjeong_ipa_1(self):
		self.run_test("공정", "{{ko-IPA}}", "[ko̞ŋd͡ʑʌ̹ŋ]", "ipa")
	def test_gongjeong_ph_2(self):
		self.run_test("공정", "{{ko-IPA}}", "공정", "ph")
	def test_gongjeong_rr_2(self):
		self.run_test("공정", "{{ko-IPA}}", "gongjeong", "rr")
	def test_gongjeong_rrr_2(self):
		self.run_test("공정", "{{ko-IPA}}", "gongjeong", "rrr")
	def test_gongjeong_mr_2(self):
		self.run_test("공정", "{{ko-IPA}}", "kongjŏng", "mr")
	def test_gongjeong_yr_2(self):
		self.run_test("공정", "{{ko-IPA}}", "kongceng", "yr")
	def test_gongjeong_ipa_2(self):
		self.run_test("공정", "{{ko-IPA}}", "[ko̞ŋd͡ʑʌ̹ŋ]", "ipa")

	def test_beodeulmaechi_ph(self):
		self.run_test("버들매치", "{{ko-IPA}}", "버들매치/버들메치", "ph")
	def test_beodeulmaechi_rr(self):
		self.run_test("버들매치", "{{ko-IPA}}", "beodeulmaechi", "rr")
	def test_beodeulmaechi_rrr(self):
		self.run_test("버들매치", "{{ko-IPA}}", "beodeulmaechi", "rrr")
	def test_beodeulmaechi_mr(self):
		self.run_test("버들매치", "{{ko-IPA}}", "pŏdŭlmaech'i", "mr")
	def test_beodeulmaechi_yr(self):
		self.run_test("버들매치", "{{ko-IPA}}", "petul.may.chi", "yr")
	def test_beodeulmaechi_ipa(self):
		self.run_test("버들매치", "{{ko-IPA}}", "[pʌ̹dɯɭmɛt͡ɕʰi] ~ [pʌ̹dɯɭme̞t͡ɕʰi]", "ipa")

	def test_waemaechi_ph(self):
		self.run_test("왜매치", "{{ko-IPA}}", "왜매치/왜메치/웨매치/웨메치", "ph")
	def test_waemaechi_rr(self):
		self.run_test("왜매치", "{{ko-IPA}}", "waemaechi", "rr")
	def test_waemaechi_rrr(self):
		self.run_test("왜매치", "{{ko-IPA}}", "waemaechi", "rrr")
	def test_waemaechi_mr(self):
		self.run_test("왜매치", "{{ko-IPA}}", "waemaech'i", "mr")
	def test_waemaechi_yr(self):
		self.run_test("왜매치", "{{ko-IPA}}", "waymay.chi", "yr")
	def test_waemaechi_ipa(self):
		self.run_test("왜매치", "{{ko-IPA}}", "[wɛmɛt͡ɕʰi] ~ [wɛme̞t͡ɕʰi] ~ [we̞mɛt͡ɕʰi] ~ [we̞me̞t͡ɕʰi]", "ipa")

	def test_kkuguri_ph(self):
		self.run_test("꾸구리", "{{ko-IPA}}", "꾸구리", "ph")
	def test_kkuguri_rr(self):
		self.run_test("꾸구리", "{{ko-IPA}}", "kkuguri", "rr")
	def test_kkuguri_rrr(self):
		self.run_test("꾸구리", "{{ko-IPA}}", "kkuguli", "rrr")
	def test_kkuguri_mr(self):
		self.run_test("꾸구리", "{{ko-IPA}}", "kkuguri", "mr")
	def test_kkuguri_yr(self):
		self.run_test("꾸구리", "{{ko-IPA}}", "kkwukwuli", "yr")
	def test_kkuguri_ipa(self):
		self.run_test("꾸구리", "{{ko-IPA}}", "[k͈uɡuɾi]", "ipa")

	def test_dolsangeo_ph(self):
		self.run_test("돌상어", "{{ko-IPA}}", "돌상어", "ph")
	def test_dolsangeo_rr(self):
		self.run_test("돌상어", "{{ko-IPA}}", "dolsang'eo", "rr")
	def test_dolsangeo_rrr(self):
		self.run_test("돌상어", "{{ko-IPA}}", "dolsang'eo", "rrr")
	def test_dolsangeo_mr(self):
		self.run_test("돌상어", "{{ko-IPA}}", "tolsangŏ", "mr")
	def test_dolsangeo_yr(self):
		self.run_test("돌상어", "{{ko-IPA}}", "tol.sange", "yr")
	def test_dolsangeo_ipa(self):
		self.run_test("돌상어", "{{ko-IPA}}", "[to̞ɭsʰa̠ŋʌ̹]", "ipa")

	def test_amnokjageusani_ph(self):
		self.run_test("압록자그사니", "{{ko-IPA}}", "암녹짜그사니", "ph")
	def test_amnokjageusani_rr(self):
		self.run_test("압록자그사니", "{{ko-IPA}}", "amnokjageusani", "rr")
	def test_amnokjageusani_rrr(self):
		self.run_test("압록자그사니", "{{ko-IPA}}", "ablogjageusani", "rrr")
	def test_amnokjageusani_mr(self):
		self.run_test("압록자그사니", "{{ko-IPA}}", "amnokchagŭsani", "mr")
	def test_amnokjageusani_yr(self):
		self.run_test("압록자그사니", "{{ko-IPA}}", "aplokcakusani", "yr")
	def test_amnokjageusani_ipa(self):
		self.run_test("압록자그사니", "{{ko-IPA}}", "[a̠mno̞k̚t͡ɕ͈a̠ɡɯsʰa̠ni]", "ipa")

	def test_huinsumaja_ph(self):
		self.run_test("흰수마자", "{{ko-IPA}}", "힌수마자", "ph")
	def test_huinsumaja_rr(self):
		self.run_test("흰수마자", "{{ko-IPA}}", "huinsumaja", "rr")
	def test_huinsumaja_rrr(self):
		self.run_test("흰수마자", "{{ko-IPA}}", "huinsumaja", "rrr")
	def test_huinsumaja_mr(self):
		self.run_test("흰수마자", "{{ko-IPA}}", "hŭinsumaja", "mr")
	def test_huinsumaja_yr(self):
		self.run_test("흰수마자", "{{ko-IPA}}", "huynswumaca", "yr")
	def test_huinsumaja_ipa(self):
		self.run_test("흰수마자", "{{ko-IPA}}", "[çinsʰuma̠d͡ʑa̠]", "ipa")

	def test_dumangangjageusani_ph(self):
		self.run_test("두만강자그사니", "{{ko-IPA}}", "두만강자그사니", "ph")
	def test_dumangangjageusani_rr(self):
		self.run_test("두만강자그사니", "{{ko-IPA}}", "duman'gangjageusani", "rr")
	def test_dumangangjageusani_rrr(self):
		self.run_test("두만강자그사니", "{{ko-IPA}}", "dumangangjageusani", "rrr")
	def test_dumangangjageusani_mr(self):
		self.run_test("두만강자그사니", "{{ko-IPA}}", "tuman'gangjagŭsani", "mr")
	def test_dumangangjageusani_yr(self):
		self.run_test("두만강자그사니", "{{ko-IPA}}", "twumankangcakusani", "yr")
	def test_dumangangjageusani_ipa(self):
		self.run_test("두만강자그사니", "{{ko-IPA}}", "[tuma̠nɡa̠ŋd͡ʑa̠ɡɯsʰa̠ni]", "ipa")

	def test_dolmaja_ph(self):
		self.run_test("돌마자", "{{ko-IPA}}", "돌마자", "ph")
	def test_dolmaja_rr(self):
		self.run_test("돌마자", "{{ko-IPA}}", "dolmaja", "rr")
	def test_dolmaja_rrr(self):
		self.run_test("돌마자", "{{ko-IPA}}", "dolmaja", "rrr")
	def test_dolmaja_mr(self):
		self.run_test("돌마자", "{{ko-IPA}}", "tolmaja", "mr")
	def test_dolmaja_yr(self):
		self.run_test("돌마자", "{{ko-IPA}}", "tol.maca", "yr")
	def test_dolmaja_ipa(self):
		self.run_test("돌마자", "{{ko-IPA}}", "[to̞ɭma̠d͡ʑa̠]", "ipa")

	def test_moraejusa_ph(self):
		self.run_test("모래주사", "{{ko-IPA}}", "모래주사/모레주사", "ph")
	def test_moraejusa_rr(self):
		self.run_test("모래주사", "{{ko-IPA}}", "moraejusa", "rr")
	def test_moraejusa_rrr(self):
		self.run_test("모래주사", "{{ko-IPA}}", "molaejusa", "rrr")
	def test_moraejusa_mr(self):
		self.run_test("모래주사", "{{ko-IPA}}", "moraejusa", "mr")
	def test_moraejusa_yr(self):
		self.run_test("모래주사", "{{ko-IPA}}", "molaycwusa", "yr")
	def test_moraejusa_ipa(self):
		self.run_test("모래주사", "{{ko-IPA}}", "[mo̞ɾɛd͡ʑusʰa̠] ~ [mo̞ɾe̞d͡ʑusʰa̠]", "ipa")

	def test_yeoulmaja_ph(self):
		self.run_test("여울마자", "{{ko-IPA}}", "여울마자", "ph")
	def test_yeoulmaja_rr(self):
		self.run_test("여울마자", "{{ko-IPA}}", "yeoulmaja", "rr")
	def test_yeoulmaja_rrr(self):
		self.run_test("여울마자", "{{ko-IPA}}", "yeoulmaja", "rrr")
	def test_yeoulmaja_mr(self):
		self.run_test("여울마자", "{{ko-IPA}}", "yŏulmaja", "mr")
	def test_yeoulmaja_yr(self):
		self.run_test("여울마자", "{{ko-IPA}}", "yewul.maca", "yr")
	def test_yeoulmaja_ipa(self):
		self.run_test("여울마자", "{{ko-IPA}}", "[jʌ̹uɭma̠d͡ʑa̠]", "ipa")

	def test_doenggyeongmochi_ph(self):
		self.run_test("됭경모치", "{{ko-IPA}}", "뒝경모치/됭경모치", "ph")
	def test_doenggyeongmochi_rr(self):
		self.run_test("됭경모치", "{{ko-IPA}}", "doenggyeongmochi", "rr")
	def test_doenggyeongmochi_rrr(self):
		self.run_test("됭경모치", "{{ko-IPA}}", "doenggyeongmochi", "rrr")
	def test_doenggyeongmochi_mr(self):
		self.run_test("됭경모치", "{{ko-IPA}}", "toenggyŏngmoch'i", "mr")
	def test_doenggyeongmochi_yr(self):
		self.run_test("됭경모치", "{{ko-IPA}}", "toyngkyengmo.chi", "yr")
	def test_doenggyeongmochi_ipa(self):
		self.run_test("됭경모치", "{{ko-IPA}}", "[twe̞ŋɡjʌ̹ŋmo̞t͡ɕʰi] ~ [tø̞ŋɡjʌ̹ŋmo̞t͡ɕʰi]", "ipa")

	def test_baegasari_ph(self):
		self.run_test("배가사리", "{{ko-IPA}}", "배가사리/베가사리", "ph")
	def test_baegasari_rr(self):
		self.run_test("배가사리", "{{ko-IPA}}", "baegasari", "rr")
	def test_baegasari_rrr(self):
		self.run_test("배가사리", "{{ko-IPA}}", "baegasali", "rrr")
	def test_baegasari_mr(self):
		self.run_test("배가사리", "{{ko-IPA}}", "paegasari", "mr")
	def test_baegasari_yr(self):
		self.run_test("배가사리", "{{ko-IPA}}", "paykasali", "yr")
	def test_baegasari_ipa(self):
		self.run_test("배가사리", "{{ko-IPA}}", "[pɛɡa̠sʰa̠ɾi] ~ [pe̞ɡa̠sʰa̠ɾi]", "ipa")

	def test_duujaengi_ph(self):
		self.run_test("두우쟁이", "{{ko-IPA}}", "두우쟁이/두우젱이", "ph")
	def test_duujaengi_rr(self):
		self.run_test("두우쟁이", "{{ko-IPA}}", "duujaeng'i", "rr")
	def test_duujaengi_rrr(self):
		self.run_test("두우쟁이", "{{ko-IPA}}", "duujaeng'i", "rrr")
	def test_duujaengi_mr(self):
		self.run_test("두우쟁이", "{{ko-IPA}}", "tuujaengi", "mr")
	def test_duujaengi_yr(self):
		self.run_test("두우쟁이", "{{ko-IPA}}", "twuwucayngi", "yr")
	def test_duujaengi_ipa(self):
		self.run_test("두우쟁이", "{{ko-IPA}}", "[tuud͡ʑɛŋi] ~ [tuud͡ʑe̞ŋi]", "ipa")

	def test_yare_ph(self):
		self.run_test("야레", "{{ko-IPA}}", "야레", "ph")
	def test_yare_rr(self):
		self.run_test("야레", "{{ko-IPA}}", "yare", "rr")
	def test_yare_rrr(self):
		self.run_test("야레", "{{ko-IPA}}", "yale", "rrr")
	def test_yare_mr(self):
		self.run_test("야레", "{{ko-IPA}}", "yare", "mr")
	def test_yare_yr(self):
		self.run_test("야레", "{{ko-IPA}}", "yaley", "yr")
	def test_yare_ipa(self):
		self.run_test("야레", "{{ko-IPA}}", "[ja̠ɾe̞]", "ipa")

	def test_baengnyeoneo_ph(self):
		self.run_test("백련어", "{{ko-IPA}}", "뱅녀너/벵녀너", "ph")
	def test_baengnyeoneo_rr(self):
		self.run_test("백련어", "{{ko-IPA}}", "baengnyeoneo", "rr")
	def test_baengnyeoneo_rrr(self):
		self.run_test("백련어", "{{ko-IPA}}", "baeglyeon'eo", "rrr")
	def test_baengnyeoneo_mr(self):
		self.run_test("백련어", "{{ko-IPA}}", "paengnyŏnŏ", "mr")
	def test_baengnyeoneo_yr(self):
		self.run_test("백련어", "{{ko-IPA}}", "payklyen.e", "yr")
	def test_baengnyeoneo_ipa(self):
		self.run_test("백련어", "{{ko-IPA}}", "[pɛŋɲʌ̹nʌ̹] ~ [pe̞ŋɲʌ̹nʌ̹]", "ipa")

	def test_dongbeodeulgae_ph(self):
		self.run_test("동버들개", "{{ko-IPA}}", "동버들개/동버들게", "ph")
	def test_dongbeodeulgae_rr(self):
		self.run_test("동버들개", "{{ko-IPA}}", "dongbeodeulgae", "rr")
	def test_dongbeodeulgae_rrr(self):
		self.run_test("동버들개", "{{ko-IPA}}", "dongbeodeulgae", "rrr")
	def test_dongbeodeulgae_mr(self):
		self.run_test("동버들개", "{{ko-IPA}}", "tongbŏdŭlgae", "mr")
	def test_dongbeodeulgae_yr(self):
		self.run_test("동버들개", "{{ko-IPA}}", "tongpetul.kay", "yr")
	def test_dongbeodeulgae_ipa(self):
		self.run_test("동버들개", "{{ko-IPA}}", "[to̞ŋbʌ̹dɯɭɡɛ] ~ [to̞ŋbʌ̹dɯɭɡe̞]", "ipa")

	def test_beodeulchi_ph(self):
		self.run_test("버들치", "{{ko-IPA}}", "버들치", "ph")
	def test_beodeulchi_rr(self):
		self.run_test("버들치", "{{ko-IPA}}", "beodeulchi", "rr")
	def test_beodeulchi_rrr(self):
		self.run_test("버들치", "{{ko-IPA}}", "beodeulchi", "rrr")
	def test_beodeulchi_mr(self):
		self.run_test("버들치", "{{ko-IPA}}", "pŏdŭlch'i", "mr")
	def test_beodeulchi_yr(self):
		self.run_test("버들치", "{{ko-IPA}}", "petulchi", "yr")
	def test_beodeulchi_ipa(self):
		self.run_test("버들치", "{{ko-IPA}}", "[pʌ̹dɯʎt͡ɕʰi]", "ipa")

	def test_daehwangeo_ph(self):
		self.run_test("대황어", "{{ko-IPA|l=y}}", "대(ː)황어/데(ː)황어", "ph")
	def test_daehwangeo_rr(self):
		self.run_test("대황어", "{{ko-IPA|l=y}}", "daehwang'eo", "rr")
	def test_daehwangeo_rrr(self):
		self.run_test("대황어", "{{ko-IPA|l=y}}", "daehwang'eo", "rrr")
	def test_daehwangeo_mr(self):
		self.run_test("대황어", "{{ko-IPA|l=y}}", "taehwangŏ", "mr")
	def test_daehwangeo_yr(self):
		self.run_test("대황어", "{{ko-IPA|l=y}}", "tāyhwange", "yr")
	def test_daehwangeo_ipa(self):
		self.run_test("대황어", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)βwa̠ŋʌ̹] ~ [ˈte̞(ː)βwa̠ŋʌ̹]", "ipa")

	def test_hwangeo_ph(self):
		self.run_test("황어", "{{ko-IPA}}", "황어", "ph")
	def test_hwangeo_rr(self):
		self.run_test("황어", "{{ko-IPA}}", "hwang'eo", "rr")
	def test_hwangeo_rrr(self):
		self.run_test("황어", "{{ko-IPA}}", "hwang'eo", "rrr")
	def test_hwangeo_mr(self):
		self.run_test("황어", "{{ko-IPA}}", "hwangŏ", "mr")
	def test_hwangeo_yr(self):
		self.run_test("황어", "{{ko-IPA}}", "hwange", "yr")
	def test_hwangeo_ipa(self):
		self.run_test("황어", "{{ko-IPA}}", "[ɸwa̠ŋʌ̹]", "ipa")

	def test_beodeulgae_ph(self):
		self.run_test("버들개", "{{ko-IPA}}", "버들개/버들게", "ph")
	def test_beodeulgae_rr(self):
		self.run_test("버들개", "{{ko-IPA}}", "beodeulgae", "rr")
	def test_beodeulgae_rrr(self):
		self.run_test("버들개", "{{ko-IPA}}", "beodeulgae", "rrr")
	def test_beodeulgae_mr(self):
		self.run_test("버들개", "{{ko-IPA}}", "pŏdŭlgae", "mr")
	def test_beodeulgae_yr(self):
		self.run_test("버들개", "{{ko-IPA}}", "petul.kay", "yr")
	def test_beodeulgae_ipa(self):
		self.run_test("버들개", "{{ko-IPA}}", "[pʌ̹dɯɭɡɛ] ~ [pʌ̹dɯɭɡe̞]", "ipa")

	def test_baekjoeo_ph(self):
		self.run_test("백조어", "{{ko-IPA}}", "백쪼어/벡쪼어", "ph")
	def test_baekjoeo_rr(self):
		self.run_test("백조어", "{{ko-IPA}}", "baekjo'eo", "rr")
	def test_baekjoeo_rrr(self):
		self.run_test("백조어", "{{ko-IPA}}", "baegjo'eo", "rrr")
	def test_baekjoeo_mr(self):
		self.run_test("백조어", "{{ko-IPA}}", "paekchoŏ", "mr")
	def test_baekjoeo_yr(self):
		self.run_test("백조어", "{{ko-IPA}}", "paykcoe", "yr")
	def test_baekjoeo_ipa(self):
		self.run_test("백조어", "{{ko-IPA}}", "[pɛk̚t͡ɕ͈o̞ʌ̹] ~ [pe̞k̚t͡ɕ͈o̞ʌ̹]", "ipa")

	def test_galgyeoni_ph(self):
		self.run_test("갈겨니", "{{ko-IPA}}", "갈겨니", "ph")
	def test_galgyeoni_rr(self):
		self.run_test("갈겨니", "{{ko-IPA}}", "galgyeoni", "rr")
	def test_galgyeoni_rrr(self):
		self.run_test("갈겨니", "{{ko-IPA}}", "galgyeoni", "rrr")
	def test_galgyeoni_mr(self):
		self.run_test("갈겨니", "{{ko-IPA}}", "kalgyŏni", "mr")
	def test_galgyeoni_yr(self):
		self.run_test("갈겨니", "{{ko-IPA}}", "kal.kyeni", "yr")
	def test_galgyeoni_ipa(self):
		self.run_test("갈겨니", "{{ko-IPA}}", "[ka̠ɭɡjʌ̹ni]", "ipa")

	def test_waemolgae_ph(self):
		self.run_test("왜몰개", "{{ko-IPA}}", "왜몰개/왜몰게/웨몰개/웨몰게", "ph")
	def test_waemolgae_rr(self):
		self.run_test("왜몰개", "{{ko-IPA}}", "waemolgae", "rr")
	def test_waemolgae_rrr(self):
		self.run_test("왜몰개", "{{ko-IPA}}", "waemolgae", "rrr")
	def test_waemolgae_mr(self):
		self.run_test("왜몰개", "{{ko-IPA}}", "waemolgae", "mr")
	def test_waemolgae_yr(self):
		self.run_test("왜몰개", "{{ko-IPA}}", "waymol.kay", "yr")
	def test_waemolgae_ipa(self):
		self.run_test("왜몰개", "{{ko-IPA}}", "[wɛmo̞ɭɡɛ] ~ [wɛmo̞ɭɡe̞] ~ [we̞mo̞ɭɡɛ] ~ [we̞mo̞ɭɡe̞]", "ipa")

	def test_pirami_ph(self):
		self.run_test("피라미", "{{ko-IPA}}", "피라미", "ph")
	def test_pirami_rr(self):
		self.run_test("피라미", "{{ko-IPA}}", "pirami", "rr")
	def test_pirami_rrr(self):
		self.run_test("피라미", "{{ko-IPA}}", "pilami", "rrr")
	def test_pirami_mr(self):
		self.run_test("피라미", "{{ko-IPA}}", "p'irami", "mr")
	def test_pirami_yr(self):
		self.run_test("피라미", "{{ko-IPA}}", "philami", "yr")
	def test_pirami_ipa(self):
		self.run_test("피라미", "{{ko-IPA}}", "[pʰiɾa̠mi]", "ipa")

	def test_kkeuri_ph(self):
		self.run_test("끄리", "{{ko-IPA}}", "끄리", "ph")
	def test_kkeuri_rr(self):
		self.run_test("끄리", "{{ko-IPA}}", "kkeuri", "rr")
	def test_kkeuri_rrr(self):
		self.run_test("끄리", "{{ko-IPA}}", "kkeuli", "rrr")
	def test_kkeuri_mr(self):
		self.run_test("끄리", "{{ko-IPA}}", "kkŭri", "mr")
	def test_kkeuri_yr(self):
		self.run_test("끄리", "{{ko-IPA}}", "kkuli", "yr")
	def test_kkeuri_ipa(self):
		self.run_test("끄리", "{{ko-IPA}}", "[k͈ɯɾi]", "ipa")

	def test_gangjunchi_ph(self):
		self.run_test("강준치", "{{ko-IPA}}", "강준치", "ph")
	def test_gangjunchi_rr(self):
		self.run_test("강준치", "{{ko-IPA}}", "gangjunchi", "rr")
	def test_gangjunchi_rrr(self):
		self.run_test("강준치", "{{ko-IPA}}", "gangjunchi", "rrr")
	def test_gangjunchi_mr(self):
		self.run_test("강준치", "{{ko-IPA}}", "kangjunch'i", "mr")
	def test_gangjunchi_yr(self):
		self.run_test("강준치", "{{ko-IPA}}", "kangcwun.chi", "yr")
	def test_gangjunchi_ipa(self):
		self.run_test("강준치", "{{ko-IPA}}", "[ka̠ŋd͡ʑuɲt͡ɕʰi]", "ipa")

	def test_napjulgae_ph(self):
		self.run_test("납줄개", "{{ko-IPA}}", "납쭐개/납쭐게", "ph")
	def test_napjulgae_rr(self):
		self.run_test("납줄개", "{{ko-IPA}}", "napjulgae", "rr")
	def test_napjulgae_rrr(self):
		self.run_test("납줄개", "{{ko-IPA}}", "nabjulgae", "rrr")
	def test_napjulgae_mr(self):
		self.run_test("납줄개", "{{ko-IPA}}", "napchulgae", "mr")
	def test_napjulgae_yr(self):
		self.run_test("납줄개", "{{ko-IPA}}", "napcwul.kay", "yr")
	def test_napjulgae_ipa(self):
		self.run_test("납줄개", "{{ko-IPA}}", "[na̠p̚t͡ɕ͈uɭɡɛ] ~ [na̠p̚t͡ɕ͈uɭɡe̞]", "ipa")

	def test_daedueo_ph(self):
		self.run_test("대두어", "{{ko-IPA|l=y}}", "대(ː)두어/데(ː)두어", "ph")
	def test_daedueo_rr(self):
		self.run_test("대두어", "{{ko-IPA|l=y}}", "daedueo", "rr")
	def test_daedueo_rrr(self):
		self.run_test("대두어", "{{ko-IPA|l=y}}", "daedueo", "rrr")
	def test_daedueo_mr(self):
		self.run_test("대두어", "{{ko-IPA|l=y}}", "taeduŏ", "mr")
	def test_daedueo_yr(self):
		self.run_test("대두어", "{{ko-IPA|l=y}}", "tāytwue", "yr")
	def test_daedueo_ipa(self):
		self.run_test("대두어", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)duʌ̹] ~ [ˈte̞(ː)duʌ̹]", "ipa")

	def test_yeonjunmochi_ph(self):
		self.run_test("연준모치", "{{ko-IPA}}", "연준모치", "ph")
	def test_yeonjunmochi_rr(self):
		self.run_test("연준모치", "{{ko-IPA}}", "yeonjunmochi", "rr")
	def test_yeonjunmochi_rrr(self):
		self.run_test("연준모치", "{{ko-IPA}}", "yeonjunmochi", "rrr")
	def test_yeonjunmochi_mr(self):
		self.run_test("연준모치", "{{ko-IPA}}", "yŏnjunmoch'i", "mr")
	def test_yeonjunmochi_yr(self):
		self.run_test("연준모치", "{{ko-IPA}}", "yen.cwunmo.chi", "yr")
	def test_yeonjunmochi_ipa(self):
		self.run_test("연준모치", "{{ko-IPA}}", "[jʌ̹ɲd͡ʑunmo̞t͡ɕʰi]", "ipa")

	def test_beodeulgaji_ph(self):
		self.run_test("버들가지", "{{ko-IPA}}", "버들가지", "ph")
	def test_beodeulgaji_rr(self):
		self.run_test("버들가지", "{{ko-IPA}}", "beodeulgaji", "rr")
	def test_beodeulgaji_rrr(self):
		self.run_test("버들가지", "{{ko-IPA}}", "beodeulgaji", "rrr")
	def test_beodeulgaji_mr(self):
		self.run_test("버들가지", "{{ko-IPA}}", "pŏdŭlgaji", "mr")
	def test_beodeulgaji_yr(self):
		self.run_test("버들가지", "{{ko-IPA}}", "petul.kaci", "yr")
	def test_beodeulgaji_ipa(self):
		self.run_test("버들가지", "{{ko-IPA}}", "[pʌ̹dɯɭɡa̠d͡ʑi]", "ipa")

	def test_nunbulgae_ph(self):
		self.run_test("눈불개", "{{ko-IPA}}", "눈불개/눈불게", "ph")
	def test_nunbulgae_rr(self):
		self.run_test("눈불개", "{{ko-IPA}}", "nunbulgae", "rr")
	def test_nunbulgae_rrr(self):
		self.run_test("눈불개", "{{ko-IPA}}", "nunbulgae", "rrr")
	def test_nunbulgae_mr(self):
		self.run_test("눈불개", "{{ko-IPA}}", "nunbulgae", "mr")
	def test_nunbulgae_yr(self):
		self.run_test("눈불개", "{{ko-IPA}}", "nwunpul.kay", "yr")
	def test_nunbulgae_ipa(self):
		self.run_test("눈불개", "{{ko-IPA}}", "[nunbuɭɡɛ] ~ [nunbuɭɡe̞]", "ipa")

	def test_geumgangmochi_ph(self):
		self.run_test("금강모치", "{{ko-IPA}}", "금강모치", "ph")
	def test_geumgangmochi_rr(self):
		self.run_test("금강모치", "{{ko-IPA}}", "geumgangmochi", "rr")
	def test_geumgangmochi_rrr(self):
		self.run_test("금강모치", "{{ko-IPA}}", "geumgangmochi", "rrr")
	def test_geumgangmochi_mr(self):
		self.run_test("금강모치", "{{ko-IPA}}", "kŭmgangmoch'i", "mr")
	def test_geumgangmochi_yr(self):
		self.run_test("금강모치", "{{ko-IPA}}", "kumkangmo.chi", "yr")
	def test_geumgangmochi_ipa(self):
		self.run_test("금강모치", "{{ko-IPA}}", "[kɯmɡa̠ŋmo̞t͡ɕʰi]", "ipa")

	def test_chiri_ph(self):
		self.run_test("치리", "{{ko-IPA}}", "치리", "ph")
	def test_chiri_rr(self):
		self.run_test("치리", "{{ko-IPA}}", "chiri", "rr")
	def test_chiri_rrr(self):
		self.run_test("치리", "{{ko-IPA}}", "chili", "rrr")
	def test_chiri_mr(self):
		self.run_test("치리", "{{ko-IPA}}", "ch'iri", "mr")
	def test_chiri_yr(self):
		self.run_test("치리", "{{ko-IPA}}", "chili", "yr")
	def test_chiri_ipa(self):
		self.run_test("치리", "{{ko-IPA}}", "[t͡ɕʰiɾi]", "ipa")

	def test_daeryukjonggae_ph(self):
		self.run_test("대륙종개", "{{ko-IPA|l=y}}", "대(ː)륙쫑개/데(ː)륙쫑게", "ph")
	def test_daeryukjonggae_rr(self):
		self.run_test("대륙종개", "{{ko-IPA|l=y}}", "daeryukjonggae", "rr")
	def test_daeryukjonggae_rrr(self):
		self.run_test("대륙종개", "{{ko-IPA|l=y}}", "daelyugjonggae", "rrr")
	def test_daeryukjonggae_mr(self):
		self.run_test("대륙종개", "{{ko-IPA|l=y}}", "taeryukchonggae", "mr")
	def test_daeryukjonggae_yr(self):
		self.run_test("대륙종개", "{{ko-IPA|l=y}}", "tāylyukcongkay", "yr")
	def test_daeryukjonggae_ipa(self):
		self.run_test("대륙종개", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)ɾjuk̚t͡ɕ͈o̞ŋɡɛ] ~ [ˈte̞(ː)ɾjuk̚t͡ɕ͈o̞ŋɡe̞]", "ipa")

	def test_ssalmikkuri_ph(self):
		self.run_test("쌀미꾸리", "{{ko-IPA}}", "쌀미꾸리", "ph")
	def test_ssalmikkuri_rr(self):
		self.run_test("쌀미꾸리", "{{ko-IPA}}", "ssalmikkuri", "rr")
	def test_ssalmikkuri_rrr(self):
		self.run_test("쌀미꾸리", "{{ko-IPA}}", "ssalmi'kkuli", "rrr")
	def test_ssalmikkuri_mr(self):
		self.run_test("쌀미꾸리", "{{ko-IPA}}", "ssalmikkuri", "mr")
	def test_ssalmikkuri_yr(self):
		self.run_test("쌀미꾸리", "{{ko-IPA}}", "ssal.mi.kkwuli", "yr")
	def test_ssalmikkuri_ipa(self):
		self.run_test("쌀미꾸리", "{{ko-IPA}}", "[s͈a̠ɭmik͈uɾi]", "ipa")

	def test_mikkuri_ph(self):
		self.run_test("미꾸리", "{{ko-IPA}}", "미꾸리", "ph")
	def test_mikkuri_rr(self):
		self.run_test("미꾸리", "{{ko-IPA}}", "mikkuri", "rr")
	def test_mikkuri_rrr(self):
		self.run_test("미꾸리", "{{ko-IPA}}", "mi'kkuli", "rrr")
	def test_mikkuri_mr(self):
		self.run_test("미꾸리", "{{ko-IPA}}", "mikkuri", "mr")
	def test_mikkuri_yr(self):
		self.run_test("미꾸리", "{{ko-IPA}}", "mi.kkwuli", "yr")
	def test_mikkuri_ipa(self):
		self.run_test("미꾸리", "{{ko-IPA}}", "[mik͈uɾi]", "ipa")

	def test_eolluksaekomikkuri_ph(self):
		self.run_test("얼룩새코미꾸리", "{{ko-IPA}}", "얼룩쌔코미꾸리/얼룩쎄코미꾸리", "ph")
	def test_eolluksaekomikkuri_rr(self):
		self.run_test("얼룩새코미꾸리", "{{ko-IPA}}", "eolluksaekomikkuri", "rr")
	def test_eolluksaekomikkuri_rrr(self):
		self.run_test("얼룩새코미꾸리", "{{ko-IPA}}", "eollugsaekomi'kkuli", "rrr")
	def test_eolluksaekomikkuri_mr(self):
		self.run_test("얼룩새코미꾸리", "{{ko-IPA}}", "ŏlluksaek'omikkuri", "mr")
	def test_eolluksaekomikkuri_yr(self):
		self.run_test("얼룩새코미꾸리", "{{ko-IPA}}", "ellwuk.say.khomi.kkwuli", "yr")
	def test_eolluksaekomikkuri_ipa(self):
		self.run_test("얼룩새코미꾸리", "{{ko-IPA}}", "[ʌ̹ɭɭuks͈ɛkʰo̞mik͈uɾi] ~ [ʌ̹ɭɭuks͈e̞kʰo̞mik͈uɾi]", "ipa")

	def test_chamjonggae_ph(self):
		self.run_test("참종개", "{{ko-IPA}}", "참종개/참종게", "ph")
	def test_chamjonggae_rr(self):
		self.run_test("참종개", "{{ko-IPA}}", "chamjonggae", "rr")
	def test_chamjonggae_rrr(self):
		self.run_test("참종개", "{{ko-IPA}}", "chamjonggae", "rrr")
	def test_chamjonggae_mr(self):
		self.run_test("참종개", "{{ko-IPA}}", "ch'amjonggae", "mr")
	def test_chamjonggae_yr(self):
		self.run_test("참종개", "{{ko-IPA}}", "chamcongkay", "yr")
	def test_chamjonggae_ipa(self):
		self.run_test("참종개", "{{ko-IPA}}", "[t͡ɕʰa̠md͡ʑo̞ŋɡɛ] ~ [t͡ɕʰa̠md͡ʑo̞ŋɡe̞]", "ipa")

	def test_buanjonggae_ph(self):
		self.run_test("부안종개", "{{ko-IPA}}", "부안종개/부안종게", "ph")
	def test_buanjonggae_rr(self):
		self.run_test("부안종개", "{{ko-IPA}}", "buanjonggae", "rr")
	def test_buanjonggae_rrr(self):
		self.run_test("부안종개", "{{ko-IPA}}", "buanjonggae", "rrr")
	def test_buanjonggae_mr(self):
		self.run_test("부안종개", "{{ko-IPA}}", "puanjonggae", "mr")
	def test_buanjonggae_yr(self):
		self.run_test("부안종개", "{{ko-IPA}}", "puan.congkay", "yr")
	def test_buanjonggae_ipa(self):
		self.run_test("부안종개", "{{ko-IPA}}", "[pua̠ɲd͡ʑo̞ŋɡɛ] ~ [pua̠ɲd͡ʑo̞ŋɡe̞]", "ipa")

	def test_mihojonggae_ph(self):
		self.run_test("미호종개", "{{ko-IPA}}", "미호종개/미호종게", "ph")
	def test_mihojonggae_rr(self):
		self.run_test("미호종개", "{{ko-IPA}}", "mihojonggae", "rr")
	def test_mihojonggae_rrr(self):
		self.run_test("미호종개", "{{ko-IPA}}", "mihojonggae", "rrr")
	def test_mihojonggae_mr(self):
		self.run_test("미호종개", "{{ko-IPA}}", "mihojonggae", "mr")
	def test_mihojonggae_yr(self):
		self.run_test("미호종개", "{{ko-IPA}}", "mihocongkay", "yr")
	def test_mihojonggae_ipa(self):
		self.run_test("미호종개", "{{ko-IPA}}", "[miβo̞d͡ʑo̞ŋɡɛ] ~ [miβo̞d͡ʑo̞ŋɡe̞]", "ipa")

	def test_wangjonggae_ph(self):
		self.run_test("왕종개", "{{ko-IPA}}", "왕종개/왕종게", "ph")
	def test_wangjonggae_rr(self):
		self.run_test("왕종개", "{{ko-IPA}}", "wangjonggae", "rr")
	def test_wangjonggae_rrr(self):
		self.run_test("왕종개", "{{ko-IPA}}", "wangjonggae", "rrr")
	def test_wangjonggae_mr(self):
		self.run_test("왕종개", "{{ko-IPA}}", "wangjonggae", "mr")
	def test_wangjonggae_yr(self):
		self.run_test("왕종개", "{{ko-IPA}}", "wangcongkay", "yr")
	def test_wangjonggae_ipa(self):
		self.run_test("왕종개", "{{ko-IPA}}", "[wa̠ŋd͡ʑo̞ŋɡɛ] ~ [wa̠ŋd͡ʑo̞ŋɡe̞]", "ipa")

	def test_dongbangjonggae_ph(self):
		self.run_test("동방종개", "{{ko-IPA}}", "동방종개/동방종게", "ph")
	def test_dongbangjonggae_rr(self):
		self.run_test("동방종개", "{{ko-IPA}}", "dongbangjonggae", "rr")
	def test_dongbangjonggae_rrr(self):
		self.run_test("동방종개", "{{ko-IPA}}", "dongbangjonggae", "rrr")
	def test_dongbangjonggae_mr(self):
		self.run_test("동방종개", "{{ko-IPA}}", "tongbangjonggae", "mr")
	def test_dongbangjonggae_yr(self):
		self.run_test("동방종개", "{{ko-IPA}}", "tongpangcongkay", "yr")
	def test_dongbangjonggae_ipa(self):
		self.run_test("동방종개", "{{ko-IPA}}", "[to̞ŋba̠ŋd͡ʑo̞ŋɡɛ] ~ [to̞ŋba̠ŋd͡ʑo̞ŋɡe̞]", "ipa")

	def test_jonggae_ph(self):
		self.run_test("종개", "{{ko-IPA}}", "종개/종게", "ph")
	def test_jonggae_rr(self):
		self.run_test("종개", "{{ko-IPA}}", "jonggae", "rr")
	def test_jonggae_rrr(self):
		self.run_test("종개", "{{ko-IPA}}", "jonggae", "rrr")
	def test_jonggae_mr(self):
		self.run_test("종개", "{{ko-IPA}}", "chonggae", "mr")
	def test_jonggae_yr(self):
		self.run_test("종개", "{{ko-IPA}}", "congkay", "yr")
	def test_jonggae_ipa(self):
		self.run_test("종개", "{{ko-IPA}}", "[t͡ɕo̞ŋɡɛ] ~ [t͡ɕo̞ŋɡe̞]", "ipa")

	def test_gireumjonggae_ph(self):
		self.run_test("기름종개", "{{ko-IPA}}", "기름종개/기름종게", "ph")
	def test_gireumjonggae_rr(self):
		self.run_test("기름종개", "{{ko-IPA}}", "gireumjonggae", "rr")
	def test_gireumjonggae_rrr(self):
		self.run_test("기름종개", "{{ko-IPA}}", "gileumjonggae", "rrr")
	def test_gireumjonggae_mr(self):
		self.run_test("기름종개", "{{ko-IPA}}", "kirŭmjonggae", "mr")
	def test_gireumjonggae_yr(self):
		self.run_test("기름종개", "{{ko-IPA}}", "kilumcongkay", "yr")
	def test_gireumjonggae_ipa(self):
		self.run_test("기름종개", "{{ko-IPA}}", "[kiɾɯmd͡ʑo̞ŋɡɛ] ~ [kiɾɯmd͡ʑo̞ŋɡe̞]", "ipa")

	def test_juljonggae_ph(self):
		self.run_test("줄종개", "{{ko-IPA}}", "줄종개/줄종게", "ph")
	def test_juljonggae_rr(self):
		self.run_test("줄종개", "{{ko-IPA}}", "juljonggae", "rr")
	def test_juljonggae_rrr(self):
		self.run_test("줄종개", "{{ko-IPA}}", "juljonggae", "rrr")
	def test_juljonggae_mr(self):
		self.run_test("줄종개", "{{ko-IPA}}", "chuljonggae", "mr")
	def test_juljonggae_yr(self):
		self.run_test("줄종개", "{{ko-IPA}}", "cwulcongkay", "yr")
	def test_juljonggae_ipa(self):
		self.run_test("줄종개", "{{ko-IPA}}", "[t͡ɕuʎd͡ʑo̞ŋɡɛ] ~ [t͡ɕuʎd͡ʑo̞ŋɡe̞]", "ipa")

	def test_bukbangjonggae_ph(self):
		self.run_test("북방종개", "{{ko-IPA}}", "북빵종개/북빵종게", "ph")
	def test_bukbangjonggae_rr(self):
		self.run_test("북방종개", "{{ko-IPA}}", "bukbangjonggae", "rr")
	def test_bukbangjonggae_rrr(self):
		self.run_test("북방종개", "{{ko-IPA}}", "bugbangjonggae", "rrr")
	def test_bukbangjonggae_mr(self):
		self.run_test("북방종개", "{{ko-IPA}}", "pukpangjonggae", "mr")
	def test_bukbangjonggae_yr(self):
		self.run_test("북방종개", "{{ko-IPA}}", "pukpangcongkay", "yr")
	def test_bukbangjonggae_ipa(self):
		self.run_test("북방종개", "{{ko-IPA}}", "[puk̚p͈a̠ŋd͡ʑo̞ŋɡɛ] ~ [puk̚p͈a̠ŋd͡ʑo̞ŋɡe̞]", "ipa")

	def test_gireum_ph(self):
		self.run_test("기름", "{{ko-IPA}}", "기름", "ph")
	def test_gireum_rr(self):
		self.run_test("기름", "{{ko-IPA}}", "gireum", "rr")
	def test_gireum_rrr(self):
		self.run_test("기름", "{{ko-IPA}}", "gileum", "rrr")
	def test_gireum_mr(self):
		self.run_test("기름", "{{ko-IPA}}", "kirŭm", "mr")
	def test_gireum_yr(self):
		self.run_test("기름", "{{ko-IPA}}", "kilum", "yr")
	def test_gireum_ipa(self):
		self.run_test("기름", "{{ko-IPA}}", "[kiɾɯm]", "ipa")
	def test_gireum_ph_1(self):
		self.run_test("기름", "{{ko-IPA}}", "기름", "ph")
	def test_gireum_rr_1(self):
		self.run_test("기름", "{{ko-IPA}}", "gireum", "rr")
	def test_gireum_rrr_1(self):
		self.run_test("기름", "{{ko-IPA}}", "gileum", "rrr")
	def test_gireum_mr_1(self):
		self.run_test("기름", "{{ko-IPA}}", "kirŭm", "mr")
	def test_gireum_yr_1(self):
		self.run_test("기름", "{{ko-IPA}}", "kilum", "yr")
	def test_gireum_ipa_1(self):
		self.run_test("기름", "{{ko-IPA}}", "[kiɾɯm]", "ipa")

	def test_mikkuraji_ph(self):
		self.run_test("미꾸라지", "{{ko-IPA}}", "미꾸라지", "ph")
	def test_mikkuraji_rr(self):
		self.run_test("미꾸라지", "{{ko-IPA}}", "mikkuraji", "rr")
	def test_mikkuraji_rrr(self):
		self.run_test("미꾸라지", "{{ko-IPA}}", "mi'kkulaji", "rrr")
	def test_mikkuraji_mr(self):
		self.run_test("미꾸라지", "{{ko-IPA}}", "mikkuraji", "mr")
	def test_mikkuraji_yr(self):
		self.run_test("미꾸라지", "{{ko-IPA}}", "mi.kkwulaci", "yr")
	def test_mikkuraji_ipa(self):
		self.run_test("미꾸라지", "{{ko-IPA}}", "[mik͈uɾa̠d͡ʑi]", "ipa")

	def test_saekomikkuri_ph(self):
		self.run_test("새코미꾸리", "{{ko-IPA}}", "새코미꾸리/세코미꾸리", "ph")
	def test_saekomikkuri_rr(self):
		self.run_test("새코미꾸리", "{{ko-IPA}}", "saekomikkuri", "rr")
	def test_saekomikkuri_rrr(self):
		self.run_test("새코미꾸리", "{{ko-IPA}}", "saekomi'kkuli", "rrr")
	def test_saekomikkuri_mr(self):
		self.run_test("새코미꾸리", "{{ko-IPA}}", "saek'omikkuri", "mr")
	def test_saekomikkuri_yr(self):
		self.run_test("새코미꾸리", "{{ko-IPA}}", "say.khomi.kkwuli", "yr")
	def test_saekomikkuri_ipa(self):
		self.run_test("새코미꾸리", "{{ko-IPA}}", "[sʰɛkʰo̞mik͈uɾi] ~ [sʰe̞kʰo̞mik͈uɾi]", "ipa")

	def test_jeomjuljonggae_ph(self):
		self.run_test("점줄종개", "{{ko-IPA}}", "점줄종개/점줄종게", "ph")
	def test_jeomjuljonggae_rr(self):
		self.run_test("점줄종개", "{{ko-IPA}}", "jeomjuljonggae", "rr")
	def test_jeomjuljonggae_rrr(self):
		self.run_test("점줄종개", "{{ko-IPA}}", "jeomjuljonggae", "rrr")
	def test_jeomjuljonggae_mr(self):
		self.run_test("점줄종개", "{{ko-IPA}}", "chŏmjuljonggae", "mr")
	def test_jeomjuljonggae_yr(self):
		self.run_test("점줄종개", "{{ko-IPA}}", "cemcwulcongkay", "yr")
	def test_jeomjuljonggae_ipa(self):
		self.run_test("점줄종개", "{{ko-IPA}}", "[t͡ɕʌ̹md͡ʑuʎd͡ʑo̞ŋɡɛ] ~ [t͡ɕʌ̹md͡ʑuʎd͡ʑo̞ŋɡe̞]", "ipa")

	def test_nambangjonggae_ph(self):
		self.run_test("남방종개", "{{ko-IPA}}", "남방종개/남방종게", "ph")
	def test_nambangjonggae_rr(self):
		self.run_test("남방종개", "{{ko-IPA}}", "nambangjonggae", "rr")
	def test_nambangjonggae_rrr(self):
		self.run_test("남방종개", "{{ko-IPA}}", "nambangjonggae", "rrr")
	def test_nambangjonggae_mr(self):
		self.run_test("남방종개", "{{ko-IPA}}", "nambangjonggae", "mr")
	def test_nambangjonggae_yr(self):
		self.run_test("남방종개", "{{ko-IPA}}", "nampangcongkay", "yr")
	def test_nambangjonggae_ipa(self):
		self.run_test("남방종개", "{{ko-IPA}}", "[na̠mba̠ŋd͡ʑo̞ŋɡɛ] ~ [na̠mba̠ŋd͡ʑo̞ŋɡe̞]", "ipa")

	def test_salchi_ph(self):
		self.run_test("살치", "{{ko-IPA}}", "살치", "ph")
	def test_salchi_rr(self):
		self.run_test("살치", "{{ko-IPA}}", "salchi", "rr")
	def test_salchi_rrr(self):
		self.run_test("살치", "{{ko-IPA}}", "salchi", "rrr")
	def test_salchi_mr(self):
		self.run_test("살치", "{{ko-IPA}}", "salch'i", "mr")
	def test_salchi_yr(self):
		self.run_test("살치", "{{ko-IPA}}", "salchi", "yr")
	def test_salchi_ipa(self):
		self.run_test("살치", "{{ko-IPA}}", "[sʰa̠ʎt͡ɕʰi]", "ipa")

	def test_dan_ph(self):
		self.run_test("단", "{{ko-ipa}}", "단", "ph")
	def test_dan_rr(self):
		self.run_test("단", "{{ko-ipa}}", "dan", "rr")
	def test_dan_rrr(self):
		self.run_test("단", "{{ko-ipa}}", "dan", "rrr")
	def test_dan_mr(self):
		self.run_test("단", "{{ko-ipa}}", "tan", "mr")
	def test_dan_yr(self):
		self.run_test("단", "{{ko-ipa}}", "tan", "yr")
	def test_dan_ipa(self):
		self.run_test("단", "{{ko-ipa}}", "[ta̠n]", "ipa")

	def test_susumikkuri_ph(self):
		self.run_test("수수미꾸리", "{{ko-IPA}}", "수수미꾸리", "ph")
	def test_susumikkuri_rr(self):
		self.run_test("수수미꾸리", "{{ko-IPA}}", "susumikkuri", "rr")
	def test_susumikkuri_rrr(self):
		self.run_test("수수미꾸리", "{{ko-IPA}}", "susumi'kkuli", "rrr")
	def test_susumikkuri_mr(self):
		self.run_test("수수미꾸리", "{{ko-IPA}}", "susumikkuri", "mr")
	def test_susumikkuri_yr(self):
		self.run_test("수수미꾸리", "{{ko-IPA}}", "swuswumi.kkwuli", "yr")
	def test_susumikkuri_ipa(self):
		self.run_test("수수미꾸리", "{{ko-IPA}}", "[sʰusʰumik͈uɾi]", "ipa")

	def test_jomsusuchi_ph(self):
		self.run_test("좀수수치", "{{ko-IPA}}", "좀수수치", "ph")
	def test_jomsusuchi_rr(self):
		self.run_test("좀수수치", "{{ko-IPA}}", "jomsusuchi", "rr")
	def test_jomsusuchi_rrr(self):
		self.run_test("좀수수치", "{{ko-IPA}}", "jomsusuchi", "rrr")
	def test_jomsusuchi_mr(self):
		self.run_test("좀수수치", "{{ko-IPA}}", "chomsusuch'i", "mr")
	def test_jomsusuchi_yr(self):
		self.run_test("좀수수치", "{{ko-IPA}}", "comswuswu.chi", "yr")
	def test_jomsusuchi_ipa(self):
		self.run_test("좀수수치", "{{ko-IPA}}", "[t͡ɕo̞msʰusʰut͡ɕʰi]", "ipa")

	def test_dongjagae_ph(self):
		self.run_test("동자개", "{{ko-IPA}}", "동자개/동자게", "ph")
	def test_dongjagae_rr(self):
		self.run_test("동자개", "{{ko-IPA}}", "dongjagae", "rr")
	def test_dongjagae_rrr(self):
		self.run_test("동자개", "{{ko-IPA}}", "dongjagae", "rrr")
	def test_dongjagae_mr(self):
		self.run_test("동자개", "{{ko-IPA}}", "tongjagae", "mr")
	def test_dongjagae_yr(self):
		self.run_test("동자개", "{{ko-IPA}}", "tongcakay", "yr")
	def test_dongjagae_ipa(self):
		self.run_test("동자개", "{{ko-IPA}}", "[to̞ŋd͡ʑa̠ɡɛ] ~ [to̞ŋd͡ʑa̠ɡe̞]", "ipa")

	def test_nundongjagae_ph(self):
		self.run_test("눈동자개", "{{ko-IPA}}", "눈동자개/눈동자게", "ph")
	def test_nundongjagae_rr(self):
		self.run_test("눈동자개", "{{ko-IPA}}", "nundongjagae", "rr")
	def test_nundongjagae_rrr(self):
		self.run_test("눈동자개", "{{ko-IPA}}", "nundongjagae", "rrr")
	def test_nundongjagae_mr(self):
		self.run_test("눈동자개", "{{ko-IPA}}", "nundongjagae", "mr")
	def test_nundongjagae_yr(self):
		self.run_test("눈동자개", "{{ko-IPA}}", "nwuntongcakay", "yr")
	def test_nundongjagae_ipa(self):
		self.run_test("눈동자개", "{{ko-IPA}}", "[nundo̞ŋd͡ʑa̠ɡɛ] ~ [nundo̞ŋd͡ʑa̠ɡe̞]", "ipa")

	def test_kkochidongjagae_ph(self):
		self.run_test("꼬치동자개", "{{ko-IPA}}", "꼬치동자개/꼬치동자게", "ph")
	def test_kkochidongjagae_rr(self):
		self.run_test("꼬치동자개", "{{ko-IPA}}", "kkochidongjagae", "rr")
	def test_kkochidongjagae_rrr(self):
		self.run_test("꼬치동자개", "{{ko-IPA}}", "kkochidongjagae", "rrr")
	def test_kkochidongjagae_mr(self):
		self.run_test("꼬치동자개", "{{ko-IPA}}", "kkoch'idongjagae", "mr")
	def test_kkochidongjagae_yr(self):
		self.run_test("꼬치동자개", "{{ko-IPA}}", "kko.chitongcakay", "yr")
	def test_kkochidongjagae_ipa(self):
		self.run_test("꼬치동자개", "{{ko-IPA}}", "[k͈o̞t͡ɕʰido̞ŋd͡ʑa̠ɡɛ] ~ [k͈o̞t͡ɕʰido̞ŋd͡ʑa̠ɡe̞]", "ipa")

	def test_daenonggaengi_ph(self):
		self.run_test("대농갱이", "{{ko-IPA}}", "대농갱이/데농겡이", "ph")
	def test_daenonggaengi_rr(self):
		self.run_test("대농갱이", "{{ko-IPA}}", "daenonggaeng'i", "rr")
	def test_daenonggaengi_rrr(self):
		self.run_test("대농갱이", "{{ko-IPA}}", "daenonggaeng'i", "rrr")
	def test_daenonggaengi_mr(self):
		self.run_test("대농갱이", "{{ko-IPA}}", "taenonggaengi", "mr")
	def test_daenonggaengi_yr(self):
		self.run_test("대농갱이", "{{ko-IPA}}", "taynongkayngi", "yr")
	def test_daenonggaengi_ipa(self):
		self.run_test("대농갱이", "{{ko-IPA}}", "[tɛno̞ŋɡɛŋi] ~ [te̞no̞ŋɡe̞ŋi]", "ipa")

	def test_miljagae_ph(self):
		self.run_test("밀자개", "{{ko-IPA}}", "밀자개/밀자게", "ph")
	def test_miljagae_rr(self):
		self.run_test("밀자개", "{{ko-IPA}}", "miljagae", "rr")
	def test_miljagae_rrr(self):
		self.run_test("밀자개", "{{ko-IPA}}", "miljagae", "rrr")
	def test_miljagae_mr(self):
		self.run_test("밀자개", "{{ko-IPA}}", "miljagae", "mr")
	def test_miljagae_yr(self):
		self.run_test("밀자개", "{{ko-IPA}}", "milcakay", "yr")
	def test_miljagae_ipa(self):
		self.run_test("밀자개", "{{ko-IPA}}", "[miʎd͡ʑa̠ɡɛ] ~ [miʎd͡ʑa̠ɡe̞]", "ipa")

	def test_jongeo_ph(self):
		self.run_test("종어", "{{ko-IPA}}", "종어", "ph")
	def test_jongeo_rr(self):
		self.run_test("종어", "{{ko-IPA}}", "jong'eo", "rr")
	def test_jongeo_rrr(self):
		self.run_test("종어", "{{ko-IPA}}", "jong'eo", "rrr")
	def test_jongeo_mr(self):
		self.run_test("종어", "{{ko-IPA}}", "chongŏ", "mr")
	def test_jongeo_yr(self):
		self.run_test("종어", "{{ko-IPA}}", "conge", "yr")
	def test_jongeo_ipa(self):
		self.run_test("종어", "{{ko-IPA}}", "[t͡ɕo̞ŋʌ̹]", "ipa")

	def test_megi_ph(self):
		self.run_test("메기", "{{ko-IPA|l=y}}", "메(ː)기", "ph")
	def test_megi_rr(self):
		self.run_test("메기", "{{ko-IPA|l=y}}", "megi", "rr")
	def test_megi_rrr(self):
		self.run_test("메기", "{{ko-IPA|l=y}}", "megi", "rrr")
	def test_megi_mr(self):
		self.run_test("메기", "{{ko-IPA|l=y}}", "megi", "mr")
	def test_megi_yr(self):
		self.run_test("메기", "{{ko-IPA|l=y}}", "mēyki", "yr")
	def test_megi_ipa(self):
		self.run_test("메기", "{{ko-IPA|l=y}}", "[ˈme̞(ː)ɡi]", "ipa")

	def test_miyugi_ph(self):
		self.run_test("미유기", "{{ko-IPA}}", "미유기", "ph")
	def test_miyugi_rr(self):
		self.run_test("미유기", "{{ko-IPA}}", "miyugi", "rr")
	def test_miyugi_rrr(self):
		self.run_test("미유기", "{{ko-IPA}}", "miyugi", "rrr")
	def test_miyugi_mr(self):
		self.run_test("미유기", "{{ko-IPA}}", "miyugi", "mr")
	def test_miyugi_yr(self):
		self.run_test("미유기", "{{ko-IPA}}", "miyuki", "yr")
	def test_miyugi_ipa(self):
		self.run_test("미유기", "{{ko-IPA}}", "[mijuɡi]", "ipa")

	def test_channeldongjagae_ph(self):
		self.run_test("찬넬동자개", "{{ko-IPA}}", "찬넬동자개/찬넬동자게", "ph")
	def test_channeldongjagae_rr(self):
		self.run_test("찬넬동자개", "{{ko-IPA}}", "channeldongjagae", "rr")
	def test_channeldongjagae_rrr(self):
		self.run_test("찬넬동자개", "{{ko-IPA}}", "channeldongjagae", "rrr")
	def test_channeldongjagae_mr(self):
		self.run_test("찬넬동자개", "{{ko-IPA}}", "ch'anneldongjagae", "mr")
	def test_channeldongjagae_yr(self):
		self.run_test("찬넬동자개", "{{ko-IPA}}", "channeyltongcakay", "yr")
	def test_channeldongjagae_ipa(self):
		self.run_test("찬넬동자개", "{{ko-IPA}}", "[t͡ɕʰa̠nne̞ɭdo̞ŋd͡ʑa̠ɡɛ] ~ [t͡ɕʰa̠nne̞ɭdo̞ŋd͡ʑa̠ɡe̞]", "ipa")

	def test_jagasari_ph(self):
		self.run_test("자가사리", "{{ko-IPA}}", "자가사리", "ph")
	def test_jagasari_rr(self):
		self.run_test("자가사리", "{{ko-IPA}}", "jagasari", "rr")
	def test_jagasari_rrr(self):
		self.run_test("자가사리", "{{ko-IPA}}", "jagasali", "rrr")
	def test_jagasari_mr(self):
		self.run_test("자가사리", "{{ko-IPA}}", "chagasari", "mr")
	def test_jagasari_yr(self):
		self.run_test("자가사리", "{{ko-IPA}}", "cakasali", "yr")
	def test_jagasari_ipa(self):
		self.run_test("자가사리", "{{ko-IPA}}", "[t͡ɕa̠ɡa̠sʰa̠ɾi]", "ipa")

	def test_tonggari_ph(self):
		self.run_test("통가리", "{{ko-IPA}}", "통가리", "ph")
	def test_tonggari_rr(self):
		self.run_test("통가리", "{{ko-IPA}}", "tonggari", "rr")
	def test_tonggari_rrr(self):
		self.run_test("통가리", "{{ko-IPA}}", "tonggali", "rrr")
	def test_tonggari_mr(self):
		self.run_test("통가리", "{{ko-IPA}}", "t'onggari", "mr")
	def test_tonggari_yr(self):
		self.run_test("통가리", "{{ko-IPA}}", "thongkali", "yr")
	def test_tonggari_ipa(self):
		self.run_test("통가리", "{{ko-IPA}}", "[tʰo̞ŋɡa̠ɾi]", "ipa")

	def test_tongsari_ph(self):
		self.run_test("통사리", "{{ko-IPA}}", "통사리", "ph")
	def test_tongsari_rr(self):
		self.run_test("통사리", "{{ko-IPA}}", "tongsari", "rr")
	def test_tongsari_rrr(self):
		self.run_test("통사리", "{{ko-IPA}}", "tongsali", "rrr")
	def test_tongsari_mr(self):
		self.run_test("통사리", "{{ko-IPA}}", "t'ongsari", "mr")
	def test_tongsari_yr(self):
		self.run_test("통사리", "{{ko-IPA}}", "thongsali", "yr")
	def test_tongsari_ipa(self):
		self.run_test("통사리", "{{ko-IPA}}", "[tʰo̞ŋsʰa̠ɾi]", "ipa")

	def test_bingeo_ph(self):
		self.run_test("빙어", "{{ko-IPA}}", "빙어", "ph")
	def test_bingeo_rr(self):
		self.run_test("빙어", "{{ko-IPA}}", "bing'eo", "rr")
	def test_bingeo_rrr(self):
		self.run_test("빙어", "{{ko-IPA}}", "bing'eo", "rrr")
	def test_bingeo_mr(self):
		self.run_test("빙어", "{{ko-IPA}}", "pingŏ", "mr")
	def test_bingeo_yr(self):
		self.run_test("빙어", "{{ko-IPA}}", "pinge", "yr")
	def test_bingeo_ipa(self):
		self.run_test("빙어", "{{ko-IPA}}", "[piŋʌ̹]", "ipa")

	def test_euneo_ph(self):
		self.run_test("은어", "{{ko-IPA}}", "으너", "ph")
	def test_euneo_rr(self):
		self.run_test("은어", "{{ko-IPA}}", "euneo", "rr")
	def test_euneo_rrr(self):
		self.run_test("은어", "{{ko-IPA}}", "eun'eo", "rrr")
	def test_euneo_mr(self):
		self.run_test("은어", "{{ko-IPA}}", "ŭnŏ", "mr")
	def test_euneo_yr(self):
		self.run_test("은어", "{{ko-IPA}}", "un.e", "yr")
	def test_euneo_ipa(self):
		self.run_test("은어", "{{ko-IPA}}", "[ɯnʌ̹]", "ipa")
	def test_euneo_ph_1(self):
		self.run_test("은어", "{{ko-IPA}}", "으너", "ph")
	def test_euneo_rr_1(self):
		self.run_test("은어", "{{ko-IPA}}", "euneo", "rr")
	def test_euneo_rrr_1(self):
		self.run_test("은어", "{{ko-IPA}}", "eun'eo", "rrr")
	def test_euneo_mr_1(self):
		self.run_test("은어", "{{ko-IPA}}", "ŭnŏ", "mr")
	def test_euneo_yr_1(self):
		self.run_test("은어", "{{ko-IPA}}", "un.e", "yr")
	def test_euneo_ipa_1(self):
		self.run_test("은어", "{{ko-IPA}}", "[ɯnʌ̹]", "ipa")

	def test_guksubaengeo_ph(self):
		self.run_test("국수뱅어", "{{ko-IPA}}", "국쑤뱅어/국쑤벵어", "ph")
	def test_guksubaengeo_rr(self):
		self.run_test("국수뱅어", "{{ko-IPA}}", "guksubaeng'eo", "rr")
	def test_guksubaengeo_rrr(self):
		self.run_test("국수뱅어", "{{ko-IPA}}", "gugsubaeng'eo", "rrr")
	def test_guksubaengeo_mr(self):
		self.run_test("국수뱅어", "{{ko-IPA}}", "kuksubaengŏ", "mr")
	def test_guksubaengeo_yr(self):
		self.run_test("국수뱅어", "{{ko-IPA}}", "kwuk.swupaynge", "yr")
	def test_guksubaengeo_ipa(self):
		self.run_test("국수뱅어", "{{ko-IPA}}", "[kuks͈ubɛŋʌ̹] ~ [kuks͈ube̞ŋʌ̹]", "ipa")

	def test_beotkkotbaengeo_ph(self):
		self.run_test("벚꽃뱅어", "{{ko-IPA}}", "벋꼳뺑어/벋꼳뼁어", "ph")
	def test_beotkkotbaengeo_rr(self):
		self.run_test("벚꽃뱅어", "{{ko-IPA}}", "beotkkotbaeng'eo", "rr")
	def test_beotkkotbaengeo_rrr(self):
		self.run_test("벚꽃뱅어", "{{ko-IPA}}", "beojkkochbaeng'eo", "rrr")
	def test_beotkkotbaengeo_mr(self):
		self.run_test("벚꽃뱅어", "{{ko-IPA}}", "pŏtkkotpaengŏ", "mr")
	def test_beotkkotbaengeo_yr(self):
		self.run_test("벚꽃뱅어", "{{ko-IPA}}", "peckkochpaynge", "yr")
	def test_beotkkotbaengeo_ipa(self):
		self.run_test("벚꽃뱅어", "{{ko-IPA}}", "[pʌ̹t̚k͈o̞t̚p͈ɛŋʌ̹] ~ [pʌ̹t̚k͈o̞t̚p͈e̞ŋʌ̹]", "ipa")

	def test_dohwabaengeo_ph(self):
		self.run_test("도화뱅어", "{{ko-IPA}}", "도화뱅어/도화벵어", "ph")
	def test_dohwabaengeo_rr(self):
		self.run_test("도화뱅어", "{{ko-IPA}}", "dohwabaeng'eo", "rr")
	def test_dohwabaengeo_rrr(self):
		self.run_test("도화뱅어", "{{ko-IPA}}", "dohwabaeng'eo", "rrr")
	def test_dohwabaengeo_mr(self):
		self.run_test("도화뱅어", "{{ko-IPA}}", "tohwabaengŏ", "mr")
	def test_dohwabaengeo_yr(self):
		self.run_test("도화뱅어", "{{ko-IPA}}", "tohwapaynge", "yr")
	def test_dohwabaengeo_ipa(self):
		self.run_test("도화뱅어", "{{ko-IPA}}", "[to̞βwa̠bɛŋʌ̹] ~ [to̞βwa̠be̞ŋʌ̹]", "ipa")

	def test_jeotbaengeo_ph(self):
		self.run_test("젓뱅어", "{{ko-IPA}}", "젇뺑어/젇뼁어", "ph")
	def test_jeotbaengeo_rr(self):
		self.run_test("젓뱅어", "{{ko-IPA}}", "jeotbaeng'eo", "rr")
	def test_jeotbaengeo_rrr(self):
		self.run_test("젓뱅어", "{{ko-IPA}}", "jeosbaeng'eo", "rrr")
	def test_jeotbaengeo_mr(self):
		self.run_test("젓뱅어", "{{ko-IPA}}", "chŏtpaengŏ", "mr")
	def test_jeotbaengeo_yr(self):
		self.run_test("젓뱅어", "{{ko-IPA}}", "cespaynge", "yr")
	def test_jeotbaengeo_ipa(self):
		self.run_test("젓뱅어", "{{ko-IPA}}", "[t͡ɕʌ̹t̚p͈ɛŋʌ̹] ~ [t͡ɕʌ̹t̚p͈e̞ŋʌ̹]", "ipa")

	def test_silbaengeo_ph(self):
		self.run_test("실뱅어", "{{ko-IPA|l=y}}", "실(ː)뱅어/실(ː)벵어", "ph")
	def test_silbaengeo_rr(self):
		self.run_test("실뱅어", "{{ko-IPA|l=y}}", "silbaeng'eo", "rr")
	def test_silbaengeo_rrr(self):
		self.run_test("실뱅어", "{{ko-IPA|l=y}}", "silbaeng'eo", "rrr")
	def test_silbaengeo_mr(self):
		self.run_test("실뱅어", "{{ko-IPA|l=y}}", "silbaengŏ", "mr")
	def test_silbaengeo_yr(self):
		self.run_test("실뱅어", "{{ko-IPA|l=y}}", "sīl.paynge", "yr")
	def test_silbaengeo_ipa(self):
		self.run_test("실뱅어", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)ɭbɛŋʌ̹] ~ [ˈɕʰi(ː)ɭbe̞ŋʌ̹]", "ipa")

	def test_bungtungbaengeo_ph(self):
		self.run_test("붕퉁뱅어", "{{ko-IPA}}", "붕퉁뱅어/붕퉁벵어", "ph")
	def test_bungtungbaengeo_rr(self):
		self.run_test("붕퉁뱅어", "{{ko-IPA}}", "bungtungbaeng'eo", "rr")
	def test_bungtungbaengeo_rrr(self):
		self.run_test("붕퉁뱅어", "{{ko-IPA}}", "bungtungbaeng'eo", "rrr")
	def test_bungtungbaengeo_mr(self):
		self.run_test("붕퉁뱅어", "{{ko-IPA}}", "pungt'ungbaengŏ", "mr")
	def test_bungtungbaengeo_yr(self):
		self.run_test("붕퉁뱅어", "{{ko-IPA}}", "pungthwungpaynge", "yr")
	def test_bungtungbaengeo_ipa(self):
		self.run_test("붕퉁뱅어", "{{ko-IPA}}", "[puŋtʰuŋbɛŋʌ̹] ~ [puŋtʰuŋbe̞ŋʌ̹]", "ipa")

	def test_baengeo_ph(self):
		self.run_test("뱅어", "{{ko-IPA|l=y}}", "뱅(ː)어/벵(ː)어", "ph")
	def test_baengeo_rr(self):
		self.run_test("뱅어", "{{ko-IPA|l=y}}", "baeng'eo", "rr")
	def test_baengeo_rrr(self):
		self.run_test("뱅어", "{{ko-IPA|l=y}}", "baeng'eo", "rrr")
	def test_baengeo_mr(self):
		self.run_test("뱅어", "{{ko-IPA|l=y}}", "paengŏ", "mr")
	def test_baengeo_yr(self):
		self.run_test("뱅어", "{{ko-IPA|l=y}}", "pāynge", "yr")
	def test_baengeo_ipa(self):
		self.run_test("뱅어", "{{ko-IPA|l=y}}", "[ˈpɛ(ː)ŋʌ̹] ~ [ˈpe̞(ː)ŋʌ̹]", "ipa")

	def test_sarugi_ph(self):
		self.run_test("사루기", "{{ko-IPA}}", "사루기", "ph")
	def test_sarugi_rr(self):
		self.run_test("사루기", "{{ko-IPA}}", "sarugi", "rr")
	def test_sarugi_rrr(self):
		self.run_test("사루기", "{{ko-IPA}}", "salugi", "rrr")
	def test_sarugi_mr(self):
		self.run_test("사루기", "{{ko-IPA}}", "sarugi", "mr")
	def test_sarugi_yr(self):
		self.run_test("사루기", "{{ko-IPA}}", "salwuki", "yr")
	def test_sarugi_ipa(self):
		self.run_test("사루기", "{{ko-IPA}}", "[sʰa̠ɾuɡi]", "ipa")

	def test_yeolmogeo_ph(self):
		self.run_test("열목어", "{{ko-IPA}}", "열모거", "ph")
	def test_yeolmogeo_rr(self):
		self.run_test("열목어", "{{ko-IPA}}", "yeolmogeo", "rr")
	def test_yeolmogeo_rrr(self):
		self.run_test("열목어", "{{ko-IPA}}", "yeolmog'eo", "rrr")
	def test_yeolmogeo_mr(self):
		self.run_test("열목어", "{{ko-IPA}}", "yŏlmogŏ", "mr")
	def test_yeolmogeo_yr(self):
		self.run_test("열목어", "{{ko-IPA}}", "yel.mok.e", "yr")
	def test_yeolmogeo_ipa(self):
		self.run_test("열목어", "{{ko-IPA}}", "[jʌ̹ɭmo̞ɡʌ̹]", "ipa")

	def test_yeoneo_ph(self):
		self.run_test("연어", "{{ko-IPA}}", "여너", "ph")
	def test_yeoneo_rr(self):
		self.run_test("연어", "{{ko-IPA}}", "yeoneo", "rr")
	def test_yeoneo_rrr(self):
		self.run_test("연어", "{{ko-IPA}}", "yeon'eo", "rrr")
	def test_yeoneo_mr(self):
		self.run_test("연어", "{{ko-IPA}}", "yŏnŏ", "mr")
	def test_yeoneo_yr(self):
		self.run_test("연어", "{{ko-IPA}}", "yen.e", "yr")
	def test_yeoneo_ipa(self):
		self.run_test("연어", "{{ko-IPA}}", "[jʌ̹nʌ̹]", "ipa")

	def test_gopsayeoneo_ph(self):
		self.run_test("곱사연어", "{{ko-IPA}}", "곱싸여너", "ph")
	def test_gopsayeoneo_rr(self):
		self.run_test("곱사연어", "{{ko-IPA}}", "gopsayeoneo", "rr")
	def test_gopsayeoneo_rrr(self):
		self.run_test("곱사연어", "{{ko-IPA}}", "gobsayeon'eo", "rrr")
	def test_gopsayeoneo_mr(self):
		self.run_test("곱사연어", "{{ko-IPA}}", "kopsayŏnŏ", "mr")
	def test_gopsayeoneo_yr(self):
		self.run_test("곱사연어", "{{ko-IPA}}", "kop.sa.yen.e", "yr")
	def test_gopsayeoneo_ipa(self):
		self.run_test("곱사연어", "{{ko-IPA}}", "[ko̞ps͈a̠jʌ̹nʌ̹]", "ipa")

	def test_songeo_ph(self):
		self.run_test("송어", "{{ko-IPA}}", "송어", "ph")
	def test_songeo_rr(self):
		self.run_test("송어", "{{ko-IPA}}", "song'eo", "rr")
	def test_songeo_rrr(self):
		self.run_test("송어", "{{ko-IPA}}", "song'eo", "rrr")
	def test_songeo_mr(self):
		self.run_test("송어", "{{ko-IPA}}", "songŏ", "mr")
	def test_songeo_yr(self):
		self.run_test("송어", "{{ko-IPA}}", "songe", "yr")
	def test_songeo_ipa(self):
		self.run_test("송어", "{{ko-IPA}}", "[sʰo̞ŋʌ̹]", "ipa")

	def test_eunnyeoneo_ph(self):
		self.run_test("은연어", "{{ko-IPA|ni=2}}", "은녀너", "ph")
	def test_eunnyeoneo_rr(self):
		self.run_test("은연어", "{{ko-IPA|ni=2}}", "eunnyeoneo", "rr")
	def test_eunnyeoneo_rrr(self):
		self.run_test("은연어", "{{ko-IPA|ni=2}}", "eun'yeon'eo", "rrr")
	def test_eunnyeoneo_mr(self):
		self.run_test("은연어", "{{ko-IPA|ni=2}}", "ŭnnyŏnŏ", "mr")
	def test_eunnyeoneo_yr(self):
		self.run_test("은연어", "{{ko-IPA|ni=2}}", "unnyen.e", "yr")
	def test_eunnyeoneo_ipa(self):
		self.run_test("은연어", "{{ko-IPA|ni=2}}", "[ɯnɲʌ̹nʌ̹]", "ipa")

	def test_jachi_ph(self):
		self.run_test("자치", "{{ko-IPA}}", "자치", "ph")
	def test_jachi_rr(self):
		self.run_test("자치", "{{ko-IPA}}", "jachi", "rr")
	def test_jachi_rrr(self):
		self.run_test("자치", "{{ko-IPA}}", "jachi", "rrr")
	def test_jachi_mr(self):
		self.run_test("자치", "{{ko-IPA}}", "chach'i", "mr")
	def test_jachi_yr(self):
		self.run_test("자치", "{{ko-IPA}}", "ca.chi", "yr")
	def test_jachi_ipa(self):
		self.run_test("자치", "{{ko-IPA}}", "[t͡ɕa̠t͡ɕʰi]", "ipa")

	def test_hongsongeo_ph(self):
		self.run_test("홍송어", "{{ko-IPA}}", "홍송어", "ph")
	def test_hongsongeo_rr(self):
		self.run_test("홍송어", "{{ko-IPA}}", "hongsong'eo", "rr")
	def test_hongsongeo_rrr(self):
		self.run_test("홍송어", "{{ko-IPA}}", "hongsong'eo", "rrr")
	def test_hongsongeo_mr(self):
		self.run_test("홍송어", "{{ko-IPA}}", "hongsongŏ", "mr")
	def test_hongsongeo_yr(self):
		self.run_test("홍송어", "{{ko-IPA}}", "hongsonge", "yr")
	def test_hongsongeo_ipa(self):
		self.run_test("홍송어", "{{ko-IPA}}", "[ɸʷo̞ŋsʰo̞ŋʌ̹]", "ipa")

	def test_gondeulmaegi_ph(self):
		self.run_test("곤들매기", "{{ko-IPA}}", "곤들매기/곤들메기", "ph")
	def test_gondeulmaegi_rr(self):
		self.run_test("곤들매기", "{{ko-IPA}}", "gondeulmaegi", "rr")
	def test_gondeulmaegi_rrr(self):
		self.run_test("곤들매기", "{{ko-IPA}}", "gondeulmaegi", "rrr")
	def test_gondeulmaegi_mr(self):
		self.run_test("곤들매기", "{{ko-IPA}}", "kondŭlmaegi", "mr")
	def test_gondeulmaegi_yr(self):
		self.run_test("곤들매기", "{{ko-IPA}}", "kontul.mayki", "yr")
	def test_gondeulmaegi_ipa(self):
		self.run_test("곤들매기", "{{ko-IPA}}", "[ko̞ndɯɭmɛɡi] ~ [ko̞ndɯɭme̞ɡi]", "ipa")

	def test_mooke_ph(self):
		self.run_test("모오케", "{{ko-IPA}}", "모오케", "ph")
	def test_mooke_rr(self):
		self.run_test("모오케", "{{ko-IPA}}", "mooke", "rr")
	def test_mooke_rrr(self):
		self.run_test("모오케", "{{ko-IPA}}", "mooke", "rrr")
	def test_mooke_mr(self):
		self.run_test("모오케", "{{ko-IPA}}", "mook'e", "mr")
	def test_mooke_yr(self):
		self.run_test("모오케", "{{ko-IPA}}", "moo.khey", "yr")
	def test_mooke_ipa(self):
		self.run_test("모오케", "{{ko-IPA}}", "[mo̞o̞kʰe̞]", "ipa")

	def test_sungeo_ph(self):
		self.run_test("숭어", "{{ko-IPA|l=y}}", "숭(ː)어", "ph")
	def test_sungeo_rr(self):
		self.run_test("숭어", "{{ko-IPA|l=y}}", "sung'eo", "rr")
	def test_sungeo_rrr(self):
		self.run_test("숭어", "{{ko-IPA|l=y}}", "sung'eo", "rrr")
	def test_sungeo_mr(self):
		self.run_test("숭어", "{{ko-IPA|l=y}}", "sungŏ", "mr")
	def test_sungeo_yr(self):
		self.run_test("숭어", "{{ko-IPA|l=y}}", "swūnge", "yr")
	def test_sungeo_ipa(self):
		self.run_test("숭어", "{{ko-IPA|l=y}}", "[ˈsʰu(ː)ŋʌ̹]", "ipa")

	def test_deungjulsungeo_ph(self):
		self.run_test("등줄숭어", "{{ko-IPA|com=1}}", "등쭐숭어", "ph")
	def test_deungjulsungeo_rr(self):
		self.run_test("등줄숭어", "{{ko-IPA|com=1}}", "deungjulsung'eo", "rr")
	def test_deungjulsungeo_rrr(self):
		self.run_test("등줄숭어", "{{ko-IPA|com=1}}", "deungjulsung'eo", "rrr")
	def test_deungjulsungeo_mr(self):
		self.run_test("등줄숭어", "{{ko-IPA|com=1}}", "tŭngchulsungŏ", "mr")
	def test_deungjulsungeo_yr(self):
		self.run_test("등줄숭어", "{{ko-IPA|com=1}}", "tungqcwul.swunge", "yr")
	def test_deungjulsungeo_ipa(self):
		self.run_test("등줄숭어", "{{ko-IPA|com=1}}", "[tɯŋt͡ɕ͈uɭsʰuŋʌ̹]", "ipa")

	def test_gasungeo_ph(self):
		self.run_test("가숭어", "{{ko-IPA|l=y}}", "가(ː)숭어", "ph")
	def test_gasungeo_rr(self):
		self.run_test("가숭어", "{{ko-IPA|l=y}}", "gasung'eo", "rr")
	def test_gasungeo_rrr(self):
		self.run_test("가숭어", "{{ko-IPA|l=y}}", "gasung'eo", "rrr")
	def test_gasungeo_mr(self):
		self.run_test("가숭어", "{{ko-IPA|l=y}}", "kasungŏ", "mr")
	def test_gasungeo_yr(self):
		self.run_test("가숭어", "{{ko-IPA|l=y}}", "kāswunge", "yr")
	def test_gasungeo_ipa(self):
		self.run_test("가숭어", "{{ko-IPA|l=y}}", "[ˈka̠(ː)sʰuŋʌ̹]", "ipa")

	def test_songsari_ph(self):
		self.run_test("송사리", "{{ko-IPA|l=y}}", "송(ː)사리", "ph")
	def test_songsari_rr(self):
		self.run_test("송사리", "{{ko-IPA|l=y}}", "songsari", "rr")
	def test_songsari_rrr(self):
		self.run_test("송사리", "{{ko-IPA|l=y}}", "songsali", "rrr")
	def test_songsari_mr(self):
		self.run_test("송사리", "{{ko-IPA|l=y}}", "songsari", "mr")
	def test_songsari_yr(self):
		self.run_test("송사리", "{{ko-IPA|l=y}}", "sōngsali", "yr")
	def test_songsari_ipa(self):
		self.run_test("송사리", "{{ko-IPA|l=y}}", "[ˈsʰo̞(ː)ŋsʰa̠ɾi]", "ipa")


	def test_daeryuksongsari_ph(self):
		self.run_test("대륙송사리", "{{ko-IPA|l=y}}", "대(ː)륙쏭사리/데(ː)륙쏭사리", "ph")
	def test_daeryuksongsari_rr(self):
		self.run_test("대륙송사리", "{{ko-IPA|l=y}}", "daeryuksongsari", "rr")
	def test_daeryuksongsari_rrr(self):
		self.run_test("대륙송사리", "{{ko-IPA|l=y}}", "daelyugsongsali", "rrr")
	def test_daeryuksongsari_mr(self):
		self.run_test("대륙송사리", "{{ko-IPA|l=y}}", "taeryuksongsari", "mr")
	def test_daeryuksongsari_yr(self):
		self.run_test("대륙송사리", "{{ko-IPA|l=y}}", "tāylyuk.songsali", "yr")
	def test_daeryuksongsari_ipa(self):
		self.run_test("대륙송사리", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)ɾjuks͈o̞ŋsʰa̠ɾi] ~ [ˈte̞(ː)ɾjuks͈o̞ŋsʰa̠ɾi]", "ipa")

	def test_julgongchi_ph(self):
		self.run_test("줄공치", "{{ko-IPA}}", "줄공치", "ph")
	def test_julgongchi_rr(self):
		self.run_test("줄공치", "{{ko-IPA}}", "julgongchi", "rr")
	def test_julgongchi_rrr(self):
		self.run_test("줄공치", "{{ko-IPA}}", "julgongchi", "rrr")
	def test_julgongchi_mr(self):
		self.run_test("줄공치", "{{ko-IPA}}", "chulgongch'i", "mr")
	def test_julgongchi_yr(self):
		self.run_test("줄공치", "{{ko-IPA}}", "cwul.kongchi", "yr")
	def test_julgongchi_ipa(self):
		self.run_test("줄공치", "{{ko-IPA}}", "[t͡ɕuɭɡo̞ŋt͡ɕʰi]", "ipa")

	def test_hakgongchi_ph(self):
		self.run_test("학공치", "{{ko-IPA}}", "학꽁치", "ph")
	def test_hakgongchi_rr(self):
		self.run_test("학공치", "{{ko-IPA}}", "hakgongchi", "rr")
	def test_hakgongchi_rrr(self):
		self.run_test("학공치", "{{ko-IPA}}", "haggongchi", "rrr")
	def test_hakgongchi_mr(self):
		self.run_test("학공치", "{{ko-IPA}}", "hakkongch'i", "mr")
	def test_hakgongchi_yr(self):
		self.run_test("학공치", "{{ko-IPA}}", "hak.kongchi", "yr")
	def test_hakgongchi_ipa(self):
		self.run_test("학공치", "{{ko-IPA}}", "[ha̠k̚k͈o̞ŋt͡ɕʰi]", "ipa")

	def test_keungasigogi_ph(self):
		self.run_test("큰가시고기", "{{ko-IPA}}", "큰가시고기", "ph")
	def test_keungasigogi_rr(self):
		self.run_test("큰가시고기", "{{ko-IPA}}", "keun'gasigogi", "rr")
	def test_keungasigogi_rrr(self):
		self.run_test("큰가시고기", "{{ko-IPA}}", "keungasigogi", "rrr")
	def test_keungasigogi_mr(self):
		self.run_test("큰가시고기", "{{ko-IPA}}", "k'ŭn'gasigogi", "mr")
	def test_keungasigogi_yr(self):
		self.run_test("큰가시고기", "{{ko-IPA}}", "khunkasikoki", "yr")
	def test_keungasigogi_ipa(self):
		self.run_test("큰가시고기", "{{ko-IPA}}", "[kxɯnɡa̠ɕʰiɡo̞ɡi]", "ipa")

	def test_gasigogi_ph(self):
		self.run_test("가시고기", "{{ko-IPA}}", "가시고기", "ph")
	def test_gasigogi_rr(self):
		self.run_test("가시고기", "{{ko-IPA}}", "gasigogi", "rr")
	def test_gasigogi_rrr(self):
		self.run_test("가시고기", "{{ko-IPA}}", "gasigogi", "rrr")
	def test_gasigogi_mr(self):
		self.run_test("가시고기", "{{ko-IPA}}", "kasigogi", "mr")
	def test_gasigogi_yr(self):
		self.run_test("가시고기", "{{ko-IPA}}", "kasikoki", "yr")
	def test_gasigogi_ipa(self):
		self.run_test("가시고기", "{{ko-IPA}}", "[ka̠ɕʰiɡo̞ɡi]", "ipa")

	def test_dumangasigogi_ph(self):
		self.run_test("두만가시고기", "{{ko-IPA}}", "두만가시고기", "ph")
	def test_dumangasigogi_rr(self):
		self.run_test("두만가시고기", "{{ko-IPA}}", "duman'gasigogi", "rr")
	def test_dumangasigogi_rrr(self):
		self.run_test("두만가시고기", "{{ko-IPA}}", "dumangasigogi", "rrr")
	def test_dumangasigogi_mr(self):
		self.run_test("두만가시고기", "{{ko-IPA}}", "tuman'gasigogi", "mr")
	def test_dumangasigogi_yr(self):
		self.run_test("두만가시고기", "{{ko-IPA}}", "twumankasikoki", "yr")
	def test_dumangasigogi_ipa(self):
		self.run_test("두만가시고기", "{{ko-IPA}}", "[tuma̠nɡa̠ɕʰiɡo̞ɡi]", "ipa")

	def test_cheonggasigogi_ph(self):
		self.run_test("청가시고기", "{{ko-IPA}}", "청가시고기", "ph")
	def test_cheonggasigogi_rr(self):
		self.run_test("청가시고기", "{{ko-IPA}}", "cheonggasigogi", "rr")
	def test_cheonggasigogi_rrr(self):
		self.run_test("청가시고기", "{{ko-IPA}}", "cheonggasigogi", "rrr")
	def test_cheonggasigogi_mr(self):
		self.run_test("청가시고기", "{{ko-IPA}}", "ch'ŏnggasigogi", "mr")
	def test_cheonggasigogi_yr(self):
		self.run_test("청가시고기", "{{ko-IPA}}", "chengkasikoki", "yr")
	def test_cheonggasigogi_ipa(self):
		self.run_test("청가시고기", "{{ko-IPA}}", "[t͡ɕʰʌ̹ŋɡa̠ɕʰiɡo̞ɡi]", "ipa")

	def test_jangasigogi_ph(self):
		self.run_test("잔가시고기", "{{ko-IPA}}", "잔가시고기", "ph")
	def test_jangasigogi_rr(self):
		self.run_test("잔가시고기", "{{ko-IPA}}", "jan'gasigogi", "rr")
	def test_jangasigogi_rrr(self):
		self.run_test("잔가시고기", "{{ko-IPA}}", "jangasigogi", "rrr")
	def test_jangasigogi_mr(self):
		self.run_test("잔가시고기", "{{ko-IPA}}", "chan'gasigogi", "mr")
	def test_jangasigogi_yr(self):
		self.run_test("잔가시고기", "{{ko-IPA}}", "cankasikoki", "yr")
	def test_jangasigogi_ipa(self):
		self.run_test("잔가시고기", "{{ko-IPA}}", "[t͡ɕa̠nɡa̠ɕʰiɡo̞ɡi]", "ipa")

	def test_silgogi_ph(self):
		self.run_test("실고기", "{{ko-IPA|l=y}}", "실(ː)고기", "ph")
	def test_silgogi_rr(self):
		self.run_test("실고기", "{{ko-IPA|l=y}}", "silgogi", "rr")
	def test_silgogi_rrr(self):
		self.run_test("실고기", "{{ko-IPA|l=y}}", "silgogi", "rrr")
	def test_silgogi_mr(self):
		self.run_test("실고기", "{{ko-IPA|l=y}}", "silgogi", "mr")
	def test_silgogi_yr(self):
		self.run_test("실고기", "{{ko-IPA|l=y}}", "sīl.koki", "yr")
	def test_silgogi_ipa(self):
		self.run_test("실고기", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)ɭɡo̞ɡi]", "ipa")

	def test_jopibollak_ph(self):
		self.run_test("조피볼락", "{{ko-IPA}}", "조피볼락", "ph")
	def test_jopibollak_rr(self):
		self.run_test("조피볼락", "{{ko-IPA}}", "jopibollak", "rr")
	def test_jopibollak_rrr(self):
		self.run_test("조피볼락", "{{ko-IPA}}", "jopibollag", "rrr")
	def test_jopibollak_mr(self):
		self.run_test("조피볼락", "{{ko-IPA}}", "chop'ibollak", "mr")
	def test_jopibollak_yr(self):
		self.run_test("조피볼락", "{{ko-IPA}}", "co.phipollak", "yr")
	def test_jopibollak_ipa(self):
		self.run_test("조피볼락", "{{ko-IPA}}", "[t͡ɕo̞pʰibo̞ɭɭa̠k̚]", "ipa")

	def test_deureongheori_ph(self):
		self.run_test("드렁허리", "{{ko-IPA}}", "드렁허리", "ph")
	def test_deureongheori_rr(self):
		self.run_test("드렁허리", "{{ko-IPA}}", "deureongheori", "rr")
	def test_deureongheori_rrr(self):
		self.run_test("드렁허리", "{{ko-IPA}}", "deuleongheoli", "rrr")
	def test_deureongheori_mr(self):
		self.run_test("드렁허리", "{{ko-IPA}}", "tŭrŏnghŏri", "mr")
	def test_deureongheori_yr(self):
		self.run_test("드렁허리", "{{ko-IPA}}", "tulengheli", "yr")
	def test_deureongheori_ipa(self):
		self.run_test("드렁허리", "{{ko-IPA}}", "[tɯɾʌ̹ŋɦʌ̹ɾi]", "ipa")

	def test_yangtae_ph(self):
		self.run_test("양태", "{{ko-IPA}}", "양태/양테", "ph")
	def test_yangtae_rr(self):
		self.run_test("양태", "{{ko-IPA}}", "yangtae", "rr")
	def test_yangtae_rrr(self):
		self.run_test("양태", "{{ko-IPA}}", "yangtae", "rrr")
	def test_yangtae_mr(self):
		self.run_test("양태", "{{ko-IPA}}", "yangt'ae", "mr")
	def test_yangtae_yr(self):
		self.run_test("양태", "{{ko-IPA}}", "yangthay", "yr")
	def test_yangtae_ipa(self):
		self.run_test("양태", "{{ko-IPA}}", "[ja̠ŋtʰɛ] ~ [ja̠ŋtʰe̞]", "ipa")

	def test_dukjunggae_ph(self):
		self.run_test("둑중개", "{{ko-IPA}}", "둑쭝개/둑쭝게", "ph")
	def test_dukjunggae_rr(self):
		self.run_test("둑중개", "{{ko-IPA}}", "dukjunggae", "rr")
	def test_dukjunggae_rrr(self):
		self.run_test("둑중개", "{{ko-IPA}}", "dugjunggae", "rrr")
	def test_dukjunggae_mr(self):
		self.run_test("둑중개", "{{ko-IPA}}", "tukchunggae", "mr")
	def test_dukjunggae_yr(self):
		self.run_test("둑중개", "{{ko-IPA}}", "twukcwungkay", "yr")
	def test_dukjunggae_ipa(self):
		self.run_test("둑중개", "{{ko-IPA}}", "[tuk̚t͡ɕ͈uŋɡɛ] ~ [tuk̚t͡ɕ͈uŋɡe̞]", "ipa")

	def test_handukjunggae_ph(self):
		self.run_test("한둑중개", "{{ko-IPA}}", "한둑쭝개/한둑쭝게", "ph")
	def test_handukjunggae_rr(self):
		self.run_test("한둑중개", "{{ko-IPA}}", "handukjunggae", "rr")
	def test_handukjunggae_rrr(self):
		self.run_test("한둑중개", "{{ko-IPA}}", "handugjunggae", "rrr")
	def test_handukjunggae_mr(self):
		self.run_test("한둑중개", "{{ko-IPA}}", "handukchunggae", "mr")
	def test_handukjunggae_yr(self):
		self.run_test("한둑중개", "{{ko-IPA}}", "hantwukcwungkay", "yr")
	def test_handukjunggae_ipa(self):
		self.run_test("한둑중개", "{{ko-IPA}}", "[ha̠nduk̚t͡ɕ͈uŋɡɛ] ~ [ha̠nduk̚t͡ɕ͈uŋɡe̞]", "ipa")

	def test_chamdukjunggae_ph(self):
		self.run_test("참둑중개", "{{ko-IPA}}", "참둑쭝개/참둑쭝게", "ph")
	def test_chamdukjunggae_rr(self):
		self.run_test("참둑중개", "{{ko-IPA}}", "chamdukjunggae", "rr")
	def test_chamdukjunggae_rrr(self):
		self.run_test("참둑중개", "{{ko-IPA}}", "chamdugjunggae", "rrr")
	def test_chamdukjunggae_mr(self):
		self.run_test("참둑중개", "{{ko-IPA}}", "ch'amdukchunggae", "mr")
	def test_chamdukjunggae_yr(self):
		self.run_test("참둑중개", "{{ko-IPA}}", "chamtwukcwungkay", "yr")
	def test_chamdukjunggae_ipa(self):
		self.run_test("참둑중개", "{{ko-IPA}}", "[t͡ɕʰa̠mduk̚t͡ɕ͈uŋɡɛ] ~ [t͡ɕʰa̠mduk̚t͡ɕ͈uŋɡe̞]", "ipa")

	def test_gaegurikkeokjeongi_ph(self):
		self.run_test("개구리꺽정이", "{{ko-IPA}}", "개구리꺽쩡이/게구리꺽쩡이", "ph")
	def test_gaegurikkeokjeongi_rr(self):
		self.run_test("개구리꺽정이", "{{ko-IPA}}", "gaegurikkeokjeong'i", "rr")
	def test_gaegurikkeokjeongi_rrr(self):
		self.run_test("개구리꺽정이", "{{ko-IPA}}", "gaeguli'kkeogjeong'i", "rrr")
	def test_gaegurikkeokjeongi_mr(self):
		self.run_test("개구리꺽정이", "{{ko-IPA}}", "kaegurikkŏkchŏngi", "mr")
	def test_gaegurikkeokjeongi_yr(self):
		self.run_test("개구리꺽정이", "{{ko-IPA}}", "kaykwuli.kkekcengi", "yr")
	def test_gaegurikkeokjeongi_ipa(self):
		self.run_test("개구리꺽정이", "{{ko-IPA}}", "[kɛɡuɾik͈ʌ̹k̚t͡ɕ͈ʌ̹ŋi] ~ [ke̞ɡuɾik͈ʌ̹k̚t͡ɕ͈ʌ̹ŋi]", "ipa")

	def test_kkeokjeongi_ph(self):
		self.run_test("꺽정이", "{{ko-IPA}}", "꺽쩡이", "ph")
	def test_kkeokjeongi_rr(self):
		self.run_test("꺽정이", "{{ko-IPA}}", "kkeokjeong'i", "rr")
	def test_kkeokjeongi_rrr(self):
		self.run_test("꺽정이", "{{ko-IPA}}", "kkeogjeong'i", "rrr")
	def test_kkeokjeongi_mr(self):
		self.run_test("꺽정이", "{{ko-IPA}}", "kkŏkchŏngi", "mr")
	def test_kkeokjeongi_yr(self):
		self.run_test("꺽정이", "{{ko-IPA}}", "kkekcengi", "yr")
	def test_kkeokjeongi_ipa(self):
		self.run_test("꺽정이", "{{ko-IPA}}", "[k͈ʌ̹k̚t͡ɕ͈ʌ̹ŋi]", "ipa")

	def test_nongeo_ph(self):
		self.run_test("농어", "{{ko-IPA}}", "농어", "ph")
	def test_nongeo_rr(self):
		self.run_test("농어", "{{ko-IPA}}", "nong'eo", "rr")
	def test_nongeo_rrr(self):
		self.run_test("농어", "{{ko-IPA}}", "nong'eo", "rrr")
	def test_nongeo_mr(self):
		self.run_test("농어", "{{ko-IPA}}", "nongŏ", "mr")
	def test_nongeo_yr(self):
		self.run_test("농어", "{{ko-IPA}}", "nonge", "yr")
	def test_nongeo_ipa(self):
		self.run_test("농어", "{{ko-IPA}}", "[no̞ŋʌ̹]", "ipa")

	def test_ssogari_ph(self):
		self.run_test("쏘가리", "{{ko-IPA}}", "쏘가리", "ph")
	def test_ssogari_rr(self):
		self.run_test("쏘가리", "{{ko-IPA}}", "ssogari", "rr")
	def test_ssogari_rrr(self):
		self.run_test("쏘가리", "{{ko-IPA}}", "ssogali", "rrr")
	def test_ssogari_mr(self):
		self.run_test("쏘가리", "{{ko-IPA}}", "ssogari", "mr")
	def test_ssogari_yr(self):
		self.run_test("쏘가리", "{{ko-IPA}}", "ssokali", "yr")
	def test_ssogari_ipa(self):
		self.run_test("쏘가리", "{{ko-IPA}}", "[s͈o̞ɡa̠ɾi]", "ipa")

	def test_kkeokjeogi_ph(self):
		self.run_test("꺽저기", "{{ko-IPA}}", "꺽쩌기", "ph")
	def test_kkeokjeogi_rr(self):
		self.run_test("꺽저기", "{{ko-IPA}}", "kkeokjeogi", "rr")
	def test_kkeokjeogi_rrr(self):
		self.run_test("꺽저기", "{{ko-IPA}}", "kkeogjeogi", "rrr")
	def test_kkeokjeogi_mr(self):
		self.run_test("꺽저기", "{{ko-IPA}}", "kkŏkchŏgi", "mr")
	def test_kkeokjeogi_yr(self):
		self.run_test("꺽저기", "{{ko-IPA}}", "kkekceki", "yr")
	def test_kkeokjeogi_ipa(self):
		self.run_test("꺽저기", "{{ko-IPA}}", "[k͈ʌ̹k̚t͡ɕ͈ʌ̹ɡi]", "ipa")

	def test_kkeokji_ph(self):
		self.run_test("꺽지", "{{ko-IPA}}", "꺽찌", "ph")
	def test_kkeokji_rr(self):
		self.run_test("꺽지", "{{ko-IPA}}", "kkeokji", "rr")
	def test_kkeokji_rrr(self):
		self.run_test("꺽지", "{{ko-IPA}}", "kkeogji", "rrr")
	def test_kkeokji_mr(self):
		self.run_test("꺽지", "{{ko-IPA}}", "kkŏkchi", "mr")
	def test_kkeokji_yr(self):
		self.run_test("꺽지", "{{ko-IPA}}", "kkekci", "yr")
	def test_kkeokji_ipa(self):
		self.run_test("꺽지", "{{ko-IPA}}", "[k͈ʌ̹k̚t͡ɕ͈i]", "ipa")

	def test_beullugil_ph(self):
		self.run_test("블루길", "{{ko-IPA}}", "블루길", "ph")
	def test_beullugil_rr(self):
		self.run_test("블루길", "{{ko-IPA}}", "beullugil", "rr")
	def test_beullugil_rrr(self):
		self.run_test("블루길", "{{ko-IPA}}", "beullugil", "rrr")
	def test_beullugil_mr(self):
		self.run_test("블루길", "{{ko-IPA}}", "pŭllugil", "mr")
	def test_beullugil_yr(self):
		self.run_test("블루길", "{{ko-IPA}}", "pullwukil", "yr")
	def test_beullugil_ipa(self):
		self.run_test("블루길", "{{ko-IPA}}", "[pɯɭɭuɡiɭ]", "ipa")

	def test_baeseu_ph(self):
		self.run_test("배스", "{{ko-IPA}}", "배스/베스", "ph")
	def test_baeseu_rr(self):
		self.run_test("배스", "{{ko-IPA}}", "baeseu", "rr")
	def test_baeseu_rrr(self):
		self.run_test("배스", "{{ko-IPA}}", "baeseu", "rrr")
	def test_baeseu_mr(self):
		self.run_test("배스", "{{ko-IPA}}", "paesŭ", "mr")
	def test_baeseu_yr(self):
		self.run_test("배스", "{{ko-IPA}}", "paysu", "yr")
	def test_baeseu_ipa(self):
		self.run_test("배스", "{{ko-IPA}}", "[pɛsʰɯ] ~ [pe̞sʰɯ]", "ipa")

	def test_nailtillapia_ph(self):
		self.run_test("나일틸라피아", "{{ko-IPA}}", "나일틸라피아", "ph")
	def test_nailtillapia_rr(self):
		self.run_test("나일틸라피아", "{{ko-IPA}}", "nailtillapia", "rr")
	def test_nailtillapia_rrr(self):
		self.run_test("나일틸라피아", "{{ko-IPA}}", "nailtillapia", "rrr")
	def test_nailtillapia_mr(self):
		self.run_test("나일틸라피아", "{{ko-IPA}}", "nailt'illap'ia", "mr")
	def test_nailtillapia_yr(self):
		self.run_test("나일틸라피아", "{{ko-IPA}}", "nail.thilla.phia", "yr")
	def test_nailtillapia_ipa(self):
		self.run_test("나일틸라피아", "{{ko-IPA}}", "[na̠iɭtʰiɭɭa̠pʰia̠]", "ipa")

	def test_judungchi_ph(self):
		self.run_test("주둥치", "{{ko-IPA}}", "주둥치", "ph")
	def test_judungchi_rr(self):
		self.run_test("주둥치", "{{ko-IPA}}", "judungchi", "rr")
	def test_judungchi_rrr(self):
		self.run_test("주둥치", "{{ko-IPA}}", "judungchi", "rrr")
	def test_judungchi_mr(self):
		self.run_test("주둥치", "{{ko-IPA}}", "chudungch'i", "mr")
	def test_judungchi_yr(self):
		self.run_test("주둥치", "{{ko-IPA}}", "cwutwungchi", "yr")
	def test_judungchi_ipa(self):
		self.run_test("주둥치", "{{ko-IPA}}", "[t͡ɕuduŋt͡ɕʰi]", "ipa")

	def test_gangjugeogyangtae_ph(self):
		self.run_test("강주걱양태", "{{ko-IPA|com=1}}", "강쭈거걍태/강쭈거걍테", "ph")
	def test_gangjugeogyangtae_rr(self):
		self.run_test("강주걱양태", "{{ko-IPA|com=1}}", "gangjugeogyangtae", "rr")
	def test_gangjugeogyangtae_rrr(self):
		self.run_test("강주걱양태", "{{ko-IPA|com=1}}", "gangjugeog'yangtae", "rrr")
	def test_gangjugeogyangtae_mr(self):
		self.run_test("강주걱양태", "{{ko-IPA|com=1}}", "kangchugŏgyangt'ae", "mr")
	def test_gangjugeogyangtae_yr(self):
		self.run_test("강주걱양태", "{{ko-IPA|com=1}}", "kangqcwukek.yangthay", "yr")
	def test_gangjugeogyangtae_ipa(self):
		self.run_test("강주걱양태", "{{ko-IPA|com=1}}", "[ka̠ŋt͡ɕ͈uɡʌ̹ɡja̠ŋtʰɛ] ~ [ka̠ŋt͡ɕ͈uɡʌ̹ɡja̠ŋtʰe̞]", "ipa")

	def test_gugulmuchi_ph(self):
		self.run_test("구굴무치", "{{ko-IPA}}", "구굴무치", "ph")
	def test_gugulmuchi_rr(self):
		self.run_test("구굴무치", "{{ko-IPA}}", "gugulmuchi", "rr")
	def test_gugulmuchi_rrr(self):
		self.run_test("구굴무치", "{{ko-IPA}}", "gugulmuchi", "rrr")
	def test_gugulmuchi_mr(self):
		self.run_test("구굴무치", "{{ko-IPA}}", "kugulmuch'i", "mr")
	def test_gugulmuchi_yr(self):
		self.run_test("구굴무치", "{{ko-IPA}}", "kwukwul.mu.chi", "yr")
	def test_gugulmuchi_ipa(self):
		self.run_test("구굴무치", "{{ko-IPA}}", "[kuɡuɭmut͡ɕʰi]", "ipa")

	def test_dongsari_ph(self):
		self.run_test("동사리", "{{ko-IPA}}", "동사리", "ph")
	def test_dongsari_rr(self):
		self.run_test("동사리", "{{ko-IPA}}", "dongsari", "rr")
	def test_dongsari_rrr(self):
		self.run_test("동사리", "{{ko-IPA}}", "dongsali", "rrr")
	def test_dongsari_mr(self):
		self.run_test("동사리", "{{ko-IPA}}", "tongsari", "mr")
	def test_dongsari_yr(self):
		self.run_test("동사리", "{{ko-IPA}}", "tongsali", "yr")
	def test_dongsari_ipa(self):
		self.run_test("동사리", "{{ko-IPA}}", "[to̞ŋsʰa̠ɾi]", "ipa")

	def test_nambangdongsari_ph(self):
		self.run_test("남방동사리", "{{ko-IPA}}", "남방동사리", "ph")
	def test_nambangdongsari_rr(self):
		self.run_test("남방동사리", "{{ko-IPA}}", "nambangdongsari", "rr")
	def test_nambangdongsari_rrr(self):
		self.run_test("남방동사리", "{{ko-IPA}}", "nambangdongsali", "rrr")
	def test_nambangdongsari_mr(self):
		self.run_test("남방동사리", "{{ko-IPA}}", "nambangdongsari", "mr")
	def test_nambangdongsari_yr(self):
		self.run_test("남방동사리", "{{ko-IPA}}", "nampangtongsali", "yr")
	def test_nambangdongsari_ipa(self):
		self.run_test("남방동사리", "{{ko-IPA}}", "[na̠mba̠ŋdo̞ŋsʰa̠ɾi]", "ipa")

	def test_jomgugulchi_ph(self):
		self.run_test("좀구굴치", "{{ko-IPA}}", "좀구굴치", "ph")
	def test_jomgugulchi_rr(self):
		self.run_test("좀구굴치", "{{ko-IPA}}", "jomgugulchi", "rr")
	def test_jomgugulchi_rrr(self):
		self.run_test("좀구굴치", "{{ko-IPA}}", "jomgugulchi", "rrr")
	def test_jomgugulchi_mr(self):
		self.run_test("좀구굴치", "{{ko-IPA}}", "chomgugulch'i", "mr")
	def test_jomgugulchi_yr(self):
		self.run_test("좀구굴치", "{{ko-IPA}}", "comkwukwulchi", "yr")
	def test_jomgugulchi_ipa(self):
		self.run_test("좀구굴치", "{{ko-IPA}}", "[t͡ɕo̞mɡuɡuʎt͡ɕʰi]", "ipa")

	def test_nalmangduk_ph(self):
		self.run_test("날망둑", "{{ko-IPA}}", "날망둑", "ph")
	def test_nalmangduk_rr(self):
		self.run_test("날망둑", "{{ko-IPA}}", "nalmangduk", "rr")
	def test_nalmangduk_rrr(self):
		self.run_test("날망둑", "{{ko-IPA}}", "nalmangdug", "rrr")
	def test_nalmangduk_mr(self):
		self.run_test("날망둑", "{{ko-IPA}}", "nalmangduk", "mr")
	def test_nalmangduk_yr(self):
		self.run_test("날망둑", "{{ko-IPA}}", "nal.mangtwuk", "yr")
	def test_nalmangduk_ipa(self):
		self.run_test("날망둑", "{{ko-IPA}}", "[na̠ɭma̠ŋduk̚]", "ipa")

	def test_kkeokjeogu_ph(self):
		self.run_test("꺽저구", "{{ko-IPA}}", "꺽쩌구", "ph")
	def test_kkeokjeogu_rr(self):
		self.run_test("꺽저구", "{{ko-IPA}}", "kkeokjeogu", "rr")
	def test_kkeokjeogu_rrr(self):
		self.run_test("꺽저구", "{{ko-IPA}}", "kkeogjeogu", "rrr")
	def test_kkeokjeogu_mr(self):
		self.run_test("꺽저구", "{{ko-IPA}}", "kkŏkchŏgu", "mr")
	def test_kkeokjeogu_yr(self):
		self.run_test("꺽저구", "{{ko-IPA}}", "kkekcekwu", "yr")
	def test_kkeokjeogu_ipa(self):
		self.run_test("꺽저구", "{{ko-IPA}}", "[k͈ʌ̹k̚t͡ɕ͈ʌ̹ɡu]", "ipa")

	def test_waekkukjeogu_ph(self):
		self.run_test("왜꾹저구", "{{ko-IPA}}", "왜꾹쩌구/웨꾹쩌구", "ph")
	def test_waekkukjeogu_rr(self):
		self.run_test("왜꾹저구", "{{ko-IPA}}", "waekkukjeogu", "rr")
	def test_waekkukjeogu_rrr(self):
		self.run_test("왜꾹저구", "{{ko-IPA}}", "wae'kkugjeogu", "rrr")
	def test_waekkukjeogu_mr(self):
		self.run_test("왜꾹저구", "{{ko-IPA}}", "waekkukchŏgu", "mr")
	def test_waekkukjeogu_yr(self):
		self.run_test("왜꾹저구", "{{ko-IPA}}", "way.kkwukcekwu", "yr")
	def test_waekkukjeogu_ipa(self):
		self.run_test("왜꾹저구", "{{ko-IPA}}", "[wɛk͈uk̚t͡ɕ͈ʌ̹ɡu] ~ [we̞k͈uk̚t͡ɕ͈ʌ̹ɡu]", "ipa")

	def test_eollukdongsari_ph(self):
		self.run_test("얼룩동사리", "{{ko-IPA}}", "얼룩똥사리", "ph")
	def test_eollukdongsari_rr(self):
		self.run_test("얼룩동사리", "{{ko-IPA}}", "eollukdongsari", "rr")
	def test_eollukdongsari_rrr(self):
		self.run_test("얼룩동사리", "{{ko-IPA}}", "eollugdongsali", "rrr")
	def test_eollukdongsari_mr(self):
		self.run_test("얼룩동사리", "{{ko-IPA}}", "ŏlluktongsari", "mr")
	def test_eollukdongsari_yr(self):
		self.run_test("얼룩동사리", "{{ko-IPA}}", "ellwuktongsali", "yr")
	def test_eollukdongsari_ipa(self):
		self.run_test("얼룩동사리", "{{ko-IPA}}", "[ʌ̹ɭɭuk̚t͈o̞ŋsʰa̠ɾi]", "ipa")

	def test_munjeolmangduk_ph(self):
		self.run_test("문절망둑", "{{ko-IPA}}", "문절망둑", "ph")
	def test_munjeolmangduk_rr(self):
		self.run_test("문절망둑", "{{ko-IPA}}", "munjeolmangduk", "rr")
	def test_munjeolmangduk_rrr(self):
		self.run_test("문절망둑", "{{ko-IPA}}", "munjeolmangdug", "rrr")
	def test_munjeolmangduk_mr(self):
		self.run_test("문절망둑", "{{ko-IPA}}", "munjŏlmangduk", "mr")
	def test_munjeolmangduk_yr(self):
		self.run_test("문절망둑", "{{ko-IPA}}", "mun.cel.mangtwuk", "yr")
	def test_munjeolmangduk_ipa(self):
		self.run_test("문절망둑", "{{ko-IPA}}", "[muɲd͡ʑʌ̹ɭma̠ŋduk̚]", "ipa")

	def test_waepulmangduk_ph(self):
		self.run_test("왜풀망둑", "{{ko-IPA}}", "왜풀망둑/웨풀망둑", "ph")
	def test_waepulmangduk_rr(self):
		self.run_test("왜풀망둑", "{{ko-IPA}}", "waepulmangduk", "rr")
	def test_waepulmangduk_rrr(self):
		self.run_test("왜풀망둑", "{{ko-IPA}}", "waepulmangdug", "rrr")
	def test_waepulmangduk_mr(self):
		self.run_test("왜풀망둑", "{{ko-IPA}}", "waep'ulmangduk", "mr")
	def test_waepulmangduk_yr(self):
		self.run_test("왜풀망둑", "{{ko-IPA}}", "way.phul.mangtwuk", "yr")
	def test_waepulmangduk_ipa(self):
		self.run_test("왜풀망둑", "{{ko-IPA}}", "[wɛpʰuɭma̠ŋduk̚] ~ [we̞pʰuɭma̠ŋduk̚]", "ipa")

	def test_huinbalmangduk_ph(self):
		self.run_test("흰발망둑", "{{ko-IPA}}", "힌발망둑", "ph")
	def test_huinbalmangduk_rr(self):
		self.run_test("흰발망둑", "{{ko-IPA}}", "huinbalmangduk", "rr")
	def test_huinbalmangduk_rrr(self):
		self.run_test("흰발망둑", "{{ko-IPA}}", "huinbalmangdug", "rrr")
	def test_huinbalmangduk_mr(self):
		self.run_test("흰발망둑", "{{ko-IPA}}", "hŭinbalmangduk", "mr")
	def test_huinbalmangduk_yr(self):
		self.run_test("흰발망둑", "{{ko-IPA}}", "huynpal.mangtwuk", "yr")
	def test_huinbalmangduk_ipa(self):
		self.run_test("흰발망둑", "{{ko-IPA}}", "[çinba̠ɭma̠ŋduk̚]", "ipa")

	def test_bineulhuinbalmangduk_ph(self):
		self.run_test("비늘흰발망둑", "{{ko-IPA}}", "비늘힌발망둑", "ph")
	def test_bineulhuinbalmangduk_rr(self):
		self.run_test("비늘흰발망둑", "{{ko-IPA}}", "bineulhuinbalmangduk", "rr")
	def test_bineulhuinbalmangduk_rrr(self):
		self.run_test("비늘흰발망둑", "{{ko-IPA}}", "bineulhuinbalmangdug", "rrr")
	def test_bineulhuinbalmangduk_mr(self):
		self.run_test("비늘흰발망둑", "{{ko-IPA}}", "pinŭrhŭinbalmangduk", "mr")
	def test_bineulhuinbalmangduk_yr(self):
		self.run_test("비늘흰발망둑", "{{ko-IPA}}", "pinul.huynpal.mangtwuk", "yr")
	def test_bineulhuinbalmangduk_ipa(self):
		self.run_test("비늘흰발망둑", "{{ko-IPA}}", "[pinɯɾʝinba̠ɭma̠ŋduk̚]", "ipa")

	def test_pulmangduk_ph(self):
		self.run_test("풀망둑", "{{ko-IPA}}", "풀망둑", "ph")
	def test_pulmangduk_rr(self):
		self.run_test("풀망둑", "{{ko-IPA}}", "pulmangduk", "rr")
	def test_pulmangduk_rrr(self):
		self.run_test("풀망둑", "{{ko-IPA}}", "pulmangdug", "rrr")
	def test_pulmangduk_mr(self):
		self.run_test("풀망둑", "{{ko-IPA}}", "p'ulmangduk", "mr")
	def test_pulmangduk_yr(self):
		self.run_test("풀망둑", "{{ko-IPA}}", "phul.mangtwuk", "yr")
	def test_pulmangduk_ipa(self):
		self.run_test("풀망둑", "{{ko-IPA}}", "[pʰuɭma̠ŋduk̚]", "ipa")

	def test_yeoldonggalmunjeol_ph(self):
		self.run_test("열동갈문절", "{{ko-IPA|com=1}}", "열똥갈문절", "ph")
	def test_yeoldonggalmunjeol_rr(self):
		self.run_test("열동갈문절", "{{ko-IPA|com=1}}", "yeoldonggalmunjeol", "rr")
	def test_yeoldonggalmunjeol_rrr(self):
		self.run_test("열동갈문절", "{{ko-IPA|com=1}}", "yeoldonggalmunjeol", "rrr")
	def test_yeoldonggalmunjeol_mr(self):
		self.run_test("열동갈문절", "{{ko-IPA|com=1}}", "yŏltonggalmunjŏl", "mr")
	def test_yeoldonggalmunjeol_yr(self):
		self.run_test("열동갈문절", "{{ko-IPA|com=1}}", "yelqtongkal.mun.cel", "yr")
	def test_yeoldonggalmunjeol_ipa(self):
		self.run_test("열동갈문절", "{{ko-IPA|com=1}}", "[jʌ̹ɭt͈o̞ŋɡa̠ɭmuɲd͡ʑʌ̹ɭ]", "ipa")

	def test_aegimangduk_ph(self):
		self.run_test("애기망둑", "{{ko-IPA|l=y}}", "애(ː)기망둑/에(ː)기망둑", "ph")
	def test_aegimangduk_rr(self):
		self.run_test("애기망둑", "{{ko-IPA|l=y}}", "aegimangduk", "rr")
	def test_aegimangduk_rrr(self):
		self.run_test("애기망둑", "{{ko-IPA|l=y}}", "aegimangdug", "rrr")
	def test_aegimangduk_mr(self):
		self.run_test("애기망둑", "{{ko-IPA|l=y}}", "aegimangduk", "mr")
	def test_aegimangduk_yr(self):
		self.run_test("애기망둑", "{{ko-IPA|l=y}}", "āykimangtwuk", "yr")
	def test_aegimangduk_ipa(self):
		self.run_test("애기망둑", "{{ko-IPA|l=y}}", "[ˈɛ(ː)ɡima̠ŋduk̚] ~ [ˈe̞(ː)ɡima̠ŋduk̚]", "ipa")

	def test_munuimangduk_ph(self):
		self.run_test("무늬망둑", "{{ko-IPA}}", "무니망둑", "ph")
	def test_munuimangduk_rr(self):
		self.run_test("무늬망둑", "{{ko-IPA}}", "munuimangduk", "rr")
	def test_munuimangduk_rrr(self):
		self.run_test("무늬망둑", "{{ko-IPA}}", "munuimangdug", "rrr")
	def test_munuimangduk_mr(self):
		self.run_test("무늬망둑", "{{ko-IPA}}", "munŭimangduk", "mr")
	def test_munuimangduk_yr(self):
		self.run_test("무늬망둑", "{{ko-IPA}}", "munuymangtwuk", "yr")
	def test_munuimangduk_ipa(self):
		self.run_test("무늬망둑", "{{ko-IPA}}", "[munima̠ŋduk̚]", "ipa")

	def test_galmunmangduk_ph(self):
		self.run_test("갈문망둑", "{{ko-IPA}}", "갈문망둑", "ph")
	def test_galmunmangduk_rr(self):
		self.run_test("갈문망둑", "{{ko-IPA}}", "galmunmangduk", "rr")
	def test_galmunmangduk_rrr(self):
		self.run_test("갈문망둑", "{{ko-IPA}}", "galmunmangdug", "rrr")
	def test_galmunmangduk_mr(self):
		self.run_test("갈문망둑", "{{ko-IPA}}", "kalmunmangduk", "mr")
	def test_galmunmangduk_yr(self):
		self.run_test("갈문망둑", "{{ko-IPA}}", "kal.munmangtwuk", "yr")
	def test_galmunmangduk_ipa(self):
		self.run_test("갈문망둑", "{{ko-IPA}}", "[ka̠ɭmunma̠ŋduk̚]", "ipa")

	def test_mireo_ph(self):
		self.run_test("밀어", "{{ko-IPA}}", "미러", "ph")
	def test_mireo_rr(self):
		self.run_test("밀어", "{{ko-IPA}}", "mireo", "rr")
	def test_mireo_rrr(self):
		self.run_test("밀어", "{{ko-IPA}}", "mil'eo", "rrr")
	def test_mireo_mr(self):
		self.run_test("밀어", "{{ko-IPA}}", "mirŏ", "mr")
	def test_mireo_yr(self):
		self.run_test("밀어", "{{ko-IPA}}", "mil.e", "yr")
	def test_mireo_ipa(self):
		self.run_test("밀어", "{{ko-IPA}}", "[miɾʌ̹]", "ipa")

	def test_dujulmangduk_ph(self):
		self.run_test("두줄망둑", "{{ko-IPA|l=y}}", "두(ː)줄망둑", "ph")
	def test_dujulmangduk_rr(self):
		self.run_test("두줄망둑", "{{ko-IPA|l=y}}", "dujulmangduk", "rr")
	def test_dujulmangduk_rrr(self):
		self.run_test("두줄망둑", "{{ko-IPA|l=y}}", "dujulmangdug", "rrr")
	def test_dujulmangduk_mr(self):
		self.run_test("두줄망둑", "{{ko-IPA|l=y}}", "tujulmangduk", "mr")
	def test_dujulmangduk_yr(self):
		self.run_test("두줄망둑", "{{ko-IPA|l=y}}", "twūcwul.mangtwuk", "yr")
	def test_dujulmangduk_ipa(self):
		self.run_test("두줄망둑", "{{ko-IPA|l=y}}", "[ˈtu(ː)d͡ʑuɭma̠ŋduk̚]", "ipa")

	def test_hwangjulmangduk_ph(self):
		self.run_test("황줄망둑", "{{ko-IPA}}", "황줄망둑", "ph")
	def test_hwangjulmangduk_rr(self):
		self.run_test("황줄망둑", "{{ko-IPA}}", "hwangjulmangduk", "rr")
	def test_hwangjulmangduk_rrr(self):
		self.run_test("황줄망둑", "{{ko-IPA}}", "hwangjulmangdug", "rrr")
	def test_hwangjulmangduk_mr(self):
		self.run_test("황줄망둑", "{{ko-IPA}}", "hwangjulmangduk", "mr")
	def test_hwangjulmangduk_yr(self):
		self.run_test("황줄망둑", "{{ko-IPA}}", "hwangcwul.mangtwuk", "yr")
	def test_hwangjulmangduk_ipa(self):
		self.run_test("황줄망둑", "{{ko-IPA}}", "[ɸwa̠ŋd͡ʑuɭma̠ŋduk̚]", "ipa")

	def test_geomjeongmangduk_ph(self):
		self.run_test("검정망둑", "{{ko-IPA}}", "검정망둑", "ph")
	def test_geomjeongmangduk_rr(self):
		self.run_test("검정망둑", "{{ko-IPA}}", "geomjeongmangduk", "rr")
	def test_geomjeongmangduk_rrr(self):
		self.run_test("검정망둑", "{{ko-IPA}}", "geomjeongmangdug", "rrr")
	def test_geomjeongmangduk_mr(self):
		self.run_test("검정망둑", "{{ko-IPA}}", "kŏmjŏngmangduk", "mr")
	def test_geomjeongmangduk_yr(self):
		self.run_test("검정망둑", "{{ko-IPA}}", "kemcengmangtwuk", "yr")
	def test_geomjeongmangduk_ipa(self):
		self.run_test("검정망둑", "{{ko-IPA}}", "[kʌ̹md͡ʑʌ̹ŋma̠ŋduk̚]", "ipa")

	def test_minmulgeomjeongmangduk_ph(self):
		self.run_test("민물검정망둑", "{{ko-IPA}}", "민물검정망둑", "ph")
	def test_minmulgeomjeongmangduk_rr(self):
		self.run_test("민물검정망둑", "{{ko-IPA}}", "minmulgeomjeongmangduk", "rr")
	def test_minmulgeomjeongmangduk_rrr(self):
		self.run_test("민물검정망둑", "{{ko-IPA}}", "minmulgeomjeongmangdug", "rrr")
	def test_minmulgeomjeongmangduk_mr(self):
		self.run_test("민물검정망둑", "{{ko-IPA}}", "minmulgŏmjŏngmangduk", "mr")
	def test_minmulgeomjeongmangduk_yr(self):
		self.run_test("민물검정망둑", "{{ko-IPA}}", "minmul.kemcengmangtwuk", "yr")
	def test_minmulgeomjeongmangduk_ipa(self):
		self.run_test("민물검정망둑", "{{ko-IPA}}", "[minmuɭɡʌ̹md͡ʑʌ̹ŋma̠ŋduk̚]", "ipa")

	def test_julmangduk_ph(self):
		self.run_test("줄망둑", "{{ko-IPA}}", "줄망둑", "ph")
	def test_julmangduk_rr(self):
		self.run_test("줄망둑", "{{ko-IPA}}", "julmangduk", "rr")
	def test_julmangduk_rrr(self):
		self.run_test("줄망둑", "{{ko-IPA}}", "julmangdug", "rrr")
	def test_julmangduk_mr(self):
		self.run_test("줄망둑", "{{ko-IPA}}", "chulmangduk", "mr")
	def test_julmangduk_yr(self):
		self.run_test("줄망둑", "{{ko-IPA}}", "cwul.mangtwuk", "yr")
	def test_julmangduk_ipa(self):
		self.run_test("줄망둑", "{{ko-IPA}}", "[t͡ɕuɭma̠ŋduk̚]", "ipa")

	def test_jeomjulmangduk_ph(self):
		self.run_test("점줄망둑", "{{ko-IPA}}", "점줄망둑", "ph")
	def test_jeomjulmangduk_rr(self):
		self.run_test("점줄망둑", "{{ko-IPA}}", "jeomjulmangduk", "rr")
	def test_jeomjulmangduk_rrr(self):
		self.run_test("점줄망둑", "{{ko-IPA}}", "jeomjulmangdug", "rrr")
	def test_jeomjulmangduk_mr(self):
		self.run_test("점줄망둑", "{{ko-IPA}}", "chŏmjulmangduk", "mr")
	def test_jeomjulmangduk_yr(self):
		self.run_test("점줄망둑", "{{ko-IPA}}", "cemcwul.mangtwuk", "yr")
	def test_jeomjulmangduk_ipa(self):
		self.run_test("점줄망둑", "{{ko-IPA}}", "[t͡ɕʌ̹md͡ʑuɭma̠ŋduk̚]", "ipa")

	def test_nalgaemangduk_ph(self):
		self.run_test("날개망둑", "{{ko-IPA}}", "날개망둑/날게망둑", "ph")
	def test_nalgaemangduk_rr(self):
		self.run_test("날개망둑", "{{ko-IPA}}", "nalgaemangduk", "rr")
	def test_nalgaemangduk_rrr(self):
		self.run_test("날개망둑", "{{ko-IPA}}", "nalgaemangdug", "rrr")
	def test_nalgaemangduk_mr(self):
		self.run_test("날개망둑", "{{ko-IPA}}", "nalgaemangduk", "mr")
	def test_nalgaemangduk_yr(self):
		self.run_test("날개망둑", "{{ko-IPA}}", "nal.kaymangtwuk", "yr")
	def test_nalgaemangduk_ipa(self):
		self.run_test("날개망둑", "{{ko-IPA}}", "[na̠ɭɡɛma̠ŋduk̚] ~ [na̠ɭɡe̞ma̠ŋduk̚]", "ipa")

	def test_mochimangduk_ph(self):
		self.run_test("모치망둑", "{{ko-IPA}}", "모치망둑", "ph")
	def test_mochimangduk_rr(self):
		self.run_test("모치망둑", "{{ko-IPA}}", "mochimangduk", "rr")
	def test_mochimangduk_rrr(self):
		self.run_test("모치망둑", "{{ko-IPA}}", "mochimangdug", "rrr")
	def test_mochimangduk_mr(self):
		self.run_test("모치망둑", "{{ko-IPA}}", "moch'imangduk", "mr")
	def test_mochimangduk_yr(self):
		self.run_test("모치망둑", "{{ko-IPA}}", "mo.chimangtwuk", "yr")
	def test_mochimangduk_ipa(self):
		self.run_test("모치망둑", "{{ko-IPA}}", "[mo̞t͡ɕʰima̠ŋduk̚]", "ipa")

	def test_jejumochimangduk_ph(self):
		self.run_test("제주모치망둑", "{{ko-IPA|l=y}}", "제(ː)주모치망둑", "ph")
	def test_jejumochimangduk_rr(self):
		self.run_test("제주모치망둑", "{{ko-IPA|l=y}}", "jejumochimangduk", "rr")
	def test_jejumochimangduk_rrr(self):
		self.run_test("제주모치망둑", "{{ko-IPA|l=y}}", "jejumochimangdug", "rrr")
	def test_jejumochimangduk_mr(self):
		self.run_test("제주모치망둑", "{{ko-IPA|l=y}}", "chejumoch'imangduk", "mr")
	def test_jejumochimangduk_yr(self):
		self.run_test("제주모치망둑", "{{ko-IPA|l=y}}", "cēycwumo.chimangtwuk", "yr")
	def test_jejumochimangduk_ipa(self):
		self.run_test("제주모치망둑", "{{ko-IPA|l=y}}", "[ˈt͡ɕe̞(ː)d͡ʑumo̞t͡ɕʰima̠ŋduk̚]", "ipa")

	def test_jjangttungeo_ph(self):
		self.run_test("짱뚱어", "{{ko-IPA}}", "짱뚱어", "ph")
	def test_jjangttungeo_rr(self):
		self.run_test("짱뚱어", "{{ko-IPA}}", "jjangttung'eo", "rr")
	def test_jjangttungeo_rrr(self):
		self.run_test("짱뚱어", "{{ko-IPA}}", "jjangttung'eo", "rrr")
	def test_jjangttungeo_mr(self):
		self.run_test("짱뚱어", "{{ko-IPA}}", "tchangttungŏ", "mr")
	def test_jjangttungeo_yr(self):
		self.run_test("짱뚱어", "{{ko-IPA}}", "ccangttwunge", "yr")
	def test_jjangttungeo_ipa(self):
		self.run_test("짱뚱어", "{{ko-IPA}}", "[t͡ɕ͈a̠ŋt͈uŋʌ̹]", "ipa")

	def test_kkomacheonghwang_ph(self):
		self.run_test("꼬마청황", "{{ko-IPA}}", "꼬마청황", "ph")
	def test_kkomacheonghwang_rr(self):
		self.run_test("꼬마청황", "{{ko-IPA}}", "kkomacheonghwang", "rr")
	def test_kkomacheonghwang_rrr(self):
		self.run_test("꼬마청황", "{{ko-IPA}}", "kkomacheonghwang", "rrr")
	def test_kkomacheonghwang_mr(self):
		self.run_test("꼬마청황", "{{ko-IPA}}", "kkomach'ŏnghwang", "mr")
	def test_kkomacheonghwang_yr(self):
		self.run_test("꼬마청황", "{{ko-IPA}}", "kkoma.chenghwang", "yr")
	def test_kkomacheonghwang_ipa(self):
		self.run_test("꼬마청황", "{{ko-IPA}}", "[k͈o̞ma̠t͡ɕʰʌ̹ŋβwa̠ŋ]", "ipa")

	def test_malttungmangdungeo_ph(self):
		self.run_test("말뚝망둥어", "{{ko-IPA}}", "말뚱망둥어", "ph")
	def test_malttungmangdungeo_rr(self):
		self.run_test("말뚝망둥어", "{{ko-IPA}}", "malttungmangdung'eo", "rr")
	def test_malttungmangdungeo_rrr(self):
		self.run_test("말뚝망둥어", "{{ko-IPA}}", "mal'ttugmangdung'eo", "rrr")
	def test_malttungmangdungeo_mr(self):
		self.run_test("말뚝망둥어", "{{ko-IPA}}", "malttungmangdungŏ", "mr")
	def test_malttungmangdungeo_yr(self):
		self.run_test("말뚝망둥어", "{{ko-IPA}}", "malttwukmangtwunge", "yr")
	def test_malttungmangdungeo_ipa(self):
		self.run_test("말뚝망둥어", "{{ko-IPA}}", "[ma̠ɭt͈uŋma̠ŋduŋʌ̹]", "ipa")

	def test_keunbyeonmalttungmangdungeo_ph(self):
		self.run_test("큰볏말뚝망둥어", "{{ko-IPA}}", "큰변말뚱망둥어", "ph")
	def test_keunbyeonmalttungmangdungeo_rr(self):
		self.run_test("큰볏말뚝망둥어", "{{ko-IPA}}", "keunbyeonmalttungmangdung'eo", "rr")
	def test_keunbyeonmalttungmangdungeo_rrr(self):
		self.run_test("큰볏말뚝망둥어", "{{ko-IPA}}", "keunbyeosmal'ttugmangdung'eo", "rrr")
	def test_keunbyeonmalttungmangdungeo_mr(self):
		self.run_test("큰볏말뚝망둥어", "{{ko-IPA}}", "k'ŭnbyŏnmalttungmangdungŏ", "mr")
	def test_keunbyeonmalttungmangdungeo_yr(self):
		self.run_test("큰볏말뚝망둥어", "{{ko-IPA}}", "khunpyesmalttwukmangtwunge", "yr")
	def test_keunbyeonmalttungmangdungeo_ipa(self):
		self.run_test("큰볏말뚝망둥어", "{{ko-IPA}}", "[kxɯnbjʌ̹nma̠ɭt͈uŋma̠ŋduŋʌ̹]", "ipa")

	def test_mikkeunmangduk_ph(self):
		self.run_test("미끈망둑", "{{ko-IPA}}", "미끈망둑", "ph")
	def test_mikkeunmangduk_rr(self):
		self.run_test("미끈망둑", "{{ko-IPA}}", "mikkeunmangduk", "rr")
	def test_mikkeunmangduk_rrr(self):
		self.run_test("미끈망둑", "{{ko-IPA}}", "mi'kkeunmangdug", "rrr")
	def test_mikkeunmangduk_mr(self):
		self.run_test("미끈망둑", "{{ko-IPA}}", "mikkŭnmangduk", "mr")
	def test_mikkeunmangduk_yr(self):
		self.run_test("미끈망둑", "{{ko-IPA}}", "mi.kkunmangtwuk", "yr")
	def test_mikkeunmangduk_ipa(self):
		self.run_test("미끈망둑", "{{ko-IPA}}", "[mik͈ɯnma̠ŋduk̚]", "ipa")

	def test_sabaegeo_ph(self):
		self.run_test("사백어", "{{ko-IPA|l=y}}", "사(ː)배거/사(ː)베거", "ph")
	def test_sabaegeo_rr(self):
		self.run_test("사백어", "{{ko-IPA|l=y}}", "sabaegeo", "rr")
	def test_sabaegeo_rrr(self):
		self.run_test("사백어", "{{ko-IPA|l=y}}", "sabaeg'eo", "rrr")
	def test_sabaegeo_mr(self):
		self.run_test("사백어", "{{ko-IPA|l=y}}", "sabaegŏ", "mr")
	def test_sabaegeo_yr(self):
		self.run_test("사백어", "{{ko-IPA|l=y}}", "sāpayk.e", "yr")
	def test_sabaegeo_ipa(self):
		self.run_test("사백어", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)bɛɡʌ̹] ~ [ˈsʰa̠(ː)be̞ɡʌ̹]", "ipa")

	def test_ppalgaengi_ph(self):
		self.run_test("빨갱이", "{{ko-IPA}}", "빨갱이/빨겡이", "ph")
	def test_ppalgaengi_rr(self):
		self.run_test("빨갱이", "{{ko-IPA}}", "ppalgaeng'i", "rr")
	def test_ppalgaengi_rrr(self):
		self.run_test("빨갱이", "{{ko-IPA}}", "ppalgaeng'i", "rrr")
	def test_ppalgaengi_mr(self):
		self.run_test("빨갱이", "{{ko-IPA}}", "ppalgaengi", "mr")
	def test_ppalgaengi_yr(self):
		self.run_test("빨갱이", "{{ko-IPA}}", "ppal.kayngi", "yr")
	def test_ppalgaengi_ipa(self):
		self.run_test("빨갱이", "{{ko-IPA}}", "[p͈a̠ɭɡɛŋi] ~ [p͈a̠ɭɡe̞ŋi]", "ipa")

	def test_gaesogeng_ph(self):
		self.run_test("개소겡", "{{ko-IPA}}", "개소겡/게소겡", "ph")
	def test_gaesogeng_rr(self):
		self.run_test("개소겡", "{{ko-IPA}}", "gaesogeng", "rr")
	def test_gaesogeng_rrr(self):
		self.run_test("개소겡", "{{ko-IPA}}", "gaesogeng", "rrr")
	def test_gaesogeng_mr(self):
		self.run_test("개소겡", "{{ko-IPA}}", "kaesogeng", "mr")
	def test_gaesogeng_yr(self):
		self.run_test("개소겡", "{{ko-IPA}}", "kaysokeyng", "yr")
	def test_gaesogeng_ipa(self):
		self.run_test("개소겡", "{{ko-IPA}}", "[kɛsʰo̞ɡe̞ŋ] ~ [ke̞sʰo̞ɡe̞ŋ]", "ipa")

	def test_beodeulbungeo_ph(self):
		self.run_test("버들붕어", "{{ko-IPA}}", "버들붕어", "ph")
	def test_beodeulbungeo_rr(self):
		self.run_test("버들붕어", "{{ko-IPA}}", "beodeulbung'eo", "rr")
	def test_beodeulbungeo_rrr(self):
		self.run_test("버들붕어", "{{ko-IPA}}", "beodeulbung'eo", "rrr")
	def test_beodeulbungeo_mr(self):
		self.run_test("버들붕어", "{{ko-IPA}}", "pŏdŭlbungŏ", "mr")
	def test_beodeulbungeo_yr(self):
		self.run_test("버들붕어", "{{ko-IPA}}", "petul.punge", "yr")
	def test_beodeulbungeo_ipa(self):
		self.run_test("버들붕어", "{{ko-IPA}}", "[pʌ̹dɯɭbuŋʌ̹]", "ipa")

	def test_gamulchi_ph(self):
		self.run_test("가물치", "{{ko-IPA|a=y}}", "가물치", "ph")
	def test_gamulchi_rr(self):
		self.run_test("가물치", "{{ko-IPA|a=y}}", "gamulchi", "rr")
	def test_gamulchi_rrr(self):
		self.run_test("가물치", "{{ko-IPA|a=y}}", "gamulchi", "rrr")
	def test_gamulchi_mr(self):
		self.run_test("가물치", "{{ko-IPA|a=y}}", "kamulch'i", "mr")
	def test_gamulchi_yr(self):
		self.run_test("가물치", "{{ko-IPA|a=y}}", "kamulchi", "yr")
	def test_gamulchi_ipa(self):
		self.run_test("가물치", "{{ko-IPA|a=y}}", "[ka̠muʎt͡ɕʰi]", "ipa")

	def test_dolgajami_ph(self):
		self.run_test("돌가자미", "{{ko-IPA}}", "돌가자미", "ph")
	def test_dolgajami_rr(self):
		self.run_test("돌가자미", "{{ko-IPA}}", "dolgajami", "rr")
	def test_dolgajami_rrr(self):
		self.run_test("돌가자미", "{{ko-IPA}}", "dolgajami", "rrr")
	def test_dolgajami_mr(self):
		self.run_test("돌가자미", "{{ko-IPA}}", "tolgajami", "mr")
	def test_dolgajami_yr(self):
		self.run_test("돌가자미", "{{ko-IPA}}", "tol.kacami", "yr")
	def test_dolgajami_ipa(self):
		self.run_test("돌가자미", "{{ko-IPA}}", "[to̞ɭɡa̠d͡ʑa̠mi]", "ipa")

	def test_gangdodari_ph(self):
		self.run_test("강도다리", "{{ko-IPA}}", "강도다리", "ph")
	def test_gangdodari_rr(self):
		self.run_test("강도다리", "{{ko-IPA}}", "gangdodari", "rr")
	def test_gangdodari_rrr(self):
		self.run_test("강도다리", "{{ko-IPA}}", "gangdodali", "rrr")
	def test_gangdodari_mr(self):
		self.run_test("강도다리", "{{ko-IPA}}", "kangdodari", "mr")
	def test_gangdodari_yr(self):
		self.run_test("강도다리", "{{ko-IPA}}", "kangtotali", "yr")
	def test_gangdodari_ipa(self):
		self.run_test("강도다리", "{{ko-IPA}}", "[ka̠ŋdo̞da̠ɾi]", "ipa")

	def test_dodari_ph(self):
		self.run_test("도다리", "{{ko-IPA}}", "도다리", "ph")
	def test_dodari_rr(self):
		self.run_test("도다리", "{{ko-IPA}}", "dodari", "rr")
	def test_dodari_rrr(self):
		self.run_test("도다리", "{{ko-IPA}}", "dodali", "rrr")
	def test_dodari_mr(self):
		self.run_test("도다리", "{{ko-IPA}}", "todari", "mr")
	def test_dodari_yr(self):
		self.run_test("도다리", "{{ko-IPA}}", "totali", "yr")
	def test_dodari_ipa(self):
		self.run_test("도다리", "{{ko-IPA}}", "[to̞da̠ɾi]", "ipa")

	def test_bakdae_ph(self):
		self.run_test("박대", "{{ko-IPA}}", "박때/박떼", "ph")
	def test_bakdae_rr(self):
		self.run_test("박대", "{{ko-IPA}}", "bakdae", "rr")
	def test_bakdae_rrr(self):
		self.run_test("박대", "{{ko-IPA}}", "bagdae", "rrr")
	def test_bakdae_mr(self):
		self.run_test("박대", "{{ko-IPA}}", "paktae", "mr")
	def test_bakdae_yr(self):
		self.run_test("박대", "{{ko-IPA}}", "paktay", "yr")
	def test_bakdae_ipa(self):
		self.run_test("박대", "{{ko-IPA}}", "[pa̠k̚t͈ɛ] ~ [pa̠k̚t͈e̞]", "ipa")

	def test_kkachibok_ph(self):
		self.run_test("까치복", "{{ko-IPA|l=y}}", "까(ː)치복", "ph")
	def test_kkachibok_rr(self):
		self.run_test("까치복", "{{ko-IPA|l=y}}", "kkachibok", "rr")
	def test_kkachibok_rrr(self):
		self.run_test("까치복", "{{ko-IPA|l=y}}", "kkachibog", "rrr")
	def test_kkachibok_mr(self):
		self.run_test("까치복", "{{ko-IPA|l=y}}", "kkach'ibok", "mr")
	def test_kkachibok_yr(self):
		self.run_test("까치복", "{{ko-IPA|l=y}}", "kkā.chipok", "yr")
	def test_kkachibok_ipa(self):
		self.run_test("까치복", "{{ko-IPA|l=y}}", "[ˈk͈a̠(ː)t͡ɕʰibo̞k̚]", "ipa")

	def test_maeribok_ph(self):
		self.run_test("매리복", "{{ko-IPA}}", "매리복/메리복", "ph")
	def test_maeribok_rr(self):
		self.run_test("매리복", "{{ko-IPA}}", "maeribok", "rr")
	def test_maeribok_rrr(self):
		self.run_test("매리복", "{{ko-IPA}}", "maelibog", "rrr")
	def test_maeribok_mr(self):
		self.run_test("매리복", "{{ko-IPA}}", "maeribok", "mr")
	def test_maeribok_yr(self):
		self.run_test("매리복", "{{ko-IPA}}", "maylipok", "yr")
	def test_maeribok_ipa(self):
		self.run_test("매리복", "{{ko-IPA}}", "[mɛɾibo̞k̚] ~ [me̞ɾibo̞k̚]", "ipa")

	def test_bokseom_ph(self):
		self.run_test("복섬", "{{ko-IPA}}", "복썸", "ph")
	def test_bokseom_rr(self):
		self.run_test("복섬", "{{ko-IPA}}", "bokseom", "rr")
	def test_bokseom_rrr(self):
		self.run_test("복섬", "{{ko-IPA}}", "bogseom", "rrr")
	def test_bokseom_mr(self):
		self.run_test("복섬", "{{ko-IPA}}", "poksŏm", "mr")
	def test_bokseom_yr(self):
		self.run_test("복섬", "{{ko-IPA}}", "pok.sem", "yr")
	def test_bokseom_ipa(self):
		self.run_test("복섬", "{{ko-IPA}}", "[po̞ks͈ʌ̹m]", "ipa")

	def test_huinjeombok_ph(self):
		self.run_test("흰점복", "{{ko-IPA}}", "힌점복", "ph")
	def test_huinjeombok_rr(self):
		self.run_test("흰점복", "{{ko-IPA}}", "huinjeombok", "rr")
	def test_huinjeombok_rrr(self):
		self.run_test("흰점복", "{{ko-IPA}}", "huinjeombog", "rrr")
	def test_huinjeombok_mr(self):
		self.run_test("흰점복", "{{ko-IPA}}", "hŭinjŏmbok", "mr")
	def test_huinjeombok_yr(self):
		self.run_test("흰점복", "{{ko-IPA}}", "huyn.cempok", "yr")
	def test_huinjeombok_ipa(self):
		self.run_test("흰점복", "{{ko-IPA}}", "[çiɲd͡ʑʌ̹mbo̞k̚]", "ipa")

	def test_hwangbok_ph(self):
		self.run_test("황복", "{{ko-IPA}}", "황복", "ph")
	def test_hwangbok_rr(self):
		self.run_test("황복", "{{ko-IPA}}", "hwangbok", "rr")
	def test_hwangbok_rrr(self):
		self.run_test("황복", "{{ko-IPA}}", "hwangbog", "rrr")
	def test_hwangbok_mr(self):
		self.run_test("황복", "{{ko-IPA}}", "hwangbok", "mr")
	def test_hwangbok_yr(self):
		self.run_test("황복", "{{ko-IPA}}", "hwangpok", "yr")
	def test_hwangbok_ipa(self):
		self.run_test("황복", "{{ko-IPA}}", "[ɸwa̠ŋbo̞k̚]", "ipa")

	def test_jajubok_ph(self):
		self.run_test("자주복", "{{ko-IPA|l=y}}", "자(ː)주복", "ph")
	def test_jajubok_rr(self):
		self.run_test("자주복", "{{ko-IPA|l=y}}", "jajubok", "rr")
	def test_jajubok_rrr(self):
		self.run_test("자주복", "{{ko-IPA|l=y}}", "jajubog", "rrr")
	def test_jajubok_mr(self):
		self.run_test("자주복", "{{ko-IPA|l=y}}", "chajubok", "mr")
	def test_jajubok_yr(self):
		self.run_test("자주복", "{{ko-IPA|l=y}}", "cācwupok", "yr")
	def test_jajubok_ipa(self):
		self.run_test("자주복", "{{ko-IPA|l=y}}", "[ˈt͡ɕa̠(ː)d͡ʑubo̞k̚]", "ipa")

	def test_kkukjeogu_ph(self):
		self.run_test("꾹저구", "{{ko-IPA}}", "꾹쩌구", "ph")
	def test_kkukjeogu_rr(self):
		self.run_test("꾹저구", "{{ko-IPA}}", "kkukjeogu", "rr")
	def test_kkukjeogu_rrr(self):
		self.run_test("꾹저구", "{{ko-IPA}}", "kkugjeogu", "rrr")
	def test_kkukjeogu_mr(self):
		self.run_test("꾹저구", "{{ko-IPA}}", "kkukchŏgu", "mr")
	def test_kkukjeogu_yr(self):
		self.run_test("꾹저구", "{{ko-IPA}}", "kkwukcekwu", "yr")
	def test_kkukjeogu_ipa(self):
		self.run_test("꾹저구", "{{ko-IPA}}", "[k͈uk̚t͡ɕ͈ʌ̹ɡu]", "ipa")

	def test_garibi_ph(self):
		self.run_test("가리비", "{{ko-IPA}}", "가리비", "ph")
	def test_garibi_rr(self):
		self.run_test("가리비", "{{ko-IPA}}", "garibi", "rr")
	def test_garibi_rrr(self):
		self.run_test("가리비", "{{ko-IPA}}", "galibi", "rrr")
	def test_garibi_mr(self):
		self.run_test("가리비", "{{ko-IPA}}", "karibi", "mr")
	def test_garibi_yr(self):
		self.run_test("가리비", "{{ko-IPA}}", "kalipi", "yr")
	def test_garibi_ipa(self):
		self.run_test("가리비", "{{ko-IPA}}", "[ka̠ɾibi]", "ipa")

	def test_deokteu_ph(self):
		self.run_test("덕트", "{{ko-IPA}}", "덕트", "ph")
	def test_deokteu_rr(self):
		self.run_test("덕트", "{{ko-IPA}}", "deokteu", "rr")
	def test_deokteu_rrr(self):
		self.run_test("덕트", "{{ko-IPA}}", "deogteu", "rrr")
	def test_deokteu_mr(self):
		self.run_test("덕트", "{{ko-IPA}}", "tŏkt'ŭ", "mr")
	def test_deokteu_yr(self):
		self.run_test("덕트", "{{ko-IPA}}", "tekthu", "yr")
	def test_deokteu_ipa(self):
		self.run_test("덕트", "{{ko-IPA}}", "[tʌ̹k̚tʰɯ]", "ipa")

	def test_ttiat_ph(self):
		self.run_test("띠앗", "{{ko-ipa}}", "띠앋", "ph")
	def test_ttiat_rr(self):
		self.run_test("띠앗", "{{ko-ipa}}", "ttiat", "rr")
	def test_ttiat_rrr(self):
		self.run_test("띠앗", "{{ko-ipa}}", "ttias", "rrr")
	def test_ttiat_mr(self):
		self.run_test("띠앗", "{{ko-ipa}}", "ttiat", "mr")
	def test_ttiat_yr(self):
		self.run_test("띠앗", "{{ko-ipa}}", "ttias", "yr")
	def test_ttiat_ipa(self):
		self.run_test("띠앗", "{{ko-ipa}}", "[t͈ia̠t̚]", "ipa")

	def test_jae_ph(self):
		self.run_test("재", "{{ko-IPA}}", "재/제", "ph")
	def test_jae_rr(self):
		self.run_test("재", "{{ko-IPA}}", "jae", "rr")
	def test_jae_rrr(self):
		self.run_test("재", "{{ko-IPA}}", "jae", "rrr")
	def test_jae_mr(self):
		self.run_test("재", "{{ko-IPA}}", "chae", "mr")
	def test_jae_yr(self):
		self.run_test("재", "{{ko-IPA}}", "cay", "yr")
	def test_jae_ipa(self):
		self.run_test("재", "{{ko-IPA}}", "[t͡ɕɛ] ~ [t͡ɕe̞]", "ipa")

	def test_danji_ph(self):
		self.run_test("단지", "{{ko-IPA|l=y}}", "단(ː)지", "ph")
	def test_danji_rr(self):
		self.run_test("단지", "{{ko-IPA|l=y}}", "danji", "rr")
	def test_danji_rrr(self):
		self.run_test("단지", "{{ko-IPA|l=y}}", "danji", "rrr")
	def test_danji_mr(self):
		self.run_test("단지", "{{ko-IPA|l=y}}", "tanji", "mr")
	def test_danji_yr(self):
		self.run_test("단지", "{{ko-IPA|l=y}}", "tān.ci", "yr")
	def test_danji_ipa(self):
		self.run_test("단지", "{{ko-IPA|l=y}}", "[ˈta̠(ː)ɲd͡ʑi]", "ipa")
	def test_danji_ph_1(self):
		self.run_test("단지", "{{ko-IPA}}", "단지", "ph")
	def test_danji_rr_1(self):
		self.run_test("단지", "{{ko-IPA}}", "danji", "rr")
	def test_danji_rrr_1(self):
		self.run_test("단지", "{{ko-IPA}}", "danji", "rrr")
	def test_danji_mr_1(self):
		self.run_test("단지", "{{ko-IPA}}", "tanji", "mr")
	def test_danji_yr_1(self):
		self.run_test("단지", "{{ko-IPA}}", "tan.ci", "yr")
	def test_danji_ipa_1(self):
		self.run_test("단지", "{{ko-IPA}}", "[ta̠ɲd͡ʑi]", "ipa")
	def test_danji_ph_2(self):
		self.run_test("단지", "{{ko-IPA}}", "단지", "ph")
	def test_danji_rr_2(self):
		self.run_test("단지", "{{ko-IPA}}", "danji", "rr")
	def test_danji_rrr_2(self):
		self.run_test("단지", "{{ko-IPA}}", "danji", "rrr")
	def test_danji_mr_2(self):
		self.run_test("단지", "{{ko-IPA}}", "tanji", "mr")
	def test_danji_yr_2(self):
		self.run_test("단지", "{{ko-IPA}}", "tan.ci", "yr")
	def test_danji_ipa_2(self):
		self.run_test("단지", "{{ko-IPA}}", "[ta̠ɲd͡ʑi]", "ipa")

	def test_daeum_ph(self):
		self.run_test("다음", "{{ko-IPA|a=y}}", "다음", "ph")
	def test_daeum_rr(self):
		self.run_test("다음", "{{ko-IPA|a=y}}", "da'eum", "rr")
	def test_daeum_rrr(self):
		self.run_test("다음", "{{ko-IPA|a=y}}", "da'eum", "rrr")
	def test_daeum_mr(self):
		self.run_test("다음", "{{ko-IPA|a=y}}", "taŭm", "mr")
	def test_daeum_yr(self):
		self.run_test("다음", "{{ko-IPA|a=y}}", "taum", "yr")
	def test_daeum_ipa(self):
		self.run_test("다음", "{{ko-IPA|a=y}}", "[ta̠ɯm]", "ipa")

	def test_odi_ph(self):
		self.run_test("오디", "{{ko-ipa}}", "오디", "ph")
	def test_odi_rr(self):
		self.run_test("오디", "{{ko-ipa}}", "odi", "rr")
	def test_odi_rrr(self):
		self.run_test("오디", "{{ko-ipa}}", "odi", "rrr")
	def test_odi_mr(self):
		self.run_test("오디", "{{ko-ipa}}", "odi", "mr")
	def test_odi_yr(self):
		self.run_test("오디", "{{ko-ipa}}", "oti", "yr")
	def test_odi_ipa(self):
		self.run_test("오디", "{{ko-ipa}}", "[o̞di]", "ipa")

	def test_ppong_ph(self):
		self.run_test("뽕", "{{ko-ipa}}", "뽕", "ph")
	def test_ppong_rr(self):
		self.run_test("뽕", "{{ko-ipa}}", "ppong", "rr")
	def test_ppong_rrr(self):
		self.run_test("뽕", "{{ko-ipa}}", "ppong", "rrr")
	def test_ppong_mr(self):
		self.run_test("뽕", "{{ko-ipa}}", "ppong", "mr")
	def test_ppong_yr(self):
		self.run_test("뽕", "{{ko-ipa}}", "ppong", "yr")
	def test_ppong_ipa(self):
		self.run_test("뽕", "{{ko-ipa}}", "[p͈o̞ŋ]", "ipa")

	def test_ip_ph(self):
		self.run_test("잎", "{{ko-IPA}}", "입", "ph")
	def test_ip_rr(self):
		self.run_test("잎", "{{ko-IPA}}", "ip", "rr")
	def test_ip_rrr(self):
		self.run_test("잎", "{{ko-IPA}}", "ip", "rrr")
	def test_ip_mr(self):
		self.run_test("잎", "{{ko-IPA}}", "ip", "mr")
	def test_ip_yr(self):
		self.run_test("잎", "{{ko-IPA}}", "iph", "yr")
	def test_ip_ipa(self):
		self.run_test("잎", "{{ko-IPA}}", "[ip̚]", "ipa")

	def test_saisiot_ph(self):
		self.run_test("사이시옷", "{{ko-IPA}}", "사이시옫", "ph")
	def test_saisiot_rr(self):
		self.run_test("사이시옷", "{{ko-IPA}}", "saisiot", "rr")
	def test_saisiot_rrr(self):
		self.run_test("사이시옷", "{{ko-IPA}}", "saisios", "rrr")
	def test_saisiot_mr(self):
		self.run_test("사이시옷", "{{ko-IPA}}", "saisiot", "mr")
	def test_saisiot_yr(self):
		self.run_test("사이시옷", "{{ko-IPA}}", "saisios", "yr")
	def test_saisiot_ipa(self):
		self.run_test("사이시옷", "{{ko-IPA}}", "[sʰa̠iɕʰio̞t̚]", "ipa")


	def test_gippeum_ph(self):
		self.run_test("기쁨", "{{ko-IPA}}", "기쁨", "ph")
	def test_gippeum_rr(self):
		self.run_test("기쁨", "{{ko-IPA}}", "gippeum", "rr")
	def test_gippeum_rrr(self):
		self.run_test("기쁨", "{{ko-IPA}}", "gi'ppeum", "rrr")
	def test_gippeum_mr(self):
		self.run_test("기쁨", "{{ko-IPA}}", "kippŭm", "mr")
	def test_gippeum_yr(self):
		self.run_test("기쁨", "{{ko-IPA}}", "ki.ppum", "yr")
	def test_gippeum_ipa(self):
		self.run_test("기쁨", "{{ko-IPA}}", "[kip͈ɯm]", "ipa")

	def test_gippeumjo_ph(self):
		self.run_test("기쁨조", "{{ko-IPA}}", "기쁨조", "ph")
	def test_gippeumjo_rr(self):
		self.run_test("기쁨조", "{{ko-IPA}}", "gippeumjo", "rr")
	def test_gippeumjo_rrr(self):
		self.run_test("기쁨조", "{{ko-IPA}}", "gi'ppeumjo", "rrr")
	def test_gippeumjo_mr(self):
		self.run_test("기쁨조", "{{ko-IPA}}", "kippŭmjo", "mr")
	def test_gippeumjo_yr(self):
		self.run_test("기쁨조", "{{ko-IPA}}", "ki.ppumco", "yr")
	def test_gippeumjo_ipa(self):
		self.run_test("기쁨조", "{{ko-IPA}}", "[kip͈ɯmd͡ʑo̞]", "ipa")

	def test_ireuda_ph(self):
		self.run_test("이르다", "{{ko-IPA}}", "이르다", "ph")
	def test_ireuda_rr(self):
		self.run_test("이르다", "{{ko-IPA}}", "ireuda", "rr")
	def test_ireuda_rrr(self):
		self.run_test("이르다", "{{ko-IPA}}", "ileuda", "rrr")
	def test_ireuda_mr(self):
		self.run_test("이르다", "{{ko-IPA}}", "irŭda", "mr")
	def test_ireuda_yr(self):
		self.run_test("이르다", "{{ko-IPA}}", "iluta", "yr")
	def test_ireuda_ipa(self):
		self.run_test("이르다", "{{ko-IPA}}", "[iɾɯda̠]", "ipa")

	def test_eorida_ph(self):
		self.run_test("어리다", "{{ko-IPA}}", "어리다", "ph")
	def test_eorida_rr(self):
		self.run_test("어리다", "{{ko-IPA}}", "eorida", "rr")
	def test_eorida_rrr(self):
		self.run_test("어리다", "{{ko-IPA}}", "eolida", "rrr")
	def test_eorida_mr(self):
		self.run_test("어리다", "{{ko-IPA}}", "ŏrida", "mr")
	def test_eorida_yr(self):
		self.run_test("어리다", "{{ko-IPA}}", "elita", "yr")
	def test_eorida_ipa(self):
		self.run_test("어리다", "{{ko-IPA}}", "[ʌ̹ɾida̠]", "ipa")

	def test_changjo_ph(self):
		self.run_test("창조", "{{ko-IPA|l=y}}", "창(ː)조", "ph")
	def test_changjo_rr(self):
		self.run_test("창조", "{{ko-IPA|l=y}}", "changjo", "rr")
	def test_changjo_rrr(self):
		self.run_test("창조", "{{ko-IPA|l=y}}", "changjo", "rrr")
	def test_changjo_mr(self):
		self.run_test("창조", "{{ko-IPA|l=y}}", "ch'angjo", "mr")
	def test_changjo_yr(self):
		self.run_test("창조", "{{ko-IPA|l=y}}", "chāngco", "yr")
	def test_changjo_ipa(self):
		self.run_test("창조", "{{ko-IPA|l=y}}", "[ˈt͡ɕʰa̠(ː)ŋd͡ʑo̞]", "ipa")

	def test_geuraedo_ph(self):
		self.run_test("그래도", "{{ko-IPA}}", "그래도/그레도", "ph")
	def test_geuraedo_rr(self):
		self.run_test("그래도", "{{ko-IPA}}", "geuraedo", "rr")
	def test_geuraedo_rrr(self):
		self.run_test("그래도", "{{ko-IPA}}", "geulaedo", "rrr")
	def test_geuraedo_mr(self):
		self.run_test("그래도", "{{ko-IPA}}", "kŭraedo", "mr")
	def test_geuraedo_yr(self):
		self.run_test("그래도", "{{ko-IPA}}", "kulayto", "yr")
	def test_geuraedo_ipa(self):
		self.run_test("그래도", "{{ko-IPA}}", "[kɯɾɛdo̞] ~ [kɯɾe̞do̞]", "ipa")


	def test_saramdeul_ph(self):
		self.run_test("사람들", "{{ko-IPA}}", "사람들", "ph")
	def test_saramdeul_rr(self):
		self.run_test("사람들", "{{ko-IPA}}", "saramdeul", "rr")
	def test_saramdeul_rrr(self):
		self.run_test("사람들", "{{ko-IPA}}", "salamdeul", "rrr")
	def test_saramdeul_mr(self):
		self.run_test("사람들", "{{ko-IPA}}", "saramdŭl", "mr")
	def test_saramdeul_yr(self):
		self.run_test("사람들", "{{ko-IPA}}", "salamtul", "yr")
	def test_saramdeul_ipa(self):
		self.run_test("사람들", "{{ko-IPA}}", "[sʰa̠ɾa̠mdɯɭ]", "ipa")

	def test_mwo_ph(self):
		self.run_test("뭐", "{{ko-IPA|l=y|a=y}}", "뭐(ː)", "ph")
	def test_mwo_rr(self):
		self.run_test("뭐", "{{ko-IPA|l=y|a=y}}", "mwo", "rr")
	def test_mwo_rrr(self):
		self.run_test("뭐", "{{ko-IPA|l=y|a=y}}", "mwo", "rrr")
	def test_mwo_mr(self):
		self.run_test("뭐", "{{ko-IPA|l=y|a=y}}", "mwŏ", "mr")
	def test_mwo_yr(self):
		self.run_test("뭐", "{{ko-IPA|l=y|a=y}}", "mwē", "yr")
	def test_mwo_ipa(self):
		self.run_test("뭐", "{{ko-IPA|l=y|a=y}}", "[mwɘ(ː)]", "ipa")

	def test_cham_ph(self):
		self.run_test("참", "{{ko-IPA}}", "참", "ph")
	def test_cham_rr(self):
		self.run_test("참", "{{ko-IPA}}", "cham", "rr")
	def test_cham_rrr(self):
		self.run_test("참", "{{ko-IPA}}", "cham", "rrr")
	def test_cham_mr(self):
		self.run_test("참", "{{ko-IPA}}", "ch'am", "mr")
	def test_cham_yr(self):
		self.run_test("참", "{{ko-IPA}}", "cham", "yr")
	def test_cham_ipa(self):
		self.run_test("참", "{{ko-IPA}}", "[t͡ɕʰa̠m]", "ipa")
	def test_cham_ph_1(self):
		self.run_test("참", "{{ko-IPA}}", "참", "ph")
	def test_cham_rr_1(self):
		self.run_test("참", "{{ko-IPA}}", "cham", "rr")
	def test_cham_rrr_1(self):
		self.run_test("참", "{{ko-IPA}}", "cham", "rrr")
	def test_cham_mr_1(self):
		self.run_test("참", "{{ko-IPA}}", "ch'am", "mr")
	def test_cham_yr_1(self):
		self.run_test("참", "{{ko-IPA}}", "cham", "yr")
	def test_cham_ipa_1(self):
		self.run_test("참", "{{ko-IPA}}", "[t͡ɕʰa̠m]", "ipa")

	def test_chi_ph(self):
		self.run_test("치", "{{ko-IPA}}", "치", "ph")
	def test_chi_rr(self):
		self.run_test("치", "{{ko-IPA}}", "chi", "rr")
	def test_chi_rrr(self):
		self.run_test("치", "{{ko-IPA}}", "chi", "rrr")
	def test_chi_mr(self):
		self.run_test("치", "{{ko-IPA}}", "ch'i", "mr")
	def test_chi_yr(self):
		self.run_test("치", "{{ko-IPA}}", "chi", "yr")
	def test_chi_ipa(self):
		self.run_test("치", "{{ko-IPA}}", "[t͡ɕʰi]", "ipa")

	def test_saengil_ph(self):
		self.run_test("생일", "{{ko-IPA}}", "생일/셍일", "ph")
	def test_saengil_rr(self):
		self.run_test("생일", "{{ko-IPA}}", "saeng'il", "rr")
	def test_saengil_rrr(self):
		self.run_test("생일", "{{ko-IPA}}", "saeng'il", "rrr")
	def test_saengil_mr(self):
		self.run_test("생일", "{{ko-IPA}}", "saengil", "mr")
	def test_saengil_yr(self):
		self.run_test("생일", "{{ko-IPA}}", "sayngil", "yr")
	def test_saengil_ipa(self):
		self.run_test("생일", "{{ko-IPA}}", "[sʰɛŋiɭ] ~ [sʰe̞ŋiɭ]", "ipa")

	def test_yakhon_ph(self):
		self.run_test("약혼", "{{ko-IPA}}", "야콘", "ph")
	def test_yakhon_rr(self):
		self.run_test("약혼", "{{ko-IPA}}", "yakhon", "rr")
	def test_yakhon_rrr(self):
		self.run_test("약혼", "{{ko-IPA}}", "yaghon", "rrr")
	def test_yakhon_mr(self):
		self.run_test("약혼", "{{ko-IPA}}", "yakhon", "mr")
	def test_yakhon_yr(self):
		self.run_test("약혼", "{{ko-IPA}}", "yak.hon", "yr")
	def test_yakhon_ipa(self):
		self.run_test("약혼", "{{ko-IPA}}", "[ja̠kʰo̞n]", "ipa")

	def test_sajin_ph(self):
		self.run_test("사진", "{{ko-IPA}}", "사진", "ph")
	def test_sajin_rr(self):
		self.run_test("사진", "{{ko-IPA}}", "sajin", "rr")
	def test_sajin_rrr(self):
		self.run_test("사진", "{{ko-IPA}}", "sajin", "rrr")
	def test_sajin_mr(self):
		self.run_test("사진", "{{ko-IPA}}", "sajin", "mr")
	def test_sajin_yr(self):
		self.run_test("사진", "{{ko-IPA}}", "sacin", "yr")
	def test_sajin_ipa(self):
		self.run_test("사진", "{{ko-IPA}}", "[sʰa̠d͡ʑin]", "ipa")

	def test_kkuda_ph(self):
		self.run_test("꾸다", "{{ko-IPA}}", "꾸다", "ph")
	def test_kkuda_rr(self):
		self.run_test("꾸다", "{{ko-IPA}}", "kkuda", "rr")
	def test_kkuda_rrr(self):
		self.run_test("꾸다", "{{ko-IPA}}", "kkuda", "rrr")
	def test_kkuda_mr(self):
		self.run_test("꾸다", "{{ko-IPA}}", "kkuda", "mr")
	def test_kkuda_yr(self):
		self.run_test("꾸다", "{{ko-IPA}}", "kkwuta", "yr")
	def test_kkuda_ipa(self):
		self.run_test("꾸다", "{{ko-IPA}}", "[k͈uda̠]", "ipa")


	def test_geujeo_ph(self):
		self.run_test("그저", "{{ko-IPA}}", "그저", "ph")
	def test_geujeo_rr(self):
		self.run_test("그저", "{{ko-IPA}}", "geujeo", "rr")
	def test_geujeo_rrr(self):
		self.run_test("그저", "{{ko-IPA}}", "geujeo", "rrr")
	def test_geujeo_mr(self):
		self.run_test("그저", "{{ko-IPA}}", "kŭjŏ", "mr")
	def test_geujeo_yr(self):
		self.run_test("그저", "{{ko-IPA}}", "kuce", "yr")
	def test_geujeo_ipa(self):
		self.run_test("그저", "{{ko-IPA}}", "[kɯd͡ʑʌ̹]", "ipa")

	def test_hyeong_ph(self):
		self.run_test("형", "{{ko-IPA}}", "형", "ph")
	def test_hyeong_rr(self):
		self.run_test("형", "{{ko-IPA}}", "hyeong", "rr")
	def test_hyeong_rrr(self):
		self.run_test("형", "{{ko-IPA}}", "hyeong", "rrr")
	def test_hyeong_mr(self):
		self.run_test("형", "{{ko-IPA}}", "hyŏng", "mr")
	def test_hyeong_yr(self):
		self.run_test("형", "{{ko-IPA}}", "hyeng", "yr")
	def test_hyeong_ipa(self):
		self.run_test("형", "{{ko-IPA}}", "[çʌ̹ŋ]", "ipa")

	def test_san_ph(self):
		self.run_test("산", "{{ko-IPA}}", "산", "ph")
	def test_san_rr(self):
		self.run_test("산", "{{ko-IPA}}", "san", "rr")
	def test_san_rrr(self):
		self.run_test("산", "{{ko-IPA}}", "san", "rrr")
	def test_san_mr(self):
		self.run_test("산", "{{ko-IPA}}", "san", "mr")
	def test_san_yr(self):
		self.run_test("산", "{{ko-IPA}}", "san", "yr")
	def test_san_ipa(self):
		self.run_test("산", "{{ko-IPA}}", "[sʰa̠n]", "ipa")
	def test_san_ph_1(self):
		self.run_test("산", "{{ko-IPA}}", "산", "ph")
	def test_san_rr_1(self):
		self.run_test("산", "{{ko-IPA}}", "san", "rr")
	def test_san_rrr_1(self):
		self.run_test("산", "{{ko-IPA}}", "san", "rrr")
	def test_san_mr_1(self):
		self.run_test("산", "{{ko-IPA}}", "san", "mr")
	def test_san_yr_1(self):
		self.run_test("산", "{{ko-IPA}}", "san", "yr")
	def test_san_ipa_1(self):
		self.run_test("산", "{{ko-IPA}}", "[sʰa̠n]", "ipa")
	def test_san_ph_2(self):
		self.run_test("산", "{{ko-IPA|l=y}}", "산(ː)", "ph")
	def test_san_rr_2(self):
		self.run_test("산", "{{ko-IPA|l=y}}", "san", "rr")
	def test_san_rrr_2(self):
		self.run_test("산", "{{ko-IPA|l=y}}", "san", "rrr")
	def test_san_mr_2(self):
		self.run_test("산", "{{ko-IPA|l=y}}", "san", "mr")
	def test_san_yr_2(self):
		self.run_test("산", "{{ko-IPA|l=y}}", "sān", "yr")
	def test_san_ipa_2(self):
		self.run_test("산", "{{ko-IPA|l=y}}", "[sʰa̠(ː)n]", "ipa")

	def test_pyeonghwa_ph(self):
		self.run_test("평화", "{{ko-IPA}}", "평화", "ph")
	def test_pyeonghwa_rr(self):
		self.run_test("평화", "{{ko-IPA}}", "pyeonghwa", "rr")
	def test_pyeonghwa_rrr(self):
		self.run_test("평화", "{{ko-IPA}}", "pyeonghwa", "rrr")
	def test_pyeonghwa_mr(self):
		self.run_test("평화", "{{ko-IPA}}", "p'yŏnghwa", "mr")
	def test_pyeonghwa_yr(self):
		self.run_test("평화", "{{ko-IPA}}", "phyenghwa", "yr")
	def test_pyeonghwa_ipa(self):
		self.run_test("평화", "{{ko-IPA}}", "[pʰjʌ̹ŋβwa̠]", "ipa")


	def test_bupi_ph(self):
		self.run_test("부피", "{{ko-IPA}}", "부피", "ph")
	def test_bupi_rr(self):
		self.run_test("부피", "{{ko-IPA}}", "bupi", "rr")
	def test_bupi_rrr(self):
		self.run_test("부피", "{{ko-IPA}}", "bupi", "rrr")
	def test_bupi_mr(self):
		self.run_test("부피", "{{ko-IPA}}", "pup'i", "mr")
	def test_bupi_yr(self):
		self.run_test("부피", "{{ko-IPA}}", "pu.phi", "yr")
	def test_bupi_ipa(self):
		self.run_test("부피", "{{ko-IPA}}", "[pupʰi]", "ipa")



	def test_ae_ph(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "애(ː)/에(ː)", "ph")
	def test_ae_rr(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "ae", "rr")
	def test_ae_rrr(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "ae", "rrr")
	def test_ae_mr(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "ae", "mr")
	def test_ae_yr(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "āy", "yr")
	def test_ae_ipa(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "[ɛ(ː)] ~ [e̞(ː)]", "ipa")
	def test_ae_ph_1(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "애(ː)/에(ː)", "ph")
	def test_ae_rr_1(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "ae", "rr")
	def test_ae_rrr_1(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "ae", "rrr")
	def test_ae_mr_1(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "ae", "mr")
	def test_ae_yr_1(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "āy", "yr")
	def test_ae_ipa_1(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "[ɛ(ː)] ~ [e̞(ː)]", "ipa")
	def test_ae_ph_2(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "애(ː)/에(ː)", "ph")
	def test_ae_rr_2(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "ae", "rr")
	def test_ae_rrr_2(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "ae", "rrr")
	def test_ae_mr_2(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "ae", "mr")
	def test_ae_yr_2(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "āy", "yr")
	def test_ae_ipa_2(self):
		self.run_test("애", "{{ko-IPA|l=y}}", "[ɛ(ː)] ~ [e̞(ː)]", "ipa")

	def test_ai_ph(self):
		self.run_test("아이", "{{ko-IPA|a=y}}", "아이", "ph")
	def test_ai_rr(self):
		self.run_test("아이", "{{ko-IPA|a=y}}", "ai", "rr")
	def test_ai_rrr(self):
		self.run_test("아이", "{{ko-IPA|a=y}}", "ai", "rrr")
	def test_ai_mr(self):
		self.run_test("아이", "{{ko-IPA|a=y}}", "ai", "mr")
	def test_ai_yr(self):
		self.run_test("아이", "{{ko-IPA|a=y}}", "ai", "yr")
	def test_ai_ipa(self):
		self.run_test("아이", "{{ko-IPA|a=y}}", "[a̠i]", "ipa")


	def test_oraedoeda_ph(self):
		self.run_test("오래되다", "{{ko-IPA}}", "오래뒈다/오래되다/오레뒈다/오레되다", "ph")
	def test_oraedoeda_rr(self):
		self.run_test("오래되다", "{{ko-IPA}}", "oraedoeda", "rr")
	def test_oraedoeda_rrr(self):
		self.run_test("오래되다", "{{ko-IPA}}", "olaedoeda", "rrr")
	def test_oraedoeda_mr(self):
		self.run_test("오래되다", "{{ko-IPA}}", "oraedoeda", "mr")
	def test_oraedoeda_yr(self):
		self.run_test("오래되다", "{{ko-IPA}}", "olaytoyta", "yr")
	def test_oraedoeda_ipa(self):
		self.run_test("오래되다", "{{ko-IPA}}", "[o̞ɾɛdwe̞da̠] ~ [o̞ɾɛdø̞da̠] ~ [o̞ɾe̞dwe̞da̠] ~ [o̞ɾe̞dø̞da̠]", "ipa")

	def test_meoljjeong_ph(self):
		self.run_test("멀쩡", "{{ko-IPA}}", "멀쩡", "ph")
	def test_meoljjeong_rr(self):
		self.run_test("멀쩡", "{{ko-IPA}}", "meoljjeong", "rr")
	def test_meoljjeong_rrr(self):
		self.run_test("멀쩡", "{{ko-IPA}}", "meoljjeong", "rrr")
	def test_meoljjeong_mr(self):
		self.run_test("멀쩡", "{{ko-IPA}}", "mŏltchŏng", "mr")
	def test_meoljjeong_yr(self):
		self.run_test("멀쩡", "{{ko-IPA}}", "melcceng", "yr")
	def test_meoljjeong_ipa(self):
		self.run_test("멀쩡", "{{ko-IPA}}", "[mʌ̹ʎt͡ɕ͈ʌ̹ŋ]", "ipa")

	def test_ijen_ph(self):
		self.run_test("이젠", "{{ko-IPA}}", "이젠", "ph")
	def test_ijen_rr(self):
		self.run_test("이젠", "{{ko-IPA}}", "ijen", "rr")
	def test_ijen_rrr(self):
		self.run_test("이젠", "{{ko-IPA}}", "ijen", "rrr")
	def test_ijen_mr(self):
		self.run_test("이젠", "{{ko-IPA}}", "ijen", "mr")
	def test_ijen_yr(self):
		self.run_test("이젠", "{{ko-IPA}}", "iceyn", "yr")
	def test_ijen_ipa(self):
		self.run_test("이젠", "{{ko-IPA}}", "[id͡ʑe̞n]", "ipa")

	def test_ije_ph(self):
		self.run_test("이제", "{{ko-IPA|a=y}}", "이제", "ph")
	def test_ije_rr(self):
		self.run_test("이제", "{{ko-IPA|a=y}}", "ije", "rr")
	def test_ije_rrr(self):
		self.run_test("이제", "{{ko-IPA|a=y}}", "ije", "rrr")
	def test_ije_mr(self):
		self.run_test("이제", "{{ko-IPA|a=y}}", "ije", "mr")
	def test_ije_yr(self):
		self.run_test("이제", "{{ko-IPA|a=y}}", "icey", "yr")
	def test_ije_ipa(self):
		self.run_test("이제", "{{ko-IPA|a=y}}", "[id͡ʑe̞]", "ipa")



	def test_deul_ph(self):
		self.run_test("들", "{{ko-IPA|l=y}}", "들(ː)", "ph")
	def test_deul_rr(self):
		self.run_test("들", "{{ko-IPA|l=y}}", "deul", "rr")
	def test_deul_rrr(self):
		self.run_test("들", "{{ko-IPA|l=y}}", "deul", "rrr")
	def test_deul_mr(self):
		self.run_test("들", "{{ko-IPA|l=y}}", "tŭl", "mr")
	def test_deul_yr(self):
		self.run_test("들", "{{ko-IPA|l=y}}", "tūl", "yr")
	def test_deul_ipa(self):
		self.run_test("들", "{{ko-IPA|l=y}}", "[tɯ(ː)ɭ]", "ipa")

	def test_yudu_ph(self):
		self.run_test("유두", "{{ko-ipa}}", "유두", "ph")
	def test_yudu_rr(self):
		self.run_test("유두", "{{ko-ipa}}", "yudu", "rr")
	def test_yudu_rrr(self):
		self.run_test("유두", "{{ko-ipa}}", "yudu", "rrr")
	def test_yudu_mr(self):
		self.run_test("유두", "{{ko-ipa}}", "yudu", "mr")
	def test_yudu_yr(self):
		self.run_test("유두", "{{ko-ipa}}", "yutwu", "yr")
	def test_yudu_ipa(self):
		self.run_test("유두", "{{ko-ipa}}", "[judu]", "ipa")

	def test_hanjaeo_ph(self):
		self.run_test("한자어", "{{ko-IPA|l=y|com=1}}", "한(ː)짜어", "ph")
	def test_hanjaeo_rr(self):
		self.run_test("한자어", "{{ko-IPA|l=y|com=1}}", "hanja'eo", "rr")
	def test_hanjaeo_rrr(self):
		self.run_test("한자어", "{{ko-IPA|l=y|com=1}}", "hanja'eo", "rrr")
	def test_hanjaeo_mr(self):
		self.run_test("한자어", "{{ko-IPA|l=y|com=1}}", "hanchaŏ", "mr")
	def test_hanjaeo_yr(self):
		self.run_test("한자어", "{{ko-IPA|l=y|com=1}}", "hānqcae", "yr")
	def test_hanjaeo_ipa(self):
		self.run_test("한자어", "{{ko-IPA|l=y|com=1}}", "[ˈha̠(ː)ɲt͡ɕ͈a̠ʌ̹]", "ipa")

	def test_cho_ph(self):
		self.run_test("초", "{{ko-ipa}}", "초", "ph")
	def test_cho_rr(self):
		self.run_test("초", "{{ko-ipa}}", "cho", "rr")
	def test_cho_rrr(self):
		self.run_test("초", "{{ko-ipa}}", "cho", "rrr")
	def test_cho_mr(self):
		self.run_test("초", "{{ko-ipa}}", "ch'o", "mr")
	def test_cho_yr(self):
		self.run_test("초", "{{ko-ipa}}", "cho", "yr")
	def test_cho_ipa(self):
		self.run_test("초", "{{ko-ipa}}", "[t͡ɕʰo̞]", "ipa")

	def test_eo_ph(self):
		self.run_test("어", "{{ko-IPA}}", "어", "ph")
	def test_eo_rr(self):
		self.run_test("어", "{{ko-IPA}}", "eo", "rr")
	def test_eo_rrr(self):
		self.run_test("어", "{{ko-IPA}}", "eo", "rrr")
	def test_eo_mr(self):
		self.run_test("어", "{{ko-IPA}}", "ŏ", "mr")
	def test_eo_yr(self):
		self.run_test("어", "{{ko-IPA}}", "e", "yr")
	def test_eo_ipa(self):
		self.run_test("어", "{{ko-IPA}}", "[ʌ̹]", "ipa")
	def test_eo_ph_1(self):
		self.run_test("어", "{{ko-IPA}}", "어", "ph")
	def test_eo_rr_1(self):
		self.run_test("어", "{{ko-IPA}}", "eo", "rr")
	def test_eo_rrr_1(self):
		self.run_test("어", "{{ko-IPA}}", "eo", "rrr")
	def test_eo_mr_1(self):
		self.run_test("어", "{{ko-IPA}}", "ŏ", "mr")
	def test_eo_yr_1(self):
		self.run_test("어", "{{ko-IPA}}", "e", "yr")
	def test_eo_ipa_1(self):
		self.run_test("어", "{{ko-IPA}}", "[ʌ̹]", "ipa")
	def test_eo_ph_2(self):
		self.run_test("어", "{{ko-IPA}}", "어", "ph")
	def test_eo_rr_2(self):
		self.run_test("어", "{{ko-IPA}}", "eo", "rr")
	def test_eo_rrr_2(self):
		self.run_test("어", "{{ko-IPA}}", "eo", "rrr")
	def test_eo_mr_2(self):
		self.run_test("어", "{{ko-IPA}}", "ŏ", "mr")
	def test_eo_yr_2(self):
		self.run_test("어", "{{ko-IPA}}", "e", "yr")
	def test_eo_ipa_2(self):
		self.run_test("어", "{{ko-IPA}}", "[ʌ̹]", "ipa")

	def test_mullonimnida_ph(self):
		self.run_test("물론입니다", "{{ko-IPA}}", "물로님니다", "ph")
	def test_mullonimnida_rr(self):
		self.run_test("물론입니다", "{{ko-IPA}}", "mullonimnida", "rr")
	def test_mullonimnida_rrr(self):
		self.run_test("물론입니다", "{{ko-IPA}}", "mullon'ibnida", "rrr")
	def test_mullonimnida_mr(self):
		self.run_test("물론입니다", "{{ko-IPA}}", "mullonimnida", "mr")
	def test_mullonimnida_yr(self):
		self.run_test("물론입니다", "{{ko-IPA}}", "mullon.ipnita", "yr")
	def test_mullonimnida_ipa(self):
		self.run_test("물론입니다", "{{ko-IPA}}", "[muɭɭo̞nimnida̠]", "ipa")

	def test_sihap_ph(self):
		self.run_test("시합", "{{ko-IPA}}", "시합", "ph")
	def test_sihap_rr(self):
		self.run_test("시합", "{{ko-IPA}}", "sihap", "rr")
	def test_sihap_rrr(self):
		self.run_test("시합", "{{ko-IPA}}", "sihab", "rrr")
	def test_sihap_mr(self):
		self.run_test("시합", "{{ko-IPA}}", "sihap", "mr")
	def test_sihap_yr(self):
		self.run_test("시합", "{{ko-IPA}}", "sihap", "yr")
	def test_sihap_ipa(self):
		self.run_test("시합", "{{ko-IPA}}", "[ɕʰiɦa̠p̚]", "ipa")

	def test_soe_ph(self):
		self.run_test("쇠", "{{ko-IPA}}", "쉐/쇠", "ph")
	def test_soe_rr(self):
		self.run_test("쇠", "{{ko-IPA}}", "soe", "rr")
	def test_soe_rrr(self):
		self.run_test("쇠", "{{ko-IPA}}", "soe", "rrr")
	def test_soe_mr(self):
		self.run_test("쇠", "{{ko-IPA}}", "soe", "mr")
	def test_soe_yr(self):
		self.run_test("쇠", "{{ko-IPA}}", "soy", "yr")
	def test_soe_ipa(self):
		self.run_test("쇠", "{{ko-IPA}}", "[sʰwe̞] ~ [sʰø̞]", "ipa")

	def test_won_ph(self):
		self.run_test("원", "{{ko-IPA}}", "원", "ph")
	def test_won_rr(self):
		self.run_test("원", "{{ko-IPA}}", "won", "rr")
	def test_won_rrr(self):
		self.run_test("원", "{{ko-IPA}}", "won", "rrr")
	def test_won_mr(self):
		self.run_test("원", "{{ko-IPA}}", "wŏn", "mr")
	def test_won_yr(self):
		self.run_test("원", "{{ko-IPA}}", "wen", "yr")
	def test_won_ipa(self):
		self.run_test("원", "{{ko-IPA}}", "[wʌ̹n]", "ipa")

	def test_jageun_ph(self):
		self.run_test("작은", "{{ko-IPA}}", "자근", "ph")
	def test_jageun_rr(self):
		self.run_test("작은", "{{ko-IPA}}", "jageun", "rr")
	def test_jageun_rrr(self):
		self.run_test("작은", "{{ko-IPA}}", "jag'eun", "rrr")
	def test_jageun_mr(self):
		self.run_test("작은", "{{ko-IPA}}", "chagŭn", "mr")
	def test_jageun_yr(self):
		self.run_test("작은", "{{ko-IPA}}", "cak.un", "yr")
	def test_jageun_ipa(self):
		self.run_test("작은", "{{ko-IPA}}", "[t͡ɕa̠ɡɯn]", "ipa")

	def test_jakda_ph(self):
		self.run_test("작다", "{{ko-IPA|l=y|a=y}}", "작(ː)따", "ph")
	def test_jakda_rr(self):
		self.run_test("작다", "{{ko-IPA|l=y|a=y}}", "jakda", "rr")
	def test_jakda_rrr(self):
		self.run_test("작다", "{{ko-IPA|l=y|a=y}}", "jagda", "rrr")
	def test_jakda_mr(self):
		self.run_test("작다", "{{ko-IPA|l=y|a=y}}", "chakta", "mr")
	def test_jakda_yr(self):
		self.run_test("작다", "{{ko-IPA|l=y|a=y}}", "cākta", "yr")
	def test_jakda_ipa(self):
		self.run_test("작다", "{{ko-IPA|l=y|a=y}}", "[ˈt͡ɕa̠(ː)k̚t͈a̠]", "ipa")

	def test_jeokda_ph(self):
		self.run_test("적다", "{{ko-IPA|l=y}}", "적(ː)따", "ph")
	def test_jeokda_rr(self):
		self.run_test("적다", "{{ko-IPA|l=y}}", "jeokda", "rr")
	def test_jeokda_rrr(self):
		self.run_test("적다", "{{ko-IPA|l=y}}", "jeogda", "rrr")
	def test_jeokda_mr(self):
		self.run_test("적다", "{{ko-IPA|l=y}}", "chŏkta", "mr")
	def test_jeokda_yr(self):
		self.run_test("적다", "{{ko-IPA|l=y}}", "cēkta", "yr")
	def test_jeokda_ipa(self):
		self.run_test("적다", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)k̚t͈a̠]", "ipa")
	def test_jeokda_ph_1(self):
		self.run_test("적다", "{{ko-IPA}}", "적따", "ph")
	def test_jeokda_rr_1(self):
		self.run_test("적다", "{{ko-IPA}}", "jeokda", "rr")
	def test_jeokda_rrr_1(self):
		self.run_test("적다", "{{ko-IPA}}", "jeogda", "rrr")
	def test_jeokda_mr_1(self):
		self.run_test("적다", "{{ko-IPA}}", "chŏkta", "mr")
	def test_jeokda_yr_1(self):
		self.run_test("적다", "{{ko-IPA}}", "cekta", "yr")
	def test_jeokda_ipa_1(self):
		self.run_test("적다", "{{ko-IPA}}", "[t͡ɕʌ̹k̚t͈a̠]", "ipa")


	def test_neurida_ph(self):
		self.run_test("느리다", "{{ko-IPA}}", "느리다", "ph")
	def test_neurida_rr(self):
		self.run_test("느리다", "{{ko-IPA}}", "neurida", "rr")
	def test_neurida_rrr(self):
		self.run_test("느리다", "{{ko-IPA}}", "neulida", "rrr")
	def test_neurida_mr(self):
		self.run_test("느리다", "{{ko-IPA}}", "nŭrida", "mr")
	def test_neurida_yr(self):
		self.run_test("느리다", "{{ko-IPA}}", "nulita", "yr")
	def test_neurida_ipa(self):
		self.run_test("느리다", "{{ko-IPA}}", "[nɯɾida̠]", "ipa")

	def test_ppareuda_ph(self):
		self.run_test("빠르다", "{{ko-IPA}}", "빠르다", "ph")
	def test_ppareuda_rr(self):
		self.run_test("빠르다", "{{ko-IPA}}", "ppareuda", "rr")
	def test_ppareuda_rrr(self):
		self.run_test("빠르다", "{{ko-IPA}}", "ppaleuda", "rrr")
	def test_ppareuda_mr(self):
		self.run_test("빠르다", "{{ko-IPA}}", "pparŭda", "mr")
	def test_ppareuda_yr(self):
		self.run_test("빠르다", "{{ko-IPA}}", "ppaluta", "yr")
	def test_ppareuda_ipa(self):
		self.run_test("빠르다", "{{ko-IPA}}", "[p͈a̠ɾɯda̠]", "ipa")

	def test_dalda_ph(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "달(ː)다", "ph")
	def test_dalda_rr(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "dalda", "rr")
	def test_dalda_rrr(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "dalda", "rrr")
	def test_dalda_mr(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "talda", "mr")
	def test_dalda_yr(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "tālta", "yr")
	def test_dalda_ipa(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "[ˈta̠(ː)ɭda̠]", "ipa")
	def test_dalda_ph_1(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "달(ː)다", "ph")
	def test_dalda_rr_1(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "dalda", "rr")
	def test_dalda_rrr_1(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "dalda", "rrr")
	def test_dalda_mr_1(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "talda", "mr")
	def test_dalda_yr_1(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "tālta", "yr")
	def test_dalda_ipa_1(self):
		self.run_test("달다", "{{ko-IPA|l=y}}", "[ˈta̠(ː)ɭda̠]", "ipa")
	def test_dalda_ph_2(self):
		self.run_test("달다", "{{ko-IPA}}", "달다", "ph")
	def test_dalda_rr_2(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rr")
	def test_dalda_rrr_2(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rrr")
	def test_dalda_mr_2(self):
		self.run_test("달다", "{{ko-IPA}}", "talda", "mr")
	def test_dalda_yr_2(self):
		self.run_test("달다", "{{ko-IPA}}", "talta", "yr")
	def test_dalda_ipa_2(self):
		self.run_test("달다", "{{ko-IPA}}", "[ta̠ɭda̠]", "ipa")
	def test_dalda_ph_3(self):
		self.run_test("달다", "{{ko-IPA}}", "달다", "ph")
	def test_dalda_rr_3(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rr")
	def test_dalda_rrr_3(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rrr")
	def test_dalda_mr_3(self):
		self.run_test("달다", "{{ko-IPA}}", "talda", "mr")
	def test_dalda_yr_3(self):
		self.run_test("달다", "{{ko-IPA}}", "talta", "yr")
	def test_dalda_ipa_3(self):
		self.run_test("달다", "{{ko-IPA}}", "[ta̠ɭda̠]", "ipa")
	def test_dalda_ph_4(self):
		self.run_test("달다", "{{ko-IPA}}", "달다", "ph")
	def test_dalda_rr_4(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rr")
	def test_dalda_rrr_4(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rrr")
	def test_dalda_mr_4(self):
		self.run_test("달다", "{{ko-IPA}}", "talda", "mr")
	def test_dalda_yr_4(self):
		self.run_test("달다", "{{ko-IPA}}", "talta", "yr")
	def test_dalda_ipa_4(self):
		self.run_test("달다", "{{ko-IPA}}", "[ta̠ɭda̠]", "ipa")
	def test_dalda_ph_5(self):
		self.run_test("달다", "{{ko-IPA}}", "달다", "ph")
	def test_dalda_rr_5(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rr")
	def test_dalda_rrr_5(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rrr")
	def test_dalda_mr_5(self):
		self.run_test("달다", "{{ko-IPA}}", "talda", "mr")
	def test_dalda_yr_5(self):
		self.run_test("달다", "{{ko-IPA}}", "talta", "yr")
	def test_dalda_ipa_5(self):
		self.run_test("달다", "{{ko-IPA}}", "[ta̠ɭda̠]", "ipa")
	def test_dalda_ph_6(self):
		self.run_test("달다", "{{ko-IPA}}", "달다", "ph")
	def test_dalda_rr_6(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rr")
	def test_dalda_rrr_6(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rrr")
	def test_dalda_mr_6(self):
		self.run_test("달다", "{{ko-IPA}}", "talda", "mr")
	def test_dalda_yr_6(self):
		self.run_test("달다", "{{ko-IPA}}", "talta", "yr")
	def test_dalda_ipa_6(self):
		self.run_test("달다", "{{ko-IPA}}", "[ta̠ɭda̠]", "ipa")
	def test_dalda_ph_7(self):
		self.run_test("달다", "{{ko-IPA}}", "달다", "ph")
	def test_dalda_rr_7(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rr")
	def test_dalda_rrr_7(self):
		self.run_test("달다", "{{ko-IPA}}", "dalda", "rrr")
	def test_dalda_mr_7(self):
		self.run_test("달다", "{{ko-IPA}}", "talda", "mr")
	def test_dalda_yr_7(self):
		self.run_test("달다", "{{ko-IPA}}", "talta", "yr")
	def test_dalda_ipa_7(self):
		self.run_test("달다", "{{ko-IPA}}", "[ta̠ɭda̠]", "ipa")

	def test_bihaenggipyo_ph(self):
		self.run_test("비행기표", "{{ko-IPA}}", "비행기표/비헹기표", "ph")
	def test_bihaenggipyo_rr(self):
		self.run_test("비행기표", "{{ko-IPA}}", "bihaenggipyo", "rr")
	def test_bihaenggipyo_rrr(self):
		self.run_test("비행기표", "{{ko-IPA}}", "bihaenggipyo", "rrr")
	def test_bihaenggipyo_mr(self):
		self.run_test("비행기표", "{{ko-IPA}}", "pihaenggip'yo", "mr")
	def test_bihaenggipyo_yr(self):
		self.run_test("비행기표", "{{ko-IPA}}", "pihayngki.phyo", "yr")
	def test_bihaenggipyo_ipa(self):
		self.run_test("비행기표", "{{ko-IPA}}", "[piɦɛŋɡipʰjo] ~ [piɦe̞ŋɡipʰjo]", "ipa")

	def test_bihaenggi_ph(self):
		self.run_test("비행기", "{{ko-IPA}}", "비행기/비헹기", "ph")
	def test_bihaenggi_rr(self):
		self.run_test("비행기", "{{ko-IPA}}", "bihaenggi", "rr")
	def test_bihaenggi_rrr(self):
		self.run_test("비행기", "{{ko-IPA}}", "bihaenggi", "rrr")
	def test_bihaenggi_mr(self):
		self.run_test("비행기", "{{ko-IPA}}", "pihaenggi", "mr")
	def test_bihaenggi_yr(self):
		self.run_test("비행기", "{{ko-IPA}}", "pihayngki", "yr")
	def test_bihaenggi_ipa(self):
		self.run_test("비행기", "{{ko-IPA}}", "[piɦɛŋɡi] ~ [piɦe̞ŋɡi]", "ipa")

	def test_gidarida_ph(self):
		self.run_test("기다리다", "{{ko-IPA|a=y}}", "기다리다", "ph")
	def test_gidarida_rr(self):
		self.run_test("기다리다", "{{ko-IPA|a=y}}", "gidarida", "rr")
	def test_gidarida_rrr(self):
		self.run_test("기다리다", "{{ko-IPA|a=y}}", "gidalida", "rrr")
	def test_gidarida_mr(self):
		self.run_test("기다리다", "{{ko-IPA|a=y}}", "kidarida", "mr")
	def test_gidarida_yr(self):
		self.run_test("기다리다", "{{ko-IPA|a=y}}", "kitalita", "yr")
	def test_gidarida_ipa(self):
		self.run_test("기다리다", "{{ko-IPA|a=y}}", "[kida̠ɾida̠]", "ipa")

	def test_dochakhada_ph(self):
		self.run_test("도착하다", "{{ko-IPA|l=y}}", "도(ː)차카다", "ph")
	def test_dochakhada_rr(self):
		self.run_test("도착하다", "{{ko-IPA|l=y}}", "dochakhada", "rr")
	def test_dochakhada_rrr(self):
		self.run_test("도착하다", "{{ko-IPA|l=y}}", "dochaghada", "rrr")
	def test_dochakhada_mr(self):
		self.run_test("도착하다", "{{ko-IPA|l=y}}", "toch'akhada", "mr")
	def test_dochakhada_yr(self):
		self.run_test("도착하다", "{{ko-IPA|l=y}}", "tō.chak.hata", "yr")
	def test_dochakhada_ipa(self):
		self.run_test("도착하다", "{{ko-IPA|l=y}}", "[ˈto̞(ː)t͡ɕʰa̠kʰa̠da̠]", "ipa")

	def test_doraoda_ph(self):
		self.run_test("돌아오다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-돌아오다.wav}}", "도라오다", "ph")
	def test_doraoda_rr(self):
		self.run_test("돌아오다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-돌아오다.wav}}", "doraoda", "rr")
	def test_doraoda_rrr(self):
		self.run_test("돌아오다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-돌아오다.wav}}", "dol'aoda", "rrr")
	def test_doraoda_mr(self):
		self.run_test("돌아오다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-돌아오다.wav}}", "toraoda", "mr")
	def test_doraoda_yr(self):
		self.run_test("돌아오다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-돌아오다.wav}}", "tol.aota", "yr")
	def test_doraoda_ipa(self):
		self.run_test("돌아오다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-돌아오다.wav}}", "[to̞ɾa̠o̞da̠]", "ipa")

	def test_mani_ph(self):
		self.run_test("많이", "{{ko-IPA|l=y|a=y}}", "마(ː)니", "ph")
	def test_mani_rr(self):
		self.run_test("많이", "{{ko-IPA|l=y|a=y}}", "mani", "rr")
	def test_mani_rrr(self):
		self.run_test("많이", "{{ko-IPA|l=y|a=y}}", "manh'i", "rrr")
	def test_mani_mr(self):
		self.run_test("많이", "{{ko-IPA|l=y|a=y}}", "mani", "mr")
	def test_mani_yr(self):
		self.run_test("많이", "{{ko-IPA|l=y|a=y}}", "mānh.i", "yr")
	def test_mani_ipa(self):
		self.run_test("많이", "{{ko-IPA|l=y|a=y}}", "[ˈma̠(ː)ni]", "ipa")

	def test_doragada_ph(self):
		self.run_test("돌아가다", "{{ko-IPA}}", "도라가다", "ph")
	def test_doragada_rr(self):
		self.run_test("돌아가다", "{{ko-IPA}}", "doragada", "rr")
	def test_doragada_rrr(self):
		self.run_test("돌아가다", "{{ko-IPA}}", "dol'agada", "rrr")
	def test_doragada_mr(self):
		self.run_test("돌아가다", "{{ko-IPA}}", "toragada", "mr")
	def test_doragada_yr(self):
		self.run_test("돌아가다", "{{ko-IPA}}", "tol.akata", "yr")
	def test_doragada_ipa(self):
		self.run_test("돌아가다", "{{ko-IPA}}", "[to̞ɾa̠ɡa̠da̠]", "ipa")

	def test_dangsin_ph(self):
		self.run_test("당신", "{{ko-IPA|a=y}}", "당신", "ph")
	def test_dangsin_rr(self):
		self.run_test("당신", "{{ko-IPA|a=y}}", "dangsin", "rr")
	def test_dangsin_rrr(self):
		self.run_test("당신", "{{ko-IPA|a=y}}", "dangsin", "rrr")
	def test_dangsin_mr(self):
		self.run_test("당신", "{{ko-IPA|a=y}}", "tangsin", "mr")
	def test_dangsin_yr(self):
		self.run_test("당신", "{{ko-IPA|a=y}}", "tangsin", "yr")
	def test_dangsin_ipa(self):
		self.run_test("당신", "{{ko-IPA|a=y}}", "[ta̠ŋɕʰin]", "ipa")

	def test_anae_ph(self):
		self.run_test("아내", "{{ko-IPA}}", "아내/아네", "ph")
	def test_anae_rr(self):
		self.run_test("아내", "{{ko-IPA}}", "anae", "rr")
	def test_anae_rrr(self):
		self.run_test("아내", "{{ko-IPA}}", "anae", "rrr")
	def test_anae_mr(self):
		self.run_test("아내", "{{ko-IPA}}", "anae", "mr")
	def test_anae_yr(self):
		self.run_test("아내", "{{ko-IPA}}", "anay", "yr")
	def test_anae_ipa(self):
		self.run_test("아내", "{{ko-IPA}}", "[a̠nɛ] ~ [a̠ne̞]", "ipa")

	def test_ttaraseo_ph(self):
		self.run_test("따라서", "{{ko-IPA|a=y}}", "따라서", "ph")
	def test_ttaraseo_rr(self):
		self.run_test("따라서", "{{ko-IPA|a=y}}", "ttaraseo", "rr")
	def test_ttaraseo_rrr(self):
		self.run_test("따라서", "{{ko-IPA|a=y}}", "ttalaseo", "rrr")
	def test_ttaraseo_mr(self):
		self.run_test("따라서", "{{ko-IPA|a=y}}", "ttarasŏ", "mr")
	def test_ttaraseo_yr(self):
		self.run_test("따라서", "{{ko-IPA|a=y}}", "ttalase", "yr")
	def test_ttaraseo_ipa(self):
		self.run_test("따라서", "{{ko-IPA|a=y}}", "[t͈a̠ɾa̠sʰʌ̹]", "ipa")

	def test_jeongchi_ph(self):
		self.run_test("정치", "{{ko-IPA|a=y}}", "정치", "ph")
	def test_jeongchi_rr(self):
		self.run_test("정치", "{{ko-IPA|a=y}}", "jeongchi", "rr")
	def test_jeongchi_rrr(self):
		self.run_test("정치", "{{ko-IPA|a=y}}", "jeongchi", "rrr")
	def test_jeongchi_mr(self):
		self.run_test("정치", "{{ko-IPA|a=y}}", "chŏngch'i", "mr")
	def test_jeongchi_yr(self):
		self.run_test("정치", "{{ko-IPA|a=y}}", "cengchi", "yr")
	def test_jeongchi_ipa(self):
		self.run_test("정치", "{{ko-IPA|a=y}}", "[t͡ɕʌ̹ŋt͡ɕʰi]", "ipa")

	def test_gatda_ph(self):
		self.run_test("갖다", "{{ko-IPA|a=y}}", "갇따", "ph")
	def test_gatda_rr(self):
		self.run_test("갖다", "{{ko-IPA|a=y}}", "gatda", "rr")
	def test_gatda_rrr(self):
		self.run_test("갖다", "{{ko-IPA|a=y}}", "gajda", "rrr")
	def test_gatda_mr(self):
		self.run_test("갖다", "{{ko-IPA|a=y}}", "katta", "mr")
	def test_gatda_yr(self):
		self.run_test("갖다", "{{ko-IPA|a=y}}", "kacta", "yr")
	def test_gatda_ipa(self):
		self.run_test("갖다", "{{ko-IPA|a=y}}", "[ka̠t̚t͈a̠]", "ipa")

	def test_geoui_ph(self):
		self.run_test("거의", "{{ko-IPA|ui=2}}", "거의/거이", "ph")
	def test_geoui_rr(self):
		self.run_test("거의", "{{ko-IPA|ui=2}}", "geoui", "rr")
	def test_geoui_rrr(self):
		self.run_test("거의", "{{ko-IPA|ui=2}}", "geoui", "rrr")
	def test_geoui_mr(self):
		self.run_test("거의", "{{ko-IPA|ui=2}}", "kŏŭi", "mr")
	def test_geoui_yr(self):
		self.run_test("거의", "{{ko-IPA|ui=2}}", "keuy", "yr")
	def test_geoui_ipa(self):
		self.run_test("거의", "{{ko-IPA|ui=2}}", "[kʌ̹ɰi] ~ [kʌ̹i]", "ipa")




	def test_bok_ph(self):
		self.run_test("복", "{{ko-IPA}}", "복", "ph")
	def test_bok_rr(self):
		self.run_test("복", "{{ko-IPA}}", "bok", "rr")
	def test_bok_rrr(self):
		self.run_test("복", "{{ko-IPA}}", "bog", "rrr")
	def test_bok_mr(self):
		self.run_test("복", "{{ko-IPA}}", "pok", "mr")
	def test_bok_yr(self):
		self.run_test("복", "{{ko-IPA}}", "pok", "yr")
	def test_bok_ipa(self):
		self.run_test("복", "{{ko-IPA}}", "[po̞k̚]", "ipa")

	def test_ban_ph(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "반(ː)", "ph")
	def test_ban_rr(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "ban", "rr")
	def test_ban_rrr(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "ban", "rrr")
	def test_ban_mr(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "pan", "mr")
	def test_ban_yr(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "pān", "yr")
	def test_ban_ipa(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "[pa̠(ː)n]", "ipa")
	def test_ban_ph_1(self):
		self.run_test("반", "{{ko-IPA}}", "반", "ph")
	def test_ban_rr_1(self):
		self.run_test("반", "{{ko-IPA}}", "ban", "rr")
	def test_ban_rrr_1(self):
		self.run_test("반", "{{ko-IPA}}", "ban", "rrr")
	def test_ban_mr_1(self):
		self.run_test("반", "{{ko-IPA}}", "pan", "mr")
	def test_ban_yr_1(self):
		self.run_test("반", "{{ko-IPA}}", "pan", "yr")
	def test_ban_ipa_1(self):
		self.run_test("반", "{{ko-IPA}}", "[pa̠n]", "ipa")
	def test_ban_ph_2(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "반(ː)", "ph")
	def test_ban_rr_2(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "ban", "rr")
	def test_ban_rrr_2(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "ban", "rrr")
	def test_ban_mr_2(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "pan", "mr")
	def test_ban_yr_2(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "pān", "yr")
	def test_ban_ipa_2(self):
		self.run_test("반", "{{ko-IPA|l=y}}", "[pa̠(ː)n]", "ipa")

	def test_yeodongsaeng_ph(self):
		self.run_test("여동생", "{{ko-IPA}}", "여동생/여동셍", "ph")
	def test_yeodongsaeng_rr(self):
		self.run_test("여동생", "{{ko-IPA}}", "yeodongsaeng", "rr")
	def test_yeodongsaeng_rrr(self):
		self.run_test("여동생", "{{ko-IPA}}", "yeodongsaeng", "rrr")
	def test_yeodongsaeng_mr(self):
		self.run_test("여동생", "{{ko-IPA}}", "yŏdongsaeng", "mr")
	def test_yeodongsaeng_yr(self):
		self.run_test("여동생", "{{ko-IPA}}", "yetongsayng", "yr")
	def test_yeodongsaeng_ipa(self):
		self.run_test("여동생", "{{ko-IPA}}", "[jʌ̹do̞ŋsʰɛŋ] ~ [jʌ̹do̞ŋsʰe̞ŋ]", "ipa")

	def test_namdongsaeng_ph(self):
		self.run_test("남동생", "{{ko-IPA}}", "남동생/남동셍", "ph")
	def test_namdongsaeng_rr(self):
		self.run_test("남동생", "{{ko-IPA}}", "namdongsaeng", "rr")
	def test_namdongsaeng_rrr(self):
		self.run_test("남동생", "{{ko-IPA}}", "namdongsaeng", "rrr")
	def test_namdongsaeng_mr(self):
		self.run_test("남동생", "{{ko-IPA}}", "namdongsaeng", "mr")
	def test_namdongsaeng_yr(self):
		self.run_test("남동생", "{{ko-IPA}}", "namtongsayng", "yr")
	def test_namdongsaeng_ipa(self):
		self.run_test("남동생", "{{ko-IPA}}", "[na̠mdo̞ŋsʰɛŋ] ~ [na̠mdo̞ŋsʰe̞ŋ]", "ipa")

	def test_buri_ph(self):
		self.run_test("부리", "{{ko-ipa}}", "부리", "ph")
	def test_buri_rr(self):
		self.run_test("부리", "{{ko-ipa}}", "buri", "rr")
	def test_buri_rrr(self):
		self.run_test("부리", "{{ko-ipa}}", "buli", "rrr")
	def test_buri_mr(self):
		self.run_test("부리", "{{ko-ipa}}", "puri", "mr")
	def test_buri_yr(self):
		self.run_test("부리", "{{ko-ipa}}", "puli", "yr")
	def test_buri_ipa(self):
		self.run_test("부리", "{{ko-ipa}}", "[puɾi]", "ipa")

	def test_huida_ph(self):
		self.run_test("희다", "{{ko-IPA}}", "히다", "ph")
	def test_huida_rr(self):
		self.run_test("희다", "{{ko-IPA}}", "huida", "rr")
	def test_huida_rrr(self):
		self.run_test("희다", "{{ko-IPA}}", "huida", "rrr")
	def test_huida_mr(self):
		self.run_test("희다", "{{ko-IPA}}", "hŭida", "mr")
	def test_huida_yr(self):
		self.run_test("희다", "{{ko-IPA}}", "huyta", "yr")
	def test_huida_ipa(self):
		self.run_test("희다", "{{ko-IPA}}", "[çida̠]", "ipa")

	def test_gyo_ph(self):
		self.run_test("교", "{{ko-IPA|l=y}}", "교(ː)", "ph")
	def test_gyo_rr(self):
		self.run_test("교", "{{ko-IPA|l=y}}", "gyo", "rr")
	def test_gyo_rrr(self):
		self.run_test("교", "{{ko-IPA|l=y}}", "gyo", "rrr")
	def test_gyo_mr(self):
		self.run_test("교", "{{ko-IPA|l=y}}", "kyo", "mr")
	def test_gyo_yr(self):
		self.run_test("교", "{{ko-IPA|l=y}}", "kyō", "yr")
	def test_gyo_ipa(self):
		self.run_test("교", "{{ko-IPA|l=y}}", "[kjo(ː)]", "ipa")

	def test_santokki_ph(self):
		self.run_test("산토끼", "{{ko-IPA}}", "산토끼", "ph")
	def test_santokki_rr(self):
		self.run_test("산토끼", "{{ko-IPA}}", "santokki", "rr")
	def test_santokki_rrr(self):
		self.run_test("산토끼", "{{ko-IPA}}", "santo'kki", "rrr")
	def test_santokki_mr(self):
		self.run_test("산토끼", "{{ko-IPA}}", "sant'okki", "mr")
	def test_santokki_yr(self):
		self.run_test("산토끼", "{{ko-IPA}}", "santho.kki", "yr")
	def test_santokki_ipa(self):
		self.run_test("산토끼", "{{ko-IPA}}", "[sʰa̠ntʰo̞k͈i]", "ipa")

	def test_doldom_ph(self):
		self.run_test("돌돔", "{{ko-IPA|l=y}}", "돌(ː)돔", "ph")
	def test_doldom_rr(self):
		self.run_test("돌돔", "{{ko-IPA|l=y}}", "doldom", "rr")
	def test_doldom_rrr(self):
		self.run_test("돌돔", "{{ko-IPA|l=y}}", "doldom", "rrr")
	def test_doldom_mr(self):
		self.run_test("돌돔", "{{ko-IPA|l=y}}", "toldom", "mr")
	def test_doldom_yr(self):
		self.run_test("돌돔", "{{ko-IPA|l=y}}", "tōltom", "yr")
	def test_doldom_ipa(self):
		self.run_test("돌돔", "{{ko-IPA|l=y}}", "[ˈto̞(ː)ɭdo̞m]", "ipa")

	def test_mettugi_ph(self):
		self.run_test("메뚜기", "{{ko-IPA}}", "메뚜기", "ph")
	def test_mettugi_rr(self):
		self.run_test("메뚜기", "{{ko-IPA}}", "mettugi", "rr")
	def test_mettugi_rrr(self):
		self.run_test("메뚜기", "{{ko-IPA}}", "me'ttugi", "rrr")
	def test_mettugi_mr(self):
		self.run_test("메뚜기", "{{ko-IPA}}", "mettugi", "mr")
	def test_mettugi_yr(self):
		self.run_test("메뚜기", "{{ko-IPA}}", "mey.ttwuki", "yr")
	def test_mettugi_ipa(self):
		self.run_test("메뚜기", "{{ko-IPA}}", "[me̞t͈uɡi]", "ipa")

	def test_gwitturami_ph(self):
		self.run_test("귀뚜라미", "{{ko-ipa}}", "귀뚜라미", "ph")
	def test_gwitturami_rr(self):
		self.run_test("귀뚜라미", "{{ko-ipa}}", "gwitturami", "rr")
	def test_gwitturami_rrr(self):
		self.run_test("귀뚜라미", "{{ko-ipa}}", "gwi'ttulami", "rrr")
	def test_gwitturami_mr(self):
		self.run_test("귀뚜라미", "{{ko-ipa}}", "kwitturami", "mr")
	def test_gwitturami_yr(self):
		self.run_test("귀뚜라미", "{{ko-ipa}}", "kwi.ttwulami", "yr")
	def test_gwitturami_ipa(self):
		self.run_test("귀뚜라미", "{{ko-ipa}}", "[kɥit͈uɾa̠mi] ~ [kyt͈uɾa̠mi]", "ipa")

	def test_maemi_ph(self):
		self.run_test("매미", "{{ko-IPA|l=y}}", "매(ː)미/메(ː)미", "ph")
	def test_maemi_rr(self):
		self.run_test("매미", "{{ko-IPA|l=y}}", "maemi", "rr")
	def test_maemi_rrr(self):
		self.run_test("매미", "{{ko-IPA|l=y}}", "maemi", "rrr")
	def test_maemi_mr(self):
		self.run_test("매미", "{{ko-IPA|l=y}}", "maemi", "mr")
	def test_maemi_yr(self):
		self.run_test("매미", "{{ko-IPA|l=y}}", "māymi", "yr")
	def test_maemi_ipa(self):
		self.run_test("매미", "{{ko-IPA|l=y}}", "[ˈmɛ(ː)mi] ~ [ˈme̞(ː)mi]", "ipa")


	def test_wa_ph(self):
		self.run_test("와", "{{ko-IPA}}", "와", "ph")
	def test_wa_rr(self):
		self.run_test("와", "{{ko-IPA}}", "wa", "rr")
	def test_wa_rrr(self):
		self.run_test("와", "{{ko-IPA}}", "wa", "rrr")
	def test_wa_mr(self):
		self.run_test("와", "{{ko-IPA}}", "wa", "mr")
	def test_wa_yr(self):
		self.run_test("와", "{{ko-IPA}}", "wa", "yr")
	def test_wa_ipa(self):
		self.run_test("와", "{{ko-IPA}}", "[wa̠]", "ipa")

	def test_gwigori_ph(self):
		self.run_test("귀고리", "{{ko-ipa}}", "귀고리", "ph")
	def test_gwigori_rr(self):
		self.run_test("귀고리", "{{ko-ipa}}", "gwigori", "rr")
	def test_gwigori_rrr(self):
		self.run_test("귀고리", "{{ko-ipa}}", "gwigoli", "rrr")
	def test_gwigori_mr(self):
		self.run_test("귀고리", "{{ko-ipa}}", "kwigori", "mr")
	def test_gwigori_yr(self):
		self.run_test("귀고리", "{{ko-ipa}}", "kwikoli", "yr")
	def test_gwigori_ipa(self):
		self.run_test("귀고리", "{{ko-ipa}}", "[kɥiɡo̞ɾi] ~ [kyɡo̞ɾi]", "ipa")

	def test_sanbul_ph(self):
		self.run_test("산불", "{{ko-IPA|com=1}}", "산뿔", "ph")
	def test_sanbul_rr(self):
		self.run_test("산불", "{{ko-IPA|com=1}}", "sanbul", "rr")
	def test_sanbul_rrr(self):
		self.run_test("산불", "{{ko-IPA|com=1}}", "sanbul", "rrr")
	def test_sanbul_mr(self):
		self.run_test("산불", "{{ko-IPA|com=1}}", "sanpul", "mr")
	def test_sanbul_yr(self):
		self.run_test("산불", "{{ko-IPA|com=1}}", "sanqpul", "yr")
	def test_sanbul_ipa(self):
		self.run_test("산불", "{{ko-IPA|com=1}}", "[sʰa̠np͈uɭ]", "ipa")

	def test_bakda_ph(self):
		self.run_test("밝다", "{{ko-IPA}}", "박따", "ph")
	def test_bakda_rr(self):
		self.run_test("밝다", "{{ko-IPA}}", "bakda", "rr")
	def test_bakda_rrr(self):
		self.run_test("밝다", "{{ko-IPA}}", "balgda", "rrr")
	def test_bakda_mr(self):
		self.run_test("밝다", "{{ko-IPA}}", "pakta", "mr")
	def test_bakda_yr(self):
		self.run_test("밝다", "{{ko-IPA}}", "palkta", "yr")
	def test_bakda_ipa(self):
		self.run_test("밝다", "{{ko-IPA}}", "[pa̠k̚t͈a̠]", "ipa")

	def test_ondol_ph(self):
		self.run_test("온돌", "{{ko-IPA}}", "온돌", "ph")
	def test_ondol_rr(self):
		self.run_test("온돌", "{{ko-IPA}}", "ondol", "rr")
	def test_ondol_rrr(self):
		self.run_test("온돌", "{{ko-IPA}}", "ondol", "rrr")
	def test_ondol_mr(self):
		self.run_test("온돌", "{{ko-IPA}}", "ondol", "mr")
	def test_ondol_yr(self):
		self.run_test("온돌", "{{ko-IPA}}", "ontol", "yr")
	def test_ondol_ipa(self):
		self.run_test("온돌", "{{ko-IPA}}", "[o̞ndo̞ɭ]", "ipa")

	def test_modakbul_ph(self):
		self.run_test("모닥불", "{{ko-IPA}}", "모닥뿔", "ph")
	def test_modakbul_rr(self):
		self.run_test("모닥불", "{{ko-IPA}}", "modakbul", "rr")
	def test_modakbul_rrr(self):
		self.run_test("모닥불", "{{ko-IPA}}", "modagbul", "rrr")
	def test_modakbul_mr(self):
		self.run_test("모닥불", "{{ko-IPA}}", "modakpul", "mr")
	def test_modakbul_yr(self):
		self.run_test("모닥불", "{{ko-IPA}}", "motakpul", "yr")
	def test_modakbul_ipa(self):
		self.run_test("모닥불", "{{ko-IPA}}", "[mo̞da̠k̚p͈uɭ]", "ipa")

	def test_buttumak_ph(self):
		self.run_test("부뚜막", "{{ko-ipa}}", "부뚜막", "ph")
	def test_buttumak_rr(self):
		self.run_test("부뚜막", "{{ko-ipa}}", "buttumak", "rr")
	def test_buttumak_rrr(self):
		self.run_test("부뚜막", "{{ko-ipa}}", "bu'ttumag", "rrr")
	def test_buttumak_mr(self):
		self.run_test("부뚜막", "{{ko-ipa}}", "puttumak", "mr")
	def test_buttumak_yr(self):
		self.run_test("부뚜막", "{{ko-ipa}}", "pu.ttwumak", "yr")
	def test_buttumak_ipa(self):
		self.run_test("부뚜막", "{{ko-ipa}}", "[put͈uma̠k̚]", "ipa")

	def test_Oseuteureillia_ph(self):
		self.run_test("오스트레일리아", "{{ko-IPA|cap=y}}", "오스트레일리아", "ph")
	def test_Oseuteureillia_rr(self):
		self.run_test("오스트레일리아", "{{ko-IPA|cap=y}}", "Oseuteureillia", "rr")
	def test_Oseuteureillia_rrr(self):
		self.run_test("오스트레일리아", "{{ko-IPA|cap=y}}", "Oseuteuleillia", "rrr")
	def test_Oseuteureillia_mr(self):
		self.run_test("오스트레일리아", "{{ko-IPA|cap=y}}", "Osŭt'ŭreillia", "mr")
	def test_Oseuteureillia_yr(self):
		self.run_test("오스트레일리아", "{{ko-IPA|cap=y}}", "osu.thuleyillia", "yr")
	def test_Oseuteureillia_ipa(self):
		self.run_test("오스트레일리아", "{{ko-IPA|cap=y}}", "[o̞sʰɯtʰɯɾe̞iʎʎia̠]", "ipa")

	def test_hanbando_ph(self):
		self.run_test("한반도", "{{ko-ipa|l=y}}", "한(ː)반도", "ph")
	def test_hanbando_rr(self):
		self.run_test("한반도", "{{ko-ipa|l=y}}", "hanbando", "rr")
	def test_hanbando_rrr(self):
		self.run_test("한반도", "{{ko-ipa|l=y}}", "hanbando", "rrr")
	def test_hanbando_mr(self):
		self.run_test("한반도", "{{ko-ipa|l=y}}", "hanbando", "mr")
	def test_hanbando_yr(self):
		self.run_test("한반도", "{{ko-ipa|l=y}}", "hānpanto", "yr")
	def test_hanbando_ipa(self):
		self.run_test("한반도", "{{ko-ipa|l=y}}", "[ˈha̠(ː)nba̠ndo̞]", "ipa")

	def test_rakeuroseu_ph(self):
		self.run_test("라크로스", "{{ko-IPA|com=3}}", "라크로쓰", "ph")
	def test_rakeuroseu_rr(self):
		self.run_test("라크로스", "{{ko-IPA|com=3}}", "rakeuroseu", "rr")
	def test_rakeuroseu_rrr(self):
		self.run_test("라크로스", "{{ko-IPA|com=3}}", "lakeuloseu", "rrr")
	def test_rakeuroseu_mr(self):
		self.run_test("라크로스", "{{ko-IPA|com=3}}", "rak'ŭrossŭ", "mr")
	def test_rakeuroseu_yr(self):
		self.run_test("라크로스", "{{ko-IPA|com=3}}", "la.khuloqsu", "yr")
	def test_rakeuroseu_ipa(self):
		self.run_test("라크로스", "{{ko-IPA|com=3}}", "[ɾa̠kxɯɾo̞s͈ɯ]", "ipa")

	def test_haechida_ph(self):
		self.run_test("해치다", "{{ko-IPA|l=y}}", "해(ː)치다/헤(ː)치다", "ph")
	def test_haechida_rr(self):
		self.run_test("해치다", "{{ko-IPA|l=y}}", "haechida", "rr")
	def test_haechida_rrr(self):
		self.run_test("해치다", "{{ko-IPA|l=y}}", "haechida", "rrr")
	def test_haechida_mr(self):
		self.run_test("해치다", "{{ko-IPA|l=y}}", "haech'ida", "mr")
	def test_haechida_yr(self):
		self.run_test("해치다", "{{ko-IPA|l=y}}", "hāy.chita", "yr")
	def test_haechida_ipa(self):
		self.run_test("해치다", "{{ko-IPA|l=y}}", "[ˈhɛ(ː)t͡ɕʰida̠] ~ [ˈhe̞(ː)t͡ɕʰida̠]", "ipa")

	def test_bando_ph(self):
		self.run_test("반도", "{{ko-ipa|l=y}}", "반(ː)도", "ph")
	def test_bando_rr(self):
		self.run_test("반도", "{{ko-ipa|l=y}}", "bando", "rr")
	def test_bando_rrr(self):
		self.run_test("반도", "{{ko-ipa|l=y}}", "bando", "rrr")
	def test_bando_mr(self):
		self.run_test("반도", "{{ko-ipa|l=y}}", "pando", "mr")
	def test_bando_yr(self):
		self.run_test("반도", "{{ko-ipa|l=y}}", "pānto", "yr")
	def test_bando_ipa(self):
		self.run_test("반도", "{{ko-ipa|l=y}}", "[ˈpa̠(ː)ndo̞]", "ipa")

	def test_boreum_ph(self):
		self.run_test("보름", "{{ko-IPA}}", "보름", "ph")
	def test_boreum_rr(self):
		self.run_test("보름", "{{ko-IPA}}", "boreum", "rr")
	def test_boreum_rrr(self):
		self.run_test("보름", "{{ko-IPA}}", "boleum", "rrr")
	def test_boreum_mr(self):
		self.run_test("보름", "{{ko-IPA}}", "porŭm", "mr")
	def test_boreum_yr(self):
		self.run_test("보름", "{{ko-IPA}}", "polum", "yr")
	def test_boreum_ipa(self):
		self.run_test("보름", "{{ko-IPA}}", "[po̞ɾɯm]", "ipa")

	def test_Ilboneo_ph(self):
		self.run_test("일본어", "{{ko-IPA|cap=y}}", "일보너", "ph")
	def test_Ilboneo_rr(self):
		self.run_test("일본어", "{{ko-IPA|cap=y}}", "Ilboneo", "rr")
	def test_Ilboneo_rrr(self):
		self.run_test("일본어", "{{ko-IPA|cap=y}}", "Ilbon'eo", "rrr")
	def test_Ilboneo_mr(self):
		self.run_test("일본어", "{{ko-IPA|cap=y}}", "Ilbonŏ", "mr")
	def test_Ilboneo_yr(self):
		self.run_test("일본어", "{{ko-IPA|cap=y}}", "il.pon.e", "yr")
	def test_Ilboneo_ipa(self):
		self.run_test("일본어", "{{ko-IPA|cap=y}}", "[iɭbo̞nʌ̹]", "ipa")

	def test_ireo_ph(self):
		self.run_test("일어", "{{ko-IPA}}", "이러", "ph")
	def test_ireo_rr(self):
		self.run_test("일어", "{{ko-IPA}}", "ireo", "rr")
	def test_ireo_rrr(self):
		self.run_test("일어", "{{ko-IPA}}", "il'eo", "rrr")
	def test_ireo_mr(self):
		self.run_test("일어", "{{ko-IPA}}", "irŏ", "mr")
	def test_ireo_yr(self):
		self.run_test("일어", "{{ko-IPA}}", "il.e", "yr")
	def test_ireo_ipa(self):
		self.run_test("일어", "{{ko-IPA}}", "[iɾʌ̹]", "ipa")

	def test_ilbonin_ph(self):
		self.run_test("일본인", "{{ko-IPA}}", "일보닌", "ph")
	def test_ilbonin_rr(self):
		self.run_test("일본인", "{{ko-IPA}}", "ilbonin", "rr")
	def test_ilbonin_rrr(self):
		self.run_test("일본인", "{{ko-IPA}}", "ilbon'in", "rrr")
	def test_ilbonin_mr(self):
		self.run_test("일본인", "{{ko-IPA}}", "ilbonin", "mr")
	def test_ilbonin_yr(self):
		self.run_test("일본인", "{{ko-IPA}}", "il.pon.in", "yr")
	def test_ilbonin_ipa(self):
		self.run_test("일본인", "{{ko-IPA}}", "[iɭbo̞nin]", "ipa")

	def test_busi_ph(self):
		self.run_test("부시", "{{ko-ipa}}", "부시", "ph")
	def test_busi_rr(self):
		self.run_test("부시", "{{ko-ipa}}", "busi", "rr")
	def test_busi_rrr(self):
		self.run_test("부시", "{{ko-ipa}}", "busi", "rrr")
	def test_busi_mr(self):
		self.run_test("부시", "{{ko-ipa}}", "pusi", "mr")
	def test_busi_yr(self):
		self.run_test("부시", "{{ko-ipa}}", "pusi", "yr")
	def test_busi_ipa(self):
		self.run_test("부시", "{{ko-ipa}}", "[puɕʰi]", "ipa")

	def test_mudangbeolle_ph(self):
		self.run_test("무당벌레", "{{ko-IPA|l=y}}", "무(ː)당벌레", "ph")
	def test_mudangbeolle_rr(self):
		self.run_test("무당벌레", "{{ko-IPA|l=y}}", "mudangbeolle", "rr")
	def test_mudangbeolle_rrr(self):
		self.run_test("무당벌레", "{{ko-IPA|l=y}}", "mudangbeolle", "rrr")
	def test_mudangbeolle_mr(self):
		self.run_test("무당벌레", "{{ko-IPA|l=y}}", "mudangbŏlle", "mr")
	def test_mudangbeolle_yr(self):
		self.run_test("무당벌레", "{{ko-IPA|l=y}}", "mūtangpelley", "yr")
	def test_mudangbeolle_ipa(self):
		self.run_test("무당벌레", "{{ko-IPA|l=y}}", "[ˈmu(ː)da̠ŋbʌ̹ɭɭe̞]", "ipa")

	def test_gyeongma_ph(self):
		self.run_test("경마", "{{ko-IPA|l=y}}", "경(ː)마", "ph")
	def test_gyeongma_rr(self):
		self.run_test("경마", "{{ko-IPA|l=y}}", "gyeongma", "rr")
	def test_gyeongma_rrr(self):
		self.run_test("경마", "{{ko-IPA|l=y}}", "gyeongma", "rrr")
	def test_gyeongma_mr(self):
		self.run_test("경마", "{{ko-IPA|l=y}}", "kyŏngma", "mr")
	def test_gyeongma_yr(self):
		self.run_test("경마", "{{ko-IPA|l=y}}", "kyēngma", "yr")
	def test_gyeongma_ipa(self):
		self.run_test("경마", "{{ko-IPA|l=y}}", "[ˈkjɘ(ː)ŋma̠]", "ipa")

	def test_mullon_ph(self):
		self.run_test("물론", "{{ko-IPA|a=y}}", "물론", "ph")
	def test_mullon_rr(self):
		self.run_test("물론", "{{ko-IPA|a=y}}", "mullon", "rr")
	def test_mullon_rrr(self):
		self.run_test("물론", "{{ko-IPA|a=y}}", "mullon", "rrr")
	def test_mullon_mr(self):
		self.run_test("물론", "{{ko-IPA|a=y}}", "mullon", "mr")
	def test_mullon_yr(self):
		self.run_test("물론", "{{ko-IPA|a=y}}", "mullon", "yr")
	def test_mullon_ipa(self):
		self.run_test("물론", "{{ko-IPA|a=y}}", "[muɭɭo̞n]", "ipa")

	def test_mil_ph(self):
		self.run_test("밀", "{{ko-IPA}}", "밀", "ph")
	def test_mil_rr(self):
		self.run_test("밀", "{{ko-IPA}}", "mil", "rr")
	def test_mil_rrr(self):
		self.run_test("밀", "{{ko-IPA}}", "mil", "rrr")
	def test_mil_mr(self):
		self.run_test("밀", "{{ko-IPA}}", "mil", "mr")
	def test_mil_yr(self):
		self.run_test("밀", "{{ko-IPA}}", "mil", "yr")
	def test_mil_ipa(self):
		self.run_test("밀", "{{ko-IPA}}", "[miɭ]", "ipa")
	def test_mil_ph_1(self):
		self.run_test("밀", "{{ko-ipa|l=y}}", "밀(ː)", "ph")
	def test_mil_rr_1(self):
		self.run_test("밀", "{{ko-ipa|l=y}}", "mil", "rr")
	def test_mil_rrr_1(self):
		self.run_test("밀", "{{ko-ipa|l=y}}", "mil", "rrr")
	def test_mil_mr_1(self):
		self.run_test("밀", "{{ko-ipa|l=y}}", "mil", "mr")
	def test_mil_yr_1(self):
		self.run_test("밀", "{{ko-ipa|l=y}}", "mīl", "yr")
	def test_mil_ipa_1(self):
		self.run_test("밀", "{{ko-ipa|l=y}}", "[mi(ː)ɭ]", "ipa")
	def test_mil_ph_2(self):
		self.run_test("밀", "{{ko-ipa}}", "밀", "ph")
	def test_mil_rr_2(self):
		self.run_test("밀", "{{ko-ipa}}", "mil", "rr")
	def test_mil_rrr_2(self):
		self.run_test("밀", "{{ko-ipa}}", "mil", "rrr")
	def test_mil_mr_2(self):
		self.run_test("밀", "{{ko-ipa}}", "mil", "mr")
	def test_mil_yr_2(self):
		self.run_test("밀", "{{ko-ipa}}", "mil", "yr")
	def test_mil_ipa_2(self):
		self.run_test("밀", "{{ko-ipa}}", "[miɭ]", "ipa")

	def test_deungdae_ph(self):
		self.run_test("등대", "{{ko-IPA}}", "등대/등데", "ph")
	def test_deungdae_rr(self):
		self.run_test("등대", "{{ko-IPA}}", "deungdae", "rr")
	def test_deungdae_rrr(self):
		self.run_test("등대", "{{ko-IPA}}", "deungdae", "rrr")
	def test_deungdae_mr(self):
		self.run_test("등대", "{{ko-IPA}}", "tŭngdae", "mr")
	def test_deungdae_yr(self):
		self.run_test("등대", "{{ko-IPA}}", "tungtay", "yr")
	def test_deungdae_ipa(self):
		self.run_test("등대", "{{ko-IPA}}", "[tɯŋdɛ] ~ [tɯŋde̞]", "ipa")

	def test_bakjwi_ph(self):
		self.run_test("밝쥐", "{{ko-IPA}}", "박쮜", "ph")
	def test_bakjwi_rr(self):
		self.run_test("밝쥐", "{{ko-IPA}}", "bakjwi", "rr")
	def test_bakjwi_rrr(self):
		self.run_test("밝쥐", "{{ko-IPA}}", "balgjwi", "rrr")
	def test_bakjwi_mr(self):
		self.run_test("밝쥐", "{{ko-IPA}}", "pakchwi", "mr")
	def test_bakjwi_yr(self):
		self.run_test("밝쥐", "{{ko-IPA}}", "palkcwi", "yr")
	def test_bakjwi_ipa(self):
		self.run_test("밝쥐", "{{ko-IPA}}", "[pa̠k̚t͡ɕ͈ɥi] ~ [pa̠k̚t͡ɕ͈y]", "ipa")

	def test_mangduk_ph(self):
		self.run_test("망둑", "{{ko-IPA}}", "망둑", "ph")
	def test_mangduk_rr(self):
		self.run_test("망둑", "{{ko-IPA}}", "mangduk", "rr")
	def test_mangduk_rrr(self):
		self.run_test("망둑", "{{ko-IPA}}", "mangdug", "rrr")
	def test_mangduk_mr(self):
		self.run_test("망둑", "{{ko-IPA}}", "mangduk", "mr")
	def test_mangduk_yr(self):
		self.run_test("망둑", "{{ko-IPA}}", "mangtwuk", "yr")
	def test_mangduk_ipa(self):
		self.run_test("망둑", "{{ko-IPA}}", "[ma̠ŋduk̚]", "ipa")

	def test_balkida_ph(self):
		self.run_test("밝히다", "{{ko-IPA|a=y}}", "발키다", "ph")
	def test_balkida_rr(self):
		self.run_test("밝히다", "{{ko-IPA|a=y}}", "balkida", "rr")
	def test_balkida_rrr(self):
		self.run_test("밝히다", "{{ko-IPA|a=y}}", "balghida", "rrr")
	def test_balkida_mr(self):
		self.run_test("밝히다", "{{ko-IPA|a=y}}", "palk'ida", "mr")
	def test_balkida_yr(self):
		self.run_test("밝히다", "{{ko-IPA|a=y}}", "palk.hita", "yr")
	def test_balkida_ipa(self):
		self.run_test("밝히다", "{{ko-IPA|a=y}}", "[pa̠ɭcçida̠]", "ipa")

	def test_bukda_ph(self):
		self.run_test("붉다", "{{ko-IPA}}", "북따", "ph")
	def test_bukda_rr(self):
		self.run_test("붉다", "{{ko-IPA}}", "bukda", "rr")
	def test_bukda_rrr(self):
		self.run_test("붉다", "{{ko-IPA}}", "bulgda", "rrr")
	def test_bukda_mr(self):
		self.run_test("붉다", "{{ko-IPA}}", "pukta", "mr")
	def test_bukda_yr(self):
		self.run_test("붉다", "{{ko-IPA}}", "pulkta", "yr")
	def test_bukda_ipa(self):
		self.run_test("붉다", "{{ko-IPA}}", "[puk̚t͈a̠]", "ipa")

	def test_bulgeojida_ph(self):
		self.run_test("불거지다", "{{ko-IPA}}", "불거지다", "ph")
	def test_bulgeojida_rr(self):
		self.run_test("불거지다", "{{ko-IPA}}", "bulgeojida", "rr")
	def test_bulgeojida_rrr(self):
		self.run_test("불거지다", "{{ko-IPA}}", "bulgeojida", "rrr")
	def test_bulgeojida_mr(self):
		self.run_test("불거지다", "{{ko-IPA}}", "pulgŏjida", "mr")
	def test_bulgeojida_yr(self):
		self.run_test("불거지다", "{{ko-IPA}}", "pul.kecita", "yr")
	def test_bulgeojida_ipa(self):
		self.run_test("불거지다", "{{ko-IPA}}", "[puɭɡʌ̹d͡ʑida̠]", "ipa")

	def test_balkyeojida_ph(self):
		self.run_test("밝혀지다", "{{ko-IPA}}", "발켜지다", "ph")
	def test_balkyeojida_rr(self):
		self.run_test("밝혀지다", "{{ko-IPA}}", "balkyeojida", "rr")
	def test_balkyeojida_rrr(self):
		self.run_test("밝혀지다", "{{ko-IPA}}", "balghyeojida", "rrr")
	def test_balkyeojida_mr(self):
		self.run_test("밝혀지다", "{{ko-IPA}}", "palk'yŏjida", "mr")
	def test_balkyeojida_yr(self):
		self.run_test("밝혀지다", "{{ko-IPA}}", "palk.hyecita", "yr")
	def test_balkyeojida_ipa(self):
		self.run_test("밝혀지다", "{{ko-IPA}}", "[pa̠ɭcçʌ̹d͡ʑida̠]", "ipa")

	def test_balgida_ph(self):
		self.run_test("발기다", "{{ko-IPA}}", "발기다", "ph")
	def test_balgida_rr(self):
		self.run_test("발기다", "{{ko-IPA}}", "balgida", "rr")
	def test_balgida_rrr(self):
		self.run_test("발기다", "{{ko-IPA}}", "balgida", "rrr")
	def test_balgida_mr(self):
		self.run_test("발기다", "{{ko-IPA}}", "palgida", "mr")
	def test_balgida_yr(self):
		self.run_test("발기다", "{{ko-IPA}}", "pal.kita", "yr")
	def test_balgida_ipa(self):
		self.run_test("발기다", "{{ko-IPA}}", "[pa̠ɭɡida̠]", "ipa")

	def test_beolgida_ph(self):
		self.run_test("벌기다", "{{ko-IPA}}", "벌기다", "ph")
	def test_beolgida_rr(self):
		self.run_test("벌기다", "{{ko-IPA}}", "beolgida", "rr")
	def test_beolgida_rrr(self):
		self.run_test("벌기다", "{{ko-IPA}}", "beolgida", "rrr")
	def test_beolgida_mr(self):
		self.run_test("벌기다", "{{ko-IPA}}", "pŏlgida", "mr")
	def test_beolgida_yr(self):
		self.run_test("벌기다", "{{ko-IPA}}", "pel.kita", "yr")
	def test_beolgida_ipa(self):
		self.run_test("벌기다", "{{ko-IPA}}", "[pʌ̹ɭɡida̠]", "ipa")

	def test_bulkkeun_ph(self):
		self.run_test("불끈", "{{ko-IPA}}", "불끈", "ph")
	def test_bulkkeun_rr(self):
		self.run_test("불끈", "{{ko-IPA}}", "bulkkeun", "rr")
	def test_bulkkeun_rrr(self):
		self.run_test("불끈", "{{ko-IPA}}", "bulkkeun", "rrr")
	def test_bulkkeun_mr(self):
		self.run_test("불끈", "{{ko-IPA}}", "pulkkŭn", "mr")
	def test_bulkkeun_yr(self):
		self.run_test("불끈", "{{ko-IPA}}", "pul.kkun", "yr")
	def test_bulkkeun_ipa(self):
		self.run_test("불끈", "{{ko-IPA}}", "[puɭk͈ɯn]", "ipa")

	def test_balkkeun_ph(self):
		self.run_test("발끈", "{{ko-IPA}}", "발끈", "ph")
	def test_balkkeun_rr(self):
		self.run_test("발끈", "{{ko-IPA}}", "balkkeun", "rr")
	def test_balkkeun_rrr(self):
		self.run_test("발끈", "{{ko-IPA}}", "balkkeun", "rrr")
	def test_balkkeun_mr(self):
		self.run_test("발끈", "{{ko-IPA}}", "palkkŭn", "mr")
	def test_balkkeun_yr(self):
		self.run_test("발끈", "{{ko-IPA}}", "pal.kkun", "yr")
	def test_balkkeun_ipa(self):
		self.run_test("발끈", "{{ko-IPA}}", "[pa̠ɭk͈ɯn]", "ipa")

	def test_pimang_ph(self):
		self.run_test("피망", "{{ko-IPA}}", "피망", "ph")
	def test_pimang_rr(self):
		self.run_test("피망", "{{ko-IPA}}", "pimang", "rr")
	def test_pimang_rrr(self):
		self.run_test("피망", "{{ko-IPA}}", "pimang", "rrr")
	def test_pimang_mr(self):
		self.run_test("피망", "{{ko-IPA}}", "p'imang", "mr")
	def test_pimang_yr(self):
		self.run_test("피망", "{{ko-IPA}}", "phimang", "yr")
	def test_pimang_ipa(self):
		self.run_test("피망", "{{ko-IPA}}", "[pʰima̠ŋ]", "ipa")

	def test_dudeong_ph(self):
		self.run_test("두덩", "{{ko-IPA}}", "두덩", "ph")
	def test_dudeong_rr(self):
		self.run_test("두덩", "{{ko-IPA}}", "dudeong", "rr")
	def test_dudeong_rrr(self):
		self.run_test("두덩", "{{ko-IPA}}", "dudeong", "rrr")
	def test_dudeong_mr(self):
		self.run_test("두덩", "{{ko-IPA}}", "tudŏng", "mr")
	def test_dudeong_yr(self):
		self.run_test("두덩", "{{ko-IPA}}", "twuteng", "yr")
	def test_dudeong_ipa(self):
		self.run_test("두덩", "{{ko-IPA}}", "[tudʌ̹ŋ]", "ipa")

	def test_burutungi_ph(self):
		self.run_test("부루퉁이", "{{ko-IPA}}", "부루퉁이", "ph")
	def test_burutungi_rr(self):
		self.run_test("부루퉁이", "{{ko-IPA}}", "burutung'i", "rr")
	def test_burutungi_rrr(self):
		self.run_test("부루퉁이", "{{ko-IPA}}", "bulutung'i", "rrr")
	def test_burutungi_mr(self):
		self.run_test("부루퉁이", "{{ko-IPA}}", "purut'ungi", "mr")
	def test_burutungi_yr(self):
		self.run_test("부루퉁이", "{{ko-IPA}}", "pulwu.thwungi", "yr")
	def test_burutungi_ipa(self):
		self.run_test("부루퉁이", "{{ko-IPA}}", "[puɾutʰuŋi]", "ipa")


	def test_pi_ph(self):
		self.run_test("피", "{{ko-IPA}}", "피", "ph")
	def test_pi_rr(self):
		self.run_test("피", "{{ko-IPA}}", "pi", "rr")
	def test_pi_rrr(self):
		self.run_test("피", "{{ko-IPA}}", "pi", "rrr")
	def test_pi_mr(self):
		self.run_test("피", "{{ko-IPA}}", "p'i", "mr")
	def test_pi_yr(self):
		self.run_test("피", "{{ko-IPA}}", "phi", "yr")
	def test_pi_ipa(self):
		self.run_test("피", "{{ko-IPA}}", "[pʰi]", "ipa")
	def test_pi_ph_1(self):
		self.run_test("피", "{{ko-IPA}}", "피", "ph")
	def test_pi_rr_1(self):
		self.run_test("피", "{{ko-IPA}}", "pi", "rr")
	def test_pi_rrr_1(self):
		self.run_test("피", "{{ko-IPA}}", "pi", "rrr")
	def test_pi_mr_1(self):
		self.run_test("피", "{{ko-IPA}}", "p'i", "mr")
	def test_pi_yr_1(self):
		self.run_test("피", "{{ko-IPA}}", "phi", "yr")
	def test_pi_ipa_1(self):
		self.run_test("피", "{{ko-IPA}}", "[pʰi]", "ipa")
	def test_pi_ph_2(self):
		self.run_test("피", "{{ko-ipa}}", "피", "ph")
	def test_pi_rr_2(self):
		self.run_test("피", "{{ko-ipa}}", "pi", "rr")
	def test_pi_rrr_2(self):
		self.run_test("피", "{{ko-ipa}}", "pi", "rrr")
	def test_pi_mr_2(self):
		self.run_test("피", "{{ko-ipa}}", "p'i", "mr")
	def test_pi_yr_2(self):
		self.run_test("피", "{{ko-ipa}}", "phi", "yr")
	def test_pi_ipa_2(self):
		self.run_test("피", "{{ko-ipa}}", "[pʰi]", "ipa")
	def test_pi_ph_3(self):
		self.run_test("피", "{{ko-IPA|l=y}}", "피(ː)", "ph")
	def test_pi_rr_3(self):
		self.run_test("피", "{{ko-IPA|l=y}}", "pi", "rr")
	def test_pi_rrr_3(self):
		self.run_test("피", "{{ko-IPA|l=y}}", "pi", "rrr")
	def test_pi_mr_3(self):
		self.run_test("피", "{{ko-IPA|l=y}}", "p'i", "mr")
	def test_pi_yr_3(self):
		self.run_test("피", "{{ko-IPA|l=y}}", "phī", "yr")
	def test_pi_ipa_3(self):
		self.run_test("피", "{{ko-IPA|l=y}}", "[pʰi(ː)]", "ipa")

	def test_saekkijumeoni_ph(self):
		self.run_test("새끼주머니", "{{ko-IPA}}", "새끼주머니/세끼주머니", "ph")
	def test_saekkijumeoni_rr(self):
		self.run_test("새끼주머니", "{{ko-IPA}}", "saekkijumeoni", "rr")
	def test_saekkijumeoni_rrr(self):
		self.run_test("새끼주머니", "{{ko-IPA}}", "sae'kkijumeoni", "rrr")
	def test_saekkijumeoni_mr(self):
		self.run_test("새끼주머니", "{{ko-IPA}}", "saekkijumŏni", "mr")
	def test_saekkijumeoni_yr(self):
		self.run_test("새끼주머니", "{{ko-IPA}}", "say.kkicwumeni", "yr")
	def test_saekkijumeoni_ipa(self):
		self.run_test("새끼주머니", "{{ko-IPA}}", "[sʰɛk͈id͡ʑumʌ̹ni] ~ [sʰe̞k͈id͡ʑumʌ̹ni]", "ipa")

	def test_saipon_ph(self):
		self.run_test("사이폰", "{{ko-IPA|com=0}}", "싸이폰", "ph")
	def test_saipon_rr(self):
		self.run_test("사이폰", "{{ko-IPA|com=0}}", "saipon", "rr")
	def test_saipon_rrr(self):
		self.run_test("사이폰", "{{ko-IPA|com=0}}", "saipon", "rrr")
	def test_saipon_mr(self):
		self.run_test("사이폰", "{{ko-IPA|com=0}}", "ssaip'on", "mr")
	def test_saipon_yr(self):
		self.run_test("사이폰", "{{ko-IPA|com=0}}", "qsai.phon", "yr")
	def test_saipon_ipa(self):
		self.run_test("사이폰", "{{ko-IPA|com=0}}", "[s͈a̠ipʰo̞n]", "ipa")

	def test_maedok_ph(self):
		self.run_test("매독", "{{ko-IPA}}", "매독/메독", "ph")
	def test_maedok_rr(self):
		self.run_test("매독", "{{ko-IPA}}", "maedok", "rr")
	def test_maedok_rrr(self):
		self.run_test("매독", "{{ko-IPA}}", "maedog", "rrr")
	def test_maedok_mr(self):
		self.run_test("매독", "{{ko-IPA}}", "maedok", "mr")
	def test_maedok_yr(self):
		self.run_test("매독", "{{ko-IPA}}", "maytok", "yr")
	def test_maedok_ipa(self):
		self.run_test("매독", "{{ko-IPA}}", "[mɛdo̞k̚] ~ [me̞do̞k̚]", "ipa")

	def test_simji_ph(self):
		self.run_test("심지", "{{ko-IPA}}", "심지", "ph")
	def test_simji_rr(self):
		self.run_test("심지", "{{ko-IPA}}", "simji", "rr")
	def test_simji_rrr(self):
		self.run_test("심지", "{{ko-IPA}}", "simji", "rrr")
	def test_simji_mr(self):
		self.run_test("심지", "{{ko-IPA}}", "simji", "mr")
	def test_simji_yr(self):
		self.run_test("심지", "{{ko-IPA}}", "simci", "yr")
	def test_simji_ipa(self):
		self.run_test("심지", "{{ko-IPA}}", "[ɕʰimd͡ʑi]", "ipa")

	def test_bu_ph(self):
		self.run_test("부", "{{ko-IPA|l=y}}", "부(ː)", "ph")
	def test_bu_rr(self):
		self.run_test("부", "{{ko-IPA|l=y}}", "bu", "rr")
	def test_bu_rrr(self):
		self.run_test("부", "{{ko-IPA|l=y}}", "bu", "rrr")
	def test_bu_mr(self):
		self.run_test("부", "{{ko-IPA|l=y}}", "pu", "mr")
	def test_bu_yr(self):
		self.run_test("부", "{{ko-IPA|l=y}}", "pū", "yr")
	def test_bu_ipa(self):
		self.run_test("부", "{{ko-IPA|l=y}}", "[pu(ː)]", "ipa")
	def test_bu_ph_1(self):
		self.run_test("부", "{{ko-IPA}}", "부", "ph")
	def test_bu_rr_1(self):
		self.run_test("부", "{{ko-IPA}}", "bu", "rr")
	def test_bu_rrr_1(self):
		self.run_test("부", "{{ko-IPA}}", "bu", "rrr")
	def test_bu_mr_1(self):
		self.run_test("부", "{{ko-IPA}}", "pu", "mr")
	def test_bu_yr_1(self):
		self.run_test("부", "{{ko-IPA}}", "pu", "yr")
	def test_bu_ipa_1(self):
		self.run_test("부", "{{ko-IPA}}", "[pu]", "ipa")

	def test_baraeda_ph(self):
		self.run_test("바래다", "{{ko-IPA}}", "바래다/바레다", "ph")
	def test_baraeda_rr(self):
		self.run_test("바래다", "{{ko-IPA}}", "baraeda", "rr")
	def test_baraeda_rrr(self):
		self.run_test("바래다", "{{ko-IPA}}", "balaeda", "rrr")
	def test_baraeda_mr(self):
		self.run_test("바래다", "{{ko-IPA}}", "paraeda", "mr")
	def test_baraeda_yr(self):
		self.run_test("바래다", "{{ko-IPA}}", "palayta", "yr")
	def test_baraeda_ipa(self):
		self.run_test("바래다", "{{ko-IPA}}", "[pa̠ɾɛda̠] ~ [pa̠ɾe̞da̠]", "ipa")

	def test_nalssi_ph(self):
		self.run_test("날씨", "{{ko-IPA}}", "날씨", "ph")
	def test_nalssi_rr(self):
		self.run_test("날씨", "{{ko-IPA}}", "nalssi", "rr")
	def test_nalssi_rrr(self):
		self.run_test("날씨", "{{ko-IPA}}", "nal'ssi", "rrr")
	def test_nalssi_mr(self):
		self.run_test("날씨", "{{ko-IPA}}", "nalssi", "mr")
	def test_nalssi_yr(self):
		self.run_test("날씨", "{{ko-IPA}}", "nal.ssi", "yr")
	def test_nalssi_ipa(self):
		self.run_test("날씨", "{{ko-IPA}}", "[na̠ɭɕ͈i]", "ipa")

	def test_haetbyeot_ph(self):
		self.run_test("햇볕", "{{ko-IPA|nobc=1}}", "핻뼏/해뼏/헫뼏/헤뼏", "ph")
	def test_haetbyeot_rr(self):
		self.run_test("햇볕", "{{ko-IPA|nobc=1}}", "haetbyeot", "rr")
	def test_haetbyeot_rrr(self):
		self.run_test("햇볕", "{{ko-IPA|nobc=1}}", "haesbyeot", "rrr")
	def test_haetbyeot_mr(self):
		self.run_test("햇볕", "{{ko-IPA|nobc=1}}", "haetpyŏt", "mr")
	def test_haetbyeot_yr(self):
		self.run_test("햇볕", "{{ko-IPA|nobc=1}}", "hayspyeth", "yr")
	def test_haetbyeot_ipa(self):
		self.run_test("햇볕", "{{ko-IPA|nobc=1}}", "[hɛt̚p͈jʌ̹t̚] ~ [hɛp͈jʌ̹t̚] ~ [he̞t̚p͈jʌ̹t̚] ~ [he̞p͈jʌ̹t̚]", "ipa")

	def test_gori_ph(self):
		self.run_test("고리", "{{ko-IPA}}", "고리", "ph")
	def test_gori_rr(self):
		self.run_test("고리", "{{ko-IPA}}", "gori", "rr")
	def test_gori_rrr(self):
		self.run_test("고리", "{{ko-IPA}}", "goli", "rrr")
	def test_gori_mr(self):
		self.run_test("고리", "{{ko-IPA}}", "kori", "mr")
	def test_gori_yr(self):
		self.run_test("고리", "{{ko-IPA}}", "koli", "yr")
	def test_gori_ipa(self):
		self.run_test("고리", "{{ko-IPA}}", "[ko̞ɾi]", "ipa")

	def test_gorijjak_ph(self):
		self.run_test("고리짝", "{{ko-ipa}}", "고리짝", "ph")
	def test_gorijjak_rr(self):
		self.run_test("고리짝", "{{ko-ipa}}", "gorijjak", "rr")
	def test_gorijjak_rrr(self):
		self.run_test("고리짝", "{{ko-ipa}}", "goli'jjag", "rrr")
	def test_gorijjak_mr(self):
		self.run_test("고리짝", "{{ko-ipa}}", "koritchak", "mr")
	def test_gorijjak_yr(self):
		self.run_test("고리짝", "{{ko-ipa}}", "koli.ccak", "yr")
	def test_gorijjak_ipa(self):
		self.run_test("고리짝", "{{ko-ipa}}", "[ko̞ɾit͡ɕ͈a̠k̚]", "ipa")

	def test_aji_ph(self):
		self.run_test("-아지", "{{ko-IPA}}", "아지", "ph")
	def test_aji_rr(self):
		self.run_test("-아지", "{{ko-IPA}}", "aji", "rr")
	def test_aji_rrr(self):
		self.run_test("-아지", "{{ko-IPA}}", "aji", "rrr")
	def test_aji_mr(self):
		self.run_test("-아지", "{{ko-IPA}}", "aji", "mr")
	def test_aji_yr(self):
		self.run_test("-아지", "{{ko-IPA}}", "aci", "yr")
	def test_aji_ipa(self):
		self.run_test("-아지", "{{ko-IPA}}", "[a̠d͡ʑi]", "ipa")

	def test_mangaji_ph(self):
		self.run_test("망아지", "{{ko-ipa}}", "망아지", "ph")
	def test_mangaji_rr(self):
		self.run_test("망아지", "{{ko-ipa}}", "mang'aji", "rr")
	def test_mangaji_rrr(self):
		self.run_test("망아지", "{{ko-ipa}}", "mang'aji", "rrr")
	def test_mangaji_mr(self):
		self.run_test("망아지", "{{ko-ipa}}", "mangaji", "mr")
	def test_mangaji_yr(self):
		self.run_test("망아지", "{{ko-ipa}}", "mangaci", "yr")
	def test_mangaji_ipa(self):
		self.run_test("망아지", "{{ko-ipa}}", "[ma̠ŋa̠d͡ʑi]", "ipa")

	def test_songaji_ph(self):
		self.run_test("송아지", "{{ko-ipa}}", "송아지", "ph")
	def test_songaji_rr(self):
		self.run_test("송아지", "{{ko-ipa}}", "song'aji", "rr")
	def test_songaji_rrr(self):
		self.run_test("송아지", "{{ko-ipa}}", "song'aji", "rrr")
	def test_songaji_mr(self):
		self.run_test("송아지", "{{ko-ipa}}", "songaji", "mr")
	def test_songaji_yr(self):
		self.run_test("송아지", "{{ko-ipa}}", "songaci", "yr")
	def test_songaji_ipa(self):
		self.run_test("송아지", "{{ko-ipa}}", "[sʰo̞ŋa̠d͡ʑi]", "ipa")


	def test_nip_ph(self):
		self.run_test("닢", "{{ko-IPA}}", "닙", "ph")
	def test_nip_rr(self):
		self.run_test("닢", "{{ko-IPA}}", "nip", "rr")
	def test_nip_rrr(self):
		self.run_test("닢", "{{ko-IPA}}", "nip", "rrr")
	def test_nip_mr(self):
		self.run_test("닢", "{{ko-IPA}}", "nip", "mr")
	def test_nip_yr(self):
		self.run_test("닢", "{{ko-IPA}}", "niph", "yr")
	def test_nip_ipa(self):
		self.run_test("닢", "{{ko-IPA}}", "[nip̚]", "ipa")

	def test_gilda_ph(self):
		self.run_test("길다", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-길다.wav}}", "길(ː)다", "ph")
	def test_gilda_rr(self):
		self.run_test("길다", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-길다.wav}}", "gilda", "rr")
	def test_gilda_rrr(self):
		self.run_test("길다", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-길다.wav}}", "gilda", "rrr")
	def test_gilda_mr(self):
		self.run_test("길다", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-길다.wav}}", "kilda", "mr")
	def test_gilda_yr(self):
		self.run_test("길다", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-길다.wav}}", "kīlta", "yr")
	def test_gilda_ipa(self):
		self.run_test("길다", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-길다.wav}}", "[ˈki(ː)ɭda̠]", "ipa")

	def test_jjalda_ph(self):
		self.run_test("짧다", "{{ko-IPA}}", "짤따", "ph")
	def test_jjalda_rr(self):
		self.run_test("짧다", "{{ko-IPA}}", "jjalda", "rr")
	def test_jjalda_rrr(self):
		self.run_test("짧다", "{{ko-IPA}}", "jjalbda", "rrr")
	def test_jjalda_mr(self):
		self.run_test("짧다", "{{ko-IPA}}", "tchalta", "mr")
	def test_jjalda_yr(self):
		self.run_test("짧다", "{{ko-IPA}}", "ccalpta", "yr")
	def test_jjalda_ipa(self):
		self.run_test("짧다", "{{ko-IPA}}", "[t͡ɕ͈a̠ɭt͈a̠]", "ipa")

	def test_taea_ph(self):
		self.run_test("태아", "{{ko-IPA}}", "태아/테아", "ph")
	def test_taea_rr(self):
		self.run_test("태아", "{{ko-IPA}}", "taea", "rr")
	def test_taea_rrr(self):
		self.run_test("태아", "{{ko-IPA}}", "taea", "rrr")
	def test_taea_mr(self):
		self.run_test("태아", "{{ko-IPA}}", "t'aea", "mr")
	def test_taea_yr(self):
		self.run_test("태아", "{{ko-IPA}}", "thay.a", "yr")
	def test_taea_ipa(self):
		self.run_test("태아", "{{ko-IPA}}", "[tʰɛa̠] ~ [tʰe̞a̠]", "ipa")
	def test_taea_ph_1(self):
		self.run_test("태아", "{{ko-IPA}}", "태아/테아", "ph")
	def test_taea_rr_1(self):
		self.run_test("태아", "{{ko-IPA}}", "taea", "rr")
	def test_taea_rrr_1(self):
		self.run_test("태아", "{{ko-IPA}}", "taea", "rrr")
	def test_taea_mr_1(self):
		self.run_test("태아", "{{ko-IPA}}", "t'aea", "mr")
	def test_taea_yr_1(self):
		self.run_test("태아", "{{ko-IPA}}", "thay.a", "yr")
	def test_taea_ipa_1(self):
		self.run_test("태아", "{{ko-IPA}}", "[tʰɛa̠] ~ [tʰe̞a̠]", "ipa")
	def test_taea_ph_2(self):
		self.run_test("태아", "{{ko-IPA}}", "태아/테아", "ph")
	def test_taea_rr_2(self):
		self.run_test("태아", "{{ko-IPA}}", "taea", "rr")
	def test_taea_rrr_2(self):
		self.run_test("태아", "{{ko-IPA}}", "taea", "rrr")
	def test_taea_mr_2(self):
		self.run_test("태아", "{{ko-IPA}}", "t'aea", "mr")
	def test_taea_yr_2(self):
		self.run_test("태아", "{{ko-IPA}}", "thay.a", "yr")
	def test_taea_ipa_2(self):
		self.run_test("태아", "{{ko-IPA}}", "[tʰɛa̠] ~ [tʰe̞a̠]", "ipa")


	def test_nak_ph(self):
		self.run_test("낙", "{{ko-IPA}}", "낙", "ph")
	def test_nak_rr(self):
		self.run_test("낙", "{{ko-IPA}}", "nak", "rr")
	def test_nak_rrr(self):
		self.run_test("낙", "{{ko-IPA}}", "nag", "rrr")
	def test_nak_mr(self):
		self.run_test("낙", "{{ko-IPA}}", "nak", "mr")
	def test_nak_yr(self):
		self.run_test("낙", "{{ko-IPA}}", "nak", "yr")
	def test_nak_ipa(self):
		self.run_test("낙", "{{ko-IPA}}", "[na̠k̚]", "ipa")


	def test_nat_ph(self):
		self.run_test("낯", "{{ko-IPA}}", "낟", "ph")
	def test_nat_rr(self):
		self.run_test("낯", "{{ko-IPA}}", "nat", "rr")
	def test_nat_rrr(self):
		self.run_test("낯", "{{ko-IPA}}", "nach", "rrr")
	def test_nat_mr(self):
		self.run_test("낯", "{{ko-IPA}}", "nat", "mr")
	def test_nat_yr(self):
		self.run_test("낯", "{{ko-IPA}}", "nach", "yr")
	def test_nat_ipa(self):
		self.run_test("낯", "{{ko-IPA}}", "[na̠t̚]", "ipa")

	def test_nak_ph(self):
		self.run_test("낡", "{{ko-IPA}}", "낙", "ph")
	def test_nak_rr(self):
		self.run_test("낡", "{{ko-IPA}}", "nak", "rr")
	def test_nak_rrr(self):
		self.run_test("낡", "{{ko-IPA}}", "nalg", "rrr")
	def test_nak_mr(self):
		self.run_test("낡", "{{ko-IPA}}", "nak", "mr")
	def test_nak_yr(self):
		self.run_test("낡", "{{ko-IPA}}", "nalk", "yr")
	def test_nak_ipa(self):
		self.run_test("낡", "{{ko-IPA}}", "[na̠k̚]", "ipa")


	def test_nat_ph(self):
		self.run_test("낟", "{{ko-IPA}}", "낟", "ph")
	def test_nat_rr(self):
		self.run_test("낟", "{{ko-IPA}}", "nat", "rr")
	def test_nat_rrr(self):
		self.run_test("낟", "{{ko-IPA}}", "nad", "rrr")
	def test_nat_mr(self):
		self.run_test("낟", "{{ko-IPA}}", "nat", "mr")
	def test_nat_yr(self):
		self.run_test("낟", "{{ko-IPA}}", "nat", "yr")
	def test_nat_ipa(self):
		self.run_test("낟", "{{ko-IPA}}", "[na̠t̚]", "ipa")

	def test_nat_ph(self):
		self.run_test("낮", "{{ko-IPA}}", "낟", "ph")
	def test_nat_rr(self):
		self.run_test("낮", "{{ko-IPA}}", "nat", "rr")
	def test_nat_rrr(self):
		self.run_test("낮", "{{ko-IPA}}", "naj", "rrr")
	def test_nat_mr(self):
		self.run_test("낮", "{{ko-IPA}}", "nat", "mr")
	def test_nat_yr(self):
		self.run_test("낮", "{{ko-IPA}}", "nac", "yr")
	def test_nat_ipa(self):
		self.run_test("낮", "{{ko-IPA}}", "[na̠t̚]", "ipa")

	def test_nat_ph(self):
		self.run_test("낫", "{{ko-IPA}}", "낟", "ph")
	def test_nat_rr(self):
		self.run_test("낫", "{{ko-IPA}}", "nat", "rr")
	def test_nat_rrr(self):
		self.run_test("낫", "{{ko-IPA}}", "nas", "rrr")
	def test_nat_mr(self):
		self.run_test("낫", "{{ko-IPA}}", "nat", "mr")
	def test_nat_yr(self):
		self.run_test("낫", "{{ko-IPA}}", "nas", "yr")
	def test_nat_ipa(self):
		self.run_test("낫", "{{ko-IPA}}", "[na̠t̚]", "ipa")

	def test_ure_ph(self):
		self.run_test("우레", "{{ko-IPA}}", "우레", "ph")
	def test_ure_rr(self):
		self.run_test("우레", "{{ko-IPA}}", "ure", "rr")
	def test_ure_rrr(self):
		self.run_test("우레", "{{ko-IPA}}", "ule", "rrr")
	def test_ure_mr(self):
		self.run_test("우레", "{{ko-IPA}}", "ure", "mr")
	def test_ure_yr(self):
		self.run_test("우레", "{{ko-IPA}}", "wuley", "yr")
	def test_ure_ipa(self):
		self.run_test("우레", "{{ko-IPA}}", "[uɾe̞]", "ipa")
	def test_ure_ph_1(self):
		self.run_test("우레", "{{ko-IPA|l=y}}", "우(ː)레", "ph")
	def test_ure_rr_1(self):
		self.run_test("우레", "{{ko-IPA|l=y}}", "ure", "rr")
	def test_ure_rrr_1(self):
		self.run_test("우레", "{{ko-IPA|l=y}}", "ule", "rrr")
	def test_ure_mr_1(self):
		self.run_test("우레", "{{ko-IPA|l=y}}", "ure", "mr")
	def test_ure_yr_1(self):
		self.run_test("우레", "{{ko-IPA|l=y}}", "wūley", "yr")
	def test_ure_ipa_1(self):
		self.run_test("우레", "{{ko-IPA|l=y}}", "[ˈu(ː)ɾe̞]", "ipa")

	def test_mongnyeon_ph(self):
		self.run_test("목련", "{{ko-IPA}}", "몽년", "ph")
	def test_mongnyeon_rr(self):
		self.run_test("목련", "{{ko-IPA}}", "mongnyeon", "rr")
	def test_mongnyeon_rrr(self):
		self.run_test("목련", "{{ko-IPA}}", "moglyeon", "rrr")
	def test_mongnyeon_mr(self):
		self.run_test("목련", "{{ko-IPA}}", "mongnyŏn", "mr")
	def test_mongnyeon_yr(self):
		self.run_test("목련", "{{ko-IPA}}", "moklyen", "yr")
	def test_mongnyeon_ipa(self):
		self.run_test("목련", "{{ko-IPA}}", "[mo̞ŋɲʌ̹n]", "ipa")

	def test_mongnan_ph(self):
		self.run_test("목란", "{{ko-IPA}}", "몽난", "ph")
	def test_mongnan_rr(self):
		self.run_test("목란", "{{ko-IPA}}", "mongnan", "rr")
	def test_mongnan_rrr(self):
		self.run_test("목란", "{{ko-IPA}}", "moglan", "rrr")
	def test_mongnan_mr(self):
		self.run_test("목란", "{{ko-IPA}}", "mongnan", "mr")
	def test_mongnan_yr(self):
		self.run_test("목란", "{{ko-IPA}}", "moklan", "yr")
	def test_mongnan_ipa(self):
		self.run_test("목란", "{{ko-IPA}}", "[mo̞ŋna̠n]", "ipa")

	def test_gungdungi_ph(self):
		self.run_test("궁둥이", "{{ko-IPA}}", "궁둥이", "ph")
	def test_gungdungi_rr(self):
		self.run_test("궁둥이", "{{ko-IPA}}", "gungdung'i", "rr")
	def test_gungdungi_rrr(self):
		self.run_test("궁둥이", "{{ko-IPA}}", "gungdung'i", "rrr")
	def test_gungdungi_mr(self):
		self.run_test("궁둥이", "{{ko-IPA}}", "kungdungi", "mr")
	def test_gungdungi_yr(self):
		self.run_test("궁둥이", "{{ko-IPA}}", "kwungtwungi", "yr")
	def test_gungdungi_ipa(self):
		self.run_test("궁둥이", "{{ko-IPA}}", "[kuŋduŋi]", "ipa")

	def test_eongdeongi_ph(self):
		self.run_test("엉덩이", "{{ko-IPA|l=y}}", "엉(ː)덩이", "ph")
	def test_eongdeongi_rr(self):
		self.run_test("엉덩이", "{{ko-IPA|l=y}}", "eongdeong'i", "rr")
	def test_eongdeongi_rrr(self):
		self.run_test("엉덩이", "{{ko-IPA|l=y}}", "eongdeong'i", "rrr")
	def test_eongdeongi_mr(self):
		self.run_test("엉덩이", "{{ko-IPA|l=y}}", "ŏngdŏngi", "mr")
	def test_eongdeongi_yr(self):
		self.run_test("엉덩이", "{{ko-IPA|l=y}}", "ēngtengi", "yr")
	def test_eongdeongi_ipa(self):
		self.run_test("엉덩이", "{{ko-IPA|l=y}}", "[ˈɘ(ː)ŋdʌ̹ŋi]", "ipa")

	def test_ra_ph(self):
		self.run_test("라", "{{ko-IPA}}", "라", "ph")
	def test_ra_rr(self):
		self.run_test("라", "{{ko-IPA}}", "ra", "rr")
	def test_ra_rrr(self):
		self.run_test("라", "{{ko-IPA}}", "la", "rrr")
	def test_ra_mr(self):
		self.run_test("라", "{{ko-IPA}}", "ra", "mr")
	def test_ra_yr(self):
		self.run_test("라", "{{ko-IPA}}", "la", "yr")
	def test_ra_ipa(self):
		self.run_test("라", "{{ko-IPA}}", "[ɾa̠]", "ipa")

	def test_ma_ph(self):
		self.run_test("마", "{{ko-IPA}}", "마", "ph")
	def test_ma_rr(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "rr")
	def test_ma_rrr(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "rrr")
	def test_ma_mr(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "mr")
	def test_ma_yr(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "yr")
	def test_ma_ipa(self):
		self.run_test("마", "{{ko-IPA}}", "[ma̠]", "ipa")
	def test_ma_ph_1(self):
		self.run_test("마", "{{ko-IPA|l=y}}", "마(ː)", "ph")
	def test_ma_rr_1(self):
		self.run_test("마", "{{ko-IPA|l=y}}", "ma", "rr")
	def test_ma_rrr_1(self):
		self.run_test("마", "{{ko-IPA|l=y}}", "ma", "rrr")
	def test_ma_mr_1(self):
		self.run_test("마", "{{ko-IPA|l=y}}", "ma", "mr")
	def test_ma_yr_1(self):
		self.run_test("마", "{{ko-IPA|l=y}}", "mā", "yr")
	def test_ma_ipa_1(self):
		self.run_test("마", "{{ko-IPA|l=y}}", "[ma̠(ː)]", "ipa")
	def test_ma_ph_2(self):
		self.run_test("마", "{{ko-IPA}}", "마", "ph")
	def test_ma_rr_2(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "rr")
	def test_ma_rrr_2(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "rrr")
	def test_ma_mr_2(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "mr")
	def test_ma_yr_2(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "yr")
	def test_ma_ipa_2(self):
		self.run_test("마", "{{ko-IPA}}", "[ma̠]", "ipa")
	def test_ma_ph_3(self):
		self.run_test("마", "{{ko-IPA}}", "마", "ph")
	def test_ma_rr_3(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "rr")
	def test_ma_rrr_3(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "rrr")
	def test_ma_mr_3(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "mr")
	def test_ma_yr_3(self):
		self.run_test("마", "{{ko-IPA}}", "ma", "yr")
	def test_ma_ipa_3(self):
		self.run_test("마", "{{ko-IPA}}", "[ma̠]", "ipa")

	def test_ba_ph(self):
		self.run_test("바", "{{ko-IPA}}", "바", "ph")
	def test_ba_rr(self):
		self.run_test("바", "{{ko-IPA}}", "ba", "rr")
	def test_ba_rrr(self):
		self.run_test("바", "{{ko-IPA}}", "ba", "rrr")
	def test_ba_mr(self):
		self.run_test("바", "{{ko-IPA}}", "pa", "mr")
	def test_ba_yr(self):
		self.run_test("바", "{{ko-IPA}}", "pa", "yr")
	def test_ba_ipa(self):
		self.run_test("바", "{{ko-IPA}}", "[pa̠]", "ipa")
	def test_ba_ph_1(self):
		self.run_test("바", "{{ko-IPA}}", "바", "ph")
	def test_ba_rr_1(self):
		self.run_test("바", "{{ko-IPA}}", "ba", "rr")
	def test_ba_rrr_1(self):
		self.run_test("바", "{{ko-IPA}}", "ba", "rrr")
	def test_ba_mr_1(self):
		self.run_test("바", "{{ko-IPA}}", "pa", "mr")
	def test_ba_yr_1(self):
		self.run_test("바", "{{ko-IPA}}", "pa", "yr")
	def test_ba_ipa_1(self):
		self.run_test("바", "{{ko-IPA}}", "[pa̠]", "ipa")
	def test_ba_ph_2(self):
		self.run_test("바", "{{ko-IPA|com=0}}<ref>{{smallcaps|Jo}} Hyeong-Il and {{smallcaps|Nam}} Ju-Hye, {{lang|ko|외래어와 외국어 표현 3300}}, 2012, {{ISBN|978-89-5556-986-5}}", "빠", "ph")
	def test_ba_rr_2(self):
		self.run_test("바", "{{ko-IPA|com=0}}<ref>{{smallcaps|Jo}} Hyeong-Il and {{smallcaps|Nam}} Ju-Hye, {{lang|ko|외래어와 외국어 표현 3300}}, 2012, {{ISBN|978-89-5556-986-5}}", "ba", "rr")
	def test_ba_rrr_2(self):
		self.run_test("바", "{{ko-IPA|com=0}}<ref>{{smallcaps|Jo}} Hyeong-Il and {{smallcaps|Nam}} Ju-Hye, {{lang|ko|외래어와 외국어 표현 3300}}, 2012, {{ISBN|978-89-5556-986-5}}", "ba", "rrr")
	def test_ba_mr_2(self):
		self.run_test("바", "{{ko-IPA|com=0}}<ref>{{smallcaps|Jo}} Hyeong-Il and {{smallcaps|Nam}} Ju-Hye, {{lang|ko|외래어와 외국어 표현 3300}}, 2012, {{ISBN|978-89-5556-986-5}}", "pa", "mr")
	def test_ba_yr_2(self):
		self.run_test("바", "{{ko-IPA|com=0}}<ref>{{smallcaps|Jo}} Hyeong-Il and {{smallcaps|Nam}} Ju-Hye, {{lang|ko|외래어와 외국어 표현 3300}}, 2012, {{ISBN|978-89-5556-986-5}}", "qpa", "yr")
	def test_ba_ipa_2(self):
		self.run_test("바", "{{ko-IPA|com=0}}<ref>{{smallcaps|Jo}} Hyeong-Il and {{smallcaps|Nam}} Ju-Hye, {{lang|ko|외래어와 외국어 표현 3300}}, 2012, {{ISBN|978-89-5556-986-5}}", "[p͈a̠]", "ipa")
	def test_ba_ph_3(self):
		self.run_test("바", "{{ko-IPA}}", "바", "ph")
	def test_ba_rr_3(self):
		self.run_test("바", "{{ko-IPA}}", "ba", "rr")
	def test_ba_rrr_3(self):
		self.run_test("바", "{{ko-IPA}}", "ba", "rrr")
	def test_ba_mr_3(self):
		self.run_test("바", "{{ko-IPA}}", "pa", "mr")
	def test_ba_yr_3(self):
		self.run_test("바", "{{ko-IPA}}", "pa", "yr")
	def test_ba_ipa_3(self):
		self.run_test("바", "{{ko-IPA}}", "[pa̠]", "ipa")

	def test_a_ph(self):
		self.run_test("아", "{{ko-IPA}}", "아", "ph")
	def test_a_rr(self):
		self.run_test("아", "{{ko-IPA}}", "a", "rr")
	def test_a_rrr(self):
		self.run_test("아", "{{ko-IPA}}", "a", "rrr")
	def test_a_mr(self):
		self.run_test("아", "{{ko-IPA}}", "a", "mr")
	def test_a_yr(self):
		self.run_test("아", "{{ko-IPA}}", "a", "yr")
	def test_a_ipa(self):
		self.run_test("아", "{{ko-IPA}}", "[a̠]", "ipa")
	def test_a_ph_1(self):
		self.run_test("아", "{{ko-IPA|l=y}}", "아(ː)", "ph")
	def test_a_rr_1(self):
		self.run_test("아", "{{ko-IPA|l=y}}", "a", "rr")
	def test_a_rrr_1(self):
		self.run_test("아", "{{ko-IPA|l=y}}", "a", "rrr")
	def test_a_mr_1(self):
		self.run_test("아", "{{ko-IPA|l=y}}", "a", "mr")
	def test_a_yr_1(self):
		self.run_test("아", "{{ko-IPA|l=y}}", "ā", "yr")
	def test_a_ipa_1(self):
		self.run_test("아", "{{ko-IPA|l=y}}", "[a̠(ː)]", "ipa")

	def test_ha_ph(self):
		self.run_test("하", "{{ko-IPA|l=y}}", "하(ː)", "ph")
	def test_ha_rr(self):
		self.run_test("하", "{{ko-IPA|l=y}}", "ha", "rr")
	def test_ha_rrr(self):
		self.run_test("하", "{{ko-IPA|l=y}}", "ha", "rrr")
	def test_ha_mr(self):
		self.run_test("하", "{{ko-IPA|l=y}}", "ha", "mr")
	def test_ha_yr(self):
		self.run_test("하", "{{ko-IPA|l=y}}", "hā", "yr")
	def test_ha_ipa(self):
		self.run_test("하", "{{ko-IPA|l=y}}", "[ha̠(ː)]", "ipa")

	def test_pa_ph(self):
		self.run_test("파", "{{ko-IPA}}", "파", "ph")
	def test_pa_rr(self):
		self.run_test("파", "{{ko-IPA}}", "pa", "rr")
	def test_pa_rrr(self):
		self.run_test("파", "{{ko-IPA}}", "pa", "rrr")
	def test_pa_mr(self):
		self.run_test("파", "{{ko-IPA}}", "p'a", "mr")
	def test_pa_yr(self):
		self.run_test("파", "{{ko-IPA}}", "pha", "yr")
	def test_pa_ipa(self):
		self.run_test("파", "{{ko-IPA}}", "[pʰa̠]", "ipa")
	def test_pa_ph_1(self):
		self.run_test("파", "{{ko-IPA|l=y}}", "파(ː)", "ph")
	def test_pa_rr_1(self):
		self.run_test("파", "{{ko-IPA|l=y}}", "pa", "rr")
	def test_pa_rrr_1(self):
		self.run_test("파", "{{ko-IPA|l=y}}", "pa", "rrr")
	def test_pa_mr_1(self):
		self.run_test("파", "{{ko-IPA|l=y}}", "p'a", "mr")
	def test_pa_yr_1(self):
		self.run_test("파", "{{ko-IPA|l=y}}", "phā", "yr")
	def test_pa_ipa_1(self):
		self.run_test("파", "{{ko-IPA|l=y}}", "[pʰa̠(ː)]", "ipa")

	def test_ta_ph(self):
		self.run_test("타", "{{ko-IPA}}", "타", "ph")
	def test_ta_rr(self):
		self.run_test("타", "{{ko-IPA}}", "ta", "rr")
	def test_ta_rrr(self):
		self.run_test("타", "{{ko-IPA}}", "ta", "rrr")
	def test_ta_mr(self):
		self.run_test("타", "{{ko-IPA}}", "t'a", "mr")
	def test_ta_yr(self):
		self.run_test("타", "{{ko-IPA}}", "tha", "yr")
	def test_ta_ipa(self):
		self.run_test("타", "{{ko-IPA}}", "[tʰa̠]", "ipa")
	def test_ta_ph_1(self):
		self.run_test("타", "{{ko-IPA|l=y}}", "타(ː)", "ph")
	def test_ta_rr_1(self):
		self.run_test("타", "{{ko-IPA|l=y}}", "ta", "rr")
	def test_ta_rrr_1(self):
		self.run_test("타", "{{ko-IPA|l=y}}", "ta", "rrr")
	def test_ta_mr_1(self):
		self.run_test("타", "{{ko-IPA|l=y}}", "t'a", "mr")
	def test_ta_yr_1(self):
		self.run_test("타", "{{ko-IPA|l=y}}", "thā", "yr")
	def test_ta_ipa_1(self):
		self.run_test("타", "{{ko-IPA|l=y}}", "[tʰa̠(ː)]", "ipa")
	def test_ta_ph_2(self):
		self.run_test("타", "{{ko-IPA}}", "타", "ph")
	def test_ta_rr_2(self):
		self.run_test("타", "{{ko-IPA}}", "ta", "rr")
	def test_ta_rrr_2(self):
		self.run_test("타", "{{ko-IPA}}", "ta", "rrr")
	def test_ta_mr_2(self):
		self.run_test("타", "{{ko-IPA}}", "t'a", "mr")
	def test_ta_yr_2(self):
		self.run_test("타", "{{ko-IPA}}", "tha", "yr")
	def test_ta_ipa_2(self):
		self.run_test("타", "{{ko-IPA}}", "[tʰa̠]", "ipa")

	def test_ka_ph(self):
		self.run_test("카", "{{ko-ipa}}", "카", "ph")
	def test_ka_rr(self):
		self.run_test("카", "{{ko-ipa}}", "ka", "rr")
	def test_ka_rrr(self):
		self.run_test("카", "{{ko-ipa}}", "ka", "rrr")
	def test_ka_mr(self):
		self.run_test("카", "{{ko-ipa}}", "k'a", "mr")
	def test_ka_yr(self):
		self.run_test("카", "{{ko-ipa}}", "kha", "yr")
	def test_ka_ipa(self):
		self.run_test("카", "{{ko-ipa}}", "[kʰa̠]", "ipa")

	def test_kka_ph(self):
		self.run_test("까", "{{ko-ipa}}", "까", "ph")
	def test_kka_rr(self):
		self.run_test("까", "{{ko-ipa}}", "kka", "rr")
	def test_kka_rrr(self):
		self.run_test("까", "{{ko-ipa}}", "kka", "rrr")
	def test_kka_mr(self):
		self.run_test("까", "{{ko-ipa}}", "kka", "mr")
	def test_kka_yr(self):
		self.run_test("까", "{{ko-ipa}}", "kka", "yr")
	def test_kka_ipa(self):
		self.run_test("까", "{{ko-ipa}}", "[k͈a̠]", "ipa")

	def test_tta_ph(self):
		self.run_test("따", "{{ko-IPA}}", "따", "ph")
	def test_tta_rr(self):
		self.run_test("따", "{{ko-IPA}}", "tta", "rr")
	def test_tta_rrr(self):
		self.run_test("따", "{{ko-IPA}}", "tta", "rrr")
	def test_tta_mr(self):
		self.run_test("따", "{{ko-IPA}}", "tta", "mr")
	def test_tta_yr(self):
		self.run_test("따", "{{ko-IPA}}", "tta", "yr")
	def test_tta_ipa(self):
		self.run_test("따", "{{ko-IPA}}", "[t͈a̠]", "ipa")

	def test_ssa_ph(self):
		self.run_test("싸", "{{ko-ipa}}", "싸", "ph")
	def test_ssa_rr(self):
		self.run_test("싸", "{{ko-ipa}}", "ssa", "rr")
	def test_ssa_rrr(self):
		self.run_test("싸", "{{ko-ipa}}", "ssa", "rrr")
	def test_ssa_mr(self):
		self.run_test("싸", "{{ko-ipa}}", "ssa", "mr")
	def test_ssa_yr(self):
		self.run_test("싸", "{{ko-ipa}}", "ssa", "yr")
	def test_ssa_ipa(self):
		self.run_test("싸", "{{ko-ipa}}", "[s͈a̠]", "ipa")

	def test_jja_ph(self):
		self.run_test("짜", "{{ko-ipa}}", "짜", "ph")
	def test_jja_rr(self):
		self.run_test("짜", "{{ko-ipa}}", "jja", "rr")
	def test_jja_rrr(self):
		self.run_test("짜", "{{ko-ipa}}", "jja", "rrr")
	def test_jja_mr(self):
		self.run_test("짜", "{{ko-ipa}}", "tcha", "mr")
	def test_jja_yr(self):
		self.run_test("짜", "{{ko-ipa}}", "cca", "yr")
	def test_jja_ipa(self):
		self.run_test("짜", "{{ko-ipa}}", "[t͡ɕ͈a̠]", "ipa")

	def test_gaek_ph(self):
		self.run_test("객", "{{ko-IPA}}", "객/겍", "ph")
	def test_gaek_rr(self):
		self.run_test("객", "{{ko-IPA}}", "gaek", "rr")
	def test_gaek_rrr(self):
		self.run_test("객", "{{ko-IPA}}", "gaeg", "rrr")
	def test_gaek_mr(self):
		self.run_test("객", "{{ko-IPA}}", "kaek", "mr")
	def test_gaek_yr(self):
		self.run_test("객", "{{ko-IPA}}", "kayk", "yr")
	def test_gaek_ipa(self):
		self.run_test("객", "{{ko-IPA}}", "[kɛk̚] ~ [ke̞k̚]", "ipa")

	def test_gaeng_ph(self):
		self.run_test("갱", "{{ko-IPA}}", "갱/겡", "ph")
	def test_gaeng_rr(self):
		self.run_test("갱", "{{ko-IPA}}", "gaeng", "rr")
	def test_gaeng_rrr(self):
		self.run_test("갱", "{{ko-IPA}}", "gaeng", "rrr")
	def test_gaeng_mr(self):
		self.run_test("갱", "{{ko-IPA}}", "kaeng", "mr")
	def test_gaeng_yr(self):
		self.run_test("갱", "{{ko-IPA}}", "kayng", "yr")
	def test_gaeng_ipa(self):
		self.run_test("갱", "{{ko-IPA}}", "[kɛŋ] ~ [ke̞ŋ]", "ipa")
	def test_gaeng_ph_1(self):
		self.run_test("갱", "{{ko-IPA}}", "갱/겡", "ph")
	def test_gaeng_rr_1(self):
		self.run_test("갱", "{{ko-IPA}}", "gaeng", "rr")
	def test_gaeng_rrr_1(self):
		self.run_test("갱", "{{ko-IPA}}", "gaeng", "rrr")
	def test_gaeng_mr_1(self):
		self.run_test("갱", "{{ko-IPA}}", "kaeng", "mr")
	def test_gaeng_yr_1(self):
		self.run_test("갱", "{{ko-IPA}}", "kayng", "yr")
	def test_gaeng_ipa_1(self):
		self.run_test("갱", "{{ko-IPA}}", "[kɛŋ] ~ [ke̞ŋ]", "ipa")


	def test_gyae_ph(self):
		self.run_test("걔", "{{ko-IPA}}", "걔/계", "ph")
	def test_gyae_rr(self):
		self.run_test("걔", "{{ko-IPA}}", "gyae", "rr")
	def test_gyae_rrr(self):
		self.run_test("걔", "{{ko-IPA}}", "gyae", "rrr")
	def test_gyae_mr(self):
		self.run_test("걔", "{{ko-IPA}}", "kyae", "mr")
	def test_gyae_yr(self):
		self.run_test("걔", "{{ko-IPA}}", "kyay", "yr")
	def test_gyae_ipa(self):
		self.run_test("걔", "{{ko-IPA}}", "[kjɛ] ~ [kje̞]", "ipa")

	def test_gyak_ph(self):
		self.run_test("갹", "{{ko-IPA}}", "갹", "ph")
	def test_gyak_rr(self):
		self.run_test("갹", "{{ko-IPA}}", "gyak", "rr")
	def test_gyak_rrr(self):
		self.run_test("갹", "{{ko-IPA}}", "gyag", "rrr")
	def test_gyak_mr(self):
		self.run_test("갹", "{{ko-IPA}}", "kyak", "mr")
	def test_gyak_yr(self):
		self.run_test("갹", "{{ko-IPA}}", "kyak", "yr")
	def test_gyak_ipa(self):
		self.run_test("갹", "{{ko-IPA}}", "[kja̠k̚]", "ipa")

	def test_ge_ph(self):
		self.run_test("게", "{{ko-IPA}}", "게", "ph")
	def test_ge_rr(self):
		self.run_test("게", "{{ko-IPA}}", "ge", "rr")
	def test_ge_rrr(self):
		self.run_test("게", "{{ko-IPA}}", "ge", "rrr")
	def test_ge_mr(self):
		self.run_test("게", "{{ko-IPA}}", "ke", "mr")
	def test_ge_yr(self):
		self.run_test("게", "{{ko-IPA}}", "key", "yr")
	def test_ge_ipa(self):
		self.run_test("게", "{{ko-IPA}}", "[ke̞]", "ipa")
	def test_ge_ph_1(self):
		self.run_test("게", "{{ko-IPA|l=y}}", "게(ː)", "ph")
	def test_ge_rr_1(self):
		self.run_test("게", "{{ko-IPA|l=y}}", "ge", "rr")
	def test_ge_rrr_1(self):
		self.run_test("게", "{{ko-IPA|l=y}}", "ge", "rrr")
	def test_ge_mr_1(self):
		self.run_test("게", "{{ko-IPA|l=y}}", "ke", "mr")
	def test_ge_yr_1(self):
		self.run_test("게", "{{ko-IPA|l=y}}", "kēy", "yr")
	def test_ge_ipa_1(self):
		self.run_test("게", "{{ko-IPA|l=y}}", "[ke̞(ː)]", "ipa")
	def test_ge_ph_2(self):
		self.run_test("게", "{{ko-IPA}}", "게", "ph")
	def test_ge_rr_2(self):
		self.run_test("게", "{{ko-IPA}}", "ge", "rr")
	def test_ge_rrr_2(self):
		self.run_test("게", "{{ko-IPA}}", "ge", "rrr")
	def test_ge_mr_2(self):
		self.run_test("게", "{{ko-IPA}}", "ke", "mr")
	def test_ge_yr_2(self):
		self.run_test("게", "{{ko-IPA}}", "key", "yr")
	def test_ge_ipa_2(self):
		self.run_test("게", "{{ko-IPA}}", "[ke̞]", "ipa")

	def test_gyeo_ph(self):
		self.run_test("겨", "{{ko-ipa}}", "겨", "ph")
	def test_gyeo_rr(self):
		self.run_test("겨", "{{ko-ipa}}", "gyeo", "rr")
	def test_gyeo_rrr(self):
		self.run_test("겨", "{{ko-ipa}}", "gyeo", "rrr")
	def test_gyeo_mr(self):
		self.run_test("겨", "{{ko-ipa}}", "kyŏ", "mr")
	def test_gyeo_yr(self):
		self.run_test("겨", "{{ko-ipa}}", "kye", "yr")
	def test_gyeo_ipa(self):
		self.run_test("겨", "{{ko-ipa}}", "[kjʌ̹]", "ipa")

	def test_gye_ph(self):
		self.run_test("계", "{{ko-ipa}}", "계/게", "ph")
	def test_gye_rr(self):
		self.run_test("계", "{{ko-ipa}}", "gye", "rr")
	def test_gye_rrr(self):
		self.run_test("계", "{{ko-ipa}}", "gye", "rrr")
	def test_gye_mr(self):
		self.run_test("계", "{{ko-ipa}}", "kye", "mr")
	def test_gye_yr(self):
		self.run_test("계", "{{ko-ipa}}", "kyey", "yr")
	def test_gye_ipa(self):
		self.run_test("계", "{{ko-ipa}}", "[kje̞] ~ [ke̞]", "ipa")

	def test_gwae_ph(self):
		self.run_test("괘", "{{ko-IPA}}", "괘/궤", "ph")
	def test_gwae_rr(self):
		self.run_test("괘", "{{ko-IPA}}", "gwae", "rr")
	def test_gwae_rrr(self):
		self.run_test("괘", "{{ko-IPA}}", "gwae", "rrr")
	def test_gwae_mr(self):
		self.run_test("괘", "{{ko-IPA}}", "kwae", "mr")
	def test_gwae_yr(self):
		self.run_test("괘", "{{ko-IPA}}", "kway", "yr")
	def test_gwae_ipa(self):
		self.run_test("괘", "{{ko-IPA}}", "[kwɛ] ~ [kwe̞]", "ipa")
	def test_gwae_ph_1(self):
		self.run_test("괘", "{{ko-IPA|l=y}}", "괘(ː)/궤(ː)", "ph")
	def test_gwae_rr_1(self):
		self.run_test("괘", "{{ko-IPA|l=y}}", "gwae", "rr")
	def test_gwae_rrr_1(self):
		self.run_test("괘", "{{ko-IPA|l=y}}", "gwae", "rrr")
	def test_gwae_mr_1(self):
		self.run_test("괘", "{{ko-IPA|l=y}}", "kwae", "mr")
	def test_gwae_yr_1(self):
		self.run_test("괘", "{{ko-IPA|l=y}}", "kwāy", "yr")
	def test_gwae_ipa_1(self):
		self.run_test("괘", "{{ko-IPA|l=y}}", "[kwɛ(ː)] ~ [kwe̞(ː)]", "ipa")

	def test_goe_ph(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "궤(ː)/괴(ː)", "ph")
	def test_goe_rr(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "goe", "rr")
	def test_goe_rrr(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "goe", "rrr")
	def test_goe_mr(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "koe", "mr")
	def test_goe_yr(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "kōy", "yr")
	def test_goe_ipa(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "[kwe̞(ː)] ~ [kø̞(ː)]", "ipa")
	def test_goe_ph_1(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "궤(ː)/괴(ː)", "ph")
	def test_goe_rr_1(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "goe", "rr")
	def test_goe_rrr_1(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "goe", "rrr")
	def test_goe_mr_1(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "koe", "mr")
	def test_goe_yr_1(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "kōy", "yr")
	def test_goe_ipa_1(self):
		self.run_test("괴", "{{ko-ipa|l=y}}", "[kwe̞(ː)] ~ [kø̞(ː)]", "ipa")

	def test_gwe_ph(self):
		self.run_test("궤", "{{ko-ipa}}", "궤", "ph")
	def test_gwe_rr(self):
		self.run_test("궤", "{{ko-ipa}}", "gwe", "rr")
	def test_gwe_rrr(self):
		self.run_test("궤", "{{ko-ipa}}", "gwe", "rrr")
	def test_gwe_mr(self):
		self.run_test("궤", "{{ko-ipa}}", "kwe", "mr")
	def test_gwe_yr(self):
		self.run_test("궤", "{{ko-ipa}}", "kwey", "yr")
	def test_gwe_ipa(self):
		self.run_test("궤", "{{ko-ipa}}", "[kwe̞]", "ipa")


	def test_nya_ph(self):
		self.run_test("-냐", "{{ko-ipa}}", "냐", "ph")
	def test_nya_rr(self):
		self.run_test("-냐", "{{ko-ipa}}", "nya", "rr")
	def test_nya_rrr(self):
		self.run_test("-냐", "{{ko-ipa}}", "nya", "rrr")
	def test_nya_mr(self):
		self.run_test("-냐", "{{ko-ipa}}", "nya", "mr")
	def test_nya_yr(self):
		self.run_test("-냐", "{{ko-ipa}}", "nya", "yr")
	def test_nya_ipa(self):
		self.run_test("-냐", "{{ko-ipa}}", "[ɲa̠]", "ipa")


	def test_nye_ph(self):
		self.run_test("녜", "{{ko-ipa}}", "녜/네", "ph")
	def test_nye_rr(self):
		self.run_test("녜", "{{ko-ipa}}", "nye", "rr")
	def test_nye_rrr(self):
		self.run_test("녜", "{{ko-ipa}}", "nye", "rrr")
	def test_nye_mr(self):
		self.run_test("녜", "{{ko-ipa}}", "nye", "mr")
	def test_nye_yr(self):
		self.run_test("녜", "{{ko-ipa}}", "nyey", "yr")
	def test_nye_ipa(self):
		self.run_test("녜", "{{ko-ipa}}", "[ɲe̞] ~ [ne̞]", "ipa")


	def test_noe_ph(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "눼(ː)/뇌(ː)", "ph")
	def test_noe_rr(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "noe", "rr")
	def test_noe_rrr(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "noe", "rrr")
	def test_noe_mr(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "noe", "mr")
	def test_noe_yr(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "nōy", "yr")
	def test_noe_ipa(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "[nwe̞(ː)] ~ [nø̞(ː)]", "ipa")
	def test_noe_ph_1(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "눼(ː)/뇌(ː)", "ph")
	def test_noe_rr_1(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "noe", "rr")
	def test_noe_rrr_1(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "noe", "rrr")
	def test_noe_mr_1(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "noe", "mr")
	def test_noe_yr_1(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "nōy", "yr")
	def test_noe_ipa_1(self):
		self.run_test("뇌", "{{ko-IPA|l=y}}", "[nwe̞(ː)] ~ [nø̞(ː)]", "ipa")


	def test_nu_ph(self):
		self.run_test("누", "{{ko-ipa}}", "누", "ph")
	def test_nu_rr(self):
		self.run_test("누", "{{ko-ipa}}", "nu", "rr")
	def test_nu_rrr(self):
		self.run_test("누", "{{ko-ipa}}", "nu", "rrr")
	def test_nu_mr(self):
		self.run_test("누", "{{ko-ipa}}", "nu", "mr")
	def test_nu_yr(self):
		self.run_test("누", "{{ko-ipa}}", "nwu", "yr")
	def test_nu_ipa(self):
		self.run_test("누", "{{ko-ipa}}", "[nu]", "ipa")

	def test_nwo_ph(self):
		self.run_test("눠", "{{ko-IPA|l=y}}", "눠(ː)", "ph")
	def test_nwo_rr(self):
		self.run_test("눠", "{{ko-IPA|l=y}}", "nwo", "rr")
	def test_nwo_rrr(self):
		self.run_test("눠", "{{ko-IPA|l=y}}", "nwo", "rrr")
	def test_nwo_mr(self):
		self.run_test("눠", "{{ko-IPA|l=y}}", "nwŏ", "mr")
	def test_nwo_yr(self):
		self.run_test("눠", "{{ko-IPA|l=y}}", "nwē", "yr")
	def test_nwo_ipa(self):
		self.run_test("눠", "{{ko-IPA|l=y}}", "[nwɘ(ː)]", "ipa")

	def test_nwe_ph(self):
		self.run_test("눼", "{{ko-IPA}}", "눼", "ph")
	def test_nwe_rr(self):
		self.run_test("눼", "{{ko-IPA}}", "nwe", "rr")
	def test_nwe_rrr(self):
		self.run_test("눼", "{{ko-IPA}}", "nwe", "rrr")
	def test_nwe_mr(self):
		self.run_test("눼", "{{ko-IPA}}", "nwe", "mr")
	def test_nwe_yr(self):
		self.run_test("눼", "{{ko-IPA}}", "nwey", "yr")
	def test_nwe_ipa(self):
		self.run_test("눼", "{{ko-IPA}}", "[nwe̞]", "ipa")

	def test_nwi_ph(self):
		self.run_test("뉘", "{{ko-IPA}}", "뉘", "ph")
	def test_nwi_rr(self):
		self.run_test("뉘", "{{ko-IPA}}", "nwi", "rr")
	def test_nwi_rrr(self):
		self.run_test("뉘", "{{ko-IPA}}", "nwi", "rrr")
	def test_nwi_mr(self):
		self.run_test("뉘", "{{ko-IPA}}", "nwi", "mr")
	def test_nwi_yr(self):
		self.run_test("뉘", "{{ko-IPA}}", "nwi", "yr")
	def test_nwi_ipa(self):
		self.run_test("뉘", "{{ko-IPA}}", "[nɥi] ~ [ny]", "ipa")
	def test_nwi_ph_1(self):
		self.run_test("뉘", "{{ko-IPA}}", "뉘", "ph")
	def test_nwi_rr_1(self):
		self.run_test("뉘", "{{ko-IPA}}", "nwi", "rr")
	def test_nwi_rrr_1(self):
		self.run_test("뉘", "{{ko-IPA}}", "nwi", "rrr")
	def test_nwi_mr_1(self):
		self.run_test("뉘", "{{ko-IPA}}", "nwi", "mr")
	def test_nwi_yr_1(self):
		self.run_test("뉘", "{{ko-IPA}}", "nwi", "yr")
	def test_nwi_ipa_1(self):
		self.run_test("뉘", "{{ko-IPA}}", "[nɥi] ~ [ny]", "ipa")
	def test_nwi_ph_2(self):
		self.run_test("뉘", "{{ko-IPA|l=y}}", "뉘(ː)", "ph")
	def test_nwi_rr_2(self):
		self.run_test("뉘", "{{ko-IPA|l=y}}", "nwi", "rr")
	def test_nwi_rrr_2(self):
		self.run_test("뉘", "{{ko-IPA|l=y}}", "nwi", "rrr")
	def test_nwi_mr_2(self):
		self.run_test("뉘", "{{ko-IPA|l=y}}", "nwi", "mr")
	def test_nwi_yr_2(self):
		self.run_test("뉘", "{{ko-IPA|l=y}}", "nwī", "yr")
	def test_nwi_ipa_2(self):
		self.run_test("뉘", "{{ko-IPA|l=y}}", "[nɥi(ː)] ~ [ny(ː)]", "ipa")

	def test_nyu_ph(self):
		self.run_test("뉴", "{{ko-IPA}}", "뉴", "ph")
	def test_nyu_rr(self):
		self.run_test("뉴", "{{ko-IPA}}", "nyu", "rr")
	def test_nyu_rrr(self):
		self.run_test("뉴", "{{ko-IPA}}", "nyu", "rrr")
	def test_nyu_mr(self):
		self.run_test("뉴", "{{ko-IPA}}", "nyu", "mr")
	def test_nyu_yr(self):
		self.run_test("뉴", "{{ko-IPA}}", "nyu", "yr")
	def test_nyu_ipa(self):
		self.run_test("뉴", "{{ko-IPA}}", "[ɲu]", "ipa")



	def test_ni_ph(self):
		self.run_test("니", "{{ko-IPA}}", "니", "ph")
	def test_ni_rr(self):
		self.run_test("니", "{{ko-IPA}}", "ni", "rr")
	def test_ni_rrr(self):
		self.run_test("니", "{{ko-IPA}}", "ni", "rrr")
	def test_ni_mr(self):
		self.run_test("니", "{{ko-IPA}}", "ni", "mr")
	def test_ni_yr(self):
		self.run_test("니", "{{ko-IPA}}", "ni", "yr")
	def test_ni_ipa(self):
		self.run_test("니", "{{ko-IPA}}", "[ni]", "ipa")

	def test_de_ph(self):
		self.run_test("데", "{{ko-IPA|a=y}}", "데", "ph")
	def test_de_rr(self):
		self.run_test("데", "{{ko-IPA|a=y}}", "de", "rr")
	def test_de_rrr(self):
		self.run_test("데", "{{ko-IPA|a=y}}", "de", "rrr")
	def test_de_mr(self):
		self.run_test("데", "{{ko-IPA|a=y}}", "te", "mr")
	def test_de_yr(self):
		self.run_test("데", "{{ko-IPA|a=y}}", "tey", "yr")
	def test_de_ipa(self):
		self.run_test("데", "{{ko-IPA|a=y}}", "[te̞]", "ipa")

	def test_dok_ph(self):
		self.run_test("독", "{{ko-IPA}}", "독", "ph")
	def test_dok_rr(self):
		self.run_test("독", "{{ko-IPA}}", "dok", "rr")
	def test_dok_rrr(self):
		self.run_test("독", "{{ko-IPA}}", "dog", "rrr")
	def test_dok_mr(self):
		self.run_test("독", "{{ko-IPA}}", "tok", "mr")
	def test_dok_yr(self):
		self.run_test("독", "{{ko-IPA}}", "tok", "yr")
	def test_dok_ipa(self):
		self.run_test("독", "{{ko-IPA}}", "[to̞k̚]", "ipa")
	def test_dok_ph_1(self):
		self.run_test("독", "{{ko-IPA}}", "독", "ph")
	def test_dok_rr_1(self):
		self.run_test("독", "{{ko-IPA}}", "dok", "rr")
	def test_dok_rrr_1(self):
		self.run_test("독", "{{ko-IPA}}", "dog", "rrr")
	def test_dok_mr_1(self):
		self.run_test("독", "{{ko-IPA}}", "tok", "mr")
	def test_dok_yr_1(self):
		self.run_test("독", "{{ko-IPA}}", "tok", "yr")
	def test_dok_ipa_1(self):
		self.run_test("독", "{{ko-IPA}}", "[to̞k̚]", "ipa")
	def test_dok_ph_2(self):
		self.run_test("독", "{{ko-IPA}}", "독", "ph")
	def test_dok_rr_2(self):
		self.run_test("독", "{{ko-IPA}}", "dok", "rr")
	def test_dok_rrr_2(self):
		self.run_test("독", "{{ko-IPA}}", "dog", "rrr")
	def test_dok_mr_2(self):
		self.run_test("독", "{{ko-IPA}}", "tok", "mr")
	def test_dok_yr_2(self):
		self.run_test("독", "{{ko-IPA}}", "tok", "yr")
	def test_dok_ipa_2(self):
		self.run_test("독", "{{ko-IPA}}", "[to̞k̚]", "ipa")
	def test_dok_ph_3(self):
		self.run_test("독", "{{ko-IPA}}", "독", "ph")
	def test_dok_rr_3(self):
		self.run_test("독", "{{ko-IPA}}", "dok", "rr")
	def test_dok_rrr_3(self):
		self.run_test("독", "{{ko-IPA}}", "dog", "rrr")
	def test_dok_mr_3(self):
		self.run_test("독", "{{ko-IPA}}", "tok", "mr")
	def test_dok_yr_3(self):
		self.run_test("독", "{{ko-IPA}}", "tok", "yr")
	def test_dok_ipa_3(self):
		self.run_test("독", "{{ko-IPA}}", "[to̞k̚]", "ipa")

	def test_dwae_ph(self):
		self.run_test("돼", "{{ko-IPA}}", "돼/뒈", "ph")
	def test_dwae_rr(self):
		self.run_test("돼", "{{ko-IPA}}", "dwae", "rr")
	def test_dwae_rrr(self):
		self.run_test("돼", "{{ko-IPA}}", "dwae", "rrr")
	def test_dwae_mr(self):
		self.run_test("돼", "{{ko-IPA}}", "twae", "mr")
	def test_dwae_yr(self):
		self.run_test("돼", "{{ko-IPA}}", "tway", "yr")
	def test_dwae_ipa(self):
		self.run_test("돼", "{{ko-IPA}}", "[twɛ] ~ [twe̞]", "ipa")

	def test_doe_ph(self):
		self.run_test("되", "{{ko-IPA}}", "뒈/되", "ph")
	def test_doe_rr(self):
		self.run_test("되", "{{ko-IPA}}", "doe", "rr")
	def test_doe_rrr(self):
		self.run_test("되", "{{ko-IPA}}", "doe", "rrr")
	def test_doe_mr(self):
		self.run_test("되", "{{ko-IPA}}", "toe", "mr")
	def test_doe_yr(self):
		self.run_test("되", "{{ko-IPA}}", "toy", "yr")
	def test_doe_ipa(self):
		self.run_test("되", "{{ko-IPA}}", "[twe̞] ~ [tø̞]", "ipa")

	def test_noida_ph(self):
		self.run_test("놓이다", "{{ko-IPA}}", "노이다", "ph")
	def test_noida_rr(self):
		self.run_test("놓이다", "{{ko-IPA}}", "noida", "rr")
	def test_noida_rrr(self):
		self.run_test("놓이다", "{{ko-IPA}}", "noh'ida", "rrr")
	def test_noida_mr(self):
		self.run_test("놓이다", "{{ko-IPA}}", "noida", "mr")
	def test_noida_yr(self):
		self.run_test("놓이다", "{{ko-IPA}}", "noh.ita", "yr")
	def test_noida_ipa(self):
		self.run_test("놓이다", "{{ko-IPA}}", "[no̞ida̠]", "ipa")

	def test_nupda_ph(self):
		self.run_test("눕다", "{{ko-IPA|l=y}}", "눕(ː)따", "ph")
	def test_nupda_rr(self):
		self.run_test("눕다", "{{ko-IPA|l=y}}", "nupda", "rr")
	def test_nupda_rrr(self):
		self.run_test("눕다", "{{ko-IPA|l=y}}", "nubda", "rrr")
	def test_nupda_mr(self):
		self.run_test("눕다", "{{ko-IPA|l=y}}", "nupta", "mr")
	def test_nupda_yr(self):
		self.run_test("눕다", "{{ko-IPA|l=y}}", "nwūpta", "yr")
	def test_nupda_ipa(self):
		self.run_test("눕다", "{{ko-IPA|l=y}}", "[ˈnu(ː)p̚t͈a̠]", "ipa")

	def test_neota_ph(self):
		self.run_test("넣다", "{{ko-IPA|l=y|a=y}}", "너(ː)타", "ph")
	def test_neota_rr(self):
		self.run_test("넣다", "{{ko-IPA|l=y|a=y}}", "neota", "rr")
	def test_neota_rrr(self):
		self.run_test("넣다", "{{ko-IPA|l=y|a=y}}", "neohda", "rrr")
	def test_neota_mr(self):
		self.run_test("넣다", "{{ko-IPA|l=y|a=y}}", "nŏt'a", "mr")
	def test_neota_yr(self):
		self.run_test("넣다", "{{ko-IPA|l=y|a=y}}", "nēhta", "yr")
	def test_neota_ipa(self):
		self.run_test("넣다", "{{ko-IPA|l=y|a=y}}", "[ˈnɘ(ː)tʰa̠]", "ipa")

	def test_ttonggumeong_ph(self):
		self.run_test("똥구멍", "{{ko-IPA|com=1}}", "똥꾸멍", "ph")
	def test_ttonggumeong_rr(self):
		self.run_test("똥구멍", "{{ko-IPA|com=1}}", "ttonggumeong", "rr")
	def test_ttonggumeong_rrr(self):
		self.run_test("똥구멍", "{{ko-IPA|com=1}}", "ttonggumeong", "rrr")
	def test_ttonggumeong_mr(self):
		self.run_test("똥구멍", "{{ko-IPA|com=1}}", "ttongkumŏng", "mr")
	def test_ttonggumeong_yr(self):
		self.run_test("똥구멍", "{{ko-IPA|com=1}}", "ttongqkwumeng", "yr")
	def test_ttonggumeong_ipa(self):
		self.run_test("똥구멍", "{{ko-IPA|com=1}}", "[t͈o̞ŋk͈umʌ̹ŋ]", "ipa")

	def test_hangmun_ph(self):
		self.run_test("항문", "{{ko-ipa}}", "항문", "ph")
	def test_hangmun_rr(self):
		self.run_test("항문", "{{ko-ipa}}", "hangmun", "rr")
	def test_hangmun_rrr(self):
		self.run_test("항문", "{{ko-ipa}}", "hangmun", "rrr")
	def test_hangmun_mr(self):
		self.run_test("항문", "{{ko-ipa}}", "hangmun", "mr")
	def test_hangmun_yr(self):
		self.run_test("항문", "{{ko-ipa}}", "hangmun", "yr")
	def test_hangmun_ipa(self):
		self.run_test("항문", "{{ko-ipa}}", "[ha̠ŋmun]", "ipa")

	def test_ttong_ph(self):
		self.run_test("똥", "{{ko-IPA|a=똥.wav}}", "똥", "ph")
	def test_ttong_rr(self):
		self.run_test("똥", "{{ko-IPA|a=똥.wav}}", "ttong", "rr")
	def test_ttong_rrr(self):
		self.run_test("똥", "{{ko-IPA|a=똥.wav}}", "ttong", "rrr")
	def test_ttong_mr(self):
		self.run_test("똥", "{{ko-IPA|a=똥.wav}}", "ttong", "mr")
	def test_ttong_yr(self):
		self.run_test("똥", "{{ko-IPA|a=똥.wav}}", "ttong", "yr")
	def test_ttong_ipa(self):
		self.run_test("똥", "{{ko-IPA|a=똥.wav}}", "[t͈o̞ŋ]", "ipa")

	def test_bap_ph(self):
		self.run_test("밥", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-밥.wav}}", "밥", "ph")
	def test_bap_rr(self):
		self.run_test("밥", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-밥.wav}}", "bap", "rr")
	def test_bap_rrr(self):
		self.run_test("밥", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-밥.wav}}", "bab", "rrr")
	def test_bap_mr(self):
		self.run_test("밥", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-밥.wav}}", "pap", "mr")
	def test_bap_yr(self):
		self.run_test("밥", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-밥.wav}}", "pap", "yr")
	def test_bap_ipa(self):
		self.run_test("밥", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-밥.wav}}", "[pa̠p̚]", "ipa")


	def test_dambomul_ph(self):
		self.run_test("담보물", "{{ko-IPA}}", "담보물", "ph")
	def test_dambomul_rr(self):
		self.run_test("담보물", "{{ko-IPA}}", "dambomul", "rr")
	def test_dambomul_rrr(self):
		self.run_test("담보물", "{{ko-IPA}}", "dambomul", "rrr")
	def test_dambomul_mr(self):
		self.run_test("담보물", "{{ko-IPA}}", "tambomul", "mr")
	def test_dambomul_yr(self):
		self.run_test("담보물", "{{ko-IPA}}", "tampomul", "yr")
	def test_dambomul_ipa(self):
		self.run_test("담보물", "{{ko-IPA}}", "[ta̠mbo̞muɭ]", "ipa")

	def test_ichajeok_ph(self):
		self.run_test("2차적", "{{ko-IPA|이차적|l=y}}", "이(ː)차적", "ph")
	def test_ichajeok_rr(self):
		self.run_test("2차적", "{{ko-IPA|이차적|l=y}}", "ichajeok", "rr")
	def test_ichajeok_rrr(self):
		self.run_test("2차적", "{{ko-IPA|이차적|l=y}}", "ichajeog", "rrr")
	def test_ichajeok_mr(self):
		self.run_test("2차적", "{{ko-IPA|이차적|l=y}}", "ich'ajŏk", "mr")
	def test_ichajeok_yr(self):
		self.run_test("2차적", "{{ko-IPA|이차적|l=y}}", "ī.chacek", "yr")
	def test_ichajeok_ipa(self):
		self.run_test("2차적", "{{ko-IPA|이차적|l=y}}", "[ˈi(ː)t͡ɕʰa̠d͡ʑʌ̹k̚]", "ipa")

	def test_bakhaeja_ph(self):
		self.run_test("박해자", "{{ko-IPA}}", "바캐자/바케자", "ph")
	def test_bakhaeja_rr(self):
		self.run_test("박해자", "{{ko-IPA}}", "bakhaeja", "rr")
	def test_bakhaeja_rrr(self):
		self.run_test("박해자", "{{ko-IPA}}", "baghaeja", "rrr")
	def test_bakhaeja_mr(self):
		self.run_test("박해자", "{{ko-IPA}}", "pakhaeja", "mr")
	def test_bakhaeja_yr(self):
		self.run_test("박해자", "{{ko-IPA}}", "pak.hayca", "yr")
	def test_bakhaeja_ipa(self):
		self.run_test("박해자", "{{ko-IPA}}", "[pa̠kʰɛd͡ʑa̠] ~ [pa̠kʰe̞d͡ʑa̠]", "ipa")

	def test_mama_ph(self):
		self.run_test("마마", "{{ko-IPA|l=y}}", "마(ː)마", "ph")
	def test_mama_rr(self):
		self.run_test("마마", "{{ko-IPA|l=y}}", "mama", "rr")
	def test_mama_rrr(self):
		self.run_test("마마", "{{ko-IPA|l=y}}", "mama", "rrr")
	def test_mama_mr(self):
		self.run_test("마마", "{{ko-IPA|l=y}}", "mama", "mr")
	def test_mama_yr(self):
		self.run_test("마마", "{{ko-IPA|l=y}}", "māma", "yr")
	def test_mama_ipa(self):
		self.run_test("마마", "{{ko-IPA|l=y}}", "[ˈma̠(ː)ma̠]", "ipa")


	def test_byeonhwa_ph(self):
		self.run_test("변화", "{{ko-IPA|l=y|a=y}}", "변(ː)화", "ph")
	def test_byeonhwa_rr(self):
		self.run_test("변화", "{{ko-IPA|l=y|a=y}}", "byeonhwa", "rr")
	def test_byeonhwa_rrr(self):
		self.run_test("변화", "{{ko-IPA|l=y|a=y}}", "byeonhwa", "rrr")
	def test_byeonhwa_mr(self):
		self.run_test("변화", "{{ko-IPA|l=y|a=y}}", "pyŏnhwa", "mr")
	def test_byeonhwa_yr(self):
		self.run_test("변화", "{{ko-IPA|l=y|a=y}}", "pyēn.hwa", "yr")
	def test_byeonhwa_ipa(self):
		self.run_test("변화", "{{ko-IPA|l=y|a=y}}", "[ˈpjɘ(ː)nβwa̠]", "ipa")

	def test_alda_ph(self):
		self.run_test("알다", "{{ko-IPA|l=y|a=y}}", "알(ː)다", "ph")
	def test_alda_rr(self):
		self.run_test("알다", "{{ko-IPA|l=y|a=y}}", "alda", "rr")
	def test_alda_rrr(self):
		self.run_test("알다", "{{ko-IPA|l=y|a=y}}", "alda", "rrr")
	def test_alda_mr(self):
		self.run_test("알다", "{{ko-IPA|l=y|a=y}}", "alda", "mr")
	def test_alda_yr(self):
		self.run_test("알다", "{{ko-IPA|l=y|a=y}}", "ālta", "yr")
	def test_alda_ipa(self):
		self.run_test("알다", "{{ko-IPA|l=y|a=y}}", "[ˈa̠(ː)ɭda̠]", "ipa")

	def test_dolda_ph(self):
		self.run_test("돌다", "{{ko-IPA|l=y}}", "돌(ː)다", "ph")
	def test_dolda_rr(self):
		self.run_test("돌다", "{{ko-IPA|l=y}}", "dolda", "rr")
	def test_dolda_rrr(self):
		self.run_test("돌다", "{{ko-IPA|l=y}}", "dolda", "rrr")
	def test_dolda_mr(self):
		self.run_test("돌다", "{{ko-IPA|l=y}}", "tolda", "mr")
	def test_dolda_yr(self):
		self.run_test("돌다", "{{ko-IPA|l=y}}", "tōlta", "yr")
	def test_dolda_ipa(self):
		self.run_test("돌다", "{{ko-IPA|l=y}}", "[ˈto̞(ː)ɭda̠]", "ipa")

	def test_jinaeda_ph(self):
		self.run_test("지내다", "{{ko-IPA|l=y}}", "지(ː)내다/지(ː)네다", "ph")
	def test_jinaeda_rr(self):
		self.run_test("지내다", "{{ko-IPA|l=y}}", "jinaeda", "rr")
	def test_jinaeda_rrr(self):
		self.run_test("지내다", "{{ko-IPA|l=y}}", "jinaeda", "rrr")
	def test_jinaeda_mr(self):
		self.run_test("지내다", "{{ko-IPA|l=y}}", "chinaeda", "mr")
	def test_jinaeda_yr(self):
		self.run_test("지내다", "{{ko-IPA|l=y}}", "cīnayta", "yr")
	def test_jinaeda_ipa(self):
		self.run_test("지내다", "{{ko-IPA|l=y}}", "[ˈt͡ɕi(ː)nɛda̠] ~ [ˈt͡ɕi(ː)ne̞da̠]", "ipa")

	def test_tureu_ph(self):
		self.run_test("투르", "{{ko-IPA}}", "투르", "ph")
	def test_tureu_rr(self):
		self.run_test("투르", "{{ko-IPA}}", "tureu", "rr")
	def test_tureu_rrr(self):
		self.run_test("투르", "{{ko-IPA}}", "tuleu", "rrr")
	def test_tureu_mr(self):
		self.run_test("투르", "{{ko-IPA}}", "t'urŭ", "mr")
	def test_tureu_yr(self):
		self.run_test("투르", "{{ko-IPA}}", "thwulu", "yr")
	def test_tureu_ipa(self):
		self.run_test("투르", "{{ko-IPA}}", "[tʰuɾɯ]", "ipa")

	def test_satwiroseu_ph(self):
		self.run_test("사튀로스", "{{ko-IPA}}", "사튀로스", "ph")
	def test_satwiroseu_rr(self):
		self.run_test("사튀로스", "{{ko-IPA}}", "satwiroseu", "rr")
	def test_satwiroseu_rrr(self):
		self.run_test("사튀로스", "{{ko-IPA}}", "satwiloseu", "rrr")
	def test_satwiroseu_mr(self):
		self.run_test("사튀로스", "{{ko-IPA}}", "sat'wirosŭ", "mr")
	def test_satwiroseu_yr(self):
		self.run_test("사튀로스", "{{ko-IPA}}", "sa.thwilosu", "yr")
	def test_satwiroseu_ipa(self):
		self.run_test("사튀로스", "{{ko-IPA}}", "[sʰa̠tʰɥiɾo̞sʰɯ] ~ [sʰa̠tʰyɾo̞sʰɯ]", "ipa")


	def test_Dolgwol_ph(self):
		self.run_test("돌궐", "{{ko-IPA|cap=y}}", "돌궐", "ph")
	def test_Dolgwol_rr(self):
		self.run_test("돌궐", "{{ko-IPA|cap=y}}", "Dolgwol", "rr")
	def test_Dolgwol_rrr(self):
		self.run_test("돌궐", "{{ko-IPA|cap=y}}", "Dolgwol", "rrr")
	def test_Dolgwol_mr(self):
		self.run_test("돌궐", "{{ko-IPA|cap=y}}", "Tolgwŏl", "mr")
	def test_Dolgwol_yr(self):
		self.run_test("돌궐", "{{ko-IPA|cap=y}}", "tol.kwel", "yr")
	def test_Dolgwol_ipa(self):
		self.run_test("돌궐", "{{ko-IPA|cap=y}}", "[to̞ɭɡwʌ̹ɭ]", "ipa")




	def test_bisae_ph(self):
		self.run_test("비새", "{{ko-IPA}}", "비새/비세", "ph")
	def test_bisae_rr(self):
		self.run_test("비새", "{{ko-IPA}}", "bisae", "rr")
	def test_bisae_rrr(self):
		self.run_test("비새", "{{ko-IPA}}", "bisae", "rrr")
	def test_bisae_mr(self):
		self.run_test("비새", "{{ko-IPA}}", "pisae", "mr")
	def test_bisae_yr(self):
		self.run_test("비새", "{{ko-IPA}}", "pisay", "yr")
	def test_bisae_ipa(self):
		self.run_test("비새", "{{ko-IPA}}", "[pisʰɛ] ~ [pisʰe̞]", "ipa")

	def test_oom_ph(self):
		self.run_test("오옴", "{{ko-IPA}}", "오옴", "ph")
	def test_oom_rr(self):
		self.run_test("오옴", "{{ko-IPA}}", "oom", "rr")
	def test_oom_rrr(self):
		self.run_test("오옴", "{{ko-IPA}}", "oom", "rrr")
	def test_oom_mr(self):
		self.run_test("오옴", "{{ko-IPA}}", "oom", "mr")
	def test_oom_yr(self):
		self.run_test("오옴", "{{ko-IPA}}", "oom", "yr")
	def test_oom_ipa(self):
		self.run_test("오옴", "{{ko-IPA}}", "[o̞o̞m]", "ipa")

	def test_omssal_ph(self):
		self.run_test("옴쌀", "{{ko-ipa}}", "옴쌀", "ph")
	def test_omssal_rr(self):
		self.run_test("옴쌀", "{{ko-ipa}}", "omssal", "rr")
	def test_omssal_rrr(self):
		self.run_test("옴쌀", "{{ko-ipa}}", "omssal", "rrr")
	def test_omssal_mr(self):
		self.run_test("옴쌀", "{{ko-ipa}}", "omssal", "mr")
	def test_omssal_yr(self):
		self.run_test("옴쌀", "{{ko-ipa}}", "omssal", "yr")
	def test_omssal_ipa(self):
		self.run_test("옴쌀", "{{ko-ipa}}", "[o̞ms͈a̠ɭ]", "ipa")

	def test_ssal_ph(self):
		self.run_test("쌀", "{{ko-ipa}}", "쌀", "ph")
	def test_ssal_rr(self):
		self.run_test("쌀", "{{ko-ipa}}", "ssal", "rr")
	def test_ssal_rrr(self):
		self.run_test("쌀", "{{ko-ipa}}", "ssal", "rrr")
	def test_ssal_mr(self):
		self.run_test("쌀", "{{ko-ipa}}", "ssal", "mr")
	def test_ssal_yr(self):
		self.run_test("쌀", "{{ko-ipa}}", "ssal", "yr")
	def test_ssal_ipa(self):
		self.run_test("쌀", "{{ko-ipa}}", "[s͈a̠ɭ]", "ipa")

	def test_bori_ph(self):
		self.run_test("보리", "{{ko-IPA}}", "보리", "ph")
	def test_bori_rr(self):
		self.run_test("보리", "{{ko-IPA}}", "bori", "rr")
	def test_bori_rrr(self):
		self.run_test("보리", "{{ko-IPA}}", "boli", "rrr")
	def test_bori_mr(self):
		self.run_test("보리", "{{ko-IPA}}", "pori", "mr")
	def test_bori_yr(self):
		self.run_test("보리", "{{ko-IPA}}", "poli", "yr")
	def test_bori_ipa(self):
		self.run_test("보리", "{{ko-IPA}}", "[po̞ɾi]", "ipa")
	def test_bori_ph_1(self):
		self.run_test("보리", "{{ko-IPA}}", "보리", "ph")
	def test_bori_rr_1(self):
		self.run_test("보리", "{{ko-IPA}}", "bori", "rr")
	def test_bori_rrr_1(self):
		self.run_test("보리", "{{ko-IPA}}", "boli", "rrr")
	def test_bori_mr_1(self):
		self.run_test("보리", "{{ko-IPA}}", "pori", "mr")
	def test_bori_yr_1(self):
		self.run_test("보리", "{{ko-IPA}}", "poli", "yr")
	def test_bori_ipa_1(self):
		self.run_test("보리", "{{ko-IPA}}", "[po̞ɾi]", "ipa")

	def test_tteok_ph(self):
		self.run_test("떡", "{{ko-IPA}}", "떡", "ph")
	def test_tteok_rr(self):
		self.run_test("떡", "{{ko-IPA}}", "tteok", "rr")
	def test_tteok_rrr(self):
		self.run_test("떡", "{{ko-IPA}}", "tteog", "rrr")
	def test_tteok_mr(self):
		self.run_test("떡", "{{ko-IPA}}", "ttŏk", "mr")
	def test_tteok_yr(self):
		self.run_test("떡", "{{ko-IPA}}", "ttek", "yr")
	def test_tteok_ipa(self):
		self.run_test("떡", "{{ko-IPA}}", "[t͈ʌ̹k̚]", "ipa")
	def test_tteok_ph_1(self):
		self.run_test("떡", "{{ko-IPA}}", "떡", "ph")
	def test_tteok_rr_1(self):
		self.run_test("떡", "{{ko-IPA}}", "tteok", "rr")
	def test_tteok_rrr_1(self):
		self.run_test("떡", "{{ko-IPA}}", "tteog", "rrr")
	def test_tteok_mr_1(self):
		self.run_test("떡", "{{ko-IPA}}", "ttŏk", "mr")
	def test_tteok_yr_1(self):
		self.run_test("떡", "{{ko-IPA}}", "ttek", "yr")
	def test_tteok_ipa_1(self):
		self.run_test("떡", "{{ko-IPA}}", "[t͈ʌ̹k̚]", "ipa")

	def test_byeo_ph(self):
		self.run_test("벼", "{{ko-IPA}}", "벼", "ph")
	def test_byeo_rr(self):
		self.run_test("벼", "{{ko-IPA}}", "byeo", "rr")
	def test_byeo_rrr(self):
		self.run_test("벼", "{{ko-IPA}}", "byeo", "rrr")
	def test_byeo_mr(self):
		self.run_test("벼", "{{ko-IPA}}", "pyŏ", "mr")
	def test_byeo_yr(self):
		self.run_test("벼", "{{ko-IPA}}", "pye", "yr")
	def test_byeo_ipa(self):
		self.run_test("벼", "{{ko-IPA}}", "[pjʌ̹]", "ipa")

	def test_tat_ph(self):
		self.run_test("탓", "{{ko-IPA}}", "탇", "ph")
	def test_tat_rr(self):
		self.run_test("탓", "{{ko-IPA}}", "tat", "rr")
	def test_tat_rrr(self):
		self.run_test("탓", "{{ko-IPA}}", "tas", "rrr")
	def test_tat_mr(self):
		self.run_test("탓", "{{ko-IPA}}", "t'at", "mr")
	def test_tat_yr(self):
		self.run_test("탓", "{{ko-IPA}}", "thas", "yr")
	def test_tat_ipa(self):
		self.run_test("탓", "{{ko-IPA}}", "[tʰa̠t̚]", "ipa")

	def test_ot_ph(self):
		self.run_test("옷", "{{ko-IPA}}", "옫", "ph")
	def test_ot_rr(self):
		self.run_test("옷", "{{ko-IPA}}", "ot", "rr")
	def test_ot_rrr(self):
		self.run_test("옷", "{{ko-IPA}}", "os", "rrr")
	def test_ot_mr(self):
		self.run_test("옷", "{{ko-IPA}}", "ot", "mr")
	def test_ot_yr(self):
		self.run_test("옷", "{{ko-IPA}}", "os", "yr")
	def test_ot_ipa(self):
		self.run_test("옷", "{{ko-IPA}}", "[o̞t̚]", "ipa")

	def test_ipda_ph(self):
		self.run_test("입다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-입다.wav}}", "입따", "ph")
	def test_ipda_rr(self):
		self.run_test("입다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-입다.wav}}", "ipda", "rr")
	def test_ipda_rrr(self):
		self.run_test("입다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-입다.wav}}", "ibda", "rrr")
	def test_ipda_mr(self):
		self.run_test("입다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-입다.wav}}", "ipta", "mr")
	def test_ipda_yr(self):
		self.run_test("입다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-입다.wav}}", "ipta", "yr")
	def test_ipda_ipa(self):
		self.run_test("입다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-입다.wav}}", "[ip̚t͈a̠]", "ipa")

	def test_iulda_ph(self):
		self.run_test("이울다", "{{ko-IPA}}", "이울다", "ph")
	def test_iulda_rr(self):
		self.run_test("이울다", "{{ko-IPA}}", "iulda", "rr")
	def test_iulda_rrr(self):
		self.run_test("이울다", "{{ko-IPA}}", "iulda", "rrr")
	def test_iulda_mr(self):
		self.run_test("이울다", "{{ko-IPA}}", "iulda", "mr")
	def test_iulda_yr(self):
		self.run_test("이울다", "{{ko-IPA}}", "iwulta", "yr")
	def test_iulda_ipa(self):
		self.run_test("이울다", "{{ko-IPA}}", "[iuɭda̠]", "ipa")

	def test_sideulda_ph(self):
		self.run_test("시들다", "{{ko-IPA}}", "시들다", "ph")
	def test_sideulda_rr(self):
		self.run_test("시들다", "{{ko-IPA}}", "sideulda", "rr")
	def test_sideulda_rrr(self):
		self.run_test("시들다", "{{ko-IPA}}", "sideulda", "rrr")
	def test_sideulda_mr(self):
		self.run_test("시들다", "{{ko-IPA}}", "sidŭlda", "mr")
	def test_sideulda_yr(self):
		self.run_test("시들다", "{{ko-IPA}}", "situlta", "yr")
	def test_sideulda_ipa(self):
		self.run_test("시들다", "{{ko-IPA}}", "[ɕʰidɯɭda̠]", "ipa")

	def test_makda_ph(self):
		self.run_test("맑다", "{{ko-IPA}}", "막따", "ph")
	def test_makda_rr(self):
		self.run_test("맑다", "{{ko-IPA}}", "makda", "rr")
	def test_makda_rrr(self):
		self.run_test("맑다", "{{ko-IPA}}", "malgda", "rrr")
	def test_makda_mr(self):
		self.run_test("맑다", "{{ko-IPA}}", "makta", "mr")
	def test_makda_yr(self):
		self.run_test("맑다", "{{ko-IPA}}", "malkta", "yr")
	def test_makda_ipa(self):
		self.run_test("맑다", "{{ko-IPA}}", "[ma̠k̚t͈a̠]", "ipa")

	def test_heurida_ph(self):
		self.run_test("흐리다", "{{ko-IPA}}", "흐리다", "ph")
	def test_heurida_rr(self):
		self.run_test("흐리다", "{{ko-IPA}}", "heurida", "rr")
	def test_heurida_rrr(self):
		self.run_test("흐리다", "{{ko-IPA}}", "heulida", "rrr")
	def test_heurida_mr(self):
		self.run_test("흐리다", "{{ko-IPA}}", "hŭrida", "mr")
	def test_heurida_yr(self):
		self.run_test("흐리다", "{{ko-IPA}}", "hulita", "yr")
	def test_heurida_ipa(self):
		self.run_test("흐리다", "{{ko-IPA}}", "[xɯɾida̠]", "ipa")

	def test_orae_ph(self):
		self.run_test("오래", "{{ko-IPA}}", "오래/오레", "ph")
	def test_orae_rr(self):
		self.run_test("오래", "{{ko-IPA}}", "orae", "rr")
	def test_orae_rrr(self):
		self.run_test("오래", "{{ko-IPA}}", "olae", "rrr")
	def test_orae_mr(self):
		self.run_test("오래", "{{ko-IPA}}", "orae", "mr")
	def test_orae_yr(self):
		self.run_test("오래", "{{ko-IPA}}", "olay", "yr")
	def test_orae_ipa(self):
		self.run_test("오래", "{{ko-IPA}}", "[o̞ɾɛ] ~ [o̞ɾe̞]", "ipa")

	def test_mamma_ph(self):
		self.run_test("맘마", "{{ko-ipa}}", "맘마", "ph")
	def test_mamma_rr(self):
		self.run_test("맘마", "{{ko-ipa}}", "mamma", "rr")
	def test_mamma_rrr(self):
		self.run_test("맘마", "{{ko-ipa}}", "mamma", "rrr")
	def test_mamma_mr(self):
		self.run_test("맘마", "{{ko-ipa}}", "mamma", "mr")
	def test_mamma_yr(self):
		self.run_test("맘마", "{{ko-ipa}}", "mamma", "yr")
	def test_mamma_ipa(self):
		self.run_test("맘마", "{{ko-ipa}}", "[ma̠mma̠]", "ipa")

	def test_iut_ph(self):
		self.run_test("이웃", "{{ko-IPA}}", "이욷", "ph")
	def test_iut_rr(self):
		self.run_test("이웃", "{{ko-IPA}}", "iut", "rr")
	def test_iut_rrr(self):
		self.run_test("이웃", "{{ko-IPA}}", "ius", "rrr")
	def test_iut_mr(self):
		self.run_test("이웃", "{{ko-IPA}}", "iut", "mr")
	def test_iut_yr(self):
		self.run_test("이웃", "{{ko-IPA}}", "iwus", "yr")
	def test_iut_ipa(self):
		self.run_test("이웃", "{{ko-IPA}}", "[iut̚]", "ipa")

	def test_sillae_ph(self):
		self.run_test("실내", "{{ko-IPA}}", "실래/실레", "ph")
	def test_sillae_rr(self):
		self.run_test("실내", "{{ko-IPA}}", "sillae", "rr")
	def test_sillae_rrr(self):
		self.run_test("실내", "{{ko-IPA}}", "silnae", "rrr")
	def test_sillae_mr(self):
		self.run_test("실내", "{{ko-IPA}}", "sillae", "mr")
	def test_sillae_yr(self):
		self.run_test("실내", "{{ko-IPA}}", "silnay", "yr")
	def test_sillae_ipa(self):
		self.run_test("실내", "{{ko-IPA}}", "[ɕʰiɭɭɛ] ~ [ɕʰiɭɭe̞]", "ipa")

	def test_gyosil_ph(self):
		self.run_test("교실", "{{ko-IPA|l=y}}", "교(ː)실", "ph")
	def test_gyosil_rr(self):
		self.run_test("교실", "{{ko-IPA|l=y}}", "gyosil", "rr")
	def test_gyosil_rrr(self):
		self.run_test("교실", "{{ko-IPA|l=y}}", "gyosil", "rrr")
	def test_gyosil_mr(self):
		self.run_test("교실", "{{ko-IPA|l=y}}", "kyosil", "mr")
	def test_gyosil_yr(self):
		self.run_test("교실", "{{ko-IPA|l=y}}", "kyōsil", "yr")
	def test_gyosil_ipa(self):
		self.run_test("교실", "{{ko-IPA|l=y}}", "[ˈkjo(ː)ɕʰiɭ]", "ipa")

	def test_ajumma_ph(self):
		self.run_test("아줌마", "{{ko-IPA}}", "아줌마", "ph")
	def test_ajumma_rr(self):
		self.run_test("아줌마", "{{ko-IPA}}", "ajumma", "rr")
	def test_ajumma_rrr(self):
		self.run_test("아줌마", "{{ko-IPA}}", "ajumma", "rrr")
	def test_ajumma_mr(self):
		self.run_test("아줌마", "{{ko-IPA}}", "ajumma", "mr")
	def test_ajumma_yr(self):
		self.run_test("아줌마", "{{ko-IPA}}", "acwumma", "yr")
	def test_ajumma_ipa(self):
		self.run_test("아줌마", "{{ko-IPA}}", "[a̠d͡ʑumma̠]", "ipa")

	def test_ajeossi_ph(self):
		self.run_test("아저씨", "{{ko-IPA}}", "아저씨", "ph")
	def test_ajeossi_rr(self):
		self.run_test("아저씨", "{{ko-IPA}}", "ajeossi", "rr")
	def test_ajeossi_rrr(self):
		self.run_test("아저씨", "{{ko-IPA}}", "ajeo'ssi", "rrr")
	def test_ajeossi_mr(self):
		self.run_test("아저씨", "{{ko-IPA}}", "ajŏssi", "mr")
	def test_ajeossi_yr(self):
		self.run_test("아저씨", "{{ko-IPA}}", "ace.ssi", "yr")
	def test_ajeossi_ipa(self):
		self.run_test("아저씨", "{{ko-IPA}}", "[a̠d͡ʑʌ̹ɕ͈i]", "ipa")

	def test_yeoreobun_ph(self):
		self.run_test("여러분", "{{ko-IPA}}", "여러분", "ph")
	def test_yeoreobun_rr(self):
		self.run_test("여러분", "{{ko-IPA}}", "yeoreobun", "rr")
	def test_yeoreobun_rrr(self):
		self.run_test("여러분", "{{ko-IPA}}", "yeoleobun", "rrr")
	def test_yeoreobun_mr(self):
		self.run_test("여러분", "{{ko-IPA}}", "yŏrŏbun", "mr")
	def test_yeoreobun_yr(self):
		self.run_test("여러분", "{{ko-IPA}}", "yelepun", "yr")
	def test_yeoreobun_ipa(self):
		self.run_test("여러분", "{{ko-IPA}}", "[jʌ̹ɾʌ̹bun]", "ipa")

	def test_jeohui_ph(self):
		self.run_test("저희", "{{ko-IPA}}", "저히", "ph")
	def test_jeohui_rr(self):
		self.run_test("저희", "{{ko-IPA}}", "jeohui", "rr")
	def test_jeohui_rrr(self):
		self.run_test("저희", "{{ko-IPA}}", "jeohui", "rrr")
	def test_jeohui_mr(self):
		self.run_test("저희", "{{ko-IPA}}", "chŏhŭi", "mr")
	def test_jeohui_yr(self):
		self.run_test("저희", "{{ko-IPA}}", "cehuy", "yr")
	def test_jeohui_ipa(self):
		self.run_test("저희", "{{ko-IPA}}", "[t͡ɕʌ̹ʝi]", "ipa")

	def test_geomeunttalgi_ph(self):
		self.run_test("검은딸기", "{{ko-IPA}}", "거믄딸기", "ph")
	def test_geomeunttalgi_rr(self):
		self.run_test("검은딸기", "{{ko-IPA}}", "geomeunttalgi", "rr")
	def test_geomeunttalgi_rrr(self):
		self.run_test("검은딸기", "{{ko-IPA}}", "geom'eunttalgi", "rrr")
	def test_geomeunttalgi_mr(self):
		self.run_test("검은딸기", "{{ko-IPA}}", "kŏmŭnttalgi", "mr")
	def test_geomeunttalgi_yr(self):
		self.run_test("검은딸기", "{{ko-IPA}}", "kem.unttal.ki", "yr")
	def test_geomeunttalgi_ipa(self):
		self.run_test("검은딸기", "{{ko-IPA}}", "[kʌ̹mɯnt͈a̠ɭɡi]", "ipa")

	def test_darae_ph(self):
		self.run_test("다래", "{{ko-IPA}}", "다래/다레", "ph")
	def test_darae_rr(self):
		self.run_test("다래", "{{ko-IPA}}", "darae", "rr")
	def test_darae_rrr(self):
		self.run_test("다래", "{{ko-IPA}}", "dalae", "rrr")
	def test_darae_mr(self):
		self.run_test("다래", "{{ko-IPA}}", "tarae", "mr")
	def test_darae_yr(self):
		self.run_test("다래", "{{ko-IPA}}", "talay", "yr")
	def test_darae_ipa(self):
		self.run_test("다래", "{{ko-IPA}}", "[ta̠ɾɛ] ~ [ta̠ɾe̞]", "ipa")













	def test_kiwi_ph(self):
		self.run_test("키위", "{{ko-IPA}}", "키위", "ph")
	def test_kiwi_rr(self):
		self.run_test("키위", "{{ko-IPA}}", "kiwi", "rr")
	def test_kiwi_rrr(self):
		self.run_test("키위", "{{ko-IPA}}", "kiwi", "rrr")
	def test_kiwi_mr(self):
		self.run_test("키위", "{{ko-IPA}}", "k'iwi", "mr")
	def test_kiwi_yr(self):
		self.run_test("키위", "{{ko-IPA}}", "khiwi", "yr")
	def test_kiwi_ipa(self):
		self.run_test("키위", "{{ko-IPA}}", "[cçiɥi] ~ [cçiy]", "ipa")






	def test_gimchi_ph(self):
		self.run_test("김치", "{{ko-IPA}}", "김치", "ph")
	def test_gimchi_rr(self):
		self.run_test("김치", "{{ko-IPA}}", "gimchi", "rr")
	def test_gimchi_rrr(self):
		self.run_test("김치", "{{ko-IPA}}", "gimchi", "rrr")
	def test_gimchi_mr(self):
		self.run_test("김치", "{{ko-IPA}}", "kimch'i", "mr")
	def test_gimchi_yr(self):
		self.run_test("김치", "{{ko-IPA}}", "kimchi", "yr")
	def test_gimchi_ipa(self):
		self.run_test("김치", "{{ko-IPA}}", "[kimt͡ɕʰi]", "ipa")


	def test_baneulgyeore_ph(self):
		self.run_test("바늘겨레", "{{ko-IPA}}", "바늘겨레", "ph")
	def test_baneulgyeore_rr(self):
		self.run_test("바늘겨레", "{{ko-IPA}}", "baneulgyeore", "rr")
	def test_baneulgyeore_rrr(self):
		self.run_test("바늘겨레", "{{ko-IPA}}", "baneulgyeole", "rrr")
	def test_baneulgyeore_mr(self):
		self.run_test("바늘겨레", "{{ko-IPA}}", "panŭlgyŏre", "mr")
	def test_baneulgyeore_yr(self):
		self.run_test("바늘겨레", "{{ko-IPA}}", "panul.kyeley", "yr")
	def test_baneulgyeore_ipa(self):
		self.run_test("바늘겨레", "{{ko-IPA}}", "[pa̠nɯɭɡjʌ̹ɾe̞]", "ipa")

	def test_makdaegi_ph(self):
		self.run_test("막대기", "{{ko-IPA}}", "막때기/막떼기", "ph")
	def test_makdaegi_rr(self):
		self.run_test("막대기", "{{ko-IPA}}", "makdaegi", "rr")
	def test_makdaegi_rrr(self):
		self.run_test("막대기", "{{ko-IPA}}", "magdaegi", "rrr")
	def test_makdaegi_mr(self):
		self.run_test("막대기", "{{ko-IPA}}", "maktaegi", "mr")
	def test_makdaegi_yr(self):
		self.run_test("막대기", "{{ko-IPA}}", "maktayki", "yr")
	def test_makdaegi_ipa(self):
		self.run_test("막대기", "{{ko-IPA}}", "[ma̠k̚t͈ɛɡi] ~ [ma̠k̚t͈e̞ɡi]", "ipa")

	def test_siksa_ph(self):
		self.run_test("식사", "{{ko-IPA}}", "식싸", "ph")
	def test_siksa_rr(self):
		self.run_test("식사", "{{ko-IPA}}", "siksa", "rr")
	def test_siksa_rrr(self):
		self.run_test("식사", "{{ko-IPA}}", "sigsa", "rrr")
	def test_siksa_mr(self):
		self.run_test("식사", "{{ko-IPA}}", "siksa", "mr")
	def test_siksa_yr(self):
		self.run_test("식사", "{{ko-IPA}}", "sik.sa", "yr")
	def test_siksa_ipa(self):
		self.run_test("식사", "{{ko-IPA}}", "[ɕʰiks͈a̠]", "ipa")

	def test_bak_ph(self):
		self.run_test("밖", "{{ko-IPA}}", "박", "ph")
	def test_bak_rr(self):
		self.run_test("밖", "{{ko-IPA}}", "bak", "rr")
	def test_bak_rrr(self):
		self.run_test("밖", "{{ko-IPA}}", "bakk", "rrr")
	def test_bak_mr(self):
		self.run_test("밖", "{{ko-IPA}}", "pak", "mr")
	def test_bak_yr(self):
		self.run_test("밖", "{{ko-IPA}}", "pakk", "yr")
	def test_bak_ipa(self):
		self.run_test("밖", "{{ko-IPA}}", "[pa̠k̚]", "ipa")

	def test_mat_ph(self):
		self.run_test("맛", "{{ko-IPA}}", "맏", "ph")
	def test_mat_rr(self):
		self.run_test("맛", "{{ko-IPA}}", "mat", "rr")
	def test_mat_rrr(self):
		self.run_test("맛", "{{ko-IPA}}", "mas", "rrr")
	def test_mat_mr(self):
		self.run_test("맛", "{{ko-IPA}}", "mat", "mr")
	def test_mat_yr(self):
		self.run_test("맛", "{{ko-IPA}}", "mas", "yr")
	def test_mat_ipa(self):
		self.run_test("맛", "{{ko-IPA}}", "[ma̠t̚]", "ipa")

	def test_gollan_ph(self):
		self.run_test("곤란", "{{ko-IPA|l=y}}", "골(ː)란", "ph")
	def test_gollan_rr(self):
		self.run_test("곤란", "{{ko-IPA|l=y}}", "gollan", "rr")
	def test_gollan_rrr(self):
		self.run_test("곤란", "{{ko-IPA|l=y}}", "gonlan", "rrr")
	def test_gollan_mr(self):
		self.run_test("곤란", "{{ko-IPA|l=y}}", "kollan", "mr")
	def test_gollan_yr(self):
		self.run_test("곤란", "{{ko-IPA|l=y}}", "kōnlan", "yr")
	def test_gollan_ipa(self):
		self.run_test("곤란", "{{ko-IPA|l=y}}", "[ˈko̞(ː)ɭɭa̠n]", "ipa")

	def test_wollae_ph(self):
		self.run_test("원래", "{{ko-IPA}}", "월래/월레", "ph")
	def test_wollae_rr(self):
		self.run_test("원래", "{{ko-IPA}}", "wollae", "rr")
	def test_wollae_rrr(self):
		self.run_test("원래", "{{ko-IPA}}", "wonlae", "rrr")
	def test_wollae_mr(self):
		self.run_test("원래", "{{ko-IPA}}", "wŏllae", "mr")
	def test_wollae_yr(self):
		self.run_test("원래", "{{ko-IPA}}", "wenlay", "yr")
	def test_wollae_ipa(self):
		self.run_test("원래", "{{ko-IPA}}", "[wʌ̹ɭɭɛ] ~ [wʌ̹ɭɭe̞]", "ipa")
	def test_wollae_ph_1(self):
		self.run_test("원래", "{{ko-IPA|l=y}}", "월(ː)래/월(ː)레", "ph")
	def test_wollae_rr_1(self):
		self.run_test("원래", "{{ko-IPA|l=y}}", "wollae", "rr")
	def test_wollae_rrr_1(self):
		self.run_test("원래", "{{ko-IPA|l=y}}", "wonlae", "rrr")
	def test_wollae_mr_1(self):
		self.run_test("원래", "{{ko-IPA|l=y}}", "wŏllae", "mr")
	def test_wollae_yr_1(self):
		self.run_test("원래", "{{ko-IPA|l=y}}", "wēnlay", "yr")
	def test_wollae_ipa_1(self):
		self.run_test("원래", "{{ko-IPA|l=y}}", "[ˈwɘ(ː)ɭɭɛ] ~ [ˈwɘ(ː)ɭɭe̞]", "ipa")

	def test_geunyeodeul_ph(self):
		self.run_test("그녀들", "{{ko-IPA}}", "그녀들", "ph")
	def test_geunyeodeul_rr(self):
		self.run_test("그녀들", "{{ko-IPA}}", "geunyeodeul", "rr")
	def test_geunyeodeul_rrr(self):
		self.run_test("그녀들", "{{ko-IPA}}", "geunyeodeul", "rrr")
	def test_geunyeodeul_mr(self):
		self.run_test("그녀들", "{{ko-IPA}}", "kŭnyŏdŭl", "mr")
	def test_geunyeodeul_yr(self):
		self.run_test("그녀들", "{{ko-IPA}}", "kunyetul", "yr")
	def test_geunyeodeul_ipa(self):
		self.run_test("그녀들", "{{ko-IPA}}", "[kɯɲʌ̹dɯɭ]", "ipa")

	def test_musinnon_ph(self):
		self.run_test("무신론", "{{ko-IPA|nn=3}}", "무신논", "ph")
	def test_musinnon_rr(self):
		self.run_test("무신론", "{{ko-IPA|nn=3}}", "musinnon", "rr")
	def test_musinnon_rrr(self):
		self.run_test("무신론", "{{ko-IPA|nn=3}}", "musinlon", "rrr")
	def test_musinnon_mr(self):
		self.run_test("무신론", "{{ko-IPA|nn=3}}", "musinnon", "mr")
	def test_musinnon_yr(self):
		self.run_test("무신론", "{{ko-IPA|nn=3}}", "musinlon", "yr")
	def test_musinnon_ipa(self):
		self.run_test("무신론", "{{ko-IPA|nn=3}}", "[muɕʰinno̞n]", "ipa")

	def test_yusinnon_ph(self):
		self.run_test("유신론", "{{ko-IPA|nn=3}}", "유신논", "ph")
	def test_yusinnon_rr(self):
		self.run_test("유신론", "{{ko-IPA|nn=3}}", "yusinnon", "rr")
	def test_yusinnon_rrr(self):
		self.run_test("유신론", "{{ko-IPA|nn=3}}", "yusinlon", "rrr")
	def test_yusinnon_mr(self):
		self.run_test("유신론", "{{ko-IPA|nn=3}}", "yusinnon", "mr")
	def test_yusinnon_yr(self):
		self.run_test("유신론", "{{ko-IPA|nn=3}}", "yusinlon", "yr")
	def test_yusinnon_ipa(self):
		self.run_test("유신론", "{{ko-IPA|nn=3}}", "[juɕʰinno̞n]", "ipa")

	def test_gaeksil_ph(self):
		self.run_test("객실", "{{ko-IPA}}", "객씰/겍씰", "ph")
	def test_gaeksil_rr(self):
		self.run_test("객실", "{{ko-IPA}}", "gaeksil", "rr")
	def test_gaeksil_rrr(self):
		self.run_test("객실", "{{ko-IPA}}", "gaegsil", "rrr")
	def test_gaeksil_mr(self):
		self.run_test("객실", "{{ko-IPA}}", "kaeksil", "mr")
	def test_gaeksil_yr(self):
		self.run_test("객실", "{{ko-IPA}}", "kayk.sil", "yr")
	def test_gaeksil_ipa(self):
		self.run_test("객실", "{{ko-IPA}}", "[kɛkɕ͈iɭ] ~ [ke̞kɕ͈iɭ]", "ipa")

	def test_geosil_ph(self):
		self.run_test("거실", "{{ko-IPA}}", "거실", "ph")
	def test_geosil_rr(self):
		self.run_test("거실", "{{ko-IPA}}", "geosil", "rr")
	def test_geosil_rrr(self):
		self.run_test("거실", "{{ko-IPA}}", "geosil", "rrr")
	def test_geosil_mr(self):
		self.run_test("거실", "{{ko-IPA}}", "kŏsil", "mr")
	def test_geosil_yr(self):
		self.run_test("거실", "{{ko-IPA}}", "kesil", "yr")
	def test_geosil_ipa(self):
		self.run_test("거실", "{{ko-IPA}}", "[kʌ̹ɕʰiɭ]", "ipa")

	def test_byeolsil_ph(self):
		self.run_test("별실", "{{ko-IPA|com=1}}", "별씰", "ph")
	def test_byeolsil_rr(self):
		self.run_test("별실", "{{ko-IPA|com=1}}", "byeolsil", "rr")
	def test_byeolsil_rrr(self):
		self.run_test("별실", "{{ko-IPA|com=1}}", "byeolsil", "rrr")
	def test_byeolsil_mr(self):
		self.run_test("별실", "{{ko-IPA|com=1}}", "pyŏlssil", "mr")
	def test_byeolsil_yr(self):
		self.run_test("별실", "{{ko-IPA|com=1}}", "pyelqsil", "yr")
	def test_byeolsil_ipa(self):
		self.run_test("별실", "{{ko-IPA|com=1}}", "[pjʌ̹ɭɕ͈iɭ]", "ipa")

	def test_chimsil_ph(self):
		self.run_test("침실", "{{ko-IPA|l=y}}", "침(ː)실", "ph")
	def test_chimsil_rr(self):
		self.run_test("침실", "{{ko-IPA|l=y}}", "chimsil", "rr")
	def test_chimsil_rrr(self):
		self.run_test("침실", "{{ko-IPA|l=y}}", "chimsil", "rrr")
	def test_chimsil_mr(self):
		self.run_test("침실", "{{ko-IPA|l=y}}", "ch'imsil", "mr")
	def test_chimsil_yr(self):
		self.run_test("침실", "{{ko-IPA|l=y}}", "chīmsil", "yr")
	def test_chimsil_ipa(self):
		self.run_test("침실", "{{ko-IPA|l=y}}", "[ˈt͡ɕʰi(ː)mɕʰiɭ]", "ipa")

	def test_sillaebok_ph(self):
		self.run_test("실내복", "{{ko-IPA}}", "실래복/실레복", "ph")
	def test_sillaebok_rr(self):
		self.run_test("실내복", "{{ko-IPA}}", "sillaebok", "rr")
	def test_sillaebok_rrr(self):
		self.run_test("실내복", "{{ko-IPA}}", "silnaebog", "rrr")
	def test_sillaebok_mr(self):
		self.run_test("실내복", "{{ko-IPA}}", "sillaebok", "mr")
	def test_sillaebok_yr(self):
		self.run_test("실내복", "{{ko-IPA}}", "silnaypok", "yr")
	def test_sillaebok_ipa(self):
		self.run_test("실내복", "{{ko-IPA}}", "[ɕʰiɭɭɛbo̞k̚] ~ [ɕʰiɭɭe̞bo̞k̚]", "ipa")

	def test_sillaeak_ph(self):
		self.run_test("실내악", "{{ko-IPA}}", "실래악/실레악", "ph")
	def test_sillaeak_rr(self):
		self.run_test("실내악", "{{ko-IPA}}", "sillaeak", "rr")
	def test_sillaeak_rrr(self):
		self.run_test("실내악", "{{ko-IPA}}", "silnaeag", "rrr")
	def test_sillaeak_mr(self):
		self.run_test("실내악", "{{ko-IPA}}", "sillaeak", "mr")
	def test_sillaeak_yr(self):
		self.run_test("실내악", "{{ko-IPA}}", "silnay.ak", "yr")
	def test_sillaeak_ipa(self):
		self.run_test("실내악", "{{ko-IPA}}", "[ɕʰiɭɭɛa̠k̚] ~ [ɕʰiɭɭe̞a̠k̚]", "ipa")


	def test_hangungmal_ph(self):
		self.run_test("한국말", "{{ko-IPA|l=y}}", "한(ː)궁말", "ph")
	def test_hangungmal_rr(self):
		self.run_test("한국말", "{{ko-IPA|l=y}}", "han'gungmal", "rr")
	def test_hangungmal_rrr(self):
		self.run_test("한국말", "{{ko-IPA|l=y}}", "hangugmal", "rrr")
	def test_hangungmal_mr(self):
		self.run_test("한국말", "{{ko-IPA|l=y}}", "han'gungmal", "mr")
	def test_hangungmal_yr(self):
		self.run_test("한국말", "{{ko-IPA|l=y}}", "hānkwukmal", "yr")
	def test_hangungmal_ipa(self):
		self.run_test("한국말", "{{ko-IPA|l=y}}", "[ˈha̠(ː)nɡuŋma̠ɭ]", "ipa")

	def test_amsil_ph(self):
		self.run_test("암실", "{{ko-IPA|l=y}}", "암(ː)실", "ph")
	def test_amsil_rr(self):
		self.run_test("암실", "{{ko-IPA|l=y}}", "amsil", "rr")
	def test_amsil_rrr(self):
		self.run_test("암실", "{{ko-IPA|l=y}}", "amsil", "rrr")
	def test_amsil_mr(self):
		self.run_test("암실", "{{ko-IPA|l=y}}", "amsil", "mr")
	def test_amsil_yr(self):
		self.run_test("암실", "{{ko-IPA|l=y}}", "āmsil", "yr")
	def test_amsil_ipa(self):
		self.run_test("암실", "{{ko-IPA|l=y}}", "[ˈa̠(ː)mɕʰiɭ]", "ipa")

	def test_joseonmal_ph(self):
		self.run_test("조선말", "{{ko-IPA}}", "조선말", "ph")
	def test_joseonmal_rr(self):
		self.run_test("조선말", "{{ko-IPA}}", "joseonmal", "rr")
	def test_joseonmal_rrr(self):
		self.run_test("조선말", "{{ko-IPA}}", "joseonmal", "rrr")
	def test_joseonmal_mr(self):
		self.run_test("조선말", "{{ko-IPA}}", "chosŏnmal", "mr")
	def test_joseonmal_yr(self):
		self.run_test("조선말", "{{ko-IPA}}", "cosenmal", "yr")
	def test_joseonmal_ipa(self):
		self.run_test("조선말", "{{ko-IPA}}", "[t͡ɕo̞sʰʌ̹nma̠ɭ]", "ipa")

	def test_ieung_ph(self):
		self.run_test("이응", "{{ko-IPA}}", "이응", "ph")
	def test_ieung_rr(self):
		self.run_test("이응", "{{ko-IPA}}", "ieung", "rr")
	def test_ieung_rrr(self):
		self.run_test("이응", "{{ko-IPA}}", "ieung", "rrr")
	def test_ieung_mr(self):
		self.run_test("이응", "{{ko-IPA}}", "iŭng", "mr")
	def test_ieung_yr(self):
		self.run_test("이응", "{{ko-IPA}}", "iung", "yr")
	def test_ieung_ipa(self):
		self.run_test("이응", "{{ko-IPA}}", "[iɯŋ]", "ipa")

	def test_isinnon_ph(self):
		self.run_test("이신론", "{{ko-IPA|nn=3}}", "이신논", "ph")
	def test_isinnon_rr(self):
		self.run_test("이신론", "{{ko-IPA|nn=3}}", "isinnon", "rr")
	def test_isinnon_rrr(self):
		self.run_test("이신론", "{{ko-IPA|nn=3}}", "isinlon", "rrr")
	def test_isinnon_mr(self):
		self.run_test("이신론", "{{ko-IPA|nn=3}}", "isinnon", "mr")
	def test_isinnon_yr(self):
		self.run_test("이신론", "{{ko-IPA|nn=3}}", "isinlon", "yr")
	def test_isinnon_ipa(self):
		self.run_test("이신론", "{{ko-IPA|nn=3}}", "[iɕʰinno̞n]", "ipa")

	def test_beomsinnon_ph(self):
		self.run_test("범신론", "{{ko-IPA|l=y|nn=3}}", "범(ː)신논", "ph")
	def test_beomsinnon_rr(self):
		self.run_test("범신론", "{{ko-IPA|l=y|nn=3}}", "beomsinnon", "rr")
	def test_beomsinnon_rrr(self):
		self.run_test("범신론", "{{ko-IPA|l=y|nn=3}}", "beomsinlon", "rrr")
	def test_beomsinnon_mr(self):
		self.run_test("범신론", "{{ko-IPA|l=y|nn=3}}", "pŏmsinnon", "mr")
	def test_beomsinnon_yr(self):
		self.run_test("범신론", "{{ko-IPA|l=y|nn=3}}", "pēmsinlon", "yr")
	def test_beomsinnon_ipa(self):
		self.run_test("범신론", "{{ko-IPA|l=y|nn=3}}", "[ˈpɘ(ː)mɕʰinno̞n]", "ipa")

	def test_moeum_ph(self):
		self.run_test("모음", "{{ko-IPA|l=y}}", "모(ː)음", "ph")
	def test_moeum_rr(self):
		self.run_test("모음", "{{ko-IPA|l=y}}", "mo'eum", "rr")
	def test_moeum_rrr(self):
		self.run_test("모음", "{{ko-IPA|l=y}}", "mo'eum", "rrr")
	def test_moeum_mr(self):
		self.run_test("모음", "{{ko-IPA|l=y}}", "moŭm", "mr")
	def test_moeum_yr(self):
		self.run_test("모음", "{{ko-IPA|l=y}}", "mōum", "yr")
	def test_moeum_ipa(self):
		self.run_test("모음", "{{ko-IPA|l=y}}", "[ˈmo̞(ː)ɯm]", "ipa")
	def test_moeum_ph_1(self):
		self.run_test("모음", "{{ko-IPA}}", "모음", "ph")
	def test_moeum_rr_1(self):
		self.run_test("모음", "{{ko-IPA}}", "mo'eum", "rr")
	def test_moeum_rrr_1(self):
		self.run_test("모음", "{{ko-IPA}}", "mo'eum", "rrr")
	def test_moeum_mr_1(self):
		self.run_test("모음", "{{ko-IPA}}", "moŭm", "mr")
	def test_moeum_yr_1(self):
		self.run_test("모음", "{{ko-IPA}}", "moum", "yr")
	def test_moeum_ipa_1(self):
		self.run_test("모음", "{{ko-IPA}}", "[mo̞ɯm]", "ipa")

	def test_choseong_ph(self):
		self.run_test("초성", "{{ko-IPA}}", "초성", "ph")
	def test_choseong_rr(self):
		self.run_test("초성", "{{ko-IPA}}", "choseong", "rr")
	def test_choseong_rrr(self):
		self.run_test("초성", "{{ko-IPA}}", "choseong", "rrr")
	def test_choseong_mr(self):
		self.run_test("초성", "{{ko-IPA}}", "ch'osŏng", "mr")
	def test_choseong_yr(self):
		self.run_test("초성", "{{ko-IPA}}", "choseng", "yr")
	def test_choseong_ipa(self):
		self.run_test("초성", "{{ko-IPA}}", "[t͡ɕʰo̞sʰʌ̹ŋ]", "ipa")

	def test_jungseong_ph(self):
		self.run_test("중성", "{{ko-IPA}}", "중성", "ph")
	def test_jungseong_rr(self):
		self.run_test("중성", "{{ko-IPA}}", "jungseong", "rr")
	def test_jungseong_rrr(self):
		self.run_test("중성", "{{ko-IPA}}", "jungseong", "rrr")
	def test_jungseong_mr(self):
		self.run_test("중성", "{{ko-IPA}}", "chungsŏng", "mr")
	def test_jungseong_yr(self):
		self.run_test("중성", "{{ko-IPA}}", "cwungseng", "yr")
	def test_jungseong_ipa(self):
		self.run_test("중성", "{{ko-IPA}}", "[t͡ɕuŋsʰʌ̹ŋ]", "ipa")

	def test_jongseong_ph(self):
		self.run_test("종성", "{{ko-IPA}}", "종성", "ph")
	def test_jongseong_rr(self):
		self.run_test("종성", "{{ko-IPA}}", "jongseong", "rr")
	def test_jongseong_rrr(self):
		self.run_test("종성", "{{ko-IPA}}", "jongseong", "rrr")
	def test_jongseong_mr(self):
		self.run_test("종성", "{{ko-IPA}}", "chongsŏng", "mr")
	def test_jongseong_yr(self):
		self.run_test("종성", "{{ko-IPA}}", "congseng", "yr")
	def test_jongseong_ipa(self):
		self.run_test("종성", "{{ko-IPA}}", "[t͡ɕo̞ŋsʰʌ̹ŋ]", "ipa")

	def test_wang_ph(self):
		self.run_test("왕", "{{ko-ipa}}", "왕", "ph")
	def test_wang_rr(self):
		self.run_test("왕", "{{ko-ipa}}", "wang", "rr")
	def test_wang_rrr(self):
		self.run_test("왕", "{{ko-ipa}}", "wang", "rrr")
	def test_wang_mr(self):
		self.run_test("왕", "{{ko-ipa}}", "wang", "mr")
	def test_wang_yr(self):
		self.run_test("왕", "{{ko-ipa}}", "wang", "yr")
	def test_wang_ipa(self):
		self.run_test("왕", "{{ko-ipa}}", "[wa̠ŋ]", "ipa")

	def test_batchim_ph(self):
		self.run_test("받침", "{{ko-IPA}}", "받침", "ph")
	def test_batchim_rr(self):
		self.run_test("받침", "{{ko-IPA}}", "batchim", "rr")
	def test_batchim_rrr(self):
		self.run_test("받침", "{{ko-IPA}}", "badchim", "rrr")
	def test_batchim_mr(self):
		self.run_test("받침", "{{ko-IPA}}", "patch'im", "mr")
	def test_batchim_yr(self):
		self.run_test("받침", "{{ko-IPA}}", "patchim", "yr")
	def test_batchim_ipa(self):
		self.run_test("받침", "{{ko-IPA}}", "[pa̠t̚t͡ɕʰim]", "ipa")

	def test_bulgajiron_ph(self):
		self.run_test("불가지론", "{{ko-IPA}}", "불가지론", "ph")
	def test_bulgajiron_rr(self):
		self.run_test("불가지론", "{{ko-IPA}}", "bulgajiron", "rr")
	def test_bulgajiron_rrr(self):
		self.run_test("불가지론", "{{ko-IPA}}", "bulgajilon", "rrr")
	def test_bulgajiron_mr(self):
		self.run_test("불가지론", "{{ko-IPA}}", "pulgajiron", "mr")
	def test_bulgajiron_yr(self):
		self.run_test("불가지론", "{{ko-IPA}}", "pul.kacilon", "yr")
	def test_bulgajiron_ipa(self):
		self.run_test("불가지론", "{{ko-IPA}}", "[puɭɡa̠d͡ʑiɾo̞n]", "ipa")

	def test_Seoul_ph(self):
		self.run_test("서울", "{{ko-IPA|cap=y|a=Ko-Seoul.ogg}}", "서울", "ph")
	def test_Seoul_rr(self):
		self.run_test("서울", "{{ko-IPA|cap=y|a=Ko-Seoul.ogg}}", "Seoul", "rr")
	def test_Seoul_rrr(self):
		self.run_test("서울", "{{ko-IPA|cap=y|a=Ko-Seoul.ogg}}", "Seoul", "rrr")
	def test_Seoul_mr(self):
		self.run_test("서울", "{{ko-IPA|cap=y|a=Ko-Seoul.ogg}}", "Sŏul", "mr")
	def test_Seoul_yr(self):
		self.run_test("서울", "{{ko-IPA|cap=y|a=Ko-Seoul.ogg}}", "sewul", "yr")
	def test_Seoul_ipa(self):
		self.run_test("서울", "{{ko-IPA|cap=y|a=Ko-Seoul.ogg}}", "[sʰʌ̹uɭ]", "ipa")

	def test_ilsinnon_ph(self):
		self.run_test("일신론", "{{ko-IPA|com=1|nn=3}}", "일씬논", "ph")
	def test_ilsinnon_rr(self):
		self.run_test("일신론", "{{ko-IPA|com=1|nn=3}}", "ilsinnon", "rr")
	def test_ilsinnon_rrr(self):
		self.run_test("일신론", "{{ko-IPA|com=1|nn=3}}", "ilsinlon", "rrr")
	def test_ilsinnon_mr(self):
		self.run_test("일신론", "{{ko-IPA|com=1|nn=3}}", "ilssinnon", "mr")
	def test_ilsinnon_yr(self):
		self.run_test("일신론", "{{ko-IPA|com=1|nn=3}}", "ilqsinlon", "yr")
	def test_ilsinnon_ipa(self):
		self.run_test("일신론", "{{ko-IPA|com=1|nn=3}}", "[iɭɕ͈inno̞n]", "ipa")

	def test_beomisillon_ph(self):
		self.run_test("범이신론", "{{ko-IPA}}", "버미실론", "ph")
	def test_beomisillon_rr(self):
		self.run_test("범이신론", "{{ko-IPA}}", "beomisillon", "rr")
	def test_beomisillon_rrr(self):
		self.run_test("범이신론", "{{ko-IPA}}", "beom'isinlon", "rrr")
	def test_beomisillon_mr(self):
		self.run_test("범이신론", "{{ko-IPA}}", "pŏmisillon", "mr")
	def test_beomisillon_yr(self):
		self.run_test("범이신론", "{{ko-IPA}}", "pem.isinlon", "yr")
	def test_beomisillon_ipa(self):
		self.run_test("범이신론", "{{ko-IPA}}", "[pʌ̹miɕʰiɭɭo̞n]", "ipa")

	def test_beomjaesillon_ph(self):
		self.run_test("범재신론", "{{ko-IPA}}", "범재실론/범제실론", "ph")
	def test_beomjaesillon_rr(self):
		self.run_test("범재신론", "{{ko-IPA}}", "beomjaesillon", "rr")
	def test_beomjaesillon_rrr(self):
		self.run_test("범재신론", "{{ko-IPA}}", "beomjaesinlon", "rrr")
	def test_beomjaesillon_mr(self):
		self.run_test("범재신론", "{{ko-IPA}}", "pŏmjaesillon", "mr")
	def test_beomjaesillon_yr(self):
		self.run_test("범재신론", "{{ko-IPA}}", "pemcaysinlon", "yr")
	def test_beomjaesillon_ipa(self):
		self.run_test("범재신론", "{{ko-IPA}}", "[pʌ̹md͡ʑɛɕʰiɭɭo̞n] ~ [pʌ̹md͡ʑe̞ɕʰiɭɭo̞n]", "ipa")

	def test_dasinnon_ph(self):
		self.run_test("다신론", "{{ko-IPA|nn=3}}", "다신논", "ph")
	def test_dasinnon_rr(self):
		self.run_test("다신론", "{{ko-IPA|nn=3}}", "dasinnon", "rr")
	def test_dasinnon_rrr(self):
		self.run_test("다신론", "{{ko-IPA|nn=3}}", "dasinlon", "rrr")
	def test_dasinnon_mr(self):
		self.run_test("다신론", "{{ko-IPA|nn=3}}", "tasinnon", "mr")
	def test_dasinnon_yr(self):
		self.run_test("다신론", "{{ko-IPA|nn=3}}", "tasinlon", "yr")
	def test_dasinnon_ipa(self):
		self.run_test("다신론", "{{ko-IPA|nn=3}}", "[ta̠ɕʰinno̞n]", "ipa")

	def test_busan_ph(self):
		self.run_test("부산", "{{ko-IPA}}", "부산", "ph")
	def test_busan_rr(self):
		self.run_test("부산", "{{ko-IPA}}", "busan", "rr")
	def test_busan_rrr(self):
		self.run_test("부산", "{{ko-IPA}}", "busan", "rrr")
	def test_busan_mr(self):
		self.run_test("부산", "{{ko-IPA}}", "pusan", "mr")
	def test_busan_yr(self):
		self.run_test("부산", "{{ko-IPA}}", "pusan", "yr")
	def test_busan_ipa(self):
		self.run_test("부산", "{{ko-IPA}}", "[pusʰa̠n]", "ipa")

	def test_Surinam_ph(self):
		self.run_test("수리남", "{{ko-IPA|cap=y}}", "수리남", "ph")
	def test_Surinam_rr(self):
		self.run_test("수리남", "{{ko-IPA|cap=y}}", "Surinam", "rr")
	def test_Surinam_rrr(self):
		self.run_test("수리남", "{{ko-IPA|cap=y}}", "Sulinam", "rrr")
	def test_Surinam_mr(self):
		self.run_test("수리남", "{{ko-IPA|cap=y}}", "Surinam", "mr")
	def test_Surinam_yr(self):
		self.run_test("수리남", "{{ko-IPA|cap=y}}", "swulinam", "yr")
	def test_Surinam_ipa(self):
		self.run_test("수리남", "{{ko-IPA|cap=y}}", "[sʰuɾina̠m]", "ipa")

	def test_Deobeullin_ph(self):
		self.run_test("더블린", "{{ko-IPA|cap=y}}", "더블린", "ph")
	def test_Deobeullin_rr(self):
		self.run_test("더블린", "{{ko-IPA|cap=y}}", "Deobeullin", "rr")
	def test_Deobeullin_rrr(self):
		self.run_test("더블린", "{{ko-IPA|cap=y}}", "Deobeullin", "rrr")
	def test_Deobeullin_mr(self):
		self.run_test("더블린", "{{ko-IPA|cap=y}}", "Tŏbŭllin", "mr")
	def test_Deobeullin_yr(self):
		self.run_test("더블린", "{{ko-IPA|cap=y}}", "tepullin", "yr")
	def test_Deobeullin_ipa(self):
		self.run_test("더블린", "{{ko-IPA|cap=y}}", "[tʌ̹bɯʎʎin]", "ipa")

	def test_Reondeon_ph(self):
		self.run_test("런던", "{{ko-IPA|cap=y}}", "런던", "ph")
	def test_Reondeon_rr(self):
		self.run_test("런던", "{{ko-IPA|cap=y}}", "Reondeon", "rr")
	def test_Reondeon_rrr(self):
		self.run_test("런던", "{{ko-IPA|cap=y}}", "Leondeon", "rrr")
	def test_Reondeon_mr(self):
		self.run_test("런던", "{{ko-IPA|cap=y}}", "Rŏndŏn", "mr")
	def test_Reondeon_yr(self):
		self.run_test("런던", "{{ko-IPA|cap=y}}", "lenten", "yr")
	def test_Reondeon_ipa(self):
		self.run_test("런던", "{{ko-IPA|cap=y}}", "[ɾʌ̹ndʌ̹n]", "ipa")

	def test_samseong_ph(self):
		self.run_test("삼성", "{{ko-IPA}}", "삼성", "ph")
	def test_samseong_rr(self):
		self.run_test("삼성", "{{ko-IPA}}", "samseong", "rr")
	def test_samseong_rrr(self):
		self.run_test("삼성", "{{ko-IPA}}", "samseong", "rrr")
	def test_samseong_mr(self):
		self.run_test("삼성", "{{ko-IPA}}", "samsŏng", "mr")
	def test_samseong_yr(self):
		self.run_test("삼성", "{{ko-IPA}}", "samseng", "yr")
	def test_samseong_ipa(self):
		self.run_test("삼성", "{{ko-IPA}}", "[sʰa̠msʰʌ̹ŋ]", "ipa")

	def test_Reosia_ph(self):
		self.run_test("러시아", "{{ko-IPA|cap=y}}", "러시아", "ph")
	def test_Reosia_rr(self):
		self.run_test("러시아", "{{ko-IPA|cap=y}}", "Reosia", "rr")
	def test_Reosia_rrr(self):
		self.run_test("러시아", "{{ko-IPA|cap=y}}", "Leosia", "rrr")
	def test_Reosia_mr(self):
		self.run_test("러시아", "{{ko-IPA|cap=y}}", "Rŏsia", "mr")
	def test_Reosia_yr(self):
		self.run_test("러시아", "{{ko-IPA|cap=y}}", "lesia", "yr")
	def test_Reosia_ipa(self):
		self.run_test("러시아", "{{ko-IPA|cap=y}}", "[ɾʌ̹ɕʰia̠]", "ipa")

	def test_Maiaemi_ph(self):
		self.run_test("마이애미", "{{ko-IPA|cap=y}}", "마이애미/마이에미", "ph")
	def test_Maiaemi_rr(self):
		self.run_test("마이애미", "{{ko-IPA|cap=y}}", "Maiaemi", "rr")
	def test_Maiaemi_rrr(self):
		self.run_test("마이애미", "{{ko-IPA|cap=y}}", "Maiaemi", "rrr")
	def test_Maiaemi_mr(self):
		self.run_test("마이애미", "{{ko-IPA|cap=y}}", "Maiaemi", "mr")
	def test_Maiaemi_yr(self):
		self.run_test("마이애미", "{{ko-IPA|cap=y}}", "maiaymi", "yr")
	def test_Maiaemi_ipa(self):
		self.run_test("마이애미", "{{ko-IPA|cap=y}}", "[ma̠iɛmi] ~ [ma̠ie̞mi]", "ipa")

	def test_Daelleoseu_ph(self):
		self.run_test("댈러스", "{{ko-IPA|cap=y}}", "댈러스/델러스", "ph")
	def test_Daelleoseu_rr(self):
		self.run_test("댈러스", "{{ko-IPA|cap=y}}", "Daelleoseu", "rr")
	def test_Daelleoseu_rrr(self):
		self.run_test("댈러스", "{{ko-IPA|cap=y}}", "Daelleoseu", "rrr")
	def test_Daelleoseu_mr(self):
		self.run_test("댈러스", "{{ko-IPA|cap=y}}", "Taellŏsŭ", "mr")
	def test_Daelleoseu_yr(self):
		self.run_test("댈러스", "{{ko-IPA|cap=y}}", "tayllesu", "yr")
	def test_Daelleoseu_ipa(self):
		self.run_test("댈러스", "{{ko-IPA|cap=y}}", "[tɛɭɭʌ̹sʰɯ] ~ [te̞ɭɭʌ̹sʰɯ]", "ipa")

	def test_Saendieigo_ph(self):
		self.run_test("샌디에이고", "{{ko-IPA|cap=y}}", "샌디에이고/센디에이고", "ph")
	def test_Saendieigo_rr(self):
		self.run_test("샌디에이고", "{{ko-IPA|cap=y}}", "Saendieigo", "rr")
	def test_Saendieigo_rrr(self):
		self.run_test("샌디에이고", "{{ko-IPA|cap=y}}", "Saendieigo", "rrr")
	def test_Saendieigo_mr(self):
		self.run_test("샌디에이고", "{{ko-IPA|cap=y}}", "Saendieigo", "mr")
	def test_Saendieigo_yr(self):
		self.run_test("샌디에이고", "{{ko-IPA|cap=y}}", "sayntieyiko", "yr")
	def test_Saendieigo_ipa(self):
		self.run_test("샌디에이고", "{{ko-IPA|cap=y}}", "[sʰɛndie̞iɡo̞] ~ [sʰe̞ndie̞iɡo̞]", "ipa")

	def test_daegu_ph(self):
		self.run_test("대구", "{{ko-IPA}}", "대구/데구", "ph")
	def test_daegu_rr(self):
		self.run_test("대구", "{{ko-IPA}}", "daegu", "rr")
	def test_daegu_rrr(self):
		self.run_test("대구", "{{ko-IPA}}", "daegu", "rrr")
	def test_daegu_mr(self):
		self.run_test("대구", "{{ko-IPA}}", "taegu", "mr")
	def test_daegu_yr(self):
		self.run_test("대구", "{{ko-IPA}}", "taykwu", "yr")
	def test_daegu_ipa(self):
		self.run_test("대구", "{{ko-IPA}}", "[tɛɡu] ~ [te̞ɡu]", "ipa")
	def test_Daegu_ph_1(self):
		self.run_test("대구", "{{ko-IPA|cap=y}}", "대구/데구", "ph")
	def test_Daegu_rr_1(self):
		self.run_test("대구", "{{ko-IPA|cap=y}}", "Daegu", "rr")
	def test_Daegu_rrr_1(self):
		self.run_test("대구", "{{ko-IPA|cap=y}}", "Daegu", "rrr")
	def test_Daegu_mr_1(self):
		self.run_test("대구", "{{ko-IPA|cap=y}}", "Taegu", "mr")
	def test_Daegu_yr_1(self):
		self.run_test("대구", "{{ko-IPA|cap=y}}", "taykwu", "yr")
	def test_Daegu_ipa_1(self):
		self.run_test("대구", "{{ko-IPA|cap=y}}", "[tɛɡu] ~ [te̞ɡu]", "ipa")

	def test_daenseo_ph(self):
		self.run_test("댄서", "{{ko-IPA}}", "댄서/덴서", "ph")
	def test_daenseo_rr(self):
		self.run_test("댄서", "{{ko-IPA}}", "daenseo", "rr")
	def test_daenseo_rrr(self):
		self.run_test("댄서", "{{ko-IPA}}", "daenseo", "rrr")
	def test_daenseo_mr(self):
		self.run_test("댄서", "{{ko-IPA}}", "taensŏ", "mr")
	def test_daenseo_yr(self):
		self.run_test("댄서", "{{ko-IPA}}", "taynse", "yr")
	def test_daenseo_ipa(self):
		self.run_test("댄서", "{{ko-IPA}}", "[tɛnsʰʌ̹] ~ [te̞nsʰʌ̹]", "ipa")

	def test_raep_ph(self):
		self.run_test("랩", "{{ko-IPA}}", "랩/렙", "ph")
	def test_raep_rr(self):
		self.run_test("랩", "{{ko-IPA}}", "raep", "rr")
	def test_raep_rrr(self):
		self.run_test("랩", "{{ko-IPA}}", "laeb", "rrr")
	def test_raep_mr(self):
		self.run_test("랩", "{{ko-IPA}}", "raep", "mr")
	def test_raep_yr(self):
		self.run_test("랩", "{{ko-IPA}}", "layp", "yr")
	def test_raep_ipa(self):
		self.run_test("랩", "{{ko-IPA}}", "[ɾɛp̚] ~ [ɾe̞p̚]", "ipa")

	def test_Aellabaema_ph(self):
		self.run_test("앨라배마", "{{ko-IPA|cap=y}}", "앨라배마/엘라베마", "ph")
	def test_Aellabaema_rr(self):
		self.run_test("앨라배마", "{{ko-IPA|cap=y}}", "Aellabaema", "rr")
	def test_Aellabaema_rrr(self):
		self.run_test("앨라배마", "{{ko-IPA|cap=y}}", "Aellabaema", "rrr")
	def test_Aellabaema_mr(self):
		self.run_test("앨라배마", "{{ko-IPA|cap=y}}", "Aellabaema", "mr")
	def test_Aellabaema_yr(self):
		self.run_test("앨라배마", "{{ko-IPA|cap=y}}", "ayllapayma", "yr")
	def test_Aellabaema_ipa(self):
		self.run_test("앨라배마", "{{ko-IPA|cap=y}}", "[ɛɭɭa̠bɛma̠] ~ [e̞ɭɭa̠be̞ma̠]", "ipa")

	def test_Merillaendeu_ph(self):
		self.run_test("메릴랜드", "{{ko-IPA|cap=y}}", "메릴랜드/메릴렌드", "ph")
	def test_Merillaendeu_rr(self):
		self.run_test("메릴랜드", "{{ko-IPA|cap=y}}", "Merillaendeu", "rr")
	def test_Merillaendeu_rrr(self):
		self.run_test("메릴랜드", "{{ko-IPA|cap=y}}", "Melillaendeu", "rrr")
	def test_Merillaendeu_mr(self):
		self.run_test("메릴랜드", "{{ko-IPA|cap=y}}", "Merillaendŭ", "mr")
	def test_Merillaendeu_yr(self):
		self.run_test("메릴랜드", "{{ko-IPA|cap=y}}", "meylillayntu", "yr")
	def test_Merillaendeu_ipa(self):
		self.run_test("메릴랜드", "{{ko-IPA|cap=y}}", "[me̞ɾiɭɭɛndɯ] ~ [me̞ɾiɭɭe̞ndɯ]", "ipa")

	def test_Nebada_ph(self):
		self.run_test("네바다", "{{ko-IPA|cap=y}}", "네바다", "ph")
	def test_Nebada_rr(self):
		self.run_test("네바다", "{{ko-IPA|cap=y}}", "Nebada", "rr")
	def test_Nebada_rrr(self):
		self.run_test("네바다", "{{ko-IPA|cap=y}}", "Nebada", "rrr")
	def test_Nebada_mr(self):
		self.run_test("네바다", "{{ko-IPA|cap=y}}", "Nebada", "mr")
	def test_Nebada_yr(self):
		self.run_test("네바다", "{{ko-IPA|cap=y}}", "neypata", "yr")
	def test_Nebada_ipa(self):
		self.run_test("네바다", "{{ko-IPA|cap=y}}", "[ne̞ba̠da̠]", "ipa")

	def test_Rodeuaillaendeu_ph(self):
		self.run_test("로드아일랜드", "{{ko-IPA|cap=y}}", "로드아일랜드/로드아일렌드", "ph")
	def test_Rodeuaillaendeu_rr(self):
		self.run_test("로드아일랜드", "{{ko-IPA|cap=y}}", "Rodeuaillaendeu", "rr")
	def test_Rodeuaillaendeu_rrr(self):
		self.run_test("로드아일랜드", "{{ko-IPA|cap=y}}", "Lodeuaillaendeu", "rrr")
	def test_Rodeuaillaendeu_mr(self):
		self.run_test("로드아일랜드", "{{ko-IPA|cap=y}}", "Rodŭaillaendŭ", "mr")
	def test_Rodeuaillaendeu_yr(self):
		self.run_test("로드아일랜드", "{{ko-IPA|cap=y}}", "lotuaillayntu", "yr")
	def test_Rodeuaillaendeu_ipa(self):
		self.run_test("로드아일랜드", "{{ko-IPA|cap=y}}", "[ɾo̞dɯa̠iɭɭɛndɯ] ~ [ɾo̞dɯa̠iɭɭe̞ndɯ]", "ipa")

	def test_Bahama_ph(self):
		self.run_test("바하마", "{{ko-IPA|cap=y}}", "바하마", "ph")
	def test_Bahama_rr(self):
		self.run_test("바하마", "{{ko-IPA|cap=y}}", "Bahama", "rr")
	def test_Bahama_rrr(self):
		self.run_test("바하마", "{{ko-IPA|cap=y}}", "Bahama", "rrr")
	def test_Bahama_mr(self):
		self.run_test("바하마", "{{ko-IPA|cap=y}}", "Pahama", "mr")
	def test_Bahama_yr(self):
		self.run_test("바하마", "{{ko-IPA|cap=y}}", "pahama", "yr")
	def test_Bahama_ipa(self):
		self.run_test("바하마", "{{ko-IPA|cap=y}}", "[pa̠ɦa̠ma̠]", "ipa")

	def test_Heonggari_ph(self):
		self.run_test("헝가리", "{{ko-ipa|cap=y}}", "헝가리", "ph")
	def test_Heonggari_rr(self):
		self.run_test("헝가리", "{{ko-ipa|cap=y}}", "Heonggari", "rr")
	def test_Heonggari_rrr(self):
		self.run_test("헝가리", "{{ko-ipa|cap=y}}", "Heonggali", "rrr")
	def test_Heonggari_mr(self):
		self.run_test("헝가리", "{{ko-ipa|cap=y}}", "Hŏnggari", "mr")
	def test_Heonggari_yr(self):
		self.run_test("헝가리", "{{ko-ipa|cap=y}}", "hengkali", "yr")
	def test_Heonggari_ipa(self):
		self.run_test("헝가리", "{{ko-ipa|cap=y}}", "[hʌ̹ŋɡa̠ɾi]", "ipa")

	def test_Doha_ph(self):
		self.run_test("도하", "{{ko-IPA|cap=y}}", "도하", "ph")
	def test_Doha_rr(self):
		self.run_test("도하", "{{ko-IPA|cap=y}}", "Doha", "rr")
	def test_Doha_rrr(self):
		self.run_test("도하", "{{ko-IPA|cap=y}}", "Doha", "rrr")
	def test_Doha_mr(self):
		self.run_test("도하", "{{ko-IPA|cap=y}}", "Toha", "mr")
	def test_Doha_yr(self):
		self.run_test("도하", "{{ko-IPA|cap=y}}", "toha", "yr")
	def test_Doha_ipa(self):
		self.run_test("도하", "{{ko-IPA|cap=y}}", "[to̞ɦa̠]", "ipa")

	def test_Hanoi_ph(self):
		self.run_test("하노이", "{{ko-IPA|cap=y}}", "하노이", "ph")
	def test_Hanoi_rr(self):
		self.run_test("하노이", "{{ko-IPA|cap=y}}", "Hanoi", "rr")
	def test_Hanoi_rrr(self):
		self.run_test("하노이", "{{ko-IPA|cap=y}}", "Hanoi", "rrr")
	def test_Hanoi_mr(self):
		self.run_test("하노이", "{{ko-IPA|cap=y}}", "Hanoi", "mr")
	def test_Hanoi_yr(self):
		self.run_test("하노이", "{{ko-IPA|cap=y}}", "hanoi", "yr")
	def test_Hanoi_ipa(self):
		self.run_test("하노이", "{{ko-IPA|cap=y}}", "[ha̠no̞i]", "ipa")

	def test_Harare_ph(self):
		self.run_test("하라레", "{{ko-IPA|cap=y}}", "하라레", "ph")
	def test_Harare_rr(self):
		self.run_test("하라레", "{{ko-IPA|cap=y}}", "Harare", "rr")
	def test_Harare_rrr(self):
		self.run_test("하라레", "{{ko-IPA|cap=y}}", "Halale", "rrr")
	def test_Harare_mr(self):
		self.run_test("하라레", "{{ko-IPA|cap=y}}", "Harare", "mr")
	def test_Harare_yr(self):
		self.run_test("하라레", "{{ko-IPA|cap=y}}", "halaley", "yr")
	def test_Harare_ipa(self):
		self.run_test("하라레", "{{ko-IPA|cap=y}}", "[ha̠ɾa̠ɾe̞]", "ipa")

	def test_Honollullu_ph(self):
		self.run_test("호놀룰루", "{{ko-IPA|cap=y}}", "호놀룰루", "ph")
	def test_Honollullu_rr(self):
		self.run_test("호놀룰루", "{{ko-IPA|cap=y}}", "Honollullu", "rr")
	def test_Honollullu_rrr(self):
		self.run_test("호놀룰루", "{{ko-IPA|cap=y}}", "Honollullu", "rrr")
	def test_Honollullu_mr(self):
		self.run_test("호놀룰루", "{{ko-IPA|cap=y}}", "Honollullu", "mr")
	def test_Honollullu_yr(self):
		self.run_test("호놀룰루", "{{ko-IPA|cap=y}}", "honollwullwu", "yr")
	def test_Honollullu_ipa(self):
		self.run_test("호놀룰루", "{{ko-IPA|cap=y}}", "[ɸʷo̞no̞ɭɭuɭɭu]", "ipa")

	def test_Sanghai_ph(self):
		self.run_test("상하이", "{{ko-IPA|cap=y}}", "상하이", "ph")
	def test_Sanghai_rr(self):
		self.run_test("상하이", "{{ko-IPA|cap=y}}", "Sanghai", "rr")
	def test_Sanghai_rrr(self):
		self.run_test("상하이", "{{ko-IPA|cap=y}}", "Sanghai", "rrr")
	def test_Sanghai_mr(self):
		self.run_test("상하이", "{{ko-IPA|cap=y}}", "Sanghai", "mr")
	def test_Sanghai_yr(self):
		self.run_test("상하이", "{{ko-IPA|cap=y}}", "sanghai", "yr")
	def test_Sanghai_ipa(self):
		self.run_test("상하이", "{{ko-IPA|cap=y}}", "[sʰa̠ŋɦa̠i]", "ipa")

	def test_haembeogeo_ph(self):
		self.run_test("햄버거", "{{ko-IPA}}", "햄버거/헴버거", "ph")
	def test_haembeogeo_rr(self):
		self.run_test("햄버거", "{{ko-IPA}}", "haembeogeo", "rr")
	def test_haembeogeo_rrr(self):
		self.run_test("햄버거", "{{ko-IPA}}", "haembeogeo", "rrr")
	def test_haembeogeo_mr(self):
		self.run_test("햄버거", "{{ko-IPA}}", "haembŏgŏ", "mr")
	def test_haembeogeo_yr(self):
		self.run_test("햄버거", "{{ko-IPA}}", "haympeke", "yr")
	def test_haembeogeo_ipa(self):
		self.run_test("햄버거", "{{ko-IPA}}", "[hɛmbʌ̹ɡʌ̹] ~ [he̞mbʌ̹ɡʌ̹]", "ipa")

	def test_Ohaio_ph(self):
		self.run_test("오하이오", "{{ko-IPA|cap=y}}", "오하이오", "ph")
	def test_Ohaio_rr(self):
		self.run_test("오하이오", "{{ko-IPA|cap=y}}", "Ohaio", "rr")
	def test_Ohaio_rrr(self):
		self.run_test("오하이오", "{{ko-IPA|cap=y}}", "Ohaio", "rrr")
	def test_Ohaio_mr(self):
		self.run_test("오하이오", "{{ko-IPA|cap=y}}", "Ohaio", "mr")
	def test_Ohaio_yr(self):
		self.run_test("오하이오", "{{ko-IPA|cap=y}}", "ohaio", "yr")
	def test_Ohaio_ipa(self):
		self.run_test("오하이오", "{{ko-IPA|cap=y}}", "[o̞ɦa̠io̞]", "ipa")

	def test_Jeneba_ph(self):
		self.run_test("제네바", "{{ko-IPA|cap=y}}", "제네바", "ph")
	def test_Jeneba_rr(self):
		self.run_test("제네바", "{{ko-IPA|cap=y}}", "Jeneba", "rr")
	def test_Jeneba_rrr(self):
		self.run_test("제네바", "{{ko-IPA|cap=y}}", "Jeneba", "rrr")
	def test_Jeneba_mr(self):
		self.run_test("제네바", "{{ko-IPA|cap=y}}", "Cheneba", "mr")
	def test_Jeneba_yr(self):
		self.run_test("제네바", "{{ko-IPA|cap=y}}", "ceyneypa", "yr")
	def test_Jeneba_ipa(self):
		self.run_test("제네바", "{{ko-IPA|cap=y}}", "[t͡ɕe̞ne̞ba̠]", "ipa")

	def test_Roseuaenjelleseu_ph(self):
		self.run_test("로스앤젤레스", "{{ko-IPA|cap=y|com=1,5}}", "로쓰앤젤레쓰/로쓰엔젤레쓰", "ph")
	def test_Roseuaenjelleseu_rr(self):
		self.run_test("로스앤젤레스", "{{ko-IPA|cap=y|com=1,5}}", "Roseuaenjelleseu", "rr")
	def test_Roseuaenjelleseu_rrr(self):
		self.run_test("로스앤젤레스", "{{ko-IPA|cap=y|com=1,5}}", "Loseuaenjelleseu", "rrr")
	def test_Roseuaenjelleseu_mr(self):
		self.run_test("로스앤젤레스", "{{ko-IPA|cap=y|com=1,5}}", "Rossŭaenjellessŭ", "mr")
	def test_Roseuaenjelleseu_yr(self):
		self.run_test("로스앤젤레스", "{{ko-IPA|cap=y|com=1,5}}", "loqsuayn.ceylleyqsu", "yr")
	def test_Roseuaenjelleseu_ipa(self):
		self.run_test("로스앤젤레스", "{{ko-IPA|cap=y|com=1,5}}", "[ɾo̞s͈ɯɛɲd͡ʑe̞ɭɭe̞s͈ɯ] ~ [ɾo̞s͈ɯe̞ɲd͡ʑe̞ɭɭe̞s͈ɯ]", "ipa")

	def test_Daejeon_ph(self):
		self.run_test("대전", "{{ko-IPA|cap=y}}", "대전/데전", "ph")
	def test_Daejeon_rr(self):
		self.run_test("대전", "{{ko-IPA|cap=y}}", "Daejeon", "rr")
	def test_Daejeon_rrr(self):
		self.run_test("대전", "{{ko-IPA|cap=y}}", "Daejeon", "rrr")
	def test_Daejeon_mr(self):
		self.run_test("대전", "{{ko-IPA|cap=y}}", "Taejŏn", "mr")
	def test_Daejeon_yr(self):
		self.run_test("대전", "{{ko-IPA|cap=y}}", "taycen", "yr")
	def test_Daejeon_ipa(self):
		self.run_test("대전", "{{ko-IPA|cap=y}}", "[tɛd͡ʑʌ̹n] ~ [te̞d͡ʑʌ̹n]", "ipa")
	def test_daejeon_ph_1(self):
		self.run_test("대전", "{{ko-IPA|l=y}}", "대(ː)전/데(ː)전", "ph")
	def test_daejeon_rr_1(self):
		self.run_test("대전", "{{ko-IPA|l=y}}", "daejeon", "rr")
	def test_daejeon_rrr_1(self):
		self.run_test("대전", "{{ko-IPA|l=y}}", "daejeon", "rrr")
	def test_daejeon_mr_1(self):
		self.run_test("대전", "{{ko-IPA|l=y}}", "taejŏn", "mr")
	def test_daejeon_yr_1(self):
		self.run_test("대전", "{{ko-IPA|l=y}}", "tāycen", "yr")
	def test_daejeon_ipa_1(self):
		self.run_test("대전", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)d͡ʑʌ̹n] ~ [ˈte̞(ː)d͡ʑʌ̹n]", "ipa")

	def test_Jageurebeu_ph(self):
		self.run_test("자그레브", "{{ko-IPA|cap=y}}", "자그레브", "ph")
	def test_Jageurebeu_rr(self):
		self.run_test("자그레브", "{{ko-IPA|cap=y}}", "Jageurebeu", "rr")
	def test_Jageurebeu_rrr(self):
		self.run_test("자그레브", "{{ko-IPA|cap=y}}", "Jageulebeu", "rrr")
	def test_Jageurebeu_mr(self):
		self.run_test("자그레브", "{{ko-IPA|cap=y}}", "Chagŭrebŭ", "mr")
	def test_Jageurebeu_yr(self):
		self.run_test("자그레브", "{{ko-IPA|cap=y}}", "cakuleypu", "yr")
	def test_Jageurebeu_ipa(self):
		self.run_test("자그레브", "{{ko-IPA|cap=y}}", "[t͡ɕa̠ɡɯɾe̞bɯ]", "ipa")

	def test_enjin_ph(self):
		self.run_test("엔진", "{{ko-IPA}}", "엔진", "ph")
	def test_enjin_rr(self):
		self.run_test("엔진", "{{ko-IPA}}", "enjin", "rr")
	def test_enjin_rrr(self):
		self.run_test("엔진", "{{ko-IPA}}", "enjin", "rrr")
	def test_enjin_mr(self):
		self.run_test("엔진", "{{ko-IPA}}", "enjin", "mr")
	def test_enjin_yr(self):
		self.run_test("엔진", "{{ko-IPA}}", "eyn.cin", "yr")
	def test_enjin_ipa(self):
		self.run_test("엔진", "{{ko-IPA}}", "[e̞ɲd͡ʑin]", "ipa")

	def test_jaejeu_ph(self):
		self.run_test("재즈", "{{ko-IPA|com=0}}", "째즈/쩨즈", "ph")
	def test_jaejeu_rr(self):
		self.run_test("재즈", "{{ko-IPA|com=0}}", "jaejeu", "rr")
	def test_jaejeu_rrr(self):
		self.run_test("재즈", "{{ko-IPA|com=0}}", "jaejeu", "rrr")
	def test_jaejeu_mr(self):
		self.run_test("재즈", "{{ko-IPA|com=0}}", "chaejŭ", "mr")
	def test_jaejeu_yr(self):
		self.run_test("재즈", "{{ko-IPA|com=0}}", "qcaycu", "yr")
	def test_jaejeu_ipa(self):
		self.run_test("재즈", "{{ko-IPA|com=0}}", "[t͡ɕ͈ɛd͡ʑɯ] ~ [t͡ɕ͈e̞d͡ʑɯ]", "ipa")

	def test_mesiji_ph(self):
		self.run_test("메시지", "{{ko-IPA}}", "메시지", "ph")
	def test_mesiji_rr(self):
		self.run_test("메시지", "{{ko-IPA}}", "mesiji", "rr")
	def test_mesiji_rrr(self):
		self.run_test("메시지", "{{ko-IPA}}", "mesiji", "rrr")
	def test_mesiji_mr(self):
		self.run_test("메시지", "{{ko-IPA}}", "mesiji", "mr")
	def test_mesiji_yr(self):
		self.run_test("메시지", "{{ko-IPA}}", "meysici", "yr")
	def test_mesiji_ipa(self):
		self.run_test("메시지", "{{ko-IPA}}", "[me̞ɕʰid͡ʑi]", "ipa")

	def test_tellebijeon_ph(self):
		self.run_test("텔레비전", "{{ko-IPA}}", "텔레비전", "ph")
	def test_tellebijeon_rr(self):
		self.run_test("텔레비전", "{{ko-IPA}}", "tellebijeon", "rr")
	def test_tellebijeon_rrr(self):
		self.run_test("텔레비전", "{{ko-IPA}}", "tellebijeon", "rrr")
	def test_tellebijeon_mr(self):
		self.run_test("텔레비전", "{{ko-IPA}}", "t'ellebijŏn", "mr")
	def test_tellebijeon_yr(self):
		self.run_test("텔레비전", "{{ko-IPA}}", "theylleypicen", "yr")
	def test_tellebijeon_ipa(self):
		self.run_test("텔레비전", "{{ko-IPA}}", "[tʰe̞ɭɭe̞bid͡ʑʌ̹n]", "ipa")

	def test_Jojia_ph(self):
		self.run_test("조지아", "{{ko-IPA|cap=y}}", "조지아", "ph")
	def test_Jojia_rr(self):
		self.run_test("조지아", "{{ko-IPA|cap=y}}", "Jojia", "rr")
	def test_Jojia_rrr(self):
		self.run_test("조지아", "{{ko-IPA|cap=y}}", "Jojia", "rrr")
	def test_Jojia_mr(self):
		self.run_test("조지아", "{{ko-IPA|cap=y}}", "Chojia", "mr")
	def test_Jojia_yr(self):
		self.run_test("조지아", "{{ko-IPA|cap=y}}", "cocia", "yr")
	def test_Jojia_ipa(self):
		self.run_test("조지아", "{{ko-IPA|cap=y}}", "[t͡ɕo̞d͡ʑia̠]", "ipa")

	def test_Ruijiaena_ph(self):
		self.run_test("루이지애나", "{{ko-IPA|cap=y}}", "루이지애나/루이지에나", "ph")
	def test_Ruijiaena_rr(self):
		self.run_test("루이지애나", "{{ko-IPA|cap=y}}", "Ru'ijiaena", "rr")
	def test_Ruijiaena_rrr(self):
		self.run_test("루이지애나", "{{ko-IPA|cap=y}}", "Lu'ijiaena", "rrr")
	def test_Ruijiaena_mr(self):
		self.run_test("루이지애나", "{{ko-IPA|cap=y}}", "Ruijiaena", "mr")
	def test_Ruijiaena_yr(self):
		self.run_test("루이지애나", "{{ko-IPA|cap=y}}", "lwuiciayna", "yr")
	def test_Ruijiaena_ipa(self):
		self.run_test("루이지애나", "{{ko-IPA|cap=y}}", "[ɾuid͡ʑiɛna̠] ~ [ɾuid͡ʑie̞na̠]", "ipa")

	def test_Beojinia_ph(self):
		self.run_test("버지니아", "{{ko-IPA|cap=y}}", "버지니아", "ph")
	def test_Beojinia_rr(self):
		self.run_test("버지니아", "{{ko-IPA|cap=y}}", "Beojinia", "rr")
	def test_Beojinia_rrr(self):
		self.run_test("버지니아", "{{ko-IPA|cap=y}}", "Beojinia", "rrr")
	def test_Beojinia_mr(self):
		self.run_test("버지니아", "{{ko-IPA|cap=y}}", "Pŏjinia", "mr")
	def test_Beojinia_yr(self):
		self.run_test("버지니아", "{{ko-IPA|cap=y}}", "pecinia", "yr")
	def test_Beojinia_ipa(self):
		self.run_test("버지니아", "{{ko-IPA|cap=y}}", "[pʌ̹d͡ʑinia̠]", "ipa")

	def test_Naijiria_ph(self):
		self.run_test("나이지리아", "{{ko-IPA|cap=y}}", "나이지리아", "ph")
	def test_Naijiria_rr(self):
		self.run_test("나이지리아", "{{ko-IPA|cap=y}}", "Naijiria", "rr")
	def test_Naijiria_rrr(self):
		self.run_test("나이지리아", "{{ko-IPA|cap=y}}", "Naijilia", "rrr")
	def test_Naijiria_mr(self):
		self.run_test("나이지리아", "{{ko-IPA|cap=y}}", "Naijiria", "mr")
	def test_Naijiria_yr(self):
		self.run_test("나이지리아", "{{ko-IPA|cap=y}}", "naicilia", "yr")
	def test_Naijiria_ipa(self):
		self.run_test("나이지리아", "{{ko-IPA|cap=y}}", "[na̠id͡ʑiɾia̠]", "ipa")

	def test_Jambia_ph(self):
		self.run_test("잠비아", "{{ko-IPA|cap=y}}", "잠비아", "ph")
	def test_Jambia_rr(self):
		self.run_test("잠비아", "{{ko-IPA|cap=y}}", "Jambia", "rr")
	def test_Jambia_rrr(self):
		self.run_test("잠비아", "{{ko-IPA|cap=y}}", "Jambia", "rrr")
	def test_Jambia_mr(self):
		self.run_test("잠비아", "{{ko-IPA|cap=y}}", "Chambia", "mr")
	def test_Jambia_yr(self):
		self.run_test("잠비아", "{{ko-IPA|cap=y}}", "campia", "yr")
	def test_Jambia_ipa(self):
		self.run_test("잠비아", "{{ko-IPA|cap=y}}", "[t͡ɕa̠mbia̠]", "ipa")


	def test_imiji_ph(self):
		self.run_test("이미지", "{{ko-IPA|a=Ko-{{PAGENAME}}.oga}}", "이미지", "ph")
	def test_imiji_rr(self):
		self.run_test("이미지", "{{ko-IPA|a=Ko-{{PAGENAME}}.oga}}", "imiji", "rr")
	def test_imiji_rrr(self):
		self.run_test("이미지", "{{ko-IPA|a=Ko-{{PAGENAME}}.oga}}", "imiji", "rrr")
	def test_imiji_mr(self):
		self.run_test("이미지", "{{ko-IPA|a=Ko-{{PAGENAME}}.oga}}", "imiji", "mr")
	def test_imiji_yr(self):
		self.run_test("이미지", "{{ko-IPA|a=Ko-{{PAGENAME}}.oga}}", "imici", "yr")
	def test_imiji_ipa(self):
		self.run_test("이미지", "{{ko-IPA|a=Ko-{{PAGENAME}}.oga}}", "[imid͡ʑi]", "ipa")

	def test_Mijuri_ph(self):
		self.run_test("미주리", "{{ko-IPA|cap=y}}", "미주리", "ph")
	def test_Mijuri_rr(self):
		self.run_test("미주리", "{{ko-IPA|cap=y}}", "Mijuri", "rr")
	def test_Mijuri_rrr(self):
		self.run_test("미주리", "{{ko-IPA|cap=y}}", "Mijuli", "rrr")
	def test_Mijuri_mr(self):
		self.run_test("미주리", "{{ko-IPA|cap=y}}", "Mijuri", "mr")
	def test_Mijuri_yr(self):
		self.run_test("미주리", "{{ko-IPA|cap=y}}", "micwuli", "yr")
	def test_Mijuri_ipa(self):
		self.run_test("미주리", "{{ko-IPA|cap=y}}", "[mid͡ʑuɾi]", "ipa")

	def test_Aljeri_ph(self):
		self.run_test("알제리", "{{ko-IPA|cap=y}}", "알제리", "ph")
	def test_Aljeri_rr(self):
		self.run_test("알제리", "{{ko-IPA|cap=y}}", "Aljeri", "rr")
	def test_Aljeri_rrr(self):
		self.run_test("알제리", "{{ko-IPA|cap=y}}", "Aljeli", "rrr")
	def test_Aljeri_mr(self):
		self.run_test("알제리", "{{ko-IPA|cap=y}}", "Aljeri", "mr")
	def test_Aljeri_yr(self):
		self.run_test("알제리", "{{ko-IPA|cap=y}}", "alceyli", "yr")
	def test_Aljeri_ipa(self):
		self.run_test("알제리", "{{ko-IPA|cap=y}}", "[a̠ʎd͡ʑe̞ɾi]", "ipa")

	def test_Bellijeu_ph(self):
		self.run_test("벨리즈", "{{ko-IPA|cap=y}}", "벨리즈", "ph")
	def test_Bellijeu_rr(self):
		self.run_test("벨리즈", "{{ko-IPA|cap=y}}", "Bellijeu", "rr")
	def test_Bellijeu_rrr(self):
		self.run_test("벨리즈", "{{ko-IPA|cap=y}}", "Bellijeu", "rrr")
	def test_Bellijeu_mr(self):
		self.run_test("벨리즈", "{{ko-IPA|cap=y}}", "Pellijŭ", "mr")
	def test_Bellijeu_yr(self):
		self.run_test("벨리즈", "{{ko-IPA|cap=y}}", "peyllicu", "yr")
	def test_Bellijeu_ipa(self):
		self.run_test("벨리즈", "{{ko-IPA|cap=y}}", "[pe̞ʎʎid͡ʑɯ]", "ipa")

	def test_Beurajil_ph(self):
		self.run_test("브라질", "{{ko-IPA|cap=y}}", "브라질", "ph")
	def test_Beurajil_rr(self):
		self.run_test("브라질", "{{ko-IPA|cap=y}}", "Beurajil", "rr")
	def test_Beurajil_rrr(self):
		self.run_test("브라질", "{{ko-IPA|cap=y}}", "Beulajil", "rrr")
	def test_Beurajil_mr(self):
		self.run_test("브라질", "{{ko-IPA|cap=y}}", "Pŭrajil", "mr")
	def test_Beurajil_yr(self):
		self.run_test("브라질", "{{ko-IPA|cap=y}}", "pulacil", "yr")
	def test_Beurajil_ipa(self):
		self.run_test("브라질", "{{ko-IPA|cap=y}}", "[pɯɾa̠d͡ʑiɭ]", "ipa")

	def test_Nijereu_ph(self):
		self.run_test("니제르", "{{ko-IPA|cap=y}}", "니제르", "ph")
	def test_Nijereu_rr(self):
		self.run_test("니제르", "{{ko-IPA|cap=y}}", "Nijereu", "rr")
	def test_Nijereu_rrr(self):
		self.run_test("니제르", "{{ko-IPA|cap=y}}", "Nijeleu", "rrr")
	def test_Nijereu_mr(self):
		self.run_test("니제르", "{{ko-IPA|cap=y}}", "Nijerŭ", "mr")
	def test_Nijereu_yr(self):
		self.run_test("니제르", "{{ko-IPA|cap=y}}", "niceylu", "yr")
	def test_Nijereu_ipa(self):
		self.run_test("니제르", "{{ko-IPA|cap=y}}", "[nid͡ʑe̞ɾɯ]", "ipa")

	def test_Beijing_ph(self):
		self.run_test("베이징", "{{ko-IPA|cap=y}}", "베이징", "ph")
	def test_Beijing_rr(self):
		self.run_test("베이징", "{{ko-IPA|cap=y}}", "Beijing", "rr")
	def test_Beijing_rrr(self):
		self.run_test("베이징", "{{ko-IPA|cap=y}}", "Beijing", "rrr")
	def test_Beijing_mr(self):
		self.run_test("베이징", "{{ko-IPA|cap=y}}", "Peijing", "mr")
	def test_Beijing_yr(self):
		self.run_test("베이징", "{{ko-IPA|cap=y}}", "peyicing", "yr")
	def test_Beijing_ipa(self):
		self.run_test("베이징", "{{ko-IPA|cap=y}}", "[pe̞id͡ʑiŋ]", "ipa")

	def test_Beurajillia_ph(self):
		self.run_test("브라질리아", "{{ko-IPA|cap=y}}", "브라질리아", "ph")
	def test_Beurajillia_rr(self):
		self.run_test("브라질리아", "{{ko-IPA|cap=y}}", "Beurajillia", "rr")
	def test_Beurajillia_rrr(self):
		self.run_test("브라질리아", "{{ko-IPA|cap=y}}", "Beulajillia", "rrr")
	def test_Beurajillia_mr(self):
		self.run_test("브라질리아", "{{ko-IPA|cap=y}}", "Pŭrajillia", "mr")
	def test_Beurajillia_yr(self):
		self.run_test("브라질리아", "{{ko-IPA|cap=y}}", "pulacillia", "yr")
	def test_Beurajillia_ipa(self):
		self.run_test("브라질리아", "{{ko-IPA|cap=y}}", "[pɯɾa̠d͡ʑiʎʎia̠]", "ipa")

	def test_Abana_ph(self):
		self.run_test("아바나", "{{ko-IPA|cap=y}}", "아바나", "ph")
	def test_Abana_rr(self):
		self.run_test("아바나", "{{ko-IPA|cap=y}}", "Abana", "rr")
	def test_Abana_rrr(self):
		self.run_test("아바나", "{{ko-IPA|cap=y}}", "Abana", "rrr")
	def test_Abana_mr(self):
		self.run_test("아바나", "{{ko-IPA|cap=y}}", "Abana", "mr")
	def test_Abana_yr(self):
		self.run_test("아바나", "{{ko-IPA|cap=y}}", "apana", "yr")
	def test_Abana_ipa(self):
		self.run_test("아바나", "{{ko-IPA|cap=y}}", "[a̠ba̠na̠]", "ipa")

	def test_Bin_ph(self):
		self.run_test("빈", "{{ko-IPA|cap=y}}", "빈", "ph")
	def test_Bin_rr(self):
		self.run_test("빈", "{{ko-IPA|cap=y}}", "Bin", "rr")
	def test_Bin_rrr(self):
		self.run_test("빈", "{{ko-IPA|cap=y}}", "Bin", "rrr")
	def test_Bin_mr(self):
		self.run_test("빈", "{{ko-IPA|cap=y}}", "Pin", "mr")
	def test_Bin_yr(self):
		self.run_test("빈", "{{ko-IPA|cap=y}}", "pin", "yr")
	def test_Bin_ipa(self):
		self.run_test("빈", "{{ko-IPA|cap=y}}", "[pin]", "ipa")
	def test_bin_ph_1(self):
		self.run_test("빈", "{{ko-IPA}}", "빈", "ph")
	def test_bin_rr_1(self):
		self.run_test("빈", "{{ko-IPA}}", "bin", "rr")
	def test_bin_rrr_1(self):
		self.run_test("빈", "{{ko-IPA}}", "bin", "rrr")
	def test_bin_mr_1(self):
		self.run_test("빈", "{{ko-IPA}}", "pin", "mr")
	def test_bin_yr_1(self):
		self.run_test("빈", "{{ko-IPA}}", "pin", "yr")
	def test_bin_ipa_1(self):
		self.run_test("빈", "{{ko-IPA}}", "[pin]", "ipa")

	def test_Bienna_ph(self):
		self.run_test("비엔나", "{{ko-IPA|cap=y}}", "비엔나", "ph")
	def test_Bienna_rr(self):
		self.run_test("비엔나", "{{ko-IPA|cap=y}}", "Bienna", "rr")
	def test_Bienna_rrr(self):
		self.run_test("비엔나", "{{ko-IPA|cap=y}}", "Bienna", "rrr")
	def test_Bienna_mr(self):
		self.run_test("비엔나", "{{ko-IPA|cap=y}}", "Pienna", "mr")
	def test_Bienna_yr(self):
		self.run_test("비엔나", "{{ko-IPA|cap=y}}", "pieynna", "yr")
	def test_Bienna_ipa(self):
		self.run_test("비엔나", "{{ko-IPA|cap=y}}", "[pie̞nna̠]", "ipa")

	def test_cheotsori_ph(self):
		self.run_test("첫소리", "{{ko-IPA}}", "첟쏘리", "ph")
	def test_cheotsori_rr(self):
		self.run_test("첫소리", "{{ko-IPA}}", "cheotsori", "rr")
	def test_cheotsori_rrr(self):
		self.run_test("첫소리", "{{ko-IPA}}", "cheos'soli", "rrr")
	def test_cheotsori_mr(self):
		self.run_test("첫소리", "{{ko-IPA}}", "ch'ŏssori", "mr")
	def test_cheotsori_yr(self):
		self.run_test("첫소리", "{{ko-IPA}}", "ches.soli", "yr")
	def test_cheotsori_ipa(self):
		self.run_test("첫소리", "{{ko-IPA}}", "[t͡ɕʰʌ̹ss͈o̞ɾi]", "ipa")

	def test_cheot_ph(self):
		self.run_test("첫", "{{ko-IPA}}", "첟", "ph")
	def test_cheot_rr(self):
		self.run_test("첫", "{{ko-IPA}}", "cheot", "rr")
	def test_cheot_rrr(self):
		self.run_test("첫", "{{ko-IPA}}", "cheos", "rrr")
	def test_cheot_mr(self):
		self.run_test("첫", "{{ko-IPA}}", "ch'ŏt", "mr")
	def test_cheot_yr(self):
		self.run_test("첫", "{{ko-IPA}}", "ches", "yr")
	def test_cheot_ipa(self):
		self.run_test("첫", "{{ko-IPA}}", "[t͡ɕʰʌ̹t̚]", "ipa")

	def test_siot_ph(self):
		self.run_test("시옷", "{{ko-IPA}}", "시옫", "ph")
	def test_siot_rr(self):
		self.run_test("시옷", "{{ko-IPA}}", "siot", "rr")
	def test_siot_rrr(self):
		self.run_test("시옷", "{{ko-IPA}}", "sios", "rrr")
	def test_siot_mr(self):
		self.run_test("시옷", "{{ko-IPA}}", "siot", "mr")
	def test_siot_yr(self):
		self.run_test("시옷", "{{ko-IPA}}", "sios", "yr")
	def test_siot_ipa(self):
		self.run_test("시옷", "{{ko-IPA}}", "[ɕʰio̞t̚]", "ipa")


	def test_kwin_ph(self):
		self.run_test("퀸", "{{ko-IPA}}", "퀸", "ph")
	def test_kwin_rr(self):
		self.run_test("퀸", "{{ko-IPA}}", "kwin", "rr")
	def test_kwin_rrr(self):
		self.run_test("퀸", "{{ko-IPA}}", "kwin", "rrr")
	def test_kwin_mr(self):
		self.run_test("퀸", "{{ko-IPA}}", "k'win", "mr")
	def test_kwin_yr(self):
		self.run_test("퀸", "{{ko-IPA}}", "khwin", "yr")
	def test_kwin_ipa(self):
		self.run_test("퀸", "{{ko-IPA}}", "[kʰɥin] ~ [kʰyn]", "ipa")

	def test_omda_ph(self):
		self.run_test("옮다", "{{ko-IPA|l=y}}", "옴(ː)따", "ph")
	def test_omda_rr(self):
		self.run_test("옮다", "{{ko-IPA|l=y}}", "omda", "rr")
	def test_omda_rrr(self):
		self.run_test("옮다", "{{ko-IPA|l=y}}", "olmda", "rrr")
	def test_omda_mr(self):
		self.run_test("옮다", "{{ko-IPA|l=y}}", "omta", "mr")
	def test_omda_yr(self):
		self.run_test("옮다", "{{ko-IPA|l=y}}", "ōlmta", "yr")
	def test_omda_ipa(self):
		self.run_test("옮다", "{{ko-IPA|l=y}}", "[ˈo̞(ː)mt͈a̠]", "ipa")


	def test_samda_ph(self):
		self.run_test("삶다", "{{ko-IPA|l=y}}", "삼(ː)따", "ph")
	def test_samda_rr(self):
		self.run_test("삶다", "{{ko-IPA|l=y}}", "samda", "rr")
	def test_samda_rrr(self):
		self.run_test("삶다", "{{ko-IPA|l=y}}", "salmda", "rrr")
	def test_samda_mr(self):
		self.run_test("삶다", "{{ko-IPA|l=y}}", "samta", "mr")
	def test_samda_yr(self):
		self.run_test("삶다", "{{ko-IPA|l=y}}", "sālmta", "yr")
	def test_samda_ipa(self):
		self.run_test("삶다", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)mt͈a̠]", "ipa")

	def test_Amman_ph(self):
		self.run_test("암만", "{{ko-IPA|cap=y}}", "암만", "ph")
	def test_Amman_rr(self):
		self.run_test("암만", "{{ko-IPA|cap=y}}", "Amman", "rr")
	def test_Amman_rrr(self):
		self.run_test("암만", "{{ko-IPA|cap=y}}", "Amman", "rrr")
	def test_Amman_mr(self):
		self.run_test("암만", "{{ko-IPA|cap=y}}", "Amman", "mr")
	def test_Amman_yr(self):
		self.run_test("암만", "{{ko-IPA|cap=y}}", "amman", "yr")
	def test_Amman_ipa(self):
		self.run_test("암만", "{{ko-IPA|cap=y}}", "[a̠mma̠n]", "ipa")

	def test_Namibia_ph(self):
		self.run_test("나미비아", "{{ko-IPA|cap=y}}", "나미비아", "ph")
	def test_Namibia_rr(self):
		self.run_test("나미비아", "{{ko-IPA|cap=y}}", "Namibia", "rr")
	def test_Namibia_rrr(self):
		self.run_test("나미비아", "{{ko-IPA|cap=y}}", "Namibia", "rrr")
	def test_Namibia_mr(self):
		self.run_test("나미비아", "{{ko-IPA|cap=y}}", "Namibia", "mr")
	def test_Namibia_yr(self):
		self.run_test("나미비아", "{{ko-IPA|cap=y}}", "namipia", "yr")
	def test_Namibia_ipa(self):
		self.run_test("나미비아", "{{ko-IPA|cap=y}}", "[na̠mibia̠]", "ipa")

	def test_kkeut_ph(self):
		self.run_test("끝", "{{ko-ipa}}", "끋", "ph")
	def test_kkeut_rr(self):
		self.run_test("끝", "{{ko-ipa}}", "kkeut", "rr")
	def test_kkeut_rrr(self):
		self.run_test("끝", "{{ko-ipa}}", "kkeut", "rrr")
	def test_kkeut_mr(self):
		self.run_test("끝", "{{ko-ipa}}", "kkŭt", "mr")
	def test_kkeut_yr(self):
		self.run_test("끝", "{{ko-ipa}}", "kkuth", "yr")
	def test_kkeut_ipa(self):
		self.run_test("끝", "{{ko-ipa}}", "[k͈ɯt̚]", "ipa")

	def test_dotbogi_ph(self):
		self.run_test("돋보기", "{{ko-IPA}}", "돋뽀기", "ph")
	def test_dotbogi_rr(self):
		self.run_test("돋보기", "{{ko-IPA}}", "dotbogi", "rr")
	def test_dotbogi_rrr(self):
		self.run_test("돋보기", "{{ko-IPA}}", "dodbogi", "rrr")
	def test_dotbogi_mr(self):
		self.run_test("돋보기", "{{ko-IPA}}", "totpogi", "mr")
	def test_dotbogi_yr(self):
		self.run_test("돋보기", "{{ko-IPA}}", "totpoki", "yr")
	def test_dotbogi_ipa(self):
		self.run_test("돋보기", "{{ko-IPA}}", "[to̞t̚p͈o̞ɡi]", "ipa")

	def test_matda_ph(self):
		self.run_test("맞다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-맞다.wav}}", "맏따", "ph")
	def test_matda_rr(self):
		self.run_test("맞다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-맞다.wav}}", "matda", "rr")
	def test_matda_rrr(self):
		self.run_test("맞다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-맞다.wav}}", "majda", "rrr")
	def test_matda_mr(self):
		self.run_test("맞다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-맞다.wav}}", "matta", "mr")
	def test_matda_yr(self):
		self.run_test("맞다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-맞다.wav}}", "macta", "yr")
	def test_matda_ipa(self):
		self.run_test("맞다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-맞다.wav}}", "[ma̠t̚t͈a̠]", "ipa")

	def test_usuri_ph(self):
		self.run_test("우수리", "{{ko-IPA}}", "우수리", "ph")
	def test_usuri_rr(self):
		self.run_test("우수리", "{{ko-IPA}}", "usuri", "rr")
	def test_usuri_rrr(self):
		self.run_test("우수리", "{{ko-IPA}}", "usuli", "rrr")
	def test_usuri_mr(self):
		self.run_test("우수리", "{{ko-IPA}}", "usuri", "mr")
	def test_usuri_yr(self):
		self.run_test("우수리", "{{ko-IPA}}", "wuswuli", "yr")
	def test_usuri_ipa(self):
		self.run_test("우수리", "{{ko-IPA}}", "[usʰuɾi]", "ipa")

	def test_holsori_ph(self):
		self.run_test("홀소리", "{{ko-IPA|com=1}}", "홀쏘리", "ph")
	def test_holsori_rr(self):
		self.run_test("홀소리", "{{ko-IPA|com=1}}", "holsori", "rr")
	def test_holsori_rrr(self):
		self.run_test("홀소리", "{{ko-IPA|com=1}}", "holsoli", "rrr")
	def test_holsori_mr(self):
		self.run_test("홀소리", "{{ko-IPA|com=1}}", "holssori", "mr")
	def test_holsori_yr(self):
		self.run_test("홀소리", "{{ko-IPA|com=1}}", "holqsoli", "yr")
	def test_holsori_ipa(self):
		self.run_test("홀소리", "{{ko-IPA|com=1}}", "[ɸʷo̞ɭs͈o̞ɾi]", "ipa")

	def test_geosensori_ph(self):
		self.run_test("거센소리", "{{ko-IPA}}", "거센소리", "ph")
	def test_geosensori_rr(self):
		self.run_test("거센소리", "{{ko-IPA}}", "geosensori", "rr")
	def test_geosensori_rrr(self):
		self.run_test("거센소리", "{{ko-IPA}}", "geosensoli", "rrr")
	def test_geosensori_mr(self):
		self.run_test("거센소리", "{{ko-IPA}}", "kŏsensori", "mr")
	def test_geosensori_yr(self):
		self.run_test("거센소리", "{{ko-IPA}}", "keseynsoli", "yr")
	def test_geosensori_ipa(self):
		self.run_test("거센소리", "{{ko-IPA}}", "[kʌ̹sʰe̞nsʰo̞ɾi]", "ipa")

	def test_doensori_ph(self):
		self.run_test("된소리", "{{ko-IPA|l=y}}", "뒌(ː)소리/된(ː)소리", "ph")
	def test_doensori_rr(self):
		self.run_test("된소리", "{{ko-IPA|l=y}}", "doensori", "rr")
	def test_doensori_rrr(self):
		self.run_test("된소리", "{{ko-IPA|l=y}}", "doensoli", "rrr")
	def test_doensori_mr(self):
		self.run_test("된소리", "{{ko-IPA|l=y}}", "toensori", "mr")
	def test_doensori_yr(self):
		self.run_test("된소리", "{{ko-IPA|l=y}}", "tōynsoli", "yr")
	def test_doensori_ipa(self):
		self.run_test("된소리", "{{ko-IPA|l=y}}", "[ˈtwe̞(ː)nsʰo̞ɾi] ~ [ˈtø̞(ː)nsʰo̞ɾi]", "ipa")

	def test_jaeum_ph(self):
		self.run_test("자음", "{{ko-ipa}}", "자음", "ph")
	def test_jaeum_rr(self):
		self.run_test("자음", "{{ko-ipa}}", "ja'eum", "rr")
	def test_jaeum_rrr(self):
		self.run_test("자음", "{{ko-ipa}}", "ja'eum", "rrr")
	def test_jaeum_mr(self):
		self.run_test("자음", "{{ko-ipa}}", "chaŭm", "mr")
	def test_jaeum_yr(self):
		self.run_test("자음", "{{ko-ipa}}", "caum", "yr")
	def test_jaeum_ipa(self):
		self.run_test("자음", "{{ko-ipa}}", "[t͡ɕa̠ɯm]", "ipa")

	def test_dasori_ph(self):
		self.run_test("닿소리", "{{ko-IPA}}", "다쏘리", "ph")
	def test_dasori_rr(self):
		self.run_test("닿소리", "{{ko-IPA}}", "dasori", "rr")
	def test_dasori_rrr(self):
		self.run_test("닿소리", "{{ko-IPA}}", "dahsoli", "rrr")
	def test_dasori_mr(self):
		self.run_test("닿소리", "{{ko-IPA}}", "tassori", "mr")
	def test_dasori_yr(self):
		self.run_test("닿소리", "{{ko-IPA}}", "tahsoli", "yr")
	def test_dasori_ipa(self):
		self.run_test("닿소리", "{{ko-IPA}}", "[ta̠s͈o̞ɾi]", "ipa")

	def test_yesasori_ph(self):
		self.run_test("예사소리", "{{ko-IPA|l=y}}", "예(ː)사소리", "ph")
	def test_yesasori_rr(self):
		self.run_test("예사소리", "{{ko-IPA|l=y}}", "yesasori", "rr")
	def test_yesasori_rrr(self):
		self.run_test("예사소리", "{{ko-IPA|l=y}}", "yesasoli", "rrr")
	def test_yesasori_mr(self):
		self.run_test("예사소리", "{{ko-IPA|l=y}}", "yesasori", "mr")
	def test_yesasori_yr(self):
		self.run_test("예사소리", "{{ko-IPA|l=y}}", "yēysasoli", "yr")
	def test_yesasori_ipa(self):
		self.run_test("예사소리", "{{ko-IPA|l=y}}", "[ˈje̞(ː)sʰa̠sʰo̞ɾi]", "ipa")














	def test_oe_ph(self):
		self.run_test("ㅚ", "{{ko-IPA|외}}", "웨/외", "ph")
	def test_oe_rr(self):
		self.run_test("ㅚ", "{{ko-IPA|외}}", "oe", "rr")
	def test_oe_rrr(self):
		self.run_test("ㅚ", "{{ko-IPA|외}}", "oe", "rrr")
	def test_oe_mr(self):
		self.run_test("ㅚ", "{{ko-IPA|외}}", "oe", "mr")
	def test_oe_yr(self):
		self.run_test("ㅚ", "{{ko-IPA|외}}", "oy", "yr")
	def test_oe_ipa(self):
		self.run_test("ㅚ", "{{ko-IPA|외}}", "[we̞] ~ [ø̞]", "ipa")


	def test_ui_ph(self):
		self.run_test("ㅢ", "{{ko-IPA|의}}", "의", "ph")
	def test_ui_rr(self):
		self.run_test("ㅢ", "{{ko-IPA|의}}", "ui", "rr")
	def test_ui_rrr(self):
		self.run_test("ㅢ", "{{ko-IPA|의}}", "ui", "rrr")
	def test_ui_mr(self):
		self.run_test("ㅢ", "{{ko-IPA|의}}", "ŭi", "mr")
	def test_ui_yr(self):
		self.run_test("ㅢ", "{{ko-IPA|의}}", "uy", "yr")
	def test_ui_ipa(self):
		self.run_test("ㅢ", "{{ko-IPA|의}}", "[ɰi]", "ipa")





	def test_sikdang_ph(self):
		self.run_test("식당", "{{ko-IPA}}", "식땅", "ph")
	def test_sikdang_rr(self):
		self.run_test("식당", "{{ko-IPA}}", "sikdang", "rr")
	def test_sikdang_rrr(self):
		self.run_test("식당", "{{ko-IPA}}", "sigdang", "rrr")
	def test_sikdang_mr(self):
		self.run_test("식당", "{{ko-IPA}}", "siktang", "mr")
	def test_sikdang_yr(self):
		self.run_test("식당", "{{ko-IPA}}", "siktang", "yr")
	def test_sikdang_ipa(self):
		self.run_test("식당", "{{ko-IPA}}", "[ɕʰik̚t͈a̠ŋ]", "ipa")

	def test_yeonpil_ph(self):
		self.run_test("연필", "{{ko-IPA}}", "연필", "ph")
	def test_yeonpil_rr(self):
		self.run_test("연필", "{{ko-IPA}}", "yeonpil", "rr")
	def test_yeonpil_rrr(self):
		self.run_test("연필", "{{ko-IPA}}", "yeonpil", "rrr")
	def test_yeonpil_mr(self):
		self.run_test("연필", "{{ko-IPA}}", "yŏnp'il", "mr")
	def test_yeonpil_yr(self):
		self.run_test("연필", "{{ko-IPA}}", "yenphil", "yr")
	def test_yeonpil_ipa(self):
		self.run_test("연필", "{{ko-IPA}}", "[jʌ̹npʰiɭ]", "ipa")

	def test_jeogeot_ph(self):
		self.run_test("저것", "{{ko-IPA}}", "저걷", "ph")
	def test_jeogeot_rr(self):
		self.run_test("저것", "{{ko-IPA}}", "jeogeot", "rr")
	def test_jeogeot_rrr(self):
		self.run_test("저것", "{{ko-IPA}}", "jeogeos", "rrr")
	def test_jeogeot_mr(self):
		self.run_test("저것", "{{ko-IPA}}", "chŏgŏt", "mr")
	def test_jeogeot_yr(self):
		self.run_test("저것", "{{ko-IPA}}", "cekes", "yr")
	def test_jeogeot_ipa(self):
		self.run_test("저것", "{{ko-IPA}}", "[t͡ɕʌ̹ɡʌ̹t̚]", "ipa")

	def test_geugeot_ph(self):
		self.run_test("그것", "{{ko-IPA|a=y}}", "그걷", "ph")
	def test_geugeot_rr(self):
		self.run_test("그것", "{{ko-IPA|a=y}}", "geugeot", "rr")
	def test_geugeot_rrr(self):
		self.run_test("그것", "{{ko-IPA|a=y}}", "geugeos", "rrr")
	def test_geugeot_mr(self):
		self.run_test("그것", "{{ko-IPA|a=y}}", "kŭgŏt", "mr")
	def test_geugeot_yr(self):
		self.run_test("그것", "{{ko-IPA|a=y}}", "kukes", "yr")
	def test_geugeot_ipa(self):
		self.run_test("그것", "{{ko-IPA|a=y}}", "[kɯɡʌ̹t̚]", "ipa")

	def test_noksaek_ph(self):
		self.run_test("녹색", "{{ko-IPA}}", "녹쌕/녹쎅", "ph")
	def test_noksaek_rr(self):
		self.run_test("녹색", "{{ko-IPA}}", "noksaek", "rr")
	def test_noksaek_rrr(self):
		self.run_test("녹색", "{{ko-IPA}}", "nogsaeg", "rrr")
	def test_noksaek_mr(self):
		self.run_test("녹색", "{{ko-IPA}}", "noksaek", "mr")
	def test_noksaek_yr(self):
		self.run_test("녹색", "{{ko-IPA}}", "nok.sayk", "yr")
	def test_noksaek_ipa(self):
		self.run_test("녹색", "{{ko-IPA}}", "[no̞ks͈ɛk̚] ~ [no̞ks͈e̞k̚]", "ipa")

	def test_Yunikodeu_ph(self):
		self.run_test("유니코드", "{{ko-IPA|cap=y}}", "유니코드", "ph")
	def test_Yunikodeu_rr(self):
		self.run_test("유니코드", "{{ko-IPA|cap=y}}", "Yunikodeu", "rr")
	def test_Yunikodeu_rrr(self):
		self.run_test("유니코드", "{{ko-IPA|cap=y}}", "Yunikodeu", "rrr")
	def test_Yunikodeu_mr(self):
		self.run_test("유니코드", "{{ko-IPA|cap=y}}", "Yunik'odŭ", "mr")
	def test_Yunikodeu_yr(self):
		self.run_test("유니코드", "{{ko-IPA|cap=y}}", "yuni.khotu", "yr")
	def test_Yunikodeu_ipa(self):
		self.run_test("유니코드", "{{ko-IPA|cap=y}}", "[junikʰo̞dɯ]", "ipa")

	def test_annyeonghaseyo_ph(self):
		self.run_test("안녕하세요", "{{ko-IPA|a=안녕하세요.ogg}}", "안녕하세요", "ph")
	def test_annyeonghaseyo_rr(self):
		self.run_test("안녕하세요", "{{ko-IPA|a=안녕하세요.ogg}}", "annyeonghaseyo", "rr")
	def test_annyeonghaseyo_rrr(self):
		self.run_test("안녕하세요", "{{ko-IPA|a=안녕하세요.ogg}}", "annyeonghaseyo", "rrr")
	def test_annyeonghaseyo_mr(self):
		self.run_test("안녕하세요", "{{ko-IPA|a=안녕하세요.ogg}}", "annyŏnghaseyo", "mr")
	def test_annyeonghaseyo_yr(self):
		self.run_test("안녕하세요", "{{ko-IPA|a=안녕하세요.ogg}}", "annyenghaseyyo", "yr")
	def test_annyeonghaseyo_ipa(self):
		self.run_test("안녕하세요", "{{ko-IPA|a=안녕하세요.ogg}}", "[a̠nɲʌ̹ŋɦa̠sʰe̞jo]", "ipa")

	def test_annyeonghada_ph(self):
		self.run_test("안녕하다", "{{ko-IPA}}", "안녕하다", "ph")
	def test_annyeonghada_rr(self):
		self.run_test("안녕하다", "{{ko-IPA}}", "annyeonghada", "rr")
	def test_annyeonghada_rrr(self):
		self.run_test("안녕하다", "{{ko-IPA}}", "annyeonghada", "rrr")
	def test_annyeonghada_mr(self):
		self.run_test("안녕하다", "{{ko-IPA}}", "annyŏnghada", "mr")
	def test_annyeonghada_yr(self):
		self.run_test("안녕하다", "{{ko-IPA}}", "annyenghata", "yr")
	def test_annyeonghada_ipa(self):
		self.run_test("안녕하다", "{{ko-IPA}}", "[a̠nɲʌ̹ŋɦa̠da̠]", "ipa")

	def test_annyeonghasimnikka_ph(self):
		self.run_test("안녕하십니까", "{{ko-IPA|a=안녕하십니까.ogg}}", "안녕하심니까", "ph")
	def test_annyeonghasimnikka_rr(self):
		self.run_test("안녕하십니까", "{{ko-IPA|a=안녕하십니까.ogg}}", "annyeonghasimnikka", "rr")
	def test_annyeonghasimnikka_rrr(self):
		self.run_test("안녕하십니까", "{{ko-IPA|a=안녕하십니까.ogg}}", "annyeonghasibni'kka", "rrr")
	def test_annyeonghasimnikka_mr(self):
		self.run_test("안녕하십니까", "{{ko-IPA|a=안녕하십니까.ogg}}", "annyŏnghasimnikka", "mr")
	def test_annyeonghasimnikka_yr(self):
		self.run_test("안녕하십니까", "{{ko-IPA|a=안녕하십니까.ogg}}", "annyenghasipni.kka", "yr")
	def test_annyeonghasimnikka_ipa(self):
		self.run_test("안녕하십니까", "{{ko-IPA|a=안녕하십니까.ogg}}", "[a̠nɲʌ̹ŋɦa̠ɕʰimnik͈a̠]", "ipa")

	def test_bangapda_ph(self):
		self.run_test("반갑다", "{{ko-IPA}}", "반갑따", "ph")
	def test_bangapda_rr(self):
		self.run_test("반갑다", "{{ko-IPA}}", "ban'gapda", "rr")
	def test_bangapda_rrr(self):
		self.run_test("반갑다", "{{ko-IPA}}", "bangabda", "rrr")
	def test_bangapda_mr(self):
		self.run_test("반갑다", "{{ko-IPA}}", "pan'gapta", "mr")
	def test_bangapda_yr(self):
		self.run_test("반갑다", "{{ko-IPA}}", "pankapta", "yr")
	def test_bangapda_ipa(self):
		self.run_test("반갑다", "{{ko-IPA}}", "[pa̠nɡa̠p̚t͈a̠]", "ipa")

	def test_gyesida_ph(self):
		self.run_test("계시다", "{{ko-IPA|l=y}}", "계(ː)시다/게(ː)시다", "ph")
	def test_gyesida_rr(self):
		self.run_test("계시다", "{{ko-IPA|l=y}}", "gyesida", "rr")
	def test_gyesida_rrr(self):
		self.run_test("계시다", "{{ko-IPA|l=y}}", "gyesida", "rrr")
	def test_gyesida_mr(self):
		self.run_test("계시다", "{{ko-IPA|l=y}}", "kyesida", "mr")
	def test_gyesida_yr(self):
		self.run_test("계시다", "{{ko-IPA|l=y}}", "kyēysita", "yr")
	def test_gyesida_ipa(self):
		self.run_test("계시다", "{{ko-IPA|l=y}}", "[ˈkje̞(ː)ɕʰida̠] ~ [ˈke̞(ː)ɕʰida̠]", "ipa")

	def test_mannada_ph(self):
		self.run_test("만나다", "{{ko-IPA|a=y}}", "만나다", "ph")
	def test_mannada_rr(self):
		self.run_test("만나다", "{{ko-IPA|a=y}}", "mannada", "rr")
	def test_mannada_rrr(self):
		self.run_test("만나다", "{{ko-IPA|a=y}}", "mannada", "rrr")
	def test_mannada_mr(self):
		self.run_test("만나다", "{{ko-IPA|a=y}}", "mannada", "mr")
	def test_mannada_yr(self):
		self.run_test("만나다", "{{ko-IPA|a=y}}", "mannata", "yr")
	def test_mannada_ipa(self):
		self.run_test("만나다", "{{ko-IPA|a=y}}", "[ma̠nna̠da̠]", "ipa")

	def test_sijakhada_ph(self):
		self.run_test("시작하다", "{{ko-IPA|l=y|a=y}}", "시(ː)자카다", "ph")
	def test_sijakhada_rr(self):
		self.run_test("시작하다", "{{ko-IPA|l=y|a=y}}", "sijakhada", "rr")
	def test_sijakhada_rrr(self):
		self.run_test("시작하다", "{{ko-IPA|l=y|a=y}}", "sijaghada", "rrr")
	def test_sijakhada_mr(self):
		self.run_test("시작하다", "{{ko-IPA|l=y|a=y}}", "sijakhada", "mr")
	def test_sijakhada_yr(self):
		self.run_test("시작하다", "{{ko-IPA|l=y|a=y}}", "sīcak.hata", "yr")
	def test_sijakhada_ipa(self):
		self.run_test("시작하다", "{{ko-IPA|l=y|a=y}}", "[ˈɕʰi(ː)d͡ʑa̠kʰa̠da̠]", "ipa")
	def test_sijakhada_ph_1(self):
		self.run_test("시작하다", "{{ko-IPA|a=y}}", "시자카다", "ph")
	def test_sijakhada_rr_1(self):
		self.run_test("시작하다", "{{ko-IPA|a=y}}", "sijakhada", "rr")
	def test_sijakhada_rrr_1(self):
		self.run_test("시작하다", "{{ko-IPA|a=y}}", "sijaghada", "rrr")
	def test_sijakhada_mr_1(self):
		self.run_test("시작하다", "{{ko-IPA|a=y}}", "sijakhada", "mr")
	def test_sijakhada_yr_1(self):
		self.run_test("시작하다", "{{ko-IPA|a=y}}", "sicak.hata", "yr")
	def test_sijakhada_ipa_1(self):
		self.run_test("시작하다", "{{ko-IPA|a=y}}", "[ɕʰid͡ʑa̠kʰa̠da̠]", "ipa")

	def test_gasida_ph(self):
		self.run_test("가시다", "{{ko-IPA}}", "가시다", "ph")
	def test_gasida_rr(self):
		self.run_test("가시다", "{{ko-IPA}}", "gasida", "rr")
	def test_gasida_rrr(self):
		self.run_test("가시다", "{{ko-IPA}}", "gasida", "rrr")
	def test_gasida_mr(self):
		self.run_test("가시다", "{{ko-IPA}}", "kasida", "mr")
	def test_gasida_yr(self):
		self.run_test("가시다", "{{ko-IPA}}", "kasita", "yr")
	def test_gasida_ipa(self):
		self.run_test("가시다", "{{ko-IPA}}", "[ka̠ɕʰida̠]", "ipa")

	def test_hakgyo_ph(self):
		self.run_test("학교", "{{ko-IPA|a=y}}", "학꾜", "ph")
	def test_hakgyo_rr(self):
		self.run_test("학교", "{{ko-IPA|a=y}}", "hakgyo", "rr")
	def test_hakgyo_rrr(self):
		self.run_test("학교", "{{ko-IPA|a=y}}", "haggyo", "rrr")
	def test_hakgyo_mr(self):
		self.run_test("학교", "{{ko-IPA|a=y}}", "hakkyo", "mr")
	def test_hakgyo_yr(self):
		self.run_test("학교", "{{ko-IPA|a=y}}", "hak.kyo", "yr")
	def test_hakgyo_ipa(self):
		self.run_test("학교", "{{ko-IPA|a=y}}", "[ha̠k̚k͈jo]", "ipa")

	def test_munbeop_ph(self):
		self.run_test("문법", "{{ko-IPA|com=1}}", "문뻡", "ph")
	def test_munbeop_rr(self):
		self.run_test("문법", "{{ko-IPA|com=1}}", "munbeop", "rr")
	def test_munbeop_rrr(self):
		self.run_test("문법", "{{ko-IPA|com=1}}", "munbeob", "rrr")
	def test_munbeop_mr(self):
		self.run_test("문법", "{{ko-IPA|com=1}}", "munpŏp", "mr")
	def test_munbeop_yr(self):
		self.run_test("문법", "{{ko-IPA|com=1}}", "munqpep", "yr")
	def test_munbeop_ipa(self):
		self.run_test("문법", "{{ko-IPA|com=1}}", "[munp͈ʌ̹p̚]", "ipa")

	def test_yeonseup_ph(self):
		self.run_test("연습", "{{ko-IPA|l=y}}", "연(ː)습", "ph")
	def test_yeonseup_rr(self):
		self.run_test("연습", "{{ko-IPA|l=y}}", "yeonseup", "rr")
	def test_yeonseup_rrr(self):
		self.run_test("연습", "{{ko-IPA|l=y}}", "yeonseub", "rrr")
	def test_yeonseup_mr(self):
		self.run_test("연습", "{{ko-IPA|l=y}}", "yŏnsŭp", "mr")
	def test_yeonseup_yr(self):
		self.run_test("연습", "{{ko-IPA|l=y}}", "yēnsup", "yr")
	def test_yeonseup_ipa(self):
		self.run_test("연습", "{{ko-IPA|l=y}}", "[ˈjɘ(ː)nsʰɯp̚]", "ipa")

	def test_eohwi_ph(self):
		self.run_test("어휘", "{{ko-IPA|l=y}}", "어(ː)휘", "ph")
	def test_eohwi_rr(self):
		self.run_test("어휘", "{{ko-IPA|l=y}}", "eohwi", "rr")
	def test_eohwi_rrr(self):
		self.run_test("어휘", "{{ko-IPA|l=y}}", "eohwi", "rrr")
	def test_eohwi_mr(self):
		self.run_test("어휘", "{{ko-IPA|l=y}}", "ŏhwi", "mr")
	def test_eohwi_yr(self):
		self.run_test("어휘", "{{ko-IPA|l=y}}", "ēhwi", "yr")
	def test_eohwi_ipa(self):
		self.run_test("어휘", "{{ko-IPA|l=y}}", "[ˈɘ(ː)ɦɥi] ~ [ˈɘ(ː)ɦy]", "ipa")

	def test_e_ph(self):
		self.run_test("에", "{{ko-IPA}}", "에", "ph")
	def test_e_rr(self):
		self.run_test("에", "{{ko-IPA}}", "e", "rr")
	def test_e_rrr(self):
		self.run_test("에", "{{ko-IPA}}", "e", "rrr")
	def test_e_mr(self):
		self.run_test("에", "{{ko-IPA}}", "e", "mr")
	def test_e_yr(self):
		self.run_test("에", "{{ko-IPA}}", "ey", "yr")
	def test_e_ipa(self):
		self.run_test("에", "{{ko-IPA}}", "[e̞]", "ipa")

	def test_ege_ph(self):
		self.run_test("-에게", "{{ko-IPA}}", "에게", "ph")
	def test_ege_rr(self):
		self.run_test("-에게", "{{ko-IPA}}", "ege", "rr")
	def test_ege_rrr(self):
		self.run_test("-에게", "{{ko-IPA}}", "ege", "rrr")
	def test_ege_mr(self):
		self.run_test("-에게", "{{ko-IPA}}", "ege", "mr")
	def test_ege_yr(self):
		self.run_test("-에게", "{{ko-IPA}}", "eykey", "yr")
	def test_ege_ipa(self):
		self.run_test("-에게", "{{ko-IPA}}", "[e̞ɡe̞]", "ipa")

	def test_at_ph(self):
		self.run_test("앗", "{{ko-IPA}}", "앋", "ph")
	def test_at_rr(self):
		self.run_test("앗", "{{ko-IPA}}", "at", "rr")
	def test_at_rrr(self):
		self.run_test("앗", "{{ko-IPA}}", "as", "rrr")
	def test_at_mr(self):
		self.run_test("앗", "{{ko-IPA}}", "at", "mr")
	def test_at_yr(self):
		self.run_test("앗", "{{ko-IPA}}", "as", "yr")
	def test_at_ipa(self):
		self.run_test("앗", "{{ko-IPA}}", "[a̠t̚]", "ipa")

	def test_oraeganman_ph(self):
		self.run_test("오래간만", "{{ko-IPA}}", "오래간만/오레간만", "ph")
	def test_oraeganman_rr(self):
		self.run_test("오래간만", "{{ko-IPA}}", "oraeganman", "rr")
	def test_oraeganman_rrr(self):
		self.run_test("오래간만", "{{ko-IPA}}", "olaeganman", "rrr")
	def test_oraeganman_mr(self):
		self.run_test("오래간만", "{{ko-IPA}}", "oraeganman", "mr")
	def test_oraeganman_yr(self):
		self.run_test("오래간만", "{{ko-IPA}}", "olaykanman", "yr")
	def test_oraeganman_ipa(self):
		self.run_test("오래간만", "{{ko-IPA}}", "[o̞ɾɛɡa̠nma̠n] ~ [o̞ɾe̞ɡa̠nma̠n]", "ipa")


	def test_seonsaeng_ph(self):
		self.run_test("선생", "{{ko-IPA}}", "선생/선셍", "ph")
	def test_seonsaeng_rr(self):
		self.run_test("선생", "{{ko-IPA}}", "seonsaeng", "rr")
	def test_seonsaeng_rrr(self):
		self.run_test("선생", "{{ko-IPA}}", "seonsaeng", "rrr")
	def test_seonsaeng_mr(self):
		self.run_test("선생", "{{ko-IPA}}", "sŏnsaeng", "mr")
	def test_seonsaeng_yr(self):
		self.run_test("선생", "{{ko-IPA}}", "sensayng", "yr")
	def test_seonsaeng_ipa(self):
		self.run_test("선생", "{{ko-IPA}}", "[sʰʌ̹nsʰɛŋ] ~ [sʰʌ̹nsʰe̞ŋ]", "ipa")

	def test_nim_ph(self):
		self.run_test("님", "{{ko-IPA}}", "님", "ph")
	def test_nim_rr(self):
		self.run_test("님", "{{ko-IPA}}", "nim", "rr")
	def test_nim_rrr(self):
		self.run_test("님", "{{ko-IPA}}", "nim", "rrr")
	def test_nim_mr(self):
		self.run_test("님", "{{ko-IPA}}", "nim", "mr")
	def test_nim_yr(self):
		self.run_test("님", "{{ko-IPA}}", "nim", "yr")
	def test_nim_ipa(self):
		self.run_test("님", "{{ko-IPA}}", "[nim]", "ipa")

	def test_oraeganmanimnida_ph(self):
		self.run_test("오래간만입니다", "{{ko-IPA|a=오래간만 입니다.ogg}}", "오래간마님니다/오레간마님니다", "ph")
	def test_oraeganmanimnida_rr(self):
		self.run_test("오래간만입니다", "{{ko-IPA|a=오래간만 입니다.ogg}}", "oraeganmanimnida", "rr")
	def test_oraeganmanimnida_rrr(self):
		self.run_test("오래간만입니다", "{{ko-IPA|a=오래간만 입니다.ogg}}", "olaeganman'ibnida", "rrr")
	def test_oraeganmanimnida_mr(self):
		self.run_test("오래간만입니다", "{{ko-IPA|a=오래간만 입니다.ogg}}", "oraeganmanimnida", "mr")
	def test_oraeganmanimnida_yr(self):
		self.run_test("오래간만입니다", "{{ko-IPA|a=오래간만 입니다.ogg}}", "olaykanman.ipnita", "yr")
	def test_oraeganmanimnida_ipa(self):
		self.run_test("오래간만입니다", "{{ko-IPA|a=오래간만 입니다.ogg}}", "[o̞ɾɛɡa̠nma̠nimnida̠] ~ [o̞ɾe̞ɡa̠nma̠nimnida̠]", "ipa")

	def test_sukje_ph(self):
		self.run_test("숙제", "{{ko-IPA}}", "숙쩨", "ph")
	def test_sukje_rr(self):
		self.run_test("숙제", "{{ko-IPA}}", "sukje", "rr")
	def test_sukje_rrr(self):
		self.run_test("숙제", "{{ko-IPA}}", "sugje", "rrr")
	def test_sukje_mr(self):
		self.run_test("숙제", "{{ko-IPA}}", "sukche", "mr")
	def test_sukje_yr(self):
		self.run_test("숙제", "{{ko-IPA}}", "swukcey", "yr")
	def test_sukje_ipa(self):
		self.run_test("숙제", "{{ko-IPA}}", "[sʰuk̚t͡ɕ͈e̞]", "ipa")

	def test_gongbuhada_ph(self):
		self.run_test("공부하다", "{{ko-IPA}}", "공부하다", "ph")
	def test_gongbuhada_rr(self):
		self.run_test("공부하다", "{{ko-IPA}}", "gongbuhada", "rr")
	def test_gongbuhada_rrr(self):
		self.run_test("공부하다", "{{ko-IPA}}", "gongbuhada", "rrr")
	def test_gongbuhada_mr(self):
		self.run_test("공부하다", "{{ko-IPA}}", "kongbuhada", "mr")
	def test_gongbuhada_yr(self):
		self.run_test("공부하다", "{{ko-IPA}}", "kongpuhata", "yr")
	def test_gongbuhada_ipa(self):
		self.run_test("공부하다", "{{ko-IPA}}", "[ko̞ŋbuɦa̠da̠]", "ipa")

	def test_gongbu_ph(self):
		self.run_test("공부", "{{ko-IPA}}", "공부", "ph")
	def test_gongbu_rr(self):
		self.run_test("공부", "{{ko-IPA}}", "gongbu", "rr")
	def test_gongbu_rrr(self):
		self.run_test("공부", "{{ko-IPA}}", "gongbu", "rrr")
	def test_gongbu_mr(self):
		self.run_test("공부", "{{ko-IPA}}", "kongbu", "mr")
	def test_gongbu_yr(self):
		self.run_test("공부", "{{ko-IPA}}", "kongpu", "yr")
	def test_gongbu_ipa(self):
		self.run_test("공부", "{{ko-IPA}}", "[ko̞ŋbu]", "ipa")
	def test_gongbu_ph_1(self):
		self.run_test("공부", "{{ko-IPA|l=y}}", "공(ː)부", "ph")
	def test_gongbu_rr_1(self):
		self.run_test("공부", "{{ko-IPA|l=y}}", "gongbu", "rr")
	def test_gongbu_rrr_1(self):
		self.run_test("공부", "{{ko-IPA|l=y}}", "gongbu", "rrr")
	def test_gongbu_mr_1(self):
		self.run_test("공부", "{{ko-IPA|l=y}}", "kongbu", "mr")
	def test_gongbu_yr_1(self):
		self.run_test("공부", "{{ko-IPA|l=y}}", "kōngpu", "yr")
	def test_gongbu_ipa_1(self):
		self.run_test("공부", "{{ko-IPA|l=y}}", "[ˈko̞(ː)ŋbu]", "ipa")
	def test_Gongbu_ph_2(self):
		self.run_test("공부", "{{ko-IPA|cap=y}}", "공부", "ph")
	def test_Gongbu_rr_2(self):
		self.run_test("공부", "{{ko-IPA|cap=y}}", "Gongbu", "rr")
	def test_Gongbu_rrr_2(self):
		self.run_test("공부", "{{ko-IPA|cap=y}}", "Gongbu", "rrr")
	def test_Gongbu_mr_2(self):
		self.run_test("공부", "{{ko-IPA|cap=y}}", "Kongbu", "mr")
	def test_Gongbu_yr_2(self):
		self.run_test("공부", "{{ko-IPA|cap=y}}", "kongpu", "yr")
	def test_Gongbu_ipa_2(self):
		self.run_test("공부", "{{ko-IPA|cap=y}}", "[ko̞ŋbu]", "ipa")

	def test_jinji_ph(self):
		self.run_test("진지", "{{ko-IPA|l=y}}", "진(ː)지", "ph")
	def test_jinji_rr(self):
		self.run_test("진지", "{{ko-IPA|l=y}}", "jinji", "rr")
	def test_jinji_rrr(self):
		self.run_test("진지", "{{ko-IPA|l=y}}", "jinji", "rrr")
	def test_jinji_mr(self):
		self.run_test("진지", "{{ko-IPA|l=y}}", "chinji", "mr")
	def test_jinji_yr(self):
		self.run_test("진지", "{{ko-IPA|l=y}}", "cīn.ci", "yr")
	def test_jinji_ipa(self):
		self.run_test("진지", "{{ko-IPA|l=y}}", "[ˈt͡ɕi(ː)ɲd͡ʑi]", "ipa")
	def test_jinji_ph_1(self):
		self.run_test("진지", "{{ko-IPA}}", "진지", "ph")
	def test_jinji_rr_1(self):
		self.run_test("진지", "{{ko-IPA}}", "jinji", "rr")
	def test_jinji_rrr_1(self):
		self.run_test("진지", "{{ko-IPA}}", "jinji", "rrr")
	def test_jinji_mr_1(self):
		self.run_test("진지", "{{ko-IPA}}", "chinji", "mr")
	def test_jinji_yr_1(self):
		self.run_test("진지", "{{ko-IPA}}", "cin.ci", "yr")
	def test_jinji_ipa_1(self):
		self.run_test("진지", "{{ko-IPA}}", "[t͡ɕiɲd͡ʑi]", "ipa")
	def test_jinji_ph_2(self):
		self.run_test("진지", "{{ko-IPA}}", "진지", "ph")
	def test_jinji_rr_2(self):
		self.run_test("진지", "{{ko-IPA}}", "jinji", "rr")
	def test_jinji_rrr_2(self):
		self.run_test("진지", "{{ko-IPA}}", "jinji", "rrr")
	def test_jinji_mr_2(self):
		self.run_test("진지", "{{ko-IPA}}", "chinji", "mr")
	def test_jinji_yr_2(self):
		self.run_test("진지", "{{ko-IPA}}", "cin.ci", "yr")
	def test_jinji_ipa_2(self):
		self.run_test("진지", "{{ko-IPA}}", "[t͡ɕiɲd͡ʑi]", "ipa")

	def test_halmeonim_ph(self):
		self.run_test("할머님", "{{ko-ipa}}", "할머님", "ph")
	def test_halmeonim_rr(self):
		self.run_test("할머님", "{{ko-ipa}}", "halmeonim", "rr")
	def test_halmeonim_rrr(self):
		self.run_test("할머님", "{{ko-ipa}}", "halmeonim", "rrr")
	def test_halmeonim_mr(self):
		self.run_test("할머님", "{{ko-ipa}}", "halmŏnim", "mr")
	def test_halmeonim_yr(self):
		self.run_test("할머님", "{{ko-ipa}}", "hal.menim", "yr")
	def test_halmeonim_ipa(self):
		self.run_test("할머님", "{{ko-ipa}}", "[ha̠ɭmʌ̹nim]", "ipa")

	def test_orabeoni_ph(self):
		self.run_test("오라버니", "{{ko-IPA}}", "오라버니", "ph")
	def test_orabeoni_rr(self):
		self.run_test("오라버니", "{{ko-IPA}}", "orabeoni", "rr")
	def test_orabeoni_rrr(self):
		self.run_test("오라버니", "{{ko-IPA}}", "olabeoni", "rrr")
	def test_orabeoni_mr(self):
		self.run_test("오라버니", "{{ko-IPA}}", "orabŏni", "mr")
	def test_orabeoni_yr(self):
		self.run_test("오라버니", "{{ko-IPA}}", "olapeni", "yr")
	def test_orabeoni_ipa(self):
		self.run_test("오라버니", "{{ko-IPA}}", "[o̞ɾa̠bʌ̹ni]", "ipa")

	def test_orabeonim_ph(self):
		self.run_test("오라버님", "{{ko-IPA}}", "오라버님", "ph")
	def test_orabeonim_rr(self):
		self.run_test("오라버님", "{{ko-IPA}}", "orabeonim", "rr")
	def test_orabeonim_rrr(self):
		self.run_test("오라버님", "{{ko-IPA}}", "olabeonim", "rrr")
	def test_orabeonim_mr(self):
		self.run_test("오라버님", "{{ko-IPA}}", "orabŏnim", "mr")
	def test_orabeonim_yr(self):
		self.run_test("오라버님", "{{ko-IPA}}", "olapenim", "yr")
	def test_orabeonim_ipa(self):
		self.run_test("오라버님", "{{ko-IPA}}", "[o̞ɾa̠bʌ̹nim]", "ipa")

	def test_hyeongnim_ph(self):
		self.run_test("형님", "{{ko-IPA}}", "형님", "ph")
	def test_hyeongnim_rr(self):
		self.run_test("형님", "{{ko-IPA}}", "hyeongnim", "rr")
	def test_hyeongnim_rrr(self):
		self.run_test("형님", "{{ko-IPA}}", "hyeongnim", "rrr")
	def test_hyeongnim_mr(self):
		self.run_test("형님", "{{ko-IPA}}", "hyŏngnim", "mr")
	def test_hyeongnim_yr(self):
		self.run_test("형님", "{{ko-IPA}}", "hyengnim", "yr")
	def test_hyeongnim_ipa(self):
		self.run_test("형님", "{{ko-IPA}}", "[çʌ̹ŋnim]", "ipa")

	def test_nunim_ph(self):
		self.run_test("누님", "{{ko-IPA}}", "누님", "ph")
	def test_nunim_rr(self):
		self.run_test("누님", "{{ko-IPA}}", "nunim", "rr")
	def test_nunim_rrr(self):
		self.run_test("누님", "{{ko-IPA}}", "nunim", "rrr")
	def test_nunim_mr(self):
		self.run_test("누님", "{{ko-IPA}}", "nunim", "mr")
	def test_nunim_yr(self):
		self.run_test("누님", "{{ko-IPA}}", "nwunim", "yr")
	def test_nunim_ipa(self):
		self.run_test("누님", "{{ko-IPA}}", "[nunim]", "ipa")

	def test_deusida_ph(self):
		self.run_test("드시다", "{{ko-IPA}}", "드시다", "ph")
	def test_deusida_rr(self):
		self.run_test("드시다", "{{ko-IPA}}", "deusida", "rr")
	def test_deusida_rrr(self):
		self.run_test("드시다", "{{ko-IPA}}", "deusida", "rrr")
	def test_deusida_mr(self):
		self.run_test("드시다", "{{ko-IPA}}", "tŭsida", "mr")
	def test_deusida_yr(self):
		self.run_test("드시다", "{{ko-IPA}}", "tusita", "yr")
	def test_deusida_ipa(self):
		self.run_test("드시다", "{{ko-IPA}}", "[tɯɕʰida̠]", "ipa")

	def test_masida_ph(self):
		self.run_test("마시다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-마시다.wav}}", "마시다", "ph")
	def test_masida_rr(self):
		self.run_test("마시다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-마시다.wav}}", "masida", "rr")
	def test_masida_rrr(self):
		self.run_test("마시다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-마시다.wav}}", "masida", "rrr")
	def test_masida_mr(self):
		self.run_test("마시다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-마시다.wav}}", "masida", "mr")
	def test_masida_yr(self):
		self.run_test("마시다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-마시다.wav}}", "masita", "yr")
	def test_masida_ipa(self):
		self.run_test("마시다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-마시다.wav}}", "[ma̠ɕʰida̠]", "ipa")

	def test_japsusida_ph(self):
		self.run_test("잡수시다", "{{ko-IPA}}", "잡쑤시다", "ph")
	def test_japsusida_rr(self):
		self.run_test("잡수시다", "{{ko-IPA}}", "japsusida", "rr")
	def test_japsusida_rrr(self):
		self.run_test("잡수시다", "{{ko-IPA}}", "jabsusida", "rrr")
	def test_japsusida_mr(self):
		self.run_test("잡수시다", "{{ko-IPA}}", "chapsusida", "mr")
	def test_japsusida_yr(self):
		self.run_test("잡수시다", "{{ko-IPA}}", "cap.swusita", "yr")
	def test_japsusida_ipa(self):
		self.run_test("잡수시다", "{{ko-IPA}}", "[t͡ɕa̠ps͈uɕʰida̠]", "ipa")

	def test_jumusida_ph(self):
		self.run_test("주무시다", "{{ko-IPA}}", "주무시다", "ph")
	def test_jumusida_rr(self):
		self.run_test("주무시다", "{{ko-IPA}}", "jumusida", "rr")
	def test_jumusida_rrr(self):
		self.run_test("주무시다", "{{ko-IPA}}", "jumusida", "rrr")
	def test_jumusida_mr(self):
		self.run_test("주무시다", "{{ko-IPA}}", "chumusida", "mr")
	def test_jumusida_yr(self):
		self.run_test("주무시다", "{{ko-IPA}}", "cwumusita", "yr")
	def test_jumusida_ipa(self):
		self.run_test("주무시다", "{{ko-IPA}}", "[t͡ɕumuɕʰida̠]", "ipa")

	def test_jada_ph(self):
		self.run_test("자다", "{{ko-IPA|a=Ko-자다.oga}}", "자다", "ph")
	def test_jada_rr(self):
		self.run_test("자다", "{{ko-IPA|a=Ko-자다.oga}}", "jada", "rr")
	def test_jada_rrr(self):
		self.run_test("자다", "{{ko-IPA|a=Ko-자다.oga}}", "jada", "rrr")
	def test_jada_mr(self):
		self.run_test("자다", "{{ko-IPA|a=Ko-자다.oga}}", "chada", "mr")
	def test_jada_yr(self):
		self.run_test("자다", "{{ko-IPA|a=Ko-자다.oga}}", "cata", "yr")
	def test_jada_ipa(self):
		self.run_test("자다", "{{ko-IPA|a=Ko-자다.oga}}", "[t͡ɕa̠da̠]", "ipa")

	def test_deurida_ph(self):
		self.run_test("드리다", "{{ko-IPA}}", "드리다", "ph")
	def test_deurida_rr(self):
		self.run_test("드리다", "{{ko-IPA}}", "deurida", "rr")
	def test_deurida_rrr(self):
		self.run_test("드리다", "{{ko-IPA}}", "deulida", "rrr")
	def test_deurida_mr(self):
		self.run_test("드리다", "{{ko-IPA}}", "tŭrida", "mr")
	def test_deurida_yr(self):
		self.run_test("드리다", "{{ko-IPA}}", "tulita", "yr")
	def test_deurida_ipa(self):
		self.run_test("드리다", "{{ko-IPA}}", "[tɯɾida̠]", "ipa")

	def test_oman_ph(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "오(ː)만", "ph")
	def test_oman_rr(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "oman", "rr")
	def test_oman_rrr(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "oman", "rrr")
	def test_oman_mr(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "oman", "mr")
	def test_oman_yr(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "ōman", "yr")
	def test_oman_ipa(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "[ˈo̞(ː)ma̠n]", "ipa")
	def test_oman_ph_1(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "오(ː)만", "ph")
	def test_oman_rr_1(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "oman", "rr")
	def test_oman_rrr_1(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "oman", "rrr")
	def test_oman_mr_1(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "oman", "mr")
	def test_oman_yr_1(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "ōman", "yr")
	def test_oman_ipa_1(self):
		self.run_test("오만", "{{ko-IPA|l=y}}", "[ˈo̞(ː)ma̠n]", "ipa")
	def test_Oman_ph_2(self):
		self.run_test("오만", "{{ko-IPA|cap=y}}", "오만", "ph")
	def test_Oman_rr_2(self):
		self.run_test("오만", "{{ko-IPA|cap=y}}", "Oman", "rr")
	def test_Oman_rrr_2(self):
		self.run_test("오만", "{{ko-IPA|cap=y}}", "Oman", "rrr")
	def test_Oman_mr_2(self):
		self.run_test("오만", "{{ko-IPA|cap=y}}", "Oman", "mr")
	def test_Oman_yr_2(self):
		self.run_test("오만", "{{ko-IPA|cap=y}}", "oman", "yr")
	def test_Oman_ipa_2(self):
		self.run_test("오만", "{{ko-IPA|cap=y}}", "[o̞ma̠n]", "ipa")

	def test_Millano_ph(self):
		self.run_test("밀라노", "{{ko-IPA|cap=y}}", "밀라노", "ph")
	def test_Millano_rr(self):
		self.run_test("밀라노", "{{ko-IPA|cap=y}}", "Millano", "rr")
	def test_Millano_rrr(self):
		self.run_test("밀라노", "{{ko-IPA|cap=y}}", "Millano", "rrr")
	def test_Millano_mr(self):
		self.run_test("밀라노", "{{ko-IPA|cap=y}}", "Millano", "mr")
	def test_Millano_yr(self):
		self.run_test("밀라노", "{{ko-IPA|cap=y}}", "millano", "yr")
	def test_Millano_ipa(self):
		self.run_test("밀라노", "{{ko-IPA|cap=y}}", "[miɭɭa̠no̞]", "ipa")

	def test_Roma_ph(self):
		self.run_test("로마", "{{ko-IPA|cap=y}}", "로마", "ph")
	def test_Roma_rr(self):
		self.run_test("로마", "{{ko-IPA|cap=y}}", "Roma", "rr")
	def test_Roma_rrr(self):
		self.run_test("로마", "{{ko-IPA|cap=y}}", "Loma", "rrr")
	def test_Roma_mr(self):
		self.run_test("로마", "{{ko-IPA|cap=y}}", "Roma", "mr")
	def test_Roma_yr(self):
		self.run_test("로마", "{{ko-IPA|cap=y}}", "loma", "yr")
	def test_Roma_ipa(self):
		self.run_test("로마", "{{ko-IPA|cap=y}}", "[ɾo̞ma̠]", "ipa")

	def test_Moroni_ph(self):
		self.run_test("모로니", "{{ko-IPA|cap=y}}", "모로니", "ph")
	def test_Moroni_rr(self):
		self.run_test("모로니", "{{ko-IPA|cap=y}}", "Moroni", "rr")
	def test_Moroni_rrr(self):
		self.run_test("모로니", "{{ko-IPA|cap=y}}", "Moloni", "rrr")
	def test_Moroni_mr(self):
		self.run_test("모로니", "{{ko-IPA|cap=y}}", "Moroni", "mr")
	def test_Moroni_yr(self):
		self.run_test("모로니", "{{ko-IPA|cap=y}}", "moloni", "yr")
	def test_Moroni_ipa(self):
		self.run_test("모로니", "{{ko-IPA|cap=y}}", "[mo̞ɾo̞ni]", "ipa")

	def test_Nairobi_ph(self):
		self.run_test("나이로비", "{{ko-IPA|cap=y}}", "나이로비", "ph")
	def test_Nairobi_rr(self):
		self.run_test("나이로비", "{{ko-IPA|cap=y}}", "Nairobi", "rr")
	def test_Nairobi_rrr(self):
		self.run_test("나이로비", "{{ko-IPA|cap=y}}", "Nailobi", "rrr")
	def test_Nairobi_mr(self):
		self.run_test("나이로비", "{{ko-IPA|cap=y}}", "Nairobi", "mr")
	def test_Nairobi_yr(self):
		self.run_test("나이로비", "{{ko-IPA|cap=y}}", "nailopi", "yr")
	def test_Nairobi_ipa(self):
		self.run_test("나이로비", "{{ko-IPA|cap=y}}", "[na̠iɾo̞bi]", "ipa")

	def test_Illinoi_ph(self):
		self.run_test("일리노이", "{{ko-IPA|cap=y}}", "일리노이", "ph")
	def test_Illinoi_rr(self):
		self.run_test("일리노이", "{{ko-IPA|cap=y}}", "Illinoi", "rr")
	def test_Illinoi_rrr(self):
		self.run_test("일리노이", "{{ko-IPA|cap=y}}", "Illinoi", "rrr")
	def test_Illinoi_mr(self):
		self.run_test("일리노이", "{{ko-IPA|cap=y}}", "Illinoi", "mr")
	def test_Illinoi_yr(self):
		self.run_test("일리노이", "{{ko-IPA|cap=y}}", "illinoi", "yr")
	def test_Illinoi_ipa(self):
		self.run_test("일리노이", "{{ko-IPA|cap=y}}", "[iʎʎino̞i]", "ipa")

	def test_Bollibia_ph(self):
		self.run_test("볼리비아", "{{ko-IPA|cap=y}}", "볼리비아", "ph")
	def test_Bollibia_rr(self):
		self.run_test("볼리비아", "{{ko-IPA|cap=y}}", "Bollibia", "rr")
	def test_Bollibia_rrr(self):
		self.run_test("볼리비아", "{{ko-IPA|cap=y}}", "Bollibia", "rrr")
	def test_Bollibia_mr(self):
		self.run_test("볼리비아", "{{ko-IPA|cap=y}}", "Pollibia", "mr")
	def test_Bollibia_yr(self):
		self.run_test("볼리비아", "{{ko-IPA|cap=y}}", "pollipia", "yr")
	def test_Bollibia_ipa(self):
		self.run_test("볼리비아", "{{ko-IPA|cap=y}}", "[po̞ʎʎibia̠]", "ipa")

	def test_bon_ph(self):
		self.run_test("본", "{{ko-IPA}}", "본", "ph")
	def test_bon_rr(self):
		self.run_test("본", "{{ko-IPA}}", "bon", "rr")
	def test_bon_rrr(self):
		self.run_test("본", "{{ko-IPA}}", "bon", "rrr")
	def test_bon_mr(self):
		self.run_test("본", "{{ko-IPA}}", "pon", "mr")
	def test_bon_yr(self):
		self.run_test("본", "{{ko-IPA}}", "pon", "yr")
	def test_bon_ipa(self):
		self.run_test("본", "{{ko-IPA}}", "[po̞n]", "ipa")

	def test_baiollin_ph(self):
		self.run_test("바이올린", "{{ko-IPA}}", "바이올린", "ph")
	def test_baiollin_rr(self):
		self.run_test("바이올린", "{{ko-IPA}}", "baiollin", "rr")
	def test_baiollin_rrr(self):
		self.run_test("바이올린", "{{ko-IPA}}", "baiollin", "rrr")
	def test_baiollin_mr(self):
		self.run_test("바이올린", "{{ko-IPA}}", "paiollin", "mr")
	def test_baiollin_yr(self):
		self.run_test("바이올린", "{{ko-IPA}}", "paiollin", "yr")
	def test_baiollin_ipa(self):
		self.run_test("바이올린", "{{ko-IPA}}", "[pa̠io̞ʎʎin]", "ipa")

	def test_rok_ph(self):
		self.run_test("록", "{{ko-IPA}}", "록", "ph")
	def test_rok_rr(self):
		self.run_test("록", "{{ko-IPA}}", "rok", "rr")
	def test_rok_rrr(self):
		self.run_test("록", "{{ko-IPA}}", "log", "rrr")
	def test_rok_mr(self):
		self.run_test("록", "{{ko-IPA}}", "rok", "mr")
	def test_rok_yr(self):
		self.run_test("록", "{{ko-IPA}}", "lok", "yr")
	def test_rok_ipa(self):
		self.run_test("록", "{{ko-IPA}}", "[ɾo̞k̚]", "ipa")

	def test_Gabong_ph(self):
		self.run_test("가봉", "{{ko-IPA|cap=y}}", "가봉", "ph")
	def test_Gabong_rr(self):
		self.run_test("가봉", "{{ko-IPA|cap=y}}", "Gabong", "rr")
	def test_Gabong_rrr(self):
		self.run_test("가봉", "{{ko-IPA|cap=y}}", "Gabong", "rrr")
	def test_Gabong_mr(self):
		self.run_test("가봉", "{{ko-IPA|cap=y}}", "Kabong", "mr")
	def test_Gabong_yr(self):
		self.run_test("가봉", "{{ko-IPA|cap=y}}", "kapong", "yr")
	def test_Gabong_ipa(self):
		self.run_test("가봉", "{{ko-IPA|cap=y}}", "[ka̠bo̞ŋ]", "ipa")

	def test_Anggolla_ph(self):
		self.run_test("앙골라", "{{ko-IPA|cap=y}}", "앙골라", "ph")
	def test_Anggolla_rr(self):
		self.run_test("앙골라", "{{ko-IPA|cap=y}}", "Anggolla", "rr")
	def test_Anggolla_rrr(self):
		self.run_test("앙골라", "{{ko-IPA|cap=y}}", "Anggolla", "rrr")
	def test_Anggolla_mr(self):
		self.run_test("앙골라", "{{ko-IPA|cap=y}}", "Anggolla", "mr")
	def test_Anggolla_yr(self):
		self.run_test("앙골라", "{{ko-IPA|cap=y}}", "angkolla", "yr")
	def test_Anggolla_ipa(self):
		self.run_test("앙골라", "{{ko-IPA|cap=y}}", "[a̠ŋɡo̞ɭɭa̠]", "ipa")

	def test_Riong_ph(self):
		self.run_test("리옹", "{{ko-IPA|cap=y}}", "리옹", "ph")
	def test_Riong_rr(self):
		self.run_test("리옹", "{{ko-IPA|cap=y}}", "Riong", "rr")
	def test_Riong_rrr(self):
		self.run_test("리옹", "{{ko-IPA|cap=y}}", "Liong", "rrr")
	def test_Riong_mr(self):
		self.run_test("리옹", "{{ko-IPA|cap=y}}", "Riong", "mr")
	def test_Riong_yr(self):
		self.run_test("리옹", "{{ko-IPA|cap=y}}", "liong", "yr")
	def test_Riong_ipa(self):
		self.run_test("리옹", "{{ko-IPA|cap=y}}", "[ɾio̞ŋ]", "ipa")

	def test_Monggol_ph(self):
		self.run_test("몽골", "{{ko-IPA|cap=y}}", "몽골", "ph")
	def test_Monggol_rr(self):
		self.run_test("몽골", "{{ko-IPA|cap=y}}", "Monggol", "rr")
	def test_Monggol_rrr(self):
		self.run_test("몽골", "{{ko-IPA|cap=y}}", "Monggol", "rrr")
	def test_Monggol_mr(self):
		self.run_test("몽골", "{{ko-IPA|cap=y}}", "Monggol", "mr")
	def test_Monggol_yr(self):
		self.run_test("몽골", "{{ko-IPA|cap=y}}", "mongkol", "yr")
	def test_Monggol_ipa(self):
		self.run_test("몽골", "{{ko-IPA|cap=y}}", "[mo̞ŋɡo̞ɭ]", "ipa")

	def test_bolling_ph(self):
		self.run_test("볼링", "{{ko-IPA}}", "볼링", "ph")
	def test_bolling_rr(self):
		self.run_test("볼링", "{{ko-IPA}}", "bolling", "rr")
	def test_bolling_rrr(self):
		self.run_test("볼링", "{{ko-IPA}}", "bolling", "rrr")
	def test_bolling_mr(self):
		self.run_test("볼링", "{{ko-IPA}}", "polling", "mr")
	def test_bolling_yr(self):
		self.run_test("볼링", "{{ko-IPA}}", "polling", "yr")
	def test_bolling_ipa(self):
		self.run_test("볼링", "{{ko-IPA}}", "[po̞ʎʎiŋ]", "ipa")

	def test_bilding_ph(self):
		self.run_test("빌딩", "{{ko-IPA}}", "빌딩", "ph")
	def test_bilding_rr(self):
		self.run_test("빌딩", "{{ko-IPA}}", "bilding", "rr")
	def test_bilding_rrr(self):
		self.run_test("빌딩", "{{ko-IPA}}", "bilding", "rrr")
	def test_bilding_mr(self):
		self.run_test("빌딩", "{{ko-IPA}}", "pilding", "mr")
	def test_bilding_yr(self):
		self.run_test("빌딩", "{{ko-IPA}}", "pilting", "yr")
	def test_bilding_ipa(self):
		self.run_test("빌딩", "{{ko-IPA}}", "[piɭdiŋ]", "ipa")

	def test_Andora_ph(self):
		self.run_test("안도라", "{{ko-IPA|cap=y}}", "안도라", "ph")
	def test_Andora_rr(self):
		self.run_test("안도라", "{{ko-IPA|cap=y}}", "Andora", "rr")
	def test_Andora_rrr(self):
		self.run_test("안도라", "{{ko-IPA|cap=y}}", "Andola", "rrr")
	def test_Andora_mr(self):
		self.run_test("안도라", "{{ko-IPA|cap=y}}", "Andora", "mr")
	def test_Andora_yr(self):
		self.run_test("안도라", "{{ko-IPA|cap=y}}", "antola", "yr")
	def test_Andora_ipa(self):
		self.run_test("안도라", "{{ko-IPA|cap=y}}", "[a̠ndo̞ɾa̠]", "ipa")

	def test_indo_ph(self):
		self.run_test("인도", "{{ko-IPA}}", "인도", "ph")
	def test_indo_rr(self):
		self.run_test("인도", "{{ko-IPA}}", "indo", "rr")
	def test_indo_rrr(self):
		self.run_test("인도", "{{ko-IPA}}", "indo", "rrr")
	def test_indo_mr(self):
		self.run_test("인도", "{{ko-IPA}}", "indo", "mr")
	def test_indo_yr(self):
		self.run_test("인도", "{{ko-IPA}}", "into", "yr")
	def test_indo_ipa(self):
		self.run_test("인도", "{{ko-IPA}}", "[indo̞]", "ipa")
	def test_Indo_ph_1(self):
		self.run_test("인도", "{{ko-IPA|cap=y}}", "인도", "ph")
	def test_Indo_rr_1(self):
		self.run_test("인도", "{{ko-IPA|cap=y}}", "Indo", "rr")
	def test_Indo_rrr_1(self):
		self.run_test("인도", "{{ko-IPA|cap=y}}", "Indo", "rrr")
	def test_Indo_mr_1(self):
		self.run_test("인도", "{{ko-IPA|cap=y}}", "Indo", "mr")
	def test_Indo_yr_1(self):
		self.run_test("인도", "{{ko-IPA|cap=y}}", "into", "yr")
	def test_Indo_ipa_1(self):
		self.run_test("인도", "{{ko-IPA|cap=y}}", "[indo̞]", "ipa")
	def test_indo_ph_2(self):
		self.run_test("인도", "{{ko-IPA}}", "인도", "ph")
	def test_indo_rr_2(self):
		self.run_test("인도", "{{ko-IPA}}", "indo", "rr")
	def test_indo_rrr_2(self):
		self.run_test("인도", "{{ko-IPA}}", "indo", "rrr")
	def test_indo_mr_2(self):
		self.run_test("인도", "{{ko-IPA}}", "indo", "mr")
	def test_indo_yr_2(self):
		self.run_test("인도", "{{ko-IPA}}", "into", "yr")
	def test_indo_ipa_2(self):
		self.run_test("인도", "{{ko-IPA}}", "[indo̞]", "ipa")
	def test_indo_ph_3(self):
		self.run_test("인도", "{{ko-IPA}}", "인도", "ph")
	def test_indo_rr_3(self):
		self.run_test("인도", "{{ko-IPA}}", "indo", "rr")
	def test_indo_rrr_3(self):
		self.run_test("인도", "{{ko-IPA}}", "indo", "rrr")
	def test_indo_mr_3(self):
		self.run_test("인도", "{{ko-IPA}}", "indo", "mr")
	def test_indo_yr_3(self):
		self.run_test("인도", "{{ko-IPA}}", "into", "yr")
	def test_indo_ipa_3(self):
		self.run_test("인도", "{{ko-IPA}}", "[indo̞]", "ipa")

	def test_radio_ph(self):
		self.run_test("라디오", "{{ko-IPA}}", "라디오", "ph")
	def test_radio_rr(self):
		self.run_test("라디오", "{{ko-IPA}}", "radio", "rr")
	def test_radio_rrr(self):
		self.run_test("라디오", "{{ko-IPA}}", "ladio", "rrr")
	def test_radio_mr(self):
		self.run_test("라디오", "{{ko-IPA}}", "radio", "mr")
	def test_radio_yr(self):
		self.run_test("라디오", "{{ko-IPA}}", "latio", "yr")
	def test_radio_ipa(self):
		self.run_test("라디오", "{{ko-IPA}}", "[ɾa̠dio̞]", "ipa")

	def test_bidio_ph(self):
		self.run_test("비디오", "{{ko-IPA}}", "비디오", "ph")
	def test_bidio_rr(self):
		self.run_test("비디오", "{{ko-IPA}}", "bidio", "rr")
	def test_bidio_rrr(self):
		self.run_test("비디오", "{{ko-IPA}}", "bidio", "rrr")
	def test_bidio_mr(self):
		self.run_test("비디오", "{{ko-IPA}}", "pidio", "mr")
	def test_bidio_yr(self):
		self.run_test("비디오", "{{ko-IPA}}", "pitio", "yr")
	def test_bidio_ipa(self):
		self.run_test("비디오", "{{ko-IPA}}", "[pidio̞]", "ipa")

	def test_Dubai_ph(self):
		self.run_test("두바이", "{{ko-IPA|cap=y}}", "두바이", "ph")
	def test_Dubai_rr(self):
		self.run_test("두바이", "{{ko-IPA|cap=y}}", "Dubai", "rr")
	def test_Dubai_rrr(self):
		self.run_test("두바이", "{{ko-IPA|cap=y}}", "Dubai", "rrr")
	def test_Dubai_mr(self):
		self.run_test("두바이", "{{ko-IPA|cap=y}}", "Tubai", "mr")
	def test_Dubai_yr(self):
		self.run_test("두바이", "{{ko-IPA|cap=y}}", "twupai", "yr")
	def test_Dubai_ipa(self):
		self.run_test("두바이", "{{ko-IPA|cap=y}}", "[tuba̠i]", "ipa")

	def test_Sana_ph(self):
		self.run_test("사나", "{{ko-IPA|cap=y}}", "사나", "ph")
	def test_Sana_rr(self):
		self.run_test("사나", "{{ko-IPA|cap=y}}", "Sana", "rr")
	def test_Sana_rrr(self):
		self.run_test("사나", "{{ko-IPA|cap=y}}", "Sana", "rrr")
	def test_Sana_mr(self):
		self.run_test("사나", "{{ko-IPA|cap=y}}", "Sana", "mr")
	def test_Sana_yr(self):
		self.run_test("사나", "{{ko-IPA|cap=y}}", "sana", "yr")
	def test_Sana_ipa(self):
		self.run_test("사나", "{{ko-IPA|cap=y}}", "[sʰa̠na̠]", "ipa")

	def test_Siria_ph(self):
		self.run_test("시리아", "{{ko-IPA|cap=y}}", "시리아", "ph")
	def test_Siria_rr(self):
		self.run_test("시리아", "{{ko-IPA|cap=y}}", "Siria", "rr")
	def test_Siria_rrr(self):
		self.run_test("시리아", "{{ko-IPA|cap=y}}", "Silia", "rrr")
	def test_Siria_mr(self):
		self.run_test("시리아", "{{ko-IPA|cap=y}}", "Siria", "mr")
	def test_Siria_yr(self):
		self.run_test("시리아", "{{ko-IPA|cap=y}}", "silia", "yr")
	def test_Siria_ipa(self):
		self.run_test("시리아", "{{ko-IPA|cap=y}}", "[ɕʰiɾia̠]", "ipa")

	def test_Misigan_ph(self):
		self.run_test("미시간", "{{ko-IPA|cap=y}}", "미시간", "ph")
	def test_Misigan_rr(self):
		self.run_test("미시간", "{{ko-IPA|cap=y}}", "Misigan", "rr")
	def test_Misigan_rrr(self):
		self.run_test("미시간", "{{ko-IPA|cap=y}}", "Misigan", "rrr")
	def test_Misigan_mr(self):
		self.run_test("미시간", "{{ko-IPA|cap=y}}", "Misigan", "mr")
	def test_Misigan_yr(self):
		self.run_test("미시간", "{{ko-IPA|cap=y}}", "misikan", "yr")
	def test_Misigan_ipa(self):
		self.run_test("미시간", "{{ko-IPA|cap=y}}", "[miɕʰiɡa̠n]", "ipa")

	def test_Somallia_ph(self):
		self.run_test("소말리아", "{{ko-IPA|cap=y|com=0}}", "쏘말리아", "ph")
	def test_Somallia_rr(self):
		self.run_test("소말리아", "{{ko-IPA|cap=y|com=0}}", "Somallia", "rr")
	def test_Somallia_rrr(self):
		self.run_test("소말리아", "{{ko-IPA|cap=y|com=0}}", "Somallia", "rrr")
	def test_Somallia_mr(self):
		self.run_test("소말리아", "{{ko-IPA|cap=y|com=0}}", "Ssomallia", "mr")
	def test_Somallia_yr(self):
		self.run_test("소말리아", "{{ko-IPA|cap=y|com=0}}", "qsomallia", "yr")
	def test_Somallia_ipa(self):
		self.run_test("소말리아", "{{ko-IPA|cap=y|com=0}}", "[s͈o̞ma̠ʎʎia̠]", "ipa")

	def test_sadam_ph(self):
		self.run_test("사담", "{{ko-IPA}}", "사담", "ph")
	def test_sadam_rr(self):
		self.run_test("사담", "{{ko-IPA}}", "sadam", "rr")
	def test_sadam_rrr(self):
		self.run_test("사담", "{{ko-IPA}}", "sadam", "rrr")
	def test_sadam_mr(self):
		self.run_test("사담", "{{ko-IPA}}", "sadam", "mr")
	def test_sadam_yr(self):
		self.run_test("사담", "{{ko-IPA}}", "satam", "yr")
	def test_sadam_ipa(self):
		self.run_test("사담", "{{ko-IPA}}", "[sʰa̠da̠m]", "ipa")

	def test_Boseunia_ph(self):
		self.run_test("보스니아", "{{ko-IPA|cap=y}}", "보스니아", "ph")
	def test_Boseunia_rr(self):
		self.run_test("보스니아", "{{ko-IPA|cap=y}}", "Boseunia", "rr")
	def test_Boseunia_rrr(self):
		self.run_test("보스니아", "{{ko-IPA|cap=y}}", "Boseunia", "rrr")
	def test_Boseunia_mr(self):
		self.run_test("보스니아", "{{ko-IPA|cap=y}}", "Posŭnia", "mr")
	def test_Boseunia_yr(self):
		self.run_test("보스니아", "{{ko-IPA|cap=y}}", "posunia", "yr")
	def test_Boseunia_ipa(self):
		self.run_test("보스니아", "{{ko-IPA|cap=y}}", "[po̞sʰɯnia̠]", "ipa")

	def test_Ageura_ph(self):
		self.run_test("아그라", "{{ko-IPA|cap=y}}", "아그라", "ph")
	def test_Ageura_rr(self):
		self.run_test("아그라", "{{ko-IPA|cap=y}}", "Ageura", "rr")
	def test_Ageura_rrr(self):
		self.run_test("아그라", "{{ko-IPA|cap=y}}", "Ageula", "rrr")
	def test_Ageura_mr(self):
		self.run_test("아그라", "{{ko-IPA|cap=y}}", "Agŭra", "mr")
	def test_Ageura_yr(self):
		self.run_test("아그라", "{{ko-IPA|cap=y}}", "akula", "yr")
	def test_Ageura_ipa(self):
		self.run_test("아그라", "{{ko-IPA|cap=y}}", "[a̠ɡɯɾa̠]", "ipa")

	def test_geuriseu_ph(self):
		self.run_test("그리스", "{{ko-IPA|com=2}}", "그리쓰", "ph")
	def test_geuriseu_rr(self):
		self.run_test("그리스", "{{ko-IPA|com=2}}", "geuriseu", "rr")
	def test_geuriseu_rrr(self):
		self.run_test("그리스", "{{ko-IPA|com=2}}", "geuliseu", "rrr")
	def test_geuriseu_mr(self):
		self.run_test("그리스", "{{ko-IPA|com=2}}", "kŭrissŭ", "mr")
	def test_geuriseu_yr(self):
		self.run_test("그리스", "{{ko-IPA|com=2}}", "kuliqsu", "yr")
	def test_geuriseu_ipa(self):
		self.run_test("그리스", "{{ko-IPA|com=2}}", "[kɯɾis͈ɯ]", "ipa")

	def test_Geurillandeu_ph(self):
		self.run_test("그린란드", "{{ko-IPA|cap=y}}", "그릴란드", "ph")
	def test_Geurillandeu_rr(self):
		self.run_test("그린란드", "{{ko-IPA|cap=y}}", "Geurillandeu", "rr")
	def test_Geurillandeu_rrr(self):
		self.run_test("그린란드", "{{ko-IPA|cap=y}}", "Geulinlandeu", "rrr")
	def test_Geurillandeu_mr(self):
		self.run_test("그린란드", "{{ko-IPA|cap=y}}", "Kŭrillandŭ", "mr")
	def test_Geurillandeu_yr(self):
		self.run_test("그린란드", "{{ko-IPA|cap=y}}", "kulinlantu", "yr")
	def test_Geurillandeu_ipa(self):
		self.run_test("그린란드", "{{ko-IPA|cap=y}}", "[kɯɾiɭɭa̠ndɯ]", "ipa")

	def test_Aiseullandeu_ph(self):
		self.run_test("아이슬란드", "{{ko-IPA|cap=y}}", "아이슬란드", "ph")
	def test_Aiseullandeu_rr(self):
		self.run_test("아이슬란드", "{{ko-IPA|cap=y}}", "Aiseullandeu", "rr")
	def test_Aiseullandeu_rrr(self):
		self.run_test("아이슬란드", "{{ko-IPA|cap=y}}", "Aiseullandeu", "rrr")
	def test_Aiseullandeu_mr(self):
		self.run_test("아이슬란드", "{{ko-IPA|cap=y}}", "Aisŭllandŭ", "mr")
	def test_Aiseullandeu_yr(self):
		self.run_test("아이슬란드", "{{ko-IPA|cap=y}}", "aisullantu", "yr")
	def test_Aiseullandeu_ipa(self):
		self.run_test("아이슬란드", "{{ko-IPA|cap=y}}", "[a̠isʰɯɭɭa̠ndɯ]", "ipa")

	def test_Raoseu_ph(self):
		self.run_test("라오스", "{{ko-IPA|cap=y}}", "라오스", "ph")
	def test_Raoseu_rr(self):
		self.run_test("라오스", "{{ko-IPA|cap=y}}", "Raoseu", "rr")
	def test_Raoseu_rrr(self):
		self.run_test("라오스", "{{ko-IPA|cap=y}}", "Laoseu", "rrr")
	def test_Raoseu_mr(self):
		self.run_test("라오스", "{{ko-IPA|cap=y}}", "Raosŭ", "mr")
	def test_Raoseu_yr(self):
		self.run_test("라오스", "{{ko-IPA|cap=y}}", "laosu", "yr")
	def test_Raoseu_ipa(self):
		self.run_test("라오스", "{{ko-IPA|cap=y}}", "[ɾa̠o̞sʰɯ]", "ipa")

	def test_Adiseuababa_ph(self):
		self.run_test("아디스아바바", "{{ko-IPA|cap=y}}", "아디스아바바", "ph")
	def test_Adiseuababa_rr(self):
		self.run_test("아디스아바바", "{{ko-IPA|cap=y}}", "Adiseuababa", "rr")
	def test_Adiseuababa_rrr(self):
		self.run_test("아디스아바바", "{{ko-IPA|cap=y}}", "Adiseuababa", "rrr")
	def test_Adiseuababa_mr(self):
		self.run_test("아디스아바바", "{{ko-IPA|cap=y}}", "Adisŭababa", "mr")
	def test_Adiseuababa_yr(self):
		self.run_test("아디스아바바", "{{ko-IPA|cap=y}}", "atisuapapa", "yr")
	def test_Adiseuababa_ipa(self):
		self.run_test("아디스아바바", "{{ko-IPA|cap=y}}", "[a̠disʰɯa̠ba̠ba̠]", "ipa")

	def test_Iseullamabadeu_ph(self):
		self.run_test("이슬라마바드", "{{ko-IPA|cap=y}}", "이슬라마바드", "ph")
	def test_Iseullamabadeu_rr(self):
		self.run_test("이슬라마바드", "{{ko-IPA|cap=y}}", "Iseullamabadeu", "rr")
	def test_Iseullamabadeu_rrr(self):
		self.run_test("이슬라마바드", "{{ko-IPA|cap=y}}", "Iseullamabadeu", "rrr")
	def test_Iseullamabadeu_mr(self):
		self.run_test("이슬라마바드", "{{ko-IPA|cap=y}}", "Isŭllamabadŭ", "mr")
	def test_Iseullamabadeu_yr(self):
		self.run_test("이슬라마바드", "{{ko-IPA|cap=y}}", "isullamapatu", "yr")
	def test_Iseullamabadeu_ipa(self):
		self.run_test("이슬라마바드", "{{ko-IPA|cap=y}}", "[isʰɯɭɭa̠ma̠ba̠dɯ]", "ipa")

	def test_Riseubon_ph(self):
		self.run_test("리스본", "{{ko-IPA|cap=y}}", "리스본", "ph")
	def test_Riseubon_rr(self):
		self.run_test("리스본", "{{ko-IPA|cap=y}}", "Riseubon", "rr")
	def test_Riseubon_rrr(self):
		self.run_test("리스본", "{{ko-IPA|cap=y}}", "Liseubon", "rrr")
	def test_Riseubon_mr(self):
		self.run_test("리스본", "{{ko-IPA|cap=y}}", "Risŭbon", "mr")
	def test_Riseubon_yr(self):
		self.run_test("리스본", "{{ko-IPA|cap=y}}", "lisupon", "yr")
	def test_Riseubon_ipa(self):
		self.run_test("리스본", "{{ko-IPA|cap=y}}", "[ɾisʰɯbo̞n]", "ipa")

	def test_Madeurideu_ph(self):
		self.run_test("마드리드", "{{ko-IPA|cap=y}}", "마드리드", "ph")
	def test_Madeurideu_rr(self):
		self.run_test("마드리드", "{{ko-IPA|cap=y}}", "Madeurideu", "rr")
	def test_Madeurideu_rrr(self):
		self.run_test("마드리드", "{{ko-IPA|cap=y}}", "Madeulideu", "rrr")
	def test_Madeurideu_mr(self):
		self.run_test("마드리드", "{{ko-IPA|cap=y}}", "Madŭridŭ", "mr")
	def test_Madeurideu_yr(self):
		self.run_test("마드리드", "{{ko-IPA|cap=y}}", "matulitu", "yr")
	def test_Madeurideu_ipa(self):
		self.run_test("마드리드", "{{ko-IPA|cap=y}}", "[ma̠dɯɾidɯ]", "ipa")

	def test_Oseullo_ph(self):
		self.run_test("오슬로", "{{ko-IPA|cap=y}}", "오슬로", "ph")
	def test_Oseullo_rr(self):
		self.run_test("오슬로", "{{ko-IPA|cap=y}}", "Oseullo", "rr")
	def test_Oseullo_rrr(self):
		self.run_test("오슬로", "{{ko-IPA|cap=y}}", "Oseullo", "rrr")
	def test_Oseullo_mr(self):
		self.run_test("오슬로", "{{ko-IPA|cap=y}}", "Osŭllo", "mr")
	def test_Oseullo_yr(self):
		self.run_test("오슬로", "{{ko-IPA|cap=y}}", "osullo", "yr")
	def test_Oseullo_ipa(self):
		self.run_test("오슬로", "{{ko-IPA|cap=y}}", "[o̞sʰɯɭɭo̞]", "ipa")

	def test_Sideuni_ph(self):
		self.run_test("시드니", "{{ko-IPA|cap=y|com=0}}", "씨드니", "ph")
	def test_Sideuni_rr(self):
		self.run_test("시드니", "{{ko-IPA|cap=y|com=0}}", "Sideuni", "rr")
	def test_Sideuni_rrr(self):
		self.run_test("시드니", "{{ko-IPA|cap=y|com=0}}", "Sideuni", "rrr")
	def test_Sideuni_mr(self):
		self.run_test("시드니", "{{ko-IPA|cap=y|com=0}}", "Ssidŭni", "mr")
	def test_Sideuni_yr(self):
		self.run_test("시드니", "{{ko-IPA|cap=y|com=0}}", "qsituni", "yr")
	def test_Sideuni_ipa(self):
		self.run_test("시드니", "{{ko-IPA|cap=y|com=0}}", "[ɕ͈idɯni]", "ipa")

	def test_Aseumara_ph(self):
		self.run_test("아스마라", "{{ko-IPA|cap=y}}", "아스마라", "ph")
	def test_Aseumara_rr(self):
		self.run_test("아스마라", "{{ko-IPA|cap=y}}", "Aseumara", "rr")
	def test_Aseumara_rrr(self):
		self.run_test("아스마라", "{{ko-IPA|cap=y}}", "Aseumala", "rrr")
	def test_Aseumara_mr(self):
		self.run_test("아스마라", "{{ko-IPA|cap=y}}", "Asŭmara", "mr")
	def test_Aseumara_yr(self):
		self.run_test("아스마라", "{{ko-IPA|cap=y}}", "asumala", "yr")
	def test_Aseumara_ipa(self):
		self.run_test("아스마라", "{{ko-IPA|cap=y}}", "[a̠sʰɯma̠ɾa̠]", "ipa")

	def test_Madeuraseu_ph(self):
		self.run_test("마드라스", "{{ko-IPA|cap=y}}", "마드라스", "ph")
	def test_Madeuraseu_rr(self):
		self.run_test("마드라스", "{{ko-IPA|cap=y}}", "Madeuraseu", "rr")
	def test_Madeuraseu_rrr(self):
		self.run_test("마드라스", "{{ko-IPA|cap=y}}", "Madeulaseu", "rrr")
	def test_Madeuraseu_mr(self):
		self.run_test("마드라스", "{{ko-IPA|cap=y}}", "Madŭrasŭ", "mr")
	def test_Madeuraseu_yr(self):
		self.run_test("마드라스", "{{ko-IPA|cap=y}}", "matulasu", "yr")
	def test_Madeuraseu_ipa(self):
		self.run_test("마드라스", "{{ko-IPA|cap=y}}", "[ma̠dɯɾa̠sʰɯ]", "ipa")

	def test_Burundi_ph(self):
		self.run_test("부룬디", "{{ko-IPA|cap=y}}", "부룬디", "ph")
	def test_Burundi_rr(self):
		self.run_test("부룬디", "{{ko-IPA|cap=y}}", "Burundi", "rr")
	def test_Burundi_rrr(self):
		self.run_test("부룬디", "{{ko-IPA|cap=y}}", "Bulundi", "rrr")
	def test_Burundi_mr(self):
		self.run_test("부룬디", "{{ko-IPA|cap=y}}", "Purundi", "mr")
	def test_Burundi_yr(self):
		self.run_test("부룬디", "{{ko-IPA|cap=y}}", "pulwunti", "yr")
	def test_Burundi_ipa(self):
		self.run_test("부룬디", "{{ko-IPA|cap=y}}", "[puɾundi]", "ipa")

	def test_Uganda_ph(self):
		self.run_test("우간다", "{{ko-IPA|cap=y}}", "우간다", "ph")
	def test_Uganda_rr(self):
		self.run_test("우간다", "{{ko-IPA|cap=y}}", "Uganda", "rr")
	def test_Uganda_rrr(self):
		self.run_test("우간다", "{{ko-IPA|cap=y}}", "Uganda", "rrr")
	def test_Uganda_mr(self):
		self.run_test("우간다", "{{ko-IPA|cap=y}}", "Uganda", "mr")
	def test_Uganda_yr(self):
		self.run_test("우간다", "{{ko-IPA|cap=y}}", "wukanta", "yr")
	def test_Uganda_ipa(self):
		self.run_test("우간다", "{{ko-IPA|cap=y}}", "[uɡa̠nda̠]", "ipa")

	def test_Beurunai_ph(self):
		self.run_test("브루나이", "{{ko-IPA|cap=y}}", "브루나이", "ph")
	def test_Beurunai_rr(self):
		self.run_test("브루나이", "{{ko-IPA|cap=y}}", "Beurunai", "rr")
	def test_Beurunai_rrr(self):
		self.run_test("브루나이", "{{ko-IPA|cap=y}}", "Beulunai", "rrr")
	def test_Beurunai_mr(self):
		self.run_test("브루나이", "{{ko-IPA|cap=y}}", "Pŭrunai", "mr")
	def test_Beurunai_yr(self):
		self.run_test("브루나이", "{{ko-IPA|cap=y}}", "pulwunai", "yr")
	def test_Beurunai_ipa(self):
		self.run_test("브루나이", "{{ko-IPA|cap=y}}", "[pɯɾuna̠i]", "ipa")

	def test_Sudan_ph(self):
		self.run_test("수단", "{{ko-IPA|cap=y}}", "수단", "ph")
	def test_Sudan_rr(self):
		self.run_test("수단", "{{ko-IPA|cap=y}}", "Sudan", "rr")
	def test_Sudan_rrr(self):
		self.run_test("수단", "{{ko-IPA|cap=y}}", "Sudan", "rrr")
	def test_Sudan_mr(self):
		self.run_test("수단", "{{ko-IPA|cap=y}}", "Sudan", "mr")
	def test_Sudan_yr(self):
		self.run_test("수단", "{{ko-IPA|cap=y}}", "swutan", "yr")
	def test_Sudan_ipa(self):
		self.run_test("수단", "{{ko-IPA|cap=y}}", "[sʰuda̠n]", "ipa")
	def test_sudan_ph_1(self):
		self.run_test("수단", "{{ko-IPA}}", "수단", "ph")
	def test_sudan_rr_1(self):
		self.run_test("수단", "{{ko-IPA}}", "sudan", "rr")
	def test_sudan_rrr_1(self):
		self.run_test("수단", "{{ko-IPA}}", "sudan", "rrr")
	def test_sudan_mr_1(self):
		self.run_test("수단", "{{ko-IPA}}", "sudan", "mr")
	def test_sudan_yr_1(self):
		self.run_test("수단", "{{ko-IPA}}", "swutan", "yr")
	def test_sudan_ipa_1(self):
		self.run_test("수단", "{{ko-IPA}}", "[sʰuda̠n]", "ipa")

	def test_Ulsan_ph(self):
		self.run_test("울산", "{{ko-IPA|cap=y|com=1}}", "울싼", "ph")
	def test_Ulsan_rr(self):
		self.run_test("울산", "{{ko-IPA|cap=y|com=1}}", "Ulsan", "rr")
	def test_Ulsan_rrr(self):
		self.run_test("울산", "{{ko-IPA|cap=y|com=1}}", "Ulsan", "rrr")
	def test_Ulsan_mr(self):
		self.run_test("울산", "{{ko-IPA|cap=y|com=1}}", "Ulssan", "mr")
	def test_Ulsan_yr(self):
		self.run_test("울산", "{{ko-IPA|cap=y|com=1}}", "wulqsan", "yr")
	def test_Ulsan_ipa(self):
		self.run_test("울산", "{{ko-IPA|cap=y|com=1}}", "[uɭs͈a̠n]", "ipa")

	def test_Saudiarabia_ph(self):
		self.run_test("사우디아라비아", "{{ko-IPA|cap=y}}", "사우디아라비아", "ph")
	def test_Saudiarabia_rr(self):
		self.run_test("사우디아라비아", "{{ko-IPA|cap=y}}", "Saudiarabia", "rr")
	def test_Saudiarabia_rrr(self):
		self.run_test("사우디아라비아", "{{ko-IPA|cap=y}}", "Saudialabia", "rrr")
	def test_Saudiarabia_mr(self):
		self.run_test("사우디아라비아", "{{ko-IPA|cap=y}}", "Saudiarabia", "mr")
	def test_Saudiarabia_yr(self):
		self.run_test("사우디아라비아", "{{ko-IPA|cap=y}}", "sawutialapia", "yr")
	def test_Saudiarabia_ipa(self):
		self.run_test("사우디아라비아", "{{ko-IPA|cap=y}}", "[sʰa̠udia̠ɾa̠bia̠]", "ipa")

	def test_Bulgaria_ph(self):
		self.run_test("불가리아", "{{ko-IPA|cap=y}}", "불가리아", "ph")
	def test_Bulgaria_rr(self):
		self.run_test("불가리아", "{{ko-IPA|cap=y}}", "Bulgaria", "rr")
	def test_Bulgaria_rrr(self):
		self.run_test("불가리아", "{{ko-IPA|cap=y}}", "Bulgalia", "rrr")
	def test_Bulgaria_mr(self):
		self.run_test("불가리아", "{{ko-IPA|cap=y}}", "Pulgaria", "mr")
	def test_Bulgaria_yr(self):
		self.run_test("불가리아", "{{ko-IPA|cap=y}}", "pul.kalia", "yr")
	def test_Bulgaria_ipa(self):
		self.run_test("불가리아", "{{ko-IPA|cap=y}}", "[puɭɡa̠ɾia̠]", "ipa")

	def test_Onduraseu_ph(self):
		self.run_test("온두라스", "{{ko-IPA|cap=y}}", "온두라스", "ph")
	def test_Onduraseu_rr(self):
		self.run_test("온두라스", "{{ko-IPA|cap=y}}", "Onduraseu", "rr")
	def test_Onduraseu_rrr(self):
		self.run_test("온두라스", "{{ko-IPA|cap=y}}", "Ondulaseu", "rrr")
	def test_Onduraseu_mr(self):
		self.run_test("온두라스", "{{ko-IPA|cap=y}}", "Ondurasŭ", "mr")
	def test_Onduraseu_yr(self):
		self.run_test("온두라스", "{{ko-IPA|cap=y}}", "ontwulasu", "yr")
	def test_Onduraseu_ipa(self):
		self.run_test("온두라스", "{{ko-IPA|cap=y}}", "[o̞nduɾa̠sʰɯ]", "ipa")

	def test_Barein_ph(self):
		self.run_test("바레인", "{{ko-IPA|cap=y}}", "바레인", "ph")
	def test_Barein_rr(self):
		self.run_test("바레인", "{{ko-IPA|cap=y}}", "Barein", "rr")
	def test_Barein_rrr(self):
		self.run_test("바레인", "{{ko-IPA|cap=y}}", "Balein", "rrr")
	def test_Barein_mr(self):
		self.run_test("바레인", "{{ko-IPA|cap=y}}", "Parein", "mr")
	def test_Barein_yr(self):
		self.run_test("바레인", "{{ko-IPA|cap=y}}", "paleyin", "yr")
	def test_Barein_ipa(self):
		self.run_test("바레인", "{{ko-IPA|cap=y}}", "[pa̠ɾe̞in]", "ipa")

	def test_Raiberia_ph(self):
		self.run_test("라이베리아", "{{ko-IPA|cap=y}}", "라이베리아", "ph")
	def test_Raiberia_rr(self):
		self.run_test("라이베리아", "{{ko-IPA|cap=y}}", "Raiberia", "rr")
	def test_Raiberia_rrr(self):
		self.run_test("라이베리아", "{{ko-IPA|cap=y}}", "Laibelia", "rrr")
	def test_Raiberia_mr(self):
		self.run_test("라이베리아", "{{ko-IPA|cap=y}}", "Raiberia", "mr")
	def test_Raiberia_yr(self):
		self.run_test("라이베리아", "{{ko-IPA|cap=y}}", "laipeylia", "yr")
	def test_Raiberia_ipa(self):
		self.run_test("라이베리아", "{{ko-IPA|cap=y}}", "[ɾa̠ibe̞ɾia̠]", "ipa")

	def test_geim_ph(self):
		self.run_test("게임", "{{ko-IPA|com=0}}", "께임", "ph")
	def test_geim_rr(self):
		self.run_test("게임", "{{ko-IPA|com=0}}", "geim", "rr")
	def test_geim_rrr(self):
		self.run_test("게임", "{{ko-IPA|com=0}}", "geim", "rrr")
	def test_geim_mr(self):
		self.run_test("게임", "{{ko-IPA|com=0}}", "keim", "mr")
	def test_geim_yr(self):
		self.run_test("게임", "{{ko-IPA|com=0}}", "qkeyim", "yr")
	def test_geim_ipa(self):
		self.run_test("게임", "{{ko-IPA|com=0}}", "[k͈e̞im]", "ipa")

	def test_Mein_ph(self):
		self.run_test("메인", "{{ko-IPA|cap=y}}", "메인", "ph")
	def test_Mein_rr(self):
		self.run_test("메인", "{{ko-IPA|cap=y}}", "Mein", "rr")
	def test_Mein_rrr(self):
		self.run_test("메인", "{{ko-IPA|cap=y}}", "Mein", "rrr")
	def test_Mein_mr(self):
		self.run_test("메인", "{{ko-IPA|cap=y}}", "Mein", "mr")
	def test_Mein_yr(self):
		self.run_test("메인", "{{ko-IPA|cap=y}}", "meyin", "yr")
	def test_Mein_ipa(self):
		self.run_test("메인", "{{ko-IPA|cap=y}}", "[me̞in]", "ipa")

	def test_Malleisia_ph(self):
		self.run_test("말레이시아", "{{ko-IPA|cap=y}}", "말레이시아", "ph")
	def test_Malleisia_rr(self):
		self.run_test("말레이시아", "{{ko-IPA|cap=y}}", "Malleisia", "rr")
	def test_Malleisia_rrr(self):
		self.run_test("말레이시아", "{{ko-IPA|cap=y}}", "Malleisia", "rrr")
	def test_Malleisia_mr(self):
		self.run_test("말레이시아", "{{ko-IPA|cap=y}}", "Malleisia", "mr")
	def test_Malleisia_yr(self):
		self.run_test("말레이시아", "{{ko-IPA|cap=y}}", "malleyisia", "yr")
	def test_Malleisia_ipa(self):
		self.run_test("말레이시아", "{{ko-IPA|cap=y}}", "[ma̠ɭɭe̞iɕʰia̠]", "ipa")

	def test_Senegal_ph(self):
		self.run_test("세네갈", "{{ko-IPA|cap=y|com=0}}", "쎄네갈", "ph")
	def test_Senegal_rr(self):
		self.run_test("세네갈", "{{ko-IPA|cap=y|com=0}}", "Senegal", "rr")
	def test_Senegal_rrr(self):
		self.run_test("세네갈", "{{ko-IPA|cap=y|com=0}}", "Senegal", "rrr")
	def test_Senegal_mr(self):
		self.run_test("세네갈", "{{ko-IPA|cap=y|com=0}}", "Ssenegal", "mr")
	def test_Senegal_yr(self):
		self.run_test("세네갈", "{{ko-IPA|cap=y|com=0}}", "qseyneykal", "yr")
	def test_Senegal_ipa(self):
		self.run_test("세네갈", "{{ko-IPA|cap=y|com=0}}", "[s͈e̞ne̞ɡa̠ɭ]", "ipa")

	def test_Banggeulladesi_ph(self):
		self.run_test("방글라데시", "{{ko-IPA|cap=y|com=4}}", "방글라데씨", "ph")
	def test_Banggeulladesi_rr(self):
		self.run_test("방글라데시", "{{ko-IPA|cap=y|com=4}}", "Banggeulladesi", "rr")
	def test_Banggeulladesi_rrr(self):
		self.run_test("방글라데시", "{{ko-IPA|cap=y|com=4}}", "Banggeulladesi", "rrr")
	def test_Banggeulladesi_mr(self):
		self.run_test("방글라데시", "{{ko-IPA|cap=y|com=4}}", "Panggŭlladessi", "mr")
	def test_Banggeulladesi_yr(self):
		self.run_test("방글라데시", "{{ko-IPA|cap=y|com=4}}", "pangkullateyqsi", "yr")
	def test_Banggeulladesi_ipa(self):
		self.run_test("방글라데시", "{{ko-IPA|cap=y|com=4}}", "[pa̠ŋɡɯɭɭa̠de̞ɕ͈i]", "ipa")

	def test_Babeidoseu_ph(self):
		self.run_test("바베이도스", "{{ko-IPA|cap=y}}", "바베이도스", "ph")
	def test_Babeidoseu_rr(self):
		self.run_test("바베이도스", "{{ko-IPA|cap=y}}", "Babeidoseu", "rr")
	def test_Babeidoseu_rrr(self):
		self.run_test("바베이도스", "{{ko-IPA|cap=y}}", "Babeidoseu", "rrr")
	def test_Babeidoseu_mr(self):
		self.run_test("바베이도스", "{{ko-IPA|cap=y}}", "Pabeidosŭ", "mr")
	def test_Babeidoseu_yr(self):
		self.run_test("바베이도스", "{{ko-IPA|cap=y}}", "papeyitosu", "yr")
	def test_Babeidoseu_ipa(self):
		self.run_test("바베이도스", "{{ko-IPA|cap=y}}", "[pa̠be̞ido̞sʰɯ]", "ipa")

	def test_Belgie_ph(self):
		self.run_test("벨기에", "{{ko-IPA|cap=y}}", "벨기에", "ph")
	def test_Belgie_rr(self):
		self.run_test("벨기에", "{{ko-IPA|cap=y}}", "Belgie", "rr")
	def test_Belgie_rrr(self):
		self.run_test("벨기에", "{{ko-IPA|cap=y}}", "Belgie", "rrr")
	def test_Belgie_mr(self):
		self.run_test("벨기에", "{{ko-IPA|cap=y}}", "Pelgie", "mr")
	def test_Belgie_yr(self):
		self.run_test("벨기에", "{{ko-IPA|cap=y}}", "peyl.kiey", "yr")
	def test_Belgie_ipa(self):
		self.run_test("벨기에", "{{ko-IPA|cap=y}}", "[pe̞ɭɡie̞]", "ipa")

	def test_Benin_ph(self):
		self.run_test("베닌", "{{ko-IPA|cap=y}}", "베닌", "ph")
	def test_Benin_rr(self):
		self.run_test("베닌", "{{ko-IPA|cap=y}}", "Benin", "rr")
	def test_Benin_rrr(self):
		self.run_test("베닌", "{{ko-IPA|cap=y}}", "Benin", "rrr")
	def test_Benin_mr(self):
		self.run_test("베닌", "{{ko-IPA|cap=y}}", "Penin", "mr")
	def test_Benin_yr(self):
		self.run_test("베닌", "{{ko-IPA|cap=y}}", "peynin", "yr")
	def test_Benin_ipa(self):
		self.run_test("베닌", "{{ko-IPA|cap=y}}", "[pe̞nin]", "ipa")

	def test_Elsalbadoreu_ph(self):
		self.run_test("엘살바도르", "{{ko-IPA|cap=y}}", "엘살바도르", "ph")
	def test_Elsalbadoreu_rr(self):
		self.run_test("엘살바도르", "{{ko-IPA|cap=y}}", "Elsalbadoreu", "rr")
	def test_Elsalbadoreu_rrr(self):
		self.run_test("엘살바도르", "{{ko-IPA|cap=y}}", "Elsalbadoleu", "rrr")
	def test_Elsalbadoreu_mr(self):
		self.run_test("엘살바도르", "{{ko-IPA|cap=y}}", "Elsalbadorŭ", "mr")
	def test_Elsalbadoreu_yr(self):
		self.run_test("엘살바도르", "{{ko-IPA|cap=y}}", "eyl.sal.patolu", "yr")
	def test_Elsalbadoreu_ipa(self):
		self.run_test("엘살바도르", "{{ko-IPA|cap=y}}", "[e̞ɭsʰa̠ɭba̠do̞ɾɯ]", "ipa")

	def test_Geurenada_ph(self):
		self.run_test("그레나다", "{{ko-IPA|cap=y}}", "그레나다", "ph")
	def test_Geurenada_rr(self):
		self.run_test("그레나다", "{{ko-IPA|cap=y}}", "Geurenada", "rr")
	def test_Geurenada_rrr(self):
		self.run_test("그레나다", "{{ko-IPA|cap=y}}", "Geulenada", "rrr")
	def test_Geurenada_mr(self):
		self.run_test("그레나다", "{{ko-IPA|cap=y}}", "Kŭrenada", "mr")
	def test_Geurenada_yr(self):
		self.run_test("그레나다", "{{ko-IPA|cap=y}}", "kuleynata", "yr")
	def test_Geurenada_ipa(self):
		self.run_test("그레나다", "{{ko-IPA|cap=y}}", "[kɯɾe̞na̠da̠]", "ipa")

	def test_hyeongyongsa_ph(self):
		self.run_test("형용사", "{{ko-IPA}}", "형용사", "ph")
	def test_hyeongyongsa_rr(self):
		self.run_test("형용사", "{{ko-IPA}}", "hyeong'yongsa", "rr")
	def test_hyeongyongsa_rrr(self):
		self.run_test("형용사", "{{ko-IPA}}", "hyeong'yongsa", "rrr")
	def test_hyeongyongsa_mr(self):
		self.run_test("형용사", "{{ko-IPA}}", "hyŏngyongsa", "mr")
	def test_hyeongyongsa_yr(self):
		self.run_test("형용사", "{{ko-IPA}}", "hyengyongsa", "yr")
	def test_hyeongyongsa_ipa(self):
		self.run_test("형용사", "{{ko-IPA}}", "[çʌ̹ŋjoŋsʰa̠]", "ipa")

	def test_gamtansa_ph(self):
		self.run_test("감탄사", "{{ko-IPA|l=y}}", "감(ː)탄사", "ph")
	def test_gamtansa_rr(self):
		self.run_test("감탄사", "{{ko-IPA|l=y}}", "gamtansa", "rr")
	def test_gamtansa_rrr(self):
		self.run_test("감탄사", "{{ko-IPA|l=y}}", "gamtansa", "rrr")
	def test_gamtansa_mr(self):
		self.run_test("감탄사", "{{ko-IPA|l=y}}", "kamt'ansa", "mr")
	def test_gamtansa_yr(self):
		self.run_test("감탄사", "{{ko-IPA|l=y}}", "kāmthansa", "yr")
	def test_gamtansa_ipa(self):
		self.run_test("감탄사", "{{ko-IPA|l=y}}", "[ˈka̠(ː)mtʰa̠nsʰa̠]", "ipa")

	def test_gwanhyeongsa_ph(self):
		self.run_test("관형사", "{{ko-IPA}}", "관형사", "ph")
	def test_gwanhyeongsa_rr(self):
		self.run_test("관형사", "{{ko-IPA}}", "gwanhyeongsa", "rr")
	def test_gwanhyeongsa_rrr(self):
		self.run_test("관형사", "{{ko-IPA}}", "gwanhyeongsa", "rrr")
	def test_gwanhyeongsa_mr(self):
		self.run_test("관형사", "{{ko-IPA}}", "kwanhyŏngsa", "mr")
	def test_gwanhyeongsa_yr(self):
		self.run_test("관형사", "{{ko-IPA}}", "kwan.hyengsa", "yr")
	def test_gwanhyeongsa_ipa(self):
		self.run_test("관형사", "{{ko-IPA}}", "[kwa̠nʝʌ̹ŋsʰa̠]", "ipa")

	def test_busa_ph(self):
		self.run_test("부사", "{{ko-ipa|l=y}}", "부(ː)사", "ph")
	def test_busa_rr(self):
		self.run_test("부사", "{{ko-ipa|l=y}}", "busa", "rr")
	def test_busa_rrr(self):
		self.run_test("부사", "{{ko-ipa|l=y}}", "busa", "rrr")
	def test_busa_mr(self):
		self.run_test("부사", "{{ko-ipa|l=y}}", "pusa", "mr")
	def test_busa_yr(self):
		self.run_test("부사", "{{ko-ipa|l=y}}", "pūsa", "yr")
	def test_busa_ipa(self):
		self.run_test("부사", "{{ko-ipa|l=y}}", "[ˈpu(ː)sʰa̠]", "ipa")

	def test_susa_ph(self):
		self.run_test("수사", "{{ko-IPA|l=y}}", "수(ː)사", "ph")
	def test_susa_rr(self):
		self.run_test("수사", "{{ko-IPA|l=y}}", "susa", "rr")
	def test_susa_rrr(self):
		self.run_test("수사", "{{ko-IPA|l=y}}", "susa", "rrr")
	def test_susa_mr(self):
		self.run_test("수사", "{{ko-IPA|l=y}}", "susa", "mr")
	def test_susa_yr(self):
		self.run_test("수사", "{{ko-IPA|l=y}}", "swūsa", "yr")
	def test_susa_ipa(self):
		self.run_test("수사", "{{ko-IPA|l=y}}", "[ˈsʰu(ː)sʰa̠]", "ipa")
	def test_susa_ph_1(self):
		self.run_test("수사", "{{ko-IPA}}", "수사", "ph")
	def test_susa_rr_1(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rr")
	def test_susa_rrr_1(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rrr")
	def test_susa_mr_1(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "mr")
	def test_susa_yr_1(self):
		self.run_test("수사", "{{ko-IPA}}", "swusa", "yr")
	def test_susa_ipa_1(self):
		self.run_test("수사", "{{ko-IPA}}", "[sʰusʰa̠]", "ipa")
	def test_susa_ph_2(self):
		self.run_test("수사", "{{ko-IPA}}", "수사", "ph")
	def test_susa_rr_2(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rr")
	def test_susa_rrr_2(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rrr")
	def test_susa_mr_2(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "mr")
	def test_susa_yr_2(self):
		self.run_test("수사", "{{ko-IPA}}", "swusa", "yr")
	def test_susa_ipa_2(self):
		self.run_test("수사", "{{ko-IPA}}", "[sʰusʰa̠]", "ipa")
	def test_susa_ph_3(self):
		self.run_test("수사", "{{ko-IPA}}", "수사", "ph")
	def test_susa_rr_3(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rr")
	def test_susa_rrr_3(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rrr")
	def test_susa_mr_3(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "mr")
	def test_susa_yr_3(self):
		self.run_test("수사", "{{ko-IPA}}", "swusa", "yr")
	def test_susa_ipa_3(self):
		self.run_test("수사", "{{ko-IPA}}", "[sʰusʰa̠]", "ipa")
	def test_susa_ph_4(self):
		self.run_test("수사", "{{ko-IPA}}", "수사", "ph")
	def test_susa_rr_4(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rr")
	def test_susa_rrr_4(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rrr")
	def test_susa_mr_4(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "mr")
	def test_susa_yr_4(self):
		self.run_test("수사", "{{ko-IPA}}", "swusa", "yr")
	def test_susa_ipa_4(self):
		self.run_test("수사", "{{ko-IPA}}", "[sʰusʰa̠]", "ipa")
	def test_susa_ph_5(self):
		self.run_test("수사", "{{ko-IPA}}", "수사", "ph")
	def test_susa_rr_5(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rr")
	def test_susa_rrr_5(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "rrr")
	def test_susa_mr_5(self):
		self.run_test("수사", "{{ko-IPA}}", "susa", "mr")
	def test_susa_yr_5(self):
		self.run_test("수사", "{{ko-IPA}}", "swusa", "yr")
	def test_susa_ipa_5(self):
		self.run_test("수사", "{{ko-IPA}}", "[sʰusʰa̠]", "ipa")

	def test_josa_ph(self):
		self.run_test("조사", "{{ko-IPA}}", "조사", "ph")
	def test_josa_rr(self):
		self.run_test("조사", "{{ko-IPA}}", "josa", "rr")
	def test_josa_rrr(self):
		self.run_test("조사", "{{ko-IPA}}", "josa", "rrr")
	def test_josa_mr(self):
		self.run_test("조사", "{{ko-IPA}}", "chosa", "mr")
	def test_josa_yr(self):
		self.run_test("조사", "{{ko-IPA}}", "cosa", "yr")
	def test_josa_ipa(self):
		self.run_test("조사", "{{ko-IPA}}", "[t͡ɕo̞sʰa̠]", "ipa")
	def test_josa_ph_1(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "조(ː)사", "ph")
	def test_josa_rr_1(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rr")
	def test_josa_rrr_1(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rrr")
	def test_josa_mr_1(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "chosa", "mr")
	def test_josa_yr_1(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "cōsa", "yr")
	def test_josa_ipa_1(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)sʰa̠]", "ipa")
	def test_josa_ph_2(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "조(ː)사", "ph")
	def test_josa_rr_2(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rr")
	def test_josa_rrr_2(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rrr")
	def test_josa_mr_2(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "chosa", "mr")
	def test_josa_yr_2(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "cōsa", "yr")
	def test_josa_ipa_2(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)sʰa̠]", "ipa")
	def test_josa_ph_3(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "조(ː)사", "ph")
	def test_josa_rr_3(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rr")
	def test_josa_rrr_3(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rrr")
	def test_josa_mr_3(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "chosa", "mr")
	def test_josa_yr_3(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "cōsa", "yr")
	def test_josa_ipa_3(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)sʰa̠]", "ipa")
	def test_josa_ph_4(self):
		self.run_test("조사", "{{ko-IPA}}", "조사", "ph")
	def test_josa_rr_4(self):
		self.run_test("조사", "{{ko-IPA}}", "josa", "rr")
	def test_josa_rrr_4(self):
		self.run_test("조사", "{{ko-IPA}}", "josa", "rrr")
	def test_josa_mr_4(self):
		self.run_test("조사", "{{ko-IPA}}", "chosa", "mr")
	def test_josa_yr_4(self):
		self.run_test("조사", "{{ko-IPA}}", "cosa", "yr")
	def test_josa_ipa_4(self):
		self.run_test("조사", "{{ko-IPA}}", "[t͡ɕo̞sʰa̠]", "ipa")
	def test_josa_ph_5(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "조(ː)사", "ph")
	def test_josa_rr_5(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rr")
	def test_josa_rrr_5(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rrr")
	def test_josa_mr_5(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "chosa", "mr")
	def test_josa_yr_5(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "cōsa", "yr")
	def test_josa_ipa_5(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)sʰa̠]", "ipa")
	def test_josa_ph_6(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "조(ː)사", "ph")
	def test_josa_rr_6(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rr")
	def test_josa_rrr_6(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "josa", "rrr")
	def test_josa_mr_6(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "chosa", "mr")
	def test_josa_yr_6(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "cōsa", "yr")
	def test_josa_ipa_6(self):
		self.run_test("조사", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)sʰa̠]", "ipa")
	def test_josa_ph_7(self):
		self.run_test("조사", "{{ko-IPA}}", "조사", "ph")
	def test_josa_rr_7(self):
		self.run_test("조사", "{{ko-IPA}}", "josa", "rr")
	def test_josa_rrr_7(self):
		self.run_test("조사", "{{ko-IPA}}", "josa", "rrr")
	def test_josa_mr_7(self):
		self.run_test("조사", "{{ko-IPA}}", "chosa", "mr")
	def test_josa_yr_7(self):
		self.run_test("조사", "{{ko-IPA}}", "cosa", "yr")
	def test_josa_ipa_7(self):
		self.run_test("조사", "{{ko-IPA}}", "[t͡ɕo̞sʰa̠]", "ipa")

	def test_beoseu_ph(self):
		self.run_test("버스", "{{ko-IPA|com=0,1|a=Ko-버스.ogg}}", "뻐쓰", "ph")
	def test_beoseu_rr(self):
		self.run_test("버스", "{{ko-IPA|com=0,1|a=Ko-버스.ogg}}", "beoseu", "rr")
	def test_beoseu_rrr(self):
		self.run_test("버스", "{{ko-IPA|com=0,1|a=Ko-버스.ogg}}", "beoseu", "rrr")
	def test_beoseu_mr(self):
		self.run_test("버스", "{{ko-IPA|com=0,1|a=Ko-버스.ogg}}", "pŏssŭ", "mr")
	def test_beoseu_yr(self):
		self.run_test("버스", "{{ko-IPA|com=0,1|a=Ko-버스.ogg}}", "qpeqsu", "yr")
	def test_beoseu_ipa(self):
		self.run_test("버스", "{{ko-IPA|com=0,1|a=Ko-버스.ogg}}", "[p͈ʌ̹s͈ɯ]", "ipa")

	def test_boilleo_ph(self):
		self.run_test("보일러", "{{ko-IPA}}", "보일러", "ph")
	def test_boilleo_rr(self):
		self.run_test("보일러", "{{ko-IPA}}", "boilleo", "rr")
	def test_boilleo_rrr(self):
		self.run_test("보일러", "{{ko-IPA}}", "boilleo", "rrr")
	def test_boilleo_mr(self):
		self.run_test("보일러", "{{ko-IPA}}", "poillŏ", "mr")
	def test_boilleo_yr(self):
		self.run_test("보일러", "{{ko-IPA}}", "poille", "yr")
	def test_boilleo_ipa(self):
		self.run_test("보일러", "{{ko-IPA}}", "[po̞iɭɭʌ̹]", "ipa")

	def test_dalleo_ph(self):
		self.run_test("달러", "{{ko-IPA}}", "달러", "ph")
	def test_dalleo_rr(self):
		self.run_test("달러", "{{ko-IPA}}", "dalleo", "rr")
	def test_dalleo_rrr(self):
		self.run_test("달러", "{{ko-IPA}}", "dalleo", "rrr")
	def test_dalleo_mr(self):
		self.run_test("달러", "{{ko-IPA}}", "tallŏ", "mr")
	def test_dalleo_yr(self):
		self.run_test("달러", "{{ko-IPA}}", "talle", "yr")
	def test_dalleo_ipa(self):
		self.run_test("달러", "{{ko-IPA}}", "[ta̠ɭɭʌ̹]", "ipa")

	def test_seobiseu_ph(self):
		self.run_test("서비스", "{{ko-IPA|com=0,2}}", "써비쓰", "ph")
	def test_seobiseu_rr(self):
		self.run_test("서비스", "{{ko-IPA|com=0,2}}", "seobiseu", "rr")
	def test_seobiseu_rrr(self):
		self.run_test("서비스", "{{ko-IPA|com=0,2}}", "seobiseu", "rrr")
	def test_seobiseu_mr(self):
		self.run_test("서비스", "{{ko-IPA|com=0,2}}", "ssŏbissŭ", "mr")
	def test_seobiseu_yr(self):
		self.run_test("서비스", "{{ko-IPA|com=0,2}}", "qsepiqsu", "yr")
	def test_seobiseu_ipa(self):
		self.run_test("서비스", "{{ko-IPA|com=0,2}}", "[s͈ʌ̹bis͈ɯ]", "ipa")

	def test_baireoseu_ph(self):
		self.run_test("바이러스", "{{ko-IPA|com=3}}", "바이러쓰", "ph")
	def test_baireoseu_rr(self):
		self.run_test("바이러스", "{{ko-IPA|com=3}}", "baireoseu", "rr")
	def test_baireoseu_rrr(self):
		self.run_test("바이러스", "{{ko-IPA|com=3}}", "baileoseu", "rrr")
	def test_baireoseu_mr(self):
		self.run_test("바이러스", "{{ko-IPA|com=3}}", "pairŏssŭ", "mr")
	def test_baireoseu_yr(self):
		self.run_test("바이러스", "{{ko-IPA|com=3}}", "paileqsu", "yr")
	def test_baireoseu_ipa(self):
		self.run_test("바이러스", "{{ko-IPA|com=3}}", "[pa̠iɾʌ̹s͈ɯ]", "ipa")

	def test_Origeon_ph(self):
		self.run_test("오리건", "{{ko-IPA|cap=y}}", "오리건", "ph")
	def test_Origeon_rr(self):
		self.run_test("오리건", "{{ko-IPA|cap=y}}", "Origeon", "rr")
	def test_Origeon_rrr(self):
		self.run_test("오리건", "{{ko-IPA|cap=y}}", "Oligeon", "rrr")
	def test_Origeon_mr(self):
		self.run_test("오리건", "{{ko-IPA|cap=y}}", "Origŏn", "mr")
	def test_Origeon_yr(self):
		self.run_test("오리건", "{{ko-IPA|cap=y}}", "oliken", "yr")
	def test_Origeon_ipa(self):
		self.run_test("오리건", "{{ko-IPA|cap=y}}", "[o̞ɾiɡʌ̹n]", "ipa")

	def test_jareuda_ph(self):
		self.run_test("자르다", "{{ko-IPA}}", "자르다", "ph")
	def test_jareuda_rr(self):
		self.run_test("자르다", "{{ko-IPA}}", "jareuda", "rr")
	def test_jareuda_rrr(self):
		self.run_test("자르다", "{{ko-IPA}}", "jaleuda", "rrr")
	def test_jareuda_mr(self):
		self.run_test("자르다", "{{ko-IPA}}", "charŭda", "mr")
	def test_jareuda_yr(self):
		self.run_test("자르다", "{{ko-IPA}}", "caluta", "yr")
	def test_jareuda_ipa(self):
		self.run_test("자르다", "{{ko-IPA}}", "[t͡ɕa̠ɾɯda̠]", "ipa")


	def test_bissada_ph(self):
		self.run_test("비싸다", "{{ko-IPA}}", "비싸다", "ph")
	def test_bissada_rr(self):
		self.run_test("비싸다", "{{ko-IPA}}", "bissada", "rr")
	def test_bissada_rrr(self):
		self.run_test("비싸다", "{{ko-IPA}}", "bi'ssada", "rrr")
	def test_bissada_mr(self):
		self.run_test("비싸다", "{{ko-IPA}}", "pissada", "mr")
	def test_bissada_yr(self):
		self.run_test("비싸다", "{{ko-IPA}}", "pi.ssata", "yr")
	def test_bissada_ipa(self):
		self.run_test("비싸다", "{{ko-IPA}}", "[pis͈a̠da̠]", "ipa")

	def test_ssada_ph(self):
		self.run_test("싸다", "{{ko-IPA}}", "싸다", "ph")
	def test_ssada_rr(self):
		self.run_test("싸다", "{{ko-IPA}}", "ssada", "rr")
	def test_ssada_rrr(self):
		self.run_test("싸다", "{{ko-IPA}}", "ssada", "rrr")
	def test_ssada_mr(self):
		self.run_test("싸다", "{{ko-IPA}}", "ssada", "mr")
	def test_ssada_yr(self):
		self.run_test("싸다", "{{ko-IPA}}", "ssata", "yr")
	def test_ssada_ipa(self):
		self.run_test("싸다", "{{ko-IPA}}", "[s͈a̠da̠]", "ipa")

	def test_maeu_ph(self):
		self.run_test("매우", "{{ko-IPA}}", "매우/메우", "ph")
	def test_maeu_rr(self):
		self.run_test("매우", "{{ko-IPA}}", "mae'u", "rr")
	def test_maeu_rrr(self):
		self.run_test("매우", "{{ko-IPA}}", "mae'u", "rrr")
	def test_maeu_mr(self):
		self.run_test("매우", "{{ko-IPA}}", "maeu", "mr")
	def test_maeu_yr(self):
		self.run_test("매우", "{{ko-IPA}}", "maywu", "yr")
	def test_maeu_ipa(self):
		self.run_test("매우", "{{ko-IPA}}", "[mɛu] ~ [me̞u]", "ipa")

	def test_jalda_ph(self):
		self.run_test("잘다", "{{ko-IPA}}", "잘다", "ph")
	def test_jalda_rr(self):
		self.run_test("잘다", "{{ko-IPA}}", "jalda", "rr")
	def test_jalda_rrr(self):
		self.run_test("잘다", "{{ko-IPA}}", "jalda", "rrr")
	def test_jalda_mr(self):
		self.run_test("잘다", "{{ko-IPA}}", "chalda", "mr")
	def test_jalda_yr(self):
		self.run_test("잘다", "{{ko-IPA}}", "calta", "yr")
	def test_jalda_ipa(self):
		self.run_test("잘다", "{{ko-IPA}}", "[t͡ɕa̠ɭda̠]", "ipa")

	def test_ppalgata_ph(self):
		self.run_test("빨갛다", "{{ko-IPA}}", "빨가타", "ph")
	def test_ppalgata_rr(self):
		self.run_test("빨갛다", "{{ko-IPA}}", "ppalgata", "rr")
	def test_ppalgata_rrr(self):
		self.run_test("빨갛다", "{{ko-IPA}}", "ppalgahda", "rrr")
	def test_ppalgata_mr(self):
		self.run_test("빨갛다", "{{ko-IPA}}", "ppalgat'a", "mr")
	def test_ppalgata_yr(self):
		self.run_test("빨갛다", "{{ko-IPA}}", "ppal.kahta", "yr")
	def test_ppalgata_ipa(self):
		self.run_test("빨갛다", "{{ko-IPA}}", "[p͈a̠ɭɡa̠tʰa̠]", "ipa")

	def test_teulda_ph(self):
		self.run_test("틀다", "{{ko-IPA}}", "틀다", "ph")
	def test_teulda_rr(self):
		self.run_test("틀다", "{{ko-IPA}}", "teulda", "rr")
	def test_teulda_rrr(self):
		self.run_test("틀다", "{{ko-IPA}}", "teulda", "rrr")
	def test_teulda_mr(self):
		self.run_test("틀다", "{{ko-IPA}}", "t'ŭlda", "mr")
	def test_teulda_yr(self):
		self.run_test("틀다", "{{ko-IPA}}", "thulta", "yr")
	def test_teulda_ipa(self):
		self.run_test("틀다", "{{ko-IPA}}", "[tʰɯɭda̠]", "ipa")

	def test_goyu_ph(self):
		self.run_test("고유", "{{ko-IPA|a=y}}", "고유", "ph")
	def test_goyu_rr(self):
		self.run_test("고유", "{{ko-IPA|a=y}}", "goyu", "rr")
	def test_goyu_rrr(self):
		self.run_test("고유", "{{ko-IPA|a=y}}", "goyu", "rrr")
	def test_goyu_mr(self):
		self.run_test("고유", "{{ko-IPA|a=y}}", "koyu", "mr")
	def test_goyu_yr(self):
		self.run_test("고유", "{{ko-IPA|a=y}}", "ko.yu", "yr")
	def test_goyu_ipa(self):
		self.run_test("고유", "{{ko-IPA|a=y}}", "[ko̞ju]", "ipa")

	def test_uijon_ph(self):
		self.run_test("의존", "{{ko-IPA|}}", "의존", "ph")
	def test_uijon_rr(self):
		self.run_test("의존", "{{ko-IPA|}}", "uijon", "rr")
	def test_uijon_rrr(self):
		self.run_test("의존", "{{ko-IPA|}}", "uijon", "rrr")
	def test_uijon_mr(self):
		self.run_test("의존", "{{ko-IPA|}}", "ŭijon", "mr")
	def test_uijon_yr(self):
		self.run_test("의존", "{{ko-IPA|}}", "uycon", "yr")
	def test_uijon_ipa(self):
		self.run_test("의존", "{{ko-IPA|}}", "[ɰid͡ʑo̞n]", "ipa")

	def test_uijonhada_ph(self):
		self.run_test("의존하다", "{{ko-IPA}}", "의존하다", "ph")
	def test_uijonhada_rr(self):
		self.run_test("의존하다", "{{ko-IPA}}", "uijonhada", "rr")
	def test_uijonhada_rrr(self):
		self.run_test("의존하다", "{{ko-IPA}}", "uijonhada", "rrr")
	def test_uijonhada_mr(self):
		self.run_test("의존하다", "{{ko-IPA}}", "ŭijonhada", "mr")
	def test_uijonhada_yr(self):
		self.run_test("의존하다", "{{ko-IPA}}", "uycon.hata", "yr")
	def test_uijonhada_ipa(self):
		self.run_test("의존하다", "{{ko-IPA}}", "[ɰid͡ʑo̞nɦa̠da̠]", "ipa")

	def test_danwi_ph(self):
		self.run_test("단위", "{{ko-IPA}}", "다뉘", "ph")
	def test_danwi_rr(self):
		self.run_test("단위", "{{ko-IPA}}", "danwi", "rr")
	def test_danwi_rrr(self):
		self.run_test("단위", "{{ko-IPA}}", "dan'wi", "rrr")
	def test_danwi_mr(self):
		self.run_test("단위", "{{ko-IPA}}", "tanwi", "mr")
	def test_danwi_yr(self):
		self.run_test("단위", "{{ko-IPA}}", "tan.wi", "yr")
	def test_danwi_ipa(self):
		self.run_test("단위", "{{ko-IPA}}", "[ta̠nɥi] ~ [ta̠ny]", "ipa")

	def test_hapsyoche_ph(self):
		self.run_test("합쇼체", "{{ko-IPA}}", "합쑈체", "ph")
	def test_hapsyoche_rr(self):
		self.run_test("합쇼체", "{{ko-IPA}}", "hapsyoche", "rr")
	def test_hapsyoche_rrr(self):
		self.run_test("합쇼체", "{{ko-IPA}}", "habsyoche", "rrr")
	def test_hapsyoche_mr(self):
		self.run_test("합쇼체", "{{ko-IPA}}", "hapsyoch'e", "mr")
	def test_hapsyoche_yr(self):
		self.run_test("합쇼체", "{{ko-IPA}}", "hap.syo.chey", "yr")
	def test_hapsyoche_ipa(self):
		self.run_test("합쇼체", "{{ko-IPA}}", "[ha̠pɕ͈ot͡ɕʰe̞]", "ipa")

	def test_jamjada_ph(self):
		self.run_test("잠자다", "{{ko-IPA}}", "잠자다", "ph")
	def test_jamjada_rr(self):
		self.run_test("잠자다", "{{ko-IPA}}", "jamjada", "rr")
	def test_jamjada_rrr(self):
		self.run_test("잠자다", "{{ko-IPA}}", "jamjada", "rrr")
	def test_jamjada_mr(self):
		self.run_test("잠자다", "{{ko-IPA}}", "chamjada", "mr")
	def test_jamjada_yr(self):
		self.run_test("잠자다", "{{ko-IPA}}", "camcata", "yr")
	def test_jamjada_ipa(self):
		self.run_test("잠자다", "{{ko-IPA}}", "[t͡ɕa̠md͡ʑa̠da̠]", "ipa")

	def test_sada_ph(self):
		self.run_test("사다", "{{ko-IPA|a=y}}", "사다", "ph")
	def test_sada_rr(self):
		self.run_test("사다", "{{ko-IPA|a=y}}", "sada", "rr")
	def test_sada_rrr(self):
		self.run_test("사다", "{{ko-IPA|a=y}}", "sada", "rrr")
	def test_sada_mr(self):
		self.run_test("사다", "{{ko-IPA|a=y}}", "sada", "mr")
	def test_sada_yr(self):
		self.run_test("사다", "{{ko-IPA|a=y}}", "sata", "yr")
	def test_sada_ipa(self):
		self.run_test("사다", "{{ko-IPA|a=y}}", "[sʰa̠da̠]", "ipa")

	def test_jeonhwahada_ph(self):
		self.run_test("전화하다", "{{ko-IPA}}", "전화하다", "ph")
	def test_jeonhwahada_rr(self):
		self.run_test("전화하다", "{{ko-IPA}}", "jeonhwahada", "rr")
	def test_jeonhwahada_rrr(self):
		self.run_test("전화하다", "{{ko-IPA}}", "jeonhwahada", "rrr")
	def test_jeonhwahada_mr(self):
		self.run_test("전화하다", "{{ko-IPA}}", "chŏnhwahada", "mr")
	def test_jeonhwahada_yr(self):
		self.run_test("전화하다", "{{ko-IPA}}", "cen.hwahata", "yr")
	def test_jeonhwahada_ipa(self):
		self.run_test("전화하다", "{{ko-IPA}}", "[t͡ɕʌ̹nβwa̠ɦa̠da̠]", "ipa")

	def test_jeonwa_ph(self):
		self.run_test("전화", "{{ko-IPA|저놔|a=LL-Q9176 (kor)-HappyMidnight-전화.wav}}", "저놔", "ph")
	def test_jeonwa_rr(self):
		self.run_test("전화", "{{ko-IPA|저놔|a=LL-Q9176 (kor)-HappyMidnight-전화.wav}}", "jeonwa", "rr")
	def test_jeonwa_rrr(self):
		self.run_test("전화", "{{ko-IPA|저놔|a=LL-Q9176 (kor)-HappyMidnight-전화.wav}}", "jeonwa", "rrr")
	def test_jeonwa_mr(self):
		self.run_test("전화", "{{ko-IPA|저놔|a=LL-Q9176 (kor)-HappyMidnight-전화.wav}}", "chŏnwa", "mr")
	def test_jeonwa_yr(self):
		self.run_test("전화", "{{ko-IPA|저놔|a=LL-Q9176 (kor)-HappyMidnight-전화.wav}}", "cenwa", "yr")
	def test_jeonwa_ipa(self):
		self.run_test("전화", "{{ko-IPA|저놔|a=LL-Q9176 (kor)-HappyMidnight-전화.wav}}", "[t͡ɕʌ̹nwa̠]", "ipa")

	def test_sireohada_ph(self):
		self.run_test("싫어하다", "{{ko-IPA}}", "시러하다", "ph")
	def test_sireohada_rr(self):
		self.run_test("싫어하다", "{{ko-IPA}}", "sireohada", "rr")
	def test_sireohada_rrr(self):
		self.run_test("싫어하다", "{{ko-IPA}}", "silh'eohada", "rrr")
	def test_sireohada_mr(self):
		self.run_test("싫어하다", "{{ko-IPA}}", "sirŏhada", "mr")
	def test_sireohada_yr(self):
		self.run_test("싫어하다", "{{ko-IPA}}", "silh.ehata", "yr")
	def test_sireohada_ipa(self):
		self.run_test("싫어하다", "{{ko-IPA}}", "[ɕʰiɾʌ̹ɦa̠da̠]", "ipa")

	def test_silta_ph(self):
		self.run_test("싫다", "{{ko-IPA}}", "실타", "ph")
	def test_silta_rr(self):
		self.run_test("싫다", "{{ko-IPA}}", "silta", "rr")
	def test_silta_rrr(self):
		self.run_test("싫다", "{{ko-IPA}}", "silhda", "rrr")
	def test_silta_mr(self):
		self.run_test("싫다", "{{ko-IPA}}", "silt'a", "mr")
	def test_silta_yr(self):
		self.run_test("싫다", "{{ko-IPA}}", "silhta", "yr")
	def test_silta_ipa(self):
		self.run_test("싫다", "{{ko-IPA}}", "[ɕʰiɭtʰa̠]", "ipa")

	def test_jogeum_ph(self):
		self.run_test("조금", "{{ko-IPA}}", "조금", "ph")
	def test_jogeum_rr(self):
		self.run_test("조금", "{{ko-IPA}}", "jogeum", "rr")
	def test_jogeum_rrr(self):
		self.run_test("조금", "{{ko-IPA}}", "jogeum", "rrr")
	def test_jogeum_mr(self):
		self.run_test("조금", "{{ko-IPA}}", "chogŭm", "mr")
	def test_jogeum_yr(self):
		self.run_test("조금", "{{ko-IPA}}", "cokum", "yr")
	def test_jogeum_ipa(self):
		self.run_test("조금", "{{ko-IPA}}", "[t͡ɕo̞ɡɯm]", "ipa")

	def test_bokseo_ph(self):
		self.run_test("복서", "{{ko-IPA}}", "복써", "ph")
	def test_bokseo_rr(self):
		self.run_test("복서", "{{ko-IPA}}", "bokseo", "rr")
	def test_bokseo_rrr(self):
		self.run_test("복서", "{{ko-IPA}}", "bogseo", "rrr")
	def test_bokseo_mr(self):
		self.run_test("복서", "{{ko-IPA}}", "poksŏ", "mr")
	def test_bokseo_yr(self):
		self.run_test("복서", "{{ko-IPA}}", "pok.se", "yr")
	def test_bokseo_ipa(self):
		self.run_test("복서", "{{ko-IPA}}", "[po̞ks͈ʌ̹]", "ipa")

	def test_galkkamagwi_ph(self):
		self.run_test("갈까마귀", "{{ko-IPA}}", "갈까마귀", "ph")
	def test_galkkamagwi_rr(self):
		self.run_test("갈까마귀", "{{ko-IPA}}", "galkkamagwi", "rr")
	def test_galkkamagwi_rrr(self):
		self.run_test("갈까마귀", "{{ko-IPA}}", "galkkamagwi", "rrr")
	def test_galkkamagwi_mr(self):
		self.run_test("갈까마귀", "{{ko-IPA}}", "kalkkamagwi", "mr")
	def test_galkkamagwi_yr(self):
		self.run_test("갈까마귀", "{{ko-IPA}}", "kal.kkamakwi", "yr")
	def test_galkkamagwi_ipa(self):
		self.run_test("갈까마귀", "{{ko-IPA}}", "[ka̠ɭk͈a̠ma̠ɡɥi] ~ [ka̠ɭk͈a̠ma̠ɡy]", "ipa")

	def test_hwasan_ph(self):
		self.run_test("화산", "{{ko-IPA|l=y}}", "화(ː)산", "ph")
	def test_hwasan_rr(self):
		self.run_test("화산", "{{ko-IPA|l=y}}", "hwasan", "rr")
	def test_hwasan_rrr(self):
		self.run_test("화산", "{{ko-IPA|l=y}}", "hwasan", "rrr")
	def test_hwasan_mr(self):
		self.run_test("화산", "{{ko-IPA|l=y}}", "hwasan", "mr")
	def test_hwasan_yr(self):
		self.run_test("화산", "{{ko-IPA|l=y}}", "hwāsan", "yr")
	def test_hwasan_ipa(self):
		self.run_test("화산", "{{ko-IPA|l=y}}", "[ˈɸwa̠(ː)sʰa̠n]", "ipa")

	def test_wit_ph(self):
		self.run_test("윗-", "{{ko-IPA}}", "윋", "ph")
	def test_wit_rr(self):
		self.run_test("윗-", "{{ko-IPA}}", "wit", "rr")
	def test_wit_rrr(self):
		self.run_test("윗-", "{{ko-IPA}}", "wis", "rrr")
	def test_wit_mr(self):
		self.run_test("윗-", "{{ko-IPA}}", "wit", "mr")
	def test_wit_yr(self):
		self.run_test("윗-", "{{ko-IPA}}", "wis", "yr")
	def test_wit_ipa(self):
		self.run_test("윗-", "{{ko-IPA}}", "[ɥit̚] ~ [yt̚]", "ipa")

	def test_changjohada_ph(self):
		self.run_test("창조하다", "{{ko-IPA|l=y}}", "창(ː)조하다", "ph")
	def test_changjohada_rr(self):
		self.run_test("창조하다", "{{ko-IPA|l=y}}", "changjohada", "rr")
	def test_changjohada_rrr(self):
		self.run_test("창조하다", "{{ko-IPA|l=y}}", "changjohada", "rrr")
	def test_changjohada_mr(self):
		self.run_test("창조하다", "{{ko-IPA|l=y}}", "ch'angjohada", "mr")
	def test_changjohada_yr(self):
		self.run_test("창조하다", "{{ko-IPA|l=y}}", "chāngcohata", "yr")
	def test_changjohada_ipa(self):
		self.run_test("창조하다", "{{ko-IPA|l=y}}", "[ˈt͡ɕʰa̠(ː)ŋd͡ʑo̞ɦa̠da̠]", "ipa")


	def test_haerache_ph(self):
		self.run_test("해라체", "{{ko-IPA|l=y}}", "해(ː)라체/헤(ː)라체", "ph")
	def test_haerache_rr(self):
		self.run_test("해라체", "{{ko-IPA|l=y}}", "haerache", "rr")
	def test_haerache_rrr(self):
		self.run_test("해라체", "{{ko-IPA|l=y}}", "haelache", "rrr")
	def test_haerache_mr(self):
		self.run_test("해라체", "{{ko-IPA|l=y}}", "haerach'e", "mr")
	def test_haerache_yr(self):
		self.run_test("해라체", "{{ko-IPA|l=y}}", "hāyla.chey", "yr")
	def test_haerache_ipa(self):
		self.run_test("해라체", "{{ko-IPA|l=y}}", "[ˈhɛ(ː)ɾa̠t͡ɕʰe̞] ~ [ˈhe̞(ː)ɾa̠t͡ɕʰe̞]", "ipa")

	def test_haeyoche_ph(self):
		self.run_test("해요체", "{{ko-IPA|l=y}}", "해(ː)요체/헤(ː)요체", "ph")
	def test_haeyoche_rr(self):
		self.run_test("해요체", "{{ko-IPA|l=y}}", "haeyoche", "rr")
	def test_haeyoche_rrr(self):
		self.run_test("해요체", "{{ko-IPA|l=y}}", "haeyoche", "rrr")
	def test_haeyoche_mr(self):
		self.run_test("해요체", "{{ko-IPA|l=y}}", "haeyoch'e", "mr")
	def test_haeyoche_yr(self):
		self.run_test("해요체", "{{ko-IPA|l=y}}", "hāyyo.chey", "yr")
	def test_haeyoche_ipa(self):
		self.run_test("해요체", "{{ko-IPA|l=y}}", "[ˈhɛ(ː)jot͡ɕʰe̞] ~ [ˈhe̞(ː)jot͡ɕʰe̞]", "ipa")

	def test_haeche_ph(self):
		self.run_test("해체", "{{ko-IPA|l=y}}", "해(ː)체/헤(ː)체", "ph")
	def test_haeche_rr(self):
		self.run_test("해체", "{{ko-IPA|l=y}}", "haeche", "rr")
	def test_haeche_rrr(self):
		self.run_test("해체", "{{ko-IPA|l=y}}", "haeche", "rrr")
	def test_haeche_mr(self):
		self.run_test("해체", "{{ko-IPA|l=y}}", "haech'e", "mr")
	def test_haeche_yr(self):
		self.run_test("해체", "{{ko-IPA|l=y}}", "hāy.chey", "yr")
	def test_haeche_ipa(self):
		self.run_test("해체", "{{ko-IPA|l=y}}", "[ˈhɛ(ː)t͡ɕʰe̞] ~ [ˈhe̞(ː)t͡ɕʰe̞]", "ipa")

	def test_memil_ph(self):
		self.run_test("메밀", "{{ko-IPA}}", "메밀", "ph")
	def test_memil_rr(self):
		self.run_test("메밀", "{{ko-IPA}}", "memil", "rr")
	def test_memil_rrr(self):
		self.run_test("메밀", "{{ko-IPA}}", "memil", "rrr")
	def test_memil_mr(self):
		self.run_test("메밀", "{{ko-IPA}}", "memil", "mr")
	def test_memil_yr(self):
		self.run_test("메밀", "{{ko-IPA}}", "meymil", "yr")
	def test_memil_ipa(self):
		self.run_test("메밀", "{{ko-IPA}}", "[me̞miɭ]", "ipa")

	def test_jol_ph(self):
		self.run_test("졸", "{{ko-IPA}}", "졸", "ph")
	def test_jol_rr(self):
		self.run_test("졸", "{{ko-IPA}}", "jol", "rr")
	def test_jol_rrr(self):
		self.run_test("졸", "{{ko-IPA}}", "jol", "rrr")
	def test_jol_mr(self):
		self.run_test("졸", "{{ko-IPA}}", "chol", "mr")
	def test_jol_yr(self):
		self.run_test("졸", "{{ko-IPA}}", "col", "yr")
	def test_jol_ipa(self):
		self.run_test("졸", "{{ko-IPA}}", "[t͡ɕo̞ɭ]", "ipa")

	def test_janggi_ph(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "장(ː)기", "ph")
	def test_janggi_rr(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "janggi", "rr")
	def test_janggi_rrr(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "janggi", "rrr")
	def test_janggi_mr(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "changgi", "mr")
	def test_janggi_yr(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "cāngki", "yr")
	def test_janggi_ipa(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "[ˈt͡ɕa̠(ː)ŋɡi]", "ipa")
	def test_janggi_ph_1(self):
		self.run_test("장기", "{{ko-IPA}}", "장기", "ph")
	def test_janggi_rr_1(self):
		self.run_test("장기", "{{ko-IPA}}", "janggi", "rr")
	def test_janggi_rrr_1(self):
		self.run_test("장기", "{{ko-IPA}}", "janggi", "rrr")
	def test_janggi_mr_1(self):
		self.run_test("장기", "{{ko-IPA}}", "changgi", "mr")
	def test_janggi_yr_1(self):
		self.run_test("장기", "{{ko-IPA}}", "cangki", "yr")
	def test_janggi_ipa_1(self):
		self.run_test("장기", "{{ko-IPA}}", "[t͡ɕa̠ŋɡi]", "ipa")
	def test_janggi_ph_2(self):
		self.run_test("장기", "{{ko-ipa}}", "장기", "ph")
	def test_janggi_rr_2(self):
		self.run_test("장기", "{{ko-ipa}}", "janggi", "rr")
	def test_janggi_rrr_2(self):
		self.run_test("장기", "{{ko-ipa}}", "janggi", "rrr")
	def test_janggi_mr_2(self):
		self.run_test("장기", "{{ko-ipa}}", "changgi", "mr")
	def test_janggi_yr_2(self):
		self.run_test("장기", "{{ko-ipa}}", "cangki", "yr")
	def test_janggi_ipa_2(self):
		self.run_test("장기", "{{ko-ipa}}", "[t͡ɕa̠ŋɡi]", "ipa")
	def test_janggi_ph_3(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "장(ː)기", "ph")
	def test_janggi_rr_3(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "janggi", "rr")
	def test_janggi_rrr_3(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "janggi", "rrr")
	def test_janggi_mr_3(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "changgi", "mr")
	def test_janggi_yr_3(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "cāngki", "yr")
	def test_janggi_ipa_3(self):
		self.run_test("장기", "{{ko-ipa|l=y}}", "[ˈt͡ɕa̠(ː)ŋɡi]", "ipa")
	def test_janggi_ph_4(self):
		self.run_test("장기", "{{ko-IPA|com=1}}", "장끼", "ph")
	def test_janggi_rr_4(self):
		self.run_test("장기", "{{ko-IPA|com=1}}", "janggi", "rr")
	def test_janggi_rrr_4(self):
		self.run_test("장기", "{{ko-IPA|com=1}}", "janggi", "rrr")
	def test_janggi_mr_4(self):
		self.run_test("장기", "{{ko-IPA|com=1}}", "changki", "mr")
	def test_janggi_yr_4(self):
		self.run_test("장기", "{{ko-IPA|com=1}}", "cangqki", "yr")
	def test_janggi_ipa_4(self):
		self.run_test("장기", "{{ko-IPA|com=1}}", "[t͡ɕa̠ŋk͈i]", "ipa")

	def test_baduk_ph(self):
		self.run_test("바둑", "{{ko-IPA}}", "바둑", "ph")
	def test_baduk_rr(self):
		self.run_test("바둑", "{{ko-IPA}}", "baduk", "rr")
	def test_baduk_rrr(self):
		self.run_test("바둑", "{{ko-IPA}}", "badug", "rrr")
	def test_baduk_mr(self):
		self.run_test("바둑", "{{ko-IPA}}", "paduk", "mr")
	def test_baduk_yr(self):
		self.run_test("바둑", "{{ko-IPA}}", "patwuk", "yr")
	def test_baduk_ipa(self):
		self.run_test("바둑", "{{ko-IPA}}", "[pa̠duk̚]", "ipa")

	def test_dang_ph(self):
		self.run_test("당", "{{ko-IPA}}", "당", "ph")
	def test_dang_rr(self):
		self.run_test("당", "{{ko-IPA}}", "dang", "rr")
	def test_dang_rrr(self):
		self.run_test("당", "{{ko-IPA}}", "dang", "rrr")
	def test_dang_mr(self):
		self.run_test("당", "{{ko-IPA}}", "tang", "mr")
	def test_dang_yr(self):
		self.run_test("당", "{{ko-IPA}}", "tang", "yr")
	def test_dang_ipa(self):
		self.run_test("당", "{{ko-IPA}}", "[ta̠ŋ]", "ipa")

	def test_batda_ph(self):
		self.run_test("받다", "{{ko-IPA|a=y}}", "받따", "ph")
	def test_batda_rr(self):
		self.run_test("받다", "{{ko-IPA|a=y}}", "batda", "rr")
	def test_batda_rrr(self):
		self.run_test("받다", "{{ko-IPA|a=y}}", "badda", "rrr")
	def test_batda_mr(self):
		self.run_test("받다", "{{ko-IPA|a=y}}", "patta", "mr")
	def test_batda_yr(self):
		self.run_test("받다", "{{ko-IPA|a=y}}", "pat.ta", "yr")
	def test_batda_ipa(self):
		self.run_test("받다", "{{ko-IPA|a=y}}", "[pa̠t̚t͈a̠]", "ipa")

	def test_gapareuda_ph(self):
		self.run_test("가파르다", "{{ko-IPA}}", "가파르다", "ph")
	def test_gapareuda_rr(self):
		self.run_test("가파르다", "{{ko-IPA}}", "gapareuda", "rr")
	def test_gapareuda_rrr(self):
		self.run_test("가파르다", "{{ko-IPA}}", "gapaleuda", "rrr")
	def test_gapareuda_mr(self):
		self.run_test("가파르다", "{{ko-IPA}}", "kap'arŭda", "mr")
	def test_gapareuda_yr(self):
		self.run_test("가파르다", "{{ko-IPA}}", "ka.phaluta", "yr")
	def test_gapareuda_ipa(self):
		self.run_test("가파르다", "{{ko-IPA}}", "[ka̠pʰa̠ɾɯda̠]", "ipa")

	def test_gareuchida_ph(self):
		self.run_test("가르치다", "{{ko-IPA}}", "가르치다", "ph")
	def test_gareuchida_rr(self):
		self.run_test("가르치다", "{{ko-IPA}}", "gareuchida", "rr")
	def test_gareuchida_rrr(self):
		self.run_test("가르치다", "{{ko-IPA}}", "galeuchida", "rrr")
	def test_gareuchida_mr(self):
		self.run_test("가르치다", "{{ko-IPA}}", "karŭch'ida", "mr")
	def test_gareuchida_yr(self):
		self.run_test("가르치다", "{{ko-IPA}}", "kalu.chita", "yr")
	def test_gareuchida_ipa(self):
		self.run_test("가르치다", "{{ko-IPA}}", "[ka̠ɾɯt͡ɕʰida̠]", "ipa")

	def test_garida_ph(self):
		self.run_test("가리다", "{{ko-IPA}}", "가리다", "ph")
	def test_garida_rr(self):
		self.run_test("가리다", "{{ko-IPA}}", "garida", "rr")
	def test_garida_rrr(self):
		self.run_test("가리다", "{{ko-IPA}}", "galida", "rrr")
	def test_garida_mr(self):
		self.run_test("가리다", "{{ko-IPA}}", "karida", "mr")
	def test_garida_yr(self):
		self.run_test("가리다", "{{ko-IPA}}", "kalita", "yr")
	def test_garida_ipa(self):
		self.run_test("가리다", "{{ko-IPA}}", "[ka̠ɾida̠]", "ipa")

	def test_batang_ph(self):
		self.run_test("바탕", "{{ko-IPA}}", "바탕", "ph")
	def test_batang_rr(self):
		self.run_test("바탕", "{{ko-IPA}}", "batang", "rr")
	def test_batang_rrr(self):
		self.run_test("바탕", "{{ko-IPA}}", "batang", "rrr")
	def test_batang_mr(self):
		self.run_test("바탕", "{{ko-IPA}}", "pat'ang", "mr")
	def test_batang_yr(self):
		self.run_test("바탕", "{{ko-IPA}}", "pa.thang", "yr")
	def test_batang_ipa(self):
		self.run_test("바탕", "{{ko-IPA}}", "[pa̠tʰa̠ŋ]", "ipa")

	def test_beoteong_ph(self):
		self.run_test("버텅", "{{ko-ipa}}", "버텅", "ph")
	def test_beoteong_rr(self):
		self.run_test("버텅", "{{ko-ipa}}", "beoteong", "rr")
	def test_beoteong_rrr(self):
		self.run_test("버텅", "{{ko-ipa}}", "beoteong", "rrr")
	def test_beoteong_mr(self):
		self.run_test("버텅", "{{ko-ipa}}", "pŏt'ŏng", "mr")
	def test_beoteong_yr(self):
		self.run_test("버텅", "{{ko-ipa}}", "pe.theng", "yr")
	def test_beoteong_ipa(self):
		self.run_test("버텅", "{{ko-ipa}}", "[pʌ̹tʰʌ̹ŋ]", "ipa")

	def test_beoteongarae_ph(self):
		self.run_test("버텅아래", "{{ko-IPA}}", "버텅아래/버텅아레", "ph")
	def test_beoteongarae_rr(self):
		self.run_test("버텅아래", "{{ko-IPA}}", "beoteong'arae", "rr")
	def test_beoteongarae_rrr(self):
		self.run_test("버텅아래", "{{ko-IPA}}", "beoteong'alae", "rrr")
	def test_beoteongarae_mr(self):
		self.run_test("버텅아래", "{{ko-IPA}}", "pŏt'ŏngarae", "mr")
	def test_beoteongarae_yr(self):
		self.run_test("버텅아래", "{{ko-IPA}}", "pe.thengalay", "yr")
	def test_beoteongarae_ipa(self):
		self.run_test("버텅아래", "{{ko-IPA}}", "[pʌ̹tʰʌ̹ŋa̠ɾɛ] ~ [pʌ̹tʰʌ̹ŋa̠ɾe̞]", "ipa")

	def test_pyeha_ph(self):
		self.run_test("폐하", "{{ko-ipa|l=y}}", "폐(ː)하/페(ː)하", "ph")
	def test_pyeha_rr(self):
		self.run_test("폐하", "{{ko-ipa|l=y}}", "pyeha", "rr")
	def test_pyeha_rrr(self):
		self.run_test("폐하", "{{ko-ipa|l=y}}", "pyeha", "rrr")
	def test_pyeha_mr(self):
		self.run_test("폐하", "{{ko-ipa|l=y}}", "p'yeha", "mr")
	def test_pyeha_yr(self):
		self.run_test("폐하", "{{ko-ipa|l=y}}", "phyēyha", "yr")
	def test_pyeha_ipa(self):
		self.run_test("폐하", "{{ko-ipa|l=y}}", "[ˈpʰje̞(ː)ɦa̠] ~ [ˈpʰe̞(ː)ɦa̠]", "ipa")

	def test_bapda_ph(self):
		self.run_test("밟다", "{{ko-IPA|l=y}}", "밥(ː)따", "ph")
	def test_bapda_rr(self):
		self.run_test("밟다", "{{ko-IPA|l=y}}", "bapda", "rr")
	def test_bapda_rrr(self):
		self.run_test("밟다", "{{ko-IPA|l=y}}", "balbda", "rrr")
	def test_bapda_mr(self):
		self.run_test("밟다", "{{ko-IPA|l=y}}", "papta", "mr")
	def test_bapda_yr(self):
		self.run_test("밟다", "{{ko-IPA|l=y}}", "pālpta", "yr")
	def test_bapda_ipa(self):
		self.run_test("밟다", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)p̚t͈a̠]", "ipa")

	def test_banmal_ph(self):
		self.run_test("반말", "{{ko-IPA|l=y}}", "반(ː)말", "ph")
	def test_banmal_rr(self):
		self.run_test("반말", "{{ko-IPA|l=y}}", "banmal", "rr")
	def test_banmal_rrr(self):
		self.run_test("반말", "{{ko-IPA|l=y}}", "banmal", "rrr")
	def test_banmal_mr(self):
		self.run_test("반말", "{{ko-IPA|l=y}}", "panmal", "mr")
	def test_banmal_yr(self):
		self.run_test("반말", "{{ko-IPA|l=y}}", "pānmal", "yr")
	def test_banmal_ipa(self):
		self.run_test("반말", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)nma̠ɭ]", "ipa")

	def test_bulda_ph(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "불(ː)다", "ph")
	def test_bulda_rr(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "bulda", "rr")
	def test_bulda_rrr(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "bulda", "rrr")
	def test_bulda_mr(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "pulda", "mr")
	def test_bulda_yr(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "pūlta", "yr")
	def test_bulda_ipa(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "[ˈpu(ː)ɭda̠]", "ipa")
	def test_bulda_ph_1(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "불(ː)다", "ph")
	def test_bulda_rr_1(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "bulda", "rr")
	def test_bulda_rrr_1(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "bulda", "rrr")
	def test_bulda_mr_1(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "pulda", "mr")
	def test_bulda_yr_1(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "pūlta", "yr")
	def test_bulda_ipa_1(self):
		self.run_test("불다", "{{ko-IPA|l=y}}", "[ˈpu(ː)ɭda̠]", "ipa")

	def test_sijang_ph(self):
		self.run_test("시장", "{{ko-IPA}}", "시장", "ph")
	def test_sijang_rr(self):
		self.run_test("시장", "{{ko-IPA}}", "sijang", "rr")
	def test_sijang_rrr(self):
		self.run_test("시장", "{{ko-IPA}}", "sijang", "rrr")
	def test_sijang_mr(self):
		self.run_test("시장", "{{ko-IPA}}", "sijang", "mr")
	def test_sijang_yr(self):
		self.run_test("시장", "{{ko-IPA}}", "sicang", "yr")
	def test_sijang_ipa(self):
		self.run_test("시장", "{{ko-IPA}}", "[ɕʰid͡ʑa̠ŋ]", "ipa")
	def test_sijang_ph_1(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "시(ː)장", "ph")
	def test_sijang_rr_1(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "sijang", "rr")
	def test_sijang_rrr_1(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "sijang", "rrr")
	def test_sijang_mr_1(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "sijang", "mr")
	def test_sijang_yr_1(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "sīcang", "yr")
	def test_sijang_ipa_1(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)d͡ʑa̠ŋ]", "ipa")
	def test_sijang_ph_2(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "시(ː)장", "ph")
	def test_sijang_rr_2(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "sijang", "rr")
	def test_sijang_rrr_2(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "sijang", "rrr")
	def test_sijang_mr_2(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "sijang", "mr")
	def test_sijang_yr_2(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "sīcang", "yr")
	def test_sijang_ipa_2(self):
		self.run_test("시장", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)d͡ʑa̠ŋ]", "ipa")

	def test_garikida_ph(self):
		self.run_test("가리키다", "{{ko-IPA|a=Ko-가리키다.oga}}", "가리키다", "ph")
	def test_garikida_rr(self):
		self.run_test("가리키다", "{{ko-IPA|a=Ko-가리키다.oga}}", "garikida", "rr")
	def test_garikida_rrr(self):
		self.run_test("가리키다", "{{ko-IPA|a=Ko-가리키다.oga}}", "galikida", "rrr")
	def test_garikida_mr(self):
		self.run_test("가리키다", "{{ko-IPA|a=Ko-가리키다.oga}}", "karik'ida", "mr")
	def test_garikida_yr(self):
		self.run_test("가리키다", "{{ko-IPA|a=Ko-가리키다.oga}}", "kali.khita", "yr")
	def test_garikida_ipa(self):
		self.run_test("가리키다", "{{ko-IPA|a=Ko-가리키다.oga}}", "[ka̠ɾicçida̠]", "ipa")

	def test_gajida_ph(self):
		self.run_test("가지다", "{{ko-IPA|a=y}}", "가지다", "ph")
	def test_gajida_rr(self):
		self.run_test("가지다", "{{ko-IPA|a=y}}", "gajida", "rr")
	def test_gajida_rrr(self):
		self.run_test("가지다", "{{ko-IPA|a=y}}", "gajida", "rrr")
	def test_gajida_mr(self):
		self.run_test("가지다", "{{ko-IPA|a=y}}", "kajida", "mr")
	def test_gajida_yr(self):
		self.run_test("가지다", "{{ko-IPA|a=y}}", "kacita", "yr")
	def test_gajida_ipa(self):
		self.run_test("가지다", "{{ko-IPA|a=y}}", "[ka̠d͡ʑida̠]", "ipa")

	def test_gamgida_ph(self):
		self.run_test("감기다", "{{ko-IPA}}", "감기다", "ph")
	def test_gamgida_rr(self):
		self.run_test("감기다", "{{ko-IPA}}", "gamgida", "rr")
	def test_gamgida_rrr(self):
		self.run_test("감기다", "{{ko-IPA}}", "gamgida", "rrr")
	def test_gamgida_mr(self):
		self.run_test("감기다", "{{ko-IPA}}", "kamgida", "mr")
	def test_gamgida_yr(self):
		self.run_test("감기다", "{{ko-IPA}}", "kamkita", "yr")
	def test_gamgida_ipa(self):
		self.run_test("감기다", "{{ko-IPA}}", "[ka̠mɡida̠]", "ipa")

	def test_gamda_ph(self):
		self.run_test("감다", "{{ko-IPA|com=1|l=y}}", "감(ː)따", "ph")
	def test_gamda_rr(self):
		self.run_test("감다", "{{ko-IPA|com=1|l=y}}", "gamda", "rr")
	def test_gamda_rrr(self):
		self.run_test("감다", "{{ko-IPA|com=1|l=y}}", "gamda", "rrr")
	def test_gamda_mr(self):
		self.run_test("감다", "{{ko-IPA|com=1|l=y}}", "kamta", "mr")
	def test_gamda_yr(self):
		self.run_test("감다", "{{ko-IPA|com=1|l=y}}", "kāmqta", "yr")
	def test_gamda_ipa(self):
		self.run_test("감다", "{{ko-IPA|com=1|l=y}}", "[ˈka̠(ː)mt͈a̠]", "ipa")

	def test_dunchida_ph(self):
		self.run_test("둔치다", "{{ko-IPA}}", "둔치다", "ph")
	def test_dunchida_rr(self):
		self.run_test("둔치다", "{{ko-IPA}}", "dunchida", "rr")
	def test_dunchida_rrr(self):
		self.run_test("둔치다", "{{ko-IPA}}", "dunchida", "rrr")
	def test_dunchida_mr(self):
		self.run_test("둔치다", "{{ko-IPA}}", "tunch'ida", "mr")
	def test_dunchida_yr(self):
		self.run_test("둔치다", "{{ko-IPA}}", "twun.chita", "yr")
	def test_dunchida_ipa(self):
		self.run_test("둔치다", "{{ko-IPA}}", "[tuɲt͡ɕʰida̠]", "ipa")

	def test_gamchuda_ph(self):
		self.run_test("감추다", "{{ko-IPA}}", "감추다", "ph")
	def test_gamchuda_rr(self):
		self.run_test("감추다", "{{ko-IPA}}", "gamchuda", "rr")
	def test_gamchuda_rrr(self):
		self.run_test("감추다", "{{ko-IPA}}", "gamchuda", "rrr")
	def test_gamchuda_mr(self):
		self.run_test("감추다", "{{ko-IPA}}", "kamch'uda", "mr")
	def test_gamchuda_yr(self):
		self.run_test("감추다", "{{ko-IPA}}", "kamchwuta", "yr")
	def test_gamchuda_ipa(self):
		self.run_test("감추다", "{{ko-IPA}}", "[ka̠mt͡ɕʰuda̠]", "ipa")

	def test_makda_ph(self):
		self.run_test("막다", "{{ko-IPA}}", "막따", "ph")
	def test_makda_rr(self):
		self.run_test("막다", "{{ko-IPA}}", "makda", "rr")
	def test_makda_rrr(self):
		self.run_test("막다", "{{ko-IPA}}", "magda", "rrr")
	def test_makda_mr(self):
		self.run_test("막다", "{{ko-IPA}}", "makta", "mr")
	def test_makda_yr(self):
		self.run_test("막다", "{{ko-IPA}}", "makta", "yr")
	def test_makda_ipa(self):
		self.run_test("막다", "{{ko-IPA}}", "[ma̠k̚t͈a̠]", "ipa")

	def test_gaeda_ph(self):
		self.run_test("개다", "{{ko-IPA|l=y}}", "개(ː)다/게(ː)다", "ph")
	def test_gaeda_rr(self):
		self.run_test("개다", "{{ko-IPA|l=y}}", "gaeda", "rr")
	def test_gaeda_rrr(self):
		self.run_test("개다", "{{ko-IPA|l=y}}", "gaeda", "rrr")
	def test_gaeda_mr(self):
		self.run_test("개다", "{{ko-IPA|l=y}}", "kaeda", "mr")
	def test_gaeda_yr(self):
		self.run_test("개다", "{{ko-IPA|l=y}}", "kāyta", "yr")
	def test_gaeda_ipa(self):
		self.run_test("개다", "{{ko-IPA|l=y}}", "[ˈkɛ(ː)da̠] ~ [ˈke̞(ː)da̠]", "ipa")

	def test_geoseureuda_ph(self):
		self.run_test("거스르다", "{{ko-IPA}}", "거스르다", "ph")
	def test_geoseureuda_rr(self):
		self.run_test("거스르다", "{{ko-IPA}}", "geoseureuda", "rr")
	def test_geoseureuda_rrr(self):
		self.run_test("거스르다", "{{ko-IPA}}", "geoseuleuda", "rrr")
	def test_geoseureuda_mr(self):
		self.run_test("거스르다", "{{ko-IPA}}", "kŏsŭrŭda", "mr")
	def test_geoseureuda_yr(self):
		self.run_test("거스르다", "{{ko-IPA}}", "kesuluta", "yr")
	def test_geoseureuda_ipa(self):
		self.run_test("거스르다", "{{ko-IPA}}", "[kʌ̹sʰɯɾɯda̠]", "ipa")

	def test_geochilda_ph(self):
		self.run_test("거칠다", "{{ko-IPA}}", "거칠다", "ph")
	def test_geochilda_rr(self):
		self.run_test("거칠다", "{{ko-IPA}}", "geochilda", "rr")
	def test_geochilda_rrr(self):
		self.run_test("거칠다", "{{ko-IPA}}", "geochilda", "rrr")
	def test_geochilda_mr(self):
		self.run_test("거칠다", "{{ko-IPA}}", "kŏch'ilda", "mr")
	def test_geochilda_yr(self):
		self.run_test("거칠다", "{{ko-IPA}}", "ke.chilta", "yr")
	def test_geochilda_ipa(self):
		self.run_test("거칠다", "{{ko-IPA}}", "[kʌ̹t͡ɕʰiɭda̠]", "ipa")

	def test_geonneoda_ph(self):
		self.run_test("건너다", "{{ko-IPA|l=y|a=y}}", "건(ː)너다", "ph")
	def test_geonneoda_rr(self):
		self.run_test("건너다", "{{ko-IPA|l=y|a=y}}", "geonneoda", "rr")
	def test_geonneoda_rrr(self):
		self.run_test("건너다", "{{ko-IPA|l=y|a=y}}", "geonneoda", "rrr")
	def test_geonneoda_mr(self):
		self.run_test("건너다", "{{ko-IPA|l=y|a=y}}", "kŏnnŏda", "mr")
	def test_geonneoda_yr(self):
		self.run_test("건너다", "{{ko-IPA|l=y|a=y}}", "kēnneta", "yr")
	def test_geonneoda_ipa(self):
		self.run_test("건너다", "{{ko-IPA|l=y|a=y}}", "[ˈkɘ(ː)nnʌ̹da̠]", "ipa")

	def test_mujamaekjilhada_ph(self):
		self.run_test("무자맥질하다", "{{ko-IPA}}", "무자맥찔하다/무자멕찔하다", "ph")
	def test_mujamaekjilhada_rr(self):
		self.run_test("무자맥질하다", "{{ko-IPA}}", "mujamaekjilhada", "rr")
	def test_mujamaekjilhada_rrr(self):
		self.run_test("무자맥질하다", "{{ko-IPA}}", "mujamaegjilhada", "rrr")
	def test_mujamaekjilhada_mr(self):
		self.run_test("무자맥질하다", "{{ko-IPA}}", "mujamaekchirhada", "mr")
	def test_mujamaekjilhada_yr(self):
		self.run_test("무자맥질하다", "{{ko-IPA}}", "mucamaykcil.hata", "yr")
	def test_mujamaekjilhada_ipa(self):
		self.run_test("무자맥질하다", "{{ko-IPA}}", "[mud͡ʑa̠mɛk̚t͡ɕ͈iɾɦa̠da̠] ~ [mud͡ʑa̠me̞k̚t͡ɕ͈iɾɦa̠da̠]", "ipa")

	def test_geollida_ph(self):
		self.run_test("걸리다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-걸리다.wav}}", "걸리다", "ph")
	def test_geollida_rr(self):
		self.run_test("걸리다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-걸리다.wav}}", "geollida", "rr")
	def test_geollida_rrr(self):
		self.run_test("걸리다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-걸리다.wav}}", "geollida", "rrr")
	def test_geollida_mr(self):
		self.run_test("걸리다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-걸리다.wav}}", "kŏllida", "mr")
	def test_geollida_yr(self):
		self.run_test("걸리다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-걸리다.wav}}", "kellita", "yr")
	def test_geollida_ipa(self):
		self.run_test("걸리다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-걸리다.wav}}", "[kʌ̹ʎʎida̠]", "ipa")

	def test_geeureuda_ph(self):
		self.run_test("게으르다", "{{ko-IPA}}", "게으르다", "ph")
	def test_geeureuda_rr(self):
		self.run_test("게으르다", "{{ko-IPA}}", "geeureuda", "rr")
	def test_geeureuda_rrr(self):
		self.run_test("게으르다", "{{ko-IPA}}", "geeuleuda", "rrr")
	def test_geeureuda_mr(self):
		self.run_test("게으르다", "{{ko-IPA}}", "keŭrŭda", "mr")
	def test_geeureuda_yr(self):
		self.run_test("게으르다", "{{ko-IPA}}", "key.uluta", "yr")
	def test_geeureuda_ipa(self):
		self.run_test("게으르다", "{{ko-IPA}}", "[ke̞ɯɾɯda̠]", "ipa")

	def test_geureuda_ph(self):
		self.run_test("그르다", "{{ko-IPA}}", "그르다", "ph")
	def test_geureuda_rr(self):
		self.run_test("그르다", "{{ko-IPA}}", "geureuda", "rr")
	def test_geureuda_rrr(self):
		self.run_test("그르다", "{{ko-IPA}}", "geuleuda", "rrr")
	def test_geureuda_mr(self):
		self.run_test("그르다", "{{ko-IPA}}", "kŭrŭda", "mr")
	def test_geureuda_yr(self):
		self.run_test("그르다", "{{ko-IPA}}", "kuluta", "yr")
	def test_geureuda_ipa(self):
		self.run_test("그르다", "{{ko-IPA}}", "[kɯɾɯda̠]", "ipa")

	def test_geureota_ph(self):
		self.run_test("그렇다", "{{ko-IPA|a=y}}", "그러타", "ph")
	def test_geureota_rr(self):
		self.run_test("그렇다", "{{ko-IPA|a=y}}", "geureota", "rr")
	def test_geureota_rrr(self):
		self.run_test("그렇다", "{{ko-IPA|a=y}}", "geuleohda", "rrr")
	def test_geureota_mr(self):
		self.run_test("그렇다", "{{ko-IPA|a=y}}", "kŭrŏt'a", "mr")
	def test_geureota_yr(self):
		self.run_test("그렇다", "{{ko-IPA|a=y}}", "kulehta", "yr")
	def test_geureota_ipa(self):
		self.run_test("그렇다", "{{ko-IPA|a=y}}", "[kɯɾʌ̹tʰa̠]", "ipa")

	def test_gwiyeopda_ph(self):
		self.run_test("귀엽다", "{{ko-IPA|l=y}}", "귀(ː)엽따", "ph")
	def test_gwiyeopda_rr(self):
		self.run_test("귀엽다", "{{ko-IPA|l=y}}", "gwiyeopda", "rr")
	def test_gwiyeopda_rrr(self):
		self.run_test("귀엽다", "{{ko-IPA|l=y}}", "gwiyeobda", "rrr")
	def test_gwiyeopda_mr(self):
		self.run_test("귀엽다", "{{ko-IPA|l=y}}", "kwiyŏpta", "mr")
	def test_gwiyeopda_yr(self):
		self.run_test("귀엽다", "{{ko-IPA|l=y}}", "kwī.yepta", "yr")
	def test_gwiyeopda_ipa(self):
		self.run_test("귀엽다", "{{ko-IPA|l=y}}", "[ˈkɥi(ː)jʌ̹p̚t͈a̠] ~ [ˈky(ː)jʌ̹p̚t͈a̠]", "ipa")

	def test_goeda_ph(self):
		self.run_test("괴다", "{{ko-IPA|l=y}}", "궤(ː)다/괴(ː)다", "ph")
	def test_goeda_rr(self):
		self.run_test("괴다", "{{ko-IPA|l=y}}", "goeda", "rr")
	def test_goeda_rrr(self):
		self.run_test("괴다", "{{ko-IPA|l=y}}", "goeda", "rrr")
	def test_goeda_mr(self):
		self.run_test("괴다", "{{ko-IPA|l=y}}", "koeda", "mr")
	def test_goeda_yr(self):
		self.run_test("괴다", "{{ko-IPA|l=y}}", "kōyta", "yr")
	def test_goeda_ipa(self):
		self.run_test("괴다", "{{ko-IPA|l=y}}", "[ˈkwe̞(ː)da̠] ~ [ˈkø̞(ː)da̠]", "ipa")

	def test_gopda_ph(self):
		self.run_test("곱다", "{{ko-IPA|l=y}}", "곱(ː)따", "ph")
	def test_gopda_rr(self):
		self.run_test("곱다", "{{ko-IPA|l=y}}", "gopda", "rr")
	def test_gopda_rrr(self):
		self.run_test("곱다", "{{ko-IPA|l=y}}", "gobda", "rrr")
	def test_gopda_mr(self):
		self.run_test("곱다", "{{ko-IPA|l=y}}", "kopta", "mr")
	def test_gopda_yr(self):
		self.run_test("곱다", "{{ko-IPA|l=y}}", "kōpta", "yr")
	def test_gopda_ipa(self):
		self.run_test("곱다", "{{ko-IPA|l=y}}", "[ˈko̞(ː)p̚t͈a̠]", "ipa")
	def test_gopda_ph_1(self):
		self.run_test("곱다", "{{ko-IPA}}", "곱따", "ph")
	def test_gopda_rr_1(self):
		self.run_test("곱다", "{{ko-IPA}}", "gopda", "rr")
	def test_gopda_rrr_1(self):
		self.run_test("곱다", "{{ko-IPA}}", "gobda", "rrr")
	def test_gopda_mr_1(self):
		self.run_test("곱다", "{{ko-IPA}}", "kopta", "mr")
	def test_gopda_yr_1(self):
		self.run_test("곱다", "{{ko-IPA}}", "kopta", "yr")
	def test_gopda_ipa_1(self):
		self.run_test("곱다", "{{ko-IPA}}", "[ko̞p̚t͈a̠]", "ipa")

	def test_gochida_ph(self):
		self.run_test("고치다", "{{ko-IPA}}", "고치다", "ph")
	def test_gochida_rr(self):
		self.run_test("고치다", "{{ko-IPA}}", "gochida", "rr")
	def test_gochida_rrr(self):
		self.run_test("고치다", "{{ko-IPA}}", "gochida", "rrr")
	def test_gochida_mr(self):
		self.run_test("고치다", "{{ko-IPA}}", "koch'ida", "mr")
	def test_gochida_yr(self):
		self.run_test("고치다", "{{ko-IPA}}", "ko.chita", "yr")
	def test_gochida_ipa(self):
		self.run_test("고치다", "{{ko-IPA}}", "[ko̞t͡ɕʰida̠]", "ipa")

	def test_goida_ph(self):
		self.run_test("고이다", "{{ko-IPA}}", "고이다", "ph")
	def test_goida_rr(self):
		self.run_test("고이다", "{{ko-IPA}}", "goida", "rr")
	def test_goida_rrr(self):
		self.run_test("고이다", "{{ko-IPA}}", "goida", "rrr")
	def test_goida_mr(self):
		self.run_test("고이다", "{{ko-IPA}}", "koida", "mr")
	def test_goida_yr(self):
		self.run_test("고이다", "{{ko-IPA}}", "koita", "yr")
	def test_goida_ipa(self):
		self.run_test("고이다", "{{ko-IPA}}", "[ko̞ida̠]", "ipa")

	def test_gomapda_ph(self):
		self.run_test("고맙다", "{{ko-IPA|l=y}}", "고(ː)맙따", "ph")
	def test_gomapda_rr(self):
		self.run_test("고맙다", "{{ko-IPA|l=y}}", "gomapda", "rr")
	def test_gomapda_rrr(self):
		self.run_test("고맙다", "{{ko-IPA|l=y}}", "gomabda", "rrr")
	def test_gomapda_mr(self):
		self.run_test("고맙다", "{{ko-IPA|l=y}}", "komapta", "mr")
	def test_gomapda_yr(self):
		self.run_test("고맙다", "{{ko-IPA|l=y}}", "kōmapta", "yr")
	def test_gomapda_ipa(self):
		self.run_test("고맙다", "{{ko-IPA|l=y}}", "[ˈko̞(ː)ma̠p̚t͈a̠]", "ipa")

	def test_goreuda_ph(self):
		self.run_test("고르다", "{{ko-IPA}}", "고르다", "ph")
	def test_goreuda_rr(self):
		self.run_test("고르다", "{{ko-IPA}}", "goreuda", "rr")
	def test_goreuda_rrr(self):
		self.run_test("고르다", "{{ko-IPA}}", "goleuda", "rrr")
	def test_goreuda_mr(self):
		self.run_test("고르다", "{{ko-IPA}}", "korŭda", "mr")
	def test_goreuda_yr(self):
		self.run_test("고르다", "{{ko-IPA}}", "koluta", "yr")
	def test_goreuda_ipa(self):
		self.run_test("고르다", "{{ko-IPA}}", "[ko̞ɾɯda̠]", "ipa")

	def test_gyeondida_ph(self):
		self.run_test("견디다", "{{ko-IPA}}", "견디다", "ph")
	def test_gyeondida_rr(self):
		self.run_test("견디다", "{{ko-IPA}}", "gyeondida", "rr")
	def test_gyeondida_rrr(self):
		self.run_test("견디다", "{{ko-IPA}}", "gyeondida", "rrr")
	def test_gyeondida_mr(self):
		self.run_test("견디다", "{{ko-IPA}}", "kyŏndida", "mr")
	def test_gyeondida_yr(self):
		self.run_test("견디다", "{{ko-IPA}}", "kyentita", "yr")
	def test_gyeondida_ipa(self):
		self.run_test("견디다", "{{ko-IPA}}", "[kjʌ̹ndida̠]", "ipa")

	def test_sumda_ph(self):
		self.run_test("숨다", "{{ko-IPA|l=y|com=1}}", "숨(ː)따", "ph")
	def test_sumda_rr(self):
		self.run_test("숨다", "{{ko-IPA|l=y|com=1}}", "sumda", "rr")
	def test_sumda_rrr(self):
		self.run_test("숨다", "{{ko-IPA|l=y|com=1}}", "sumda", "rrr")
	def test_sumda_mr(self):
		self.run_test("숨다", "{{ko-IPA|l=y|com=1}}", "sumta", "mr")
	def test_sumda_yr(self):
		self.run_test("숨다", "{{ko-IPA|l=y|com=1}}", "swūmqta", "yr")
	def test_sumda_ipa(self):
		self.run_test("숨다", "{{ko-IPA|l=y|com=1}}", "[ˈsʰu(ː)mt͈a̠]", "ipa")

	def test_urimal_ph(self):
		self.run_test("우리말", "{{ko-IPA}}", "우리말", "ph")
	def test_urimal_rr(self):
		self.run_test("우리말", "{{ko-IPA}}", "urimal", "rr")
	def test_urimal_rrr(self):
		self.run_test("우리말", "{{ko-IPA}}", "ulimal", "rrr")
	def test_urimal_mr(self):
		self.run_test("우리말", "{{ko-IPA}}", "urimal", "mr")
	def test_urimal_yr(self):
		self.run_test("우리말", "{{ko-IPA}}", "wulimal", "yr")
	def test_urimal_ipa(self):
		self.run_test("우리말", "{{ko-IPA}}", "[uɾima̠ɭ]", "ipa")

	def test_goryeo_ph(self):
		self.run_test("고려", "{{ko-IPA}}", "고려", "ph")
	def test_goryeo_rr(self):
		self.run_test("고려", "{{ko-IPA}}", "goryeo", "rr")
	def test_goryeo_rrr(self):
		self.run_test("고려", "{{ko-IPA}}", "golyeo", "rrr")
	def test_goryeo_mr(self):
		self.run_test("고려", "{{ko-IPA}}", "koryŏ", "mr")
	def test_goryeo_yr(self):
		self.run_test("고려", "{{ko-IPA}}", "kolye", "yr")
	def test_goryeo_ipa(self):
		self.run_test("고려", "{{ko-IPA}}", "[ko̞ɾjʌ̹]", "ipa")

	def test_gasu_ph(self):
		self.run_test("가수", "{{ko-IPA}}", "가수", "ph")
	def test_gasu_rr(self):
		self.run_test("가수", "{{ko-IPA}}", "gasu", "rr")
	def test_gasu_rrr(self):
		self.run_test("가수", "{{ko-IPA}}", "gasu", "rrr")
	def test_gasu_mr(self):
		self.run_test("가수", "{{ko-IPA}}", "kasu", "mr")
	def test_gasu_yr(self):
		self.run_test("가수", "{{ko-IPA}}", "kaswu", "yr")
	def test_gasu_ipa(self):
		self.run_test("가수", "{{ko-IPA}}", "[ka̠sʰu]", "ipa")

	def test_norae_ph(self):
		self.run_test("노래", "{{ko-IPA}}", "노래/노레", "ph")
	def test_norae_rr(self):
		self.run_test("노래", "{{ko-IPA}}", "norae", "rr")
	def test_norae_rrr(self):
		self.run_test("노래", "{{ko-IPA}}", "nolae", "rrr")
	def test_norae_mr(self):
		self.run_test("노래", "{{ko-IPA}}", "norae", "mr")
	def test_norae_yr(self):
		self.run_test("노래", "{{ko-IPA}}", "nolay", "yr")
	def test_norae_ipa(self):
		self.run_test("노래", "{{ko-IPA}}", "[no̞ɾɛ] ~ [no̞ɾe̞]", "ipa")

	def test_begae_ph(self):
		self.run_test("베개", "{{ko-IPA}}", "베개/베게", "ph")
	def test_begae_rr(self):
		self.run_test("베개", "{{ko-IPA}}", "begae", "rr")
	def test_begae_rrr(self):
		self.run_test("베개", "{{ko-IPA}}", "begae", "rrr")
	def test_begae_mr(self):
		self.run_test("베개", "{{ko-IPA}}", "pegae", "mr")
	def test_begae_yr(self):
		self.run_test("베개", "{{ko-IPA}}", "peykay", "yr")
	def test_begae_ipa(self):
		self.run_test("베개", "{{ko-IPA}}", "[pe̞ɡɛ] ~ [pe̞ɡe̞]", "ipa")

	def test_beda_ph(self):
		self.run_test("베다", "{{ko-IPA|l=y}}", "베(ː)다", "ph")
	def test_beda_rr(self):
		self.run_test("베다", "{{ko-IPA|l=y}}", "beda", "rr")
	def test_beda_rrr(self):
		self.run_test("베다", "{{ko-IPA|l=y}}", "beda", "rrr")
	def test_beda_mr(self):
		self.run_test("베다", "{{ko-IPA|l=y}}", "peda", "mr")
	def test_beda_yr(self):
		self.run_test("베다", "{{ko-IPA|l=y}}", "pēyta", "yr")
	def test_beda_ipa(self):
		self.run_test("베다", "{{ko-IPA|l=y}}", "[ˈpe̞(ː)da̠]", "ipa")

	def test_taeyang_ph(self):
		self.run_test("태양", "{{ko-IPA}}", "태양/테양", "ph")
	def test_taeyang_rr(self):
		self.run_test("태양", "{{ko-IPA}}", "taeyang", "rr")
	def test_taeyang_rrr(self):
		self.run_test("태양", "{{ko-IPA}}", "taeyang", "rrr")
	def test_taeyang_mr(self):
		self.run_test("태양", "{{ko-IPA}}", "t'aeyang", "mr")
	def test_taeyang_yr(self):
		self.run_test("태양", "{{ko-IPA}}", "thayyang", "yr")
	def test_taeyang_ipa(self):
		self.run_test("태양", "{{ko-IPA}}", "[tʰɛja̠ŋ] ~ [tʰe̞ja̠ŋ]", "ipa")

	def test_taedo_ph(self):
		self.run_test("태도", "{{ko-IPA|l=y}}", "태(ː)도/테(ː)도", "ph")
	def test_taedo_rr(self):
		self.run_test("태도", "{{ko-IPA|l=y}}", "taedo", "rr")
	def test_taedo_rrr(self):
		self.run_test("태도", "{{ko-IPA|l=y}}", "taedo", "rrr")
	def test_taedo_mr(self):
		self.run_test("태도", "{{ko-IPA|l=y}}", "t'aedo", "mr")
	def test_taedo_yr(self):
		self.run_test("태도", "{{ko-IPA|l=y}}", "thāyto", "yr")
	def test_taedo_ipa(self):
		self.run_test("태도", "{{ko-IPA|l=y}}", "[ˈtʰɛ(ː)do̞] ~ [ˈtʰe̞(ː)do̞]", "ipa")

	def test_deopda_ph(self):
		self.run_test("덥다", "{{ko-IPA|l=y}}", "덥(ː)따", "ph")
	def test_deopda_rr(self):
		self.run_test("덥다", "{{ko-IPA|l=y}}", "deopda", "rr")
	def test_deopda_rrr(self):
		self.run_test("덥다", "{{ko-IPA|l=y}}", "deobda", "rrr")
	def test_deopda_mr(self):
		self.run_test("덥다", "{{ko-IPA|l=y}}", "tŏpta", "mr")
	def test_deopda_yr(self):
		self.run_test("덥다", "{{ko-IPA|l=y}}", "tēpta", "yr")
	def test_deopda_ipa(self):
		self.run_test("덥다", "{{ko-IPA|l=y}}", "[ˈtɘ(ː)p̚t͈a̠]", "ipa")

	def test_bogi_ph(self):
		self.run_test("보기", "{{ko-ipa}}", "보기", "ph")
	def test_bogi_rr(self):
		self.run_test("보기", "{{ko-ipa}}", "bogi", "rr")
	def test_bogi_rrr(self):
		self.run_test("보기", "{{ko-ipa}}", "bogi", "rrr")
	def test_bogi_mr(self):
		self.run_test("보기", "{{ko-ipa}}", "pogi", "mr")
	def test_bogi_yr(self):
		self.run_test("보기", "{{ko-ipa}}", "poki", "yr")
	def test_bogi_ipa(self):
		self.run_test("보기", "{{ko-ipa}}", "[po̞ɡi]", "ipa")

	def test_johwa_ph(self):
		self.run_test("조화", "{{ko-IPA}}", "조화", "ph")
	def test_johwa_rr(self):
		self.run_test("조화", "{{ko-IPA}}", "johwa", "rr")
	def test_johwa_rrr(self):
		self.run_test("조화", "{{ko-IPA}}", "johwa", "rrr")
	def test_johwa_mr(self):
		self.run_test("조화", "{{ko-IPA}}", "chohwa", "mr")
	def test_johwa_yr(self):
		self.run_test("조화", "{{ko-IPA}}", "cohwa", "yr")
	def test_johwa_ipa(self):
		self.run_test("조화", "{{ko-IPA}}", "[t͡ɕo̞βwa̠]", "ipa")
	def test_johwa_ph_1(self):
		self.run_test("조화", "{{ko-IPA|l=y}}", "조(ː)화", "ph")
	def test_johwa_rr_1(self):
		self.run_test("조화", "{{ko-IPA|l=y}}", "johwa", "rr")
	def test_johwa_rrr_1(self):
		self.run_test("조화", "{{ko-IPA|l=y}}", "johwa", "rrr")
	def test_johwa_mr_1(self):
		self.run_test("조화", "{{ko-IPA|l=y}}", "chohwa", "mr")
	def test_johwa_yr_1(self):
		self.run_test("조화", "{{ko-IPA|l=y}}", "cōhwa", "yr")
	def test_johwa_ipa_1(self):
		self.run_test("조화", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)βwa̠]", "ipa")

	def test_botong_ph(self):
		self.run_test("보통", "{{ko-IPA|l=y}}", "보(ː)통", "ph")
	def test_botong_rr(self):
		self.run_test("보통", "{{ko-IPA|l=y}}", "botong", "rr")
	def test_botong_rrr(self):
		self.run_test("보통", "{{ko-IPA|l=y}}", "botong", "rrr")
	def test_botong_mr(self):
		self.run_test("보통", "{{ko-IPA|l=y}}", "pot'ong", "mr")
	def test_botong_yr(self):
		self.run_test("보통", "{{ko-IPA|l=y}}", "pō.thong", "yr")
	def test_botong_ipa(self):
		self.run_test("보통", "{{ko-IPA|l=y}}", "[ˈpo̞(ː)tʰo̞ŋ]", "ipa")

	def test_dorongnyong_ph(self):
		self.run_test("도롱뇽", "{{ko-IPA}}", "도롱뇽", "ph")
	def test_dorongnyong_rr(self):
		self.run_test("도롱뇽", "{{ko-IPA}}", "dorongnyong", "rr")
	def test_dorongnyong_rrr(self):
		self.run_test("도롱뇽", "{{ko-IPA}}", "dolongnyong", "rrr")
	def test_dorongnyong_mr(self):
		self.run_test("도롱뇽", "{{ko-IPA}}", "torongnyong", "mr")
	def test_dorongnyong_yr(self):
		self.run_test("도롱뇽", "{{ko-IPA}}", "tolongnyong", "yr")
	def test_dorongnyong_ipa(self):
		self.run_test("도롱뇽", "{{ko-IPA}}", "[to̞ɾo̞ŋɲoŋ]", "ipa")

	def test_yongeon_ph(self):
		self.run_test("용언", "{{ko-IPA|l=y}}", "용(ː)언", "ph")
	def test_yongeon_rr(self):
		self.run_test("용언", "{{ko-IPA|l=y}}", "yong'eon", "rr")
	def test_yongeon_rrr(self):
		self.run_test("용언", "{{ko-IPA|l=y}}", "yong'eon", "rrr")
	def test_yongeon_mr(self):
		self.run_test("용언", "{{ko-IPA|l=y}}", "yongŏn", "mr")
	def test_yongeon_yr(self):
		self.run_test("용언", "{{ko-IPA|l=y}}", "yōngen", "yr")
	def test_yongeon_ipa(self):
		self.run_test("용언", "{{ko-IPA|l=y}}", "[ˈjo(ː)ŋʌ̹n]", "ipa")

	def test_seosul_ph(self):
		self.run_test("서술", "{{ko-IPA|l=y}}", "서(ː)술", "ph")
	def test_seosul_rr(self):
		self.run_test("서술", "{{ko-IPA|l=y}}", "seosul", "rr")
	def test_seosul_rrr(self):
		self.run_test("서술", "{{ko-IPA|l=y}}", "seosul", "rrr")
	def test_seosul_mr(self):
		self.run_test("서술", "{{ko-IPA|l=y}}", "sŏsul", "mr")
	def test_seosul_yr(self):
		self.run_test("서술", "{{ko-IPA|l=y}}", "sēswul", "yr")
	def test_seosul_ipa(self):
		self.run_test("서술", "{{ko-IPA|l=y}}", "[ˈsʰɘ(ː)sʰuɭ]", "ipa")

	def test_jueo_ph(self):
		self.run_test("주어", "{{ko-ipa}}", "주어", "ph")
	def test_jueo_rr(self):
		self.run_test("주어", "{{ko-ipa}}", "jueo", "rr")
	def test_jueo_rrr(self):
		self.run_test("주어", "{{ko-ipa}}", "jueo", "rrr")
	def test_jueo_mr(self):
		self.run_test("주어", "{{ko-ipa}}", "chuŏ", "mr")
	def test_jueo_yr(self):
		self.run_test("주어", "{{ko-ipa}}", "cwue", "yr")
	def test_jueo_ipa(self):
		self.run_test("주어", "{{ko-ipa}}", "[t͡ɕuʌ̹]", "ipa")

	def test_gagu_ph(self):
		self.run_test("가구", "{{ko-IPA}}", "가구", "ph")
	def test_gagu_rr(self):
		self.run_test("가구", "{{ko-IPA}}", "gagu", "rr")
	def test_gagu_rrr(self):
		self.run_test("가구", "{{ko-IPA}}", "gagu", "rrr")
	def test_gagu_mr(self):
		self.run_test("가구", "{{ko-IPA}}", "kagu", "mr")
	def test_gagu_yr(self):
		self.run_test("가구", "{{ko-IPA}}", "kakwu", "yr")
	def test_gagu_ipa(self):
		self.run_test("가구", "{{ko-IPA}}", "[ka̠ɡu]", "ipa")
	def test_gagu_ph_1(self):
		self.run_test("가구", "{{ko-IPA}}", "가구", "ph")
	def test_gagu_rr_1(self):
		self.run_test("가구", "{{ko-IPA}}", "gagu", "rr")
	def test_gagu_rrr_1(self):
		self.run_test("가구", "{{ko-IPA}}", "gagu", "rrr")
	def test_gagu_mr_1(self):
		self.run_test("가구", "{{ko-IPA}}", "kagu", "mr")
	def test_gagu_yr_1(self):
		self.run_test("가구", "{{ko-IPA}}", "kakwu", "yr")
	def test_gagu_ipa_1(self):
		self.run_test("가구", "{{ko-IPA}}", "[ka̠ɡu]", "ipa")

	def test_mokjeogeo_ph(self):
		self.run_test("목적어", "{{ko-IPA}}", "목쩌거", "ph")
	def test_mokjeogeo_rr(self):
		self.run_test("목적어", "{{ko-IPA}}", "mokjeogeo", "rr")
	def test_mokjeogeo_rrr(self):
		self.run_test("목적어", "{{ko-IPA}}", "mogjeog'eo", "rrr")
	def test_mokjeogeo_mr(self):
		self.run_test("목적어", "{{ko-IPA}}", "mokchŏgŏ", "mr")
	def test_mokjeogeo_yr(self):
		self.run_test("목적어", "{{ko-IPA}}", "mokcek.e", "yr")
	def test_mokjeogeo_ipa(self):
		self.run_test("목적어", "{{ko-IPA}}", "[mo̞k̚t͡ɕ͈ʌ̹ɡʌ̹]", "ipa")

	def test_ganjeop_ph(self):
		self.run_test("간접", "{{ko-IPA|l=y}}", "간(ː)접", "ph")
	def test_ganjeop_rr(self):
		self.run_test("간접", "{{ko-IPA|l=y}}", "ganjeop", "rr")
	def test_ganjeop_rrr(self):
		self.run_test("간접", "{{ko-IPA|l=y}}", "ganjeob", "rrr")
	def test_ganjeop_mr(self):
		self.run_test("간접", "{{ko-IPA|l=y}}", "kanjŏp", "mr")
	def test_ganjeop_yr(self):
		self.run_test("간접", "{{ko-IPA|l=y}}", "kān.cep", "yr")
	def test_ganjeop_ipa(self):
		self.run_test("간접", "{{ko-IPA|l=y}}", "[ˈka̠(ː)ɲd͡ʑʌ̹p̚]", "ipa")

	def test_jikjeop_ph(self):
		self.run_test("직접", "{{ko-IPA}}", "직쩝", "ph")
	def test_jikjeop_rr(self):
		self.run_test("직접", "{{ko-IPA}}", "jikjeop", "rr")
	def test_jikjeop_rrr(self):
		self.run_test("직접", "{{ko-IPA}}", "jigjeob", "rrr")
	def test_jikjeop_mr(self):
		self.run_test("직접", "{{ko-IPA}}", "chikchŏp", "mr")
	def test_jikjeop_yr(self):
		self.run_test("직접", "{{ko-IPA}}", "cikcep", "yr")
	def test_jikjeop_ipa(self):
		self.run_test("직접", "{{ko-IPA}}", "[t͡ɕik̚t͡ɕ͈ʌ̹p̚]", "ipa")

	def test_boeo_ph(self):
		self.run_test("보어", "{{ko-IPA|l=y}}", "보(ː)어", "ph")
	def test_boeo_rr(self):
		self.run_test("보어", "{{ko-IPA|l=y}}", "bo'eo", "rr")
	def test_boeo_rrr(self):
		self.run_test("보어", "{{ko-IPA|l=y}}", "bo'eo", "rrr")
	def test_boeo_mr(self):
		self.run_test("보어", "{{ko-IPA|l=y}}", "poŏ", "mr")
	def test_boeo_yr(self):
		self.run_test("보어", "{{ko-IPA|l=y}}", "pōe", "yr")
	def test_boeo_ipa(self):
		self.run_test("보어", "{{ko-IPA|l=y}}", "[ˈpo̞(ː)ʌ̹]", "ipa")

	def test_geup_ph(self):
		self.run_test("급", "{{ko-IPA}}", "급", "ph")
	def test_geup_rr(self):
		self.run_test("급", "{{ko-IPA}}", "geup", "rr")
	def test_geup_rrr(self):
		self.run_test("급", "{{ko-IPA}}", "geub", "rrr")
	def test_geup_mr(self):
		self.run_test("급", "{{ko-IPA}}", "kŭp", "mr")
	def test_geup_yr(self):
		self.run_test("급", "{{ko-IPA}}", "kup", "yr")
	def test_geup_ipa(self):
		self.run_test("급", "{{ko-IPA}}", "[kɯp̚]", "ipa")
	def test_geup_ph_1(self):
		self.run_test("급", "{{ko-IPA}}", "급", "ph")
	def test_geup_rr_1(self):
		self.run_test("급", "{{ko-IPA}}", "geup", "rr")
	def test_geup_rrr_1(self):
		self.run_test("급", "{{ko-IPA}}", "geub", "rrr")
	def test_geup_mr_1(self):
		self.run_test("급", "{{ko-IPA}}", "kŭp", "mr")
	def test_geup_yr_1(self):
		self.run_test("급", "{{ko-IPA}}", "kup", "yr")
	def test_geup_ipa_1(self):
		self.run_test("급", "{{ko-IPA}}", "[kɯp̚]", "ipa")

	def test_mokcha_ph(self):
		self.run_test("목차", "{{ko-IPA}}", "목차", "ph")
	def test_mokcha_rr(self):
		self.run_test("목차", "{{ko-IPA}}", "mokcha", "rr")
	def test_mokcha_rrr(self):
		self.run_test("목차", "{{ko-IPA}}", "mogcha", "rrr")
	def test_mokcha_mr(self):
		self.run_test("목차", "{{ko-IPA}}", "mokch'a", "mr")
	def test_mokcha_yr(self):
		self.run_test("목차", "{{ko-IPA}}", "mokcha", "yr")
	def test_mokcha_ipa(self):
		self.run_test("목차", "{{ko-IPA}}", "[mo̞k̚t͡ɕʰa̠]", "ipa")

	def test_yojeueum_ph(self):
		self.run_test("요즈음", "{{ko-IPA}}", "요즈음", "ph")
	def test_yojeueum_rr(self):
		self.run_test("요즈음", "{{ko-IPA}}", "yojeueum", "rr")
	def test_yojeueum_rrr(self):
		self.run_test("요즈음", "{{ko-IPA}}", "yojeueum", "rrr")
	def test_yojeueum_mr(self):
		self.run_test("요즈음", "{{ko-IPA}}", "yojŭŭm", "mr")
	def test_yojeueum_yr(self):
		self.run_test("요즈음", "{{ko-IPA}}", "yocuum", "yr")
	def test_yojeueum_ipa(self):
		self.run_test("요즈음", "{{ko-IPA}}", "[jod͡ʑɯɯm]", "ipa")

	def test_insa_ph(self):
		self.run_test("인사", "{{ko-IPA}}", "인사", "ph")
	def test_insa_rr(self):
		self.run_test("인사", "{{ko-IPA}}", "insa", "rr")
	def test_insa_rrr(self):
		self.run_test("인사", "{{ko-IPA}}", "insa", "rrr")
	def test_insa_mr(self):
		self.run_test("인사", "{{ko-IPA}}", "insa", "mr")
	def test_insa_yr(self):
		self.run_test("인사", "{{ko-IPA}}", "insa", "yr")
	def test_insa_ipa(self):
		self.run_test("인사", "{{ko-IPA}}", "[insʰa̠]", "ipa")

	def test_eotteoke_ph(self):
		self.run_test("어떻게", "{{ko-IPA}}", "어떠케", "ph")
	def test_eotteoke_rr(self):
		self.run_test("어떻게", "{{ko-IPA}}", "eotteoke", "rr")
	def test_eotteoke_rrr(self):
		self.run_test("어떻게", "{{ko-IPA}}", "eo'tteohge", "rrr")
	def test_eotteoke_mr(self):
		self.run_test("어떻게", "{{ko-IPA}}", "ŏttŏk'e", "mr")
	def test_eotteoke_yr(self):
		self.run_test("어떻게", "{{ko-IPA}}", "e.ttehkey", "yr")
	def test_eotteoke_ipa(self):
		self.run_test("어떻게", "{{ko-IPA}}", "[ʌ̹t͈ʌ̹kʰe̞]", "ipa")

	def test_eotteota_ph(self):
		self.run_test("어떻다", "{{ko-IPA|a=Ko-어떻다.oga}}", "어떠타", "ph")
	def test_eotteota_rr(self):
		self.run_test("어떻다", "{{ko-IPA|a=Ko-어떻다.oga}}", "eotteota", "rr")
	def test_eotteota_rrr(self):
		self.run_test("어떻다", "{{ko-IPA|a=Ko-어떻다.oga}}", "eo'tteohda", "rrr")
	def test_eotteota_mr(self):
		self.run_test("어떻다", "{{ko-IPA|a=Ko-어떻다.oga}}", "ŏttŏt'a", "mr")
	def test_eotteota_yr(self):
		self.run_test("어떻다", "{{ko-IPA|a=Ko-어떻다.oga}}", "e.ttehta", "yr")
	def test_eotteota_ipa(self):
		self.run_test("어떻다", "{{ko-IPA|a=Ko-어떻다.oga}}", "[ʌ̹t͈ʌ̹tʰa̠]", "ipa")

	def test_oraeda_ph(self):
		self.run_test("오래다", "{{ko-IPA}}", "오래다/오레다", "ph")
	def test_oraeda_rr(self):
		self.run_test("오래다", "{{ko-IPA}}", "oraeda", "rr")
	def test_oraeda_rrr(self):
		self.run_test("오래다", "{{ko-IPA}}", "olaeda", "rrr")
	def test_oraeda_mr(self):
		self.run_test("오래다", "{{ko-IPA}}", "oraeda", "mr")
	def test_oraeda_yr(self):
		self.run_test("오래다", "{{ko-IPA}}", "olayta", "yr")
	def test_oraeda_ipa(self):
		self.run_test("오래다", "{{ko-IPA}}", "[o̞ɾɛda̠] ~ [o̞ɾe̞da̠]", "ipa")

	def test_byeoseul_ph(self):
		self.run_test("벼슬", "{{ko-IPA}}", "벼슬", "ph")
	def test_byeoseul_rr(self):
		self.run_test("벼슬", "{{ko-IPA}}", "byeoseul", "rr")
	def test_byeoseul_rrr(self):
		self.run_test("벼슬", "{{ko-IPA}}", "byeoseul", "rrr")
	def test_byeoseul_mr(self):
		self.run_test("벼슬", "{{ko-IPA}}", "pyŏsŭl", "mr")
	def test_byeoseul_yr(self):
		self.run_test("벼슬", "{{ko-IPA}}", "pyesul", "yr")
	def test_byeoseul_ipa(self):
		self.run_test("벼슬", "{{ko-IPA}}", "[pjʌ̹sʰɯɭ]", "ipa")

	def test_byeot_ph(self):
		self.run_test("볏", "{{ko-IPA}}", "볃", "ph")
	def test_byeot_rr(self):
		self.run_test("볏", "{{ko-IPA}}", "byeot", "rr")
	def test_byeot_rrr(self):
		self.run_test("볏", "{{ko-IPA}}", "byeos", "rrr")
	def test_byeot_mr(self):
		self.run_test("볏", "{{ko-IPA}}", "pyŏt", "mr")
	def test_byeot_yr(self):
		self.run_test("볏", "{{ko-IPA}}", "pyes", "yr")
	def test_byeot_ipa(self):
		self.run_test("볏", "{{ko-IPA}}", "[pjʌ̹t̚]", "ipa")

	def test_gwang_ph(self):
		self.run_test("광", "{{ko-IPA|l=y}}", "광(ː)", "ph")
	def test_gwang_rr(self):
		self.run_test("광", "{{ko-IPA|l=y}}", "gwang", "rr")
	def test_gwang_rrr(self):
		self.run_test("광", "{{ko-IPA|l=y}}", "gwang", "rrr")
	def test_gwang_mr(self):
		self.run_test("광", "{{ko-IPA|l=y}}", "kwang", "mr")
	def test_gwang_yr(self):
		self.run_test("광", "{{ko-IPA|l=y}}", "kwāng", "yr")
	def test_gwang_ipa(self):
		self.run_test("광", "{{ko-IPA|l=y}}", "[kwa̠(ː)ŋ]", "ipa")
	def test_gwang_ph_1(self):
		self.run_test("광", "{{ko-IPA}}", "광", "ph")
	def test_gwang_rr_1(self):
		self.run_test("광", "{{ko-IPA}}", "gwang", "rr")
	def test_gwang_rrr_1(self):
		self.run_test("광", "{{ko-IPA}}", "gwang", "rrr")
	def test_gwang_mr_1(self):
		self.run_test("광", "{{ko-IPA}}", "kwang", "mr")
	def test_gwang_yr_1(self):
		self.run_test("광", "{{ko-IPA}}", "kwang", "yr")
	def test_gwang_ipa_1(self):
		self.run_test("광", "{{ko-IPA}}", "[kwa̠ŋ]", "ipa")

	def test_tak_ph(self):
		self.run_test("탁", "{{ko-IPA}}", "탁", "ph")
	def test_tak_rr(self):
		self.run_test("탁", "{{ko-IPA}}", "tak", "rr")
	def test_tak_rrr(self):
		self.run_test("탁", "{{ko-IPA}}", "tag", "rrr")
	def test_tak_mr(self):
		self.run_test("탁", "{{ko-IPA}}", "t'ak", "mr")
	def test_tak_yr(self):
		self.run_test("탁", "{{ko-IPA}}", "thak", "yr")
	def test_tak_ipa(self):
		self.run_test("탁", "{{ko-IPA}}", "[tʰa̠k̚]", "ipa")

	def test_byeot_ph(self):
		self.run_test("볕", "{{ko-IPA}}", "볃", "ph")
	def test_byeot_rr(self):
		self.run_test("볕", "{{ko-IPA}}", "byeot", "rr")
	def test_byeot_rrr(self):
		self.run_test("볕", "{{ko-IPA}}", "byeot", "rrr")
	def test_byeot_mr(self):
		self.run_test("볕", "{{ko-IPA}}", "pyŏt", "mr")
	def test_byeot_yr(self):
		self.run_test("볕", "{{ko-IPA}}", "pyeth", "yr")
	def test_byeot_ipa(self):
		self.run_test("볕", "{{ko-IPA}}", "[pjʌ̹t̚]", "ipa")

	def test_mudanggaeguri_ph(self):
		self.run_test("무당개구리", "{{ko-IPA|l=y}}", "무(ː)당개구리/무(ː)당게구리", "ph")
	def test_mudanggaeguri_rr(self):
		self.run_test("무당개구리", "{{ko-IPA|l=y}}", "mudanggaeguri", "rr")
	def test_mudanggaeguri_rrr(self):
		self.run_test("무당개구리", "{{ko-IPA|l=y}}", "mudanggaeguli", "rrr")
	def test_mudanggaeguri_mr(self):
		self.run_test("무당개구리", "{{ko-IPA|l=y}}", "mudanggaeguri", "mr")
	def test_mudanggaeguri_yr(self):
		self.run_test("무당개구리", "{{ko-IPA|l=y}}", "mūtangkaykwuli", "yr")
	def test_mudanggaeguri_ipa(self):
		self.run_test("무당개구리", "{{ko-IPA|l=y}}", "[ˈmu(ː)da̠ŋɡɛɡuɾi] ~ [ˈmu(ː)da̠ŋɡe̞ɡuɾi]", "ipa")

	def test_jejudorongnyong_ph(self):
		self.run_test("제주도롱뇽", "{{ko-IPA|l=y}}", "제(ː)주도롱뇽", "ph")
	def test_jejudorongnyong_rr(self):
		self.run_test("제주도롱뇽", "{{ko-IPA|l=y}}", "jejudorongnyong", "rr")
	def test_jejudorongnyong_rrr(self):
		self.run_test("제주도롱뇽", "{{ko-IPA|l=y}}", "jejudolongnyong", "rrr")
	def test_jejudorongnyong_mr(self):
		self.run_test("제주도롱뇽", "{{ko-IPA|l=y}}", "chejudorongnyong", "mr")
	def test_jejudorongnyong_yr(self):
		self.run_test("제주도롱뇽", "{{ko-IPA|l=y}}", "cēycwutolongnyong", "yr")
	def test_jejudorongnyong_ipa(self):
		self.run_test("제주도롱뇽", "{{ko-IPA|l=y}}", "[ˈt͡ɕe̞(ː)d͡ʑudo̞ɾo̞ŋɲoŋ]", "ipa")

	def test_himsseuda_ph(self):
		self.run_test("힘쓰다", "{{ko-IPA}}", "힘쓰다", "ph")
	def test_himsseuda_rr(self):
		self.run_test("힘쓰다", "{{ko-IPA}}", "himsseuda", "rr")
	def test_himsseuda_rrr(self):
		self.run_test("힘쓰다", "{{ko-IPA}}", "himsseuda", "rrr")
	def test_himsseuda_mr(self):
		self.run_test("힘쓰다", "{{ko-IPA}}", "himssŭda", "mr")
	def test_himsseuda_yr(self):
		self.run_test("힘쓰다", "{{ko-IPA}}", "himssuta", "yr")
	def test_himsseuda_ipa(self):
		self.run_test("힘쓰다", "{{ko-IPA}}", "[çims͈ɯda̠]", "ipa")

	def test_heunggyeopda_ph(self):
		self.run_test("흥겹다", "{{ko-IPA|l=y}}", "흥(ː)겹따", "ph")
	def test_heunggyeopda_rr(self):
		self.run_test("흥겹다", "{{ko-IPA|l=y}}", "heunggyeopda", "rr")
	def test_heunggyeopda_rrr(self):
		self.run_test("흥겹다", "{{ko-IPA|l=y}}", "heunggyeobda", "rrr")
	def test_heunggyeopda_mr(self):
		self.run_test("흥겹다", "{{ko-IPA|l=y}}", "hŭnggyŏpta", "mr")
	def test_heunggyeopda_yr(self):
		self.run_test("흥겹다", "{{ko-IPA|l=y}}", "hūngkyepta", "yr")
	def test_heunggyeopda_ipa(self):
		self.run_test("흥겹다", "{{ko-IPA|l=y}}", "[ˈxɯ(ː)ŋɡjʌ̹p̚t͈a̠]", "ipa")

	def test_heureuda_ph(self):
		self.run_test("흐르다", "{{ko-IPA}}", "흐르다", "ph")
	def test_heureuda_rr(self):
		self.run_test("흐르다", "{{ko-IPA}}", "heureuda", "rr")
	def test_heureuda_rrr(self):
		self.run_test("흐르다", "{{ko-IPA}}", "heuleuda", "rrr")
	def test_heureuda_mr(self):
		self.run_test("흐르다", "{{ko-IPA}}", "hŭrŭda", "mr")
	def test_heureuda_yr(self):
		self.run_test("흐르다", "{{ko-IPA}}", "huluta", "yr")
	def test_heureuda_ipa(self):
		self.run_test("흐르다", "{{ko-IPA}}", "[xɯɾɯda̠]", "ipa")

	def test_haeropda_ph(self):
		self.run_test("해롭다", "{{ko-IPA|l=y}}", "해(ː)롭따/헤(ː)롭따", "ph")
	def test_haeropda_rr(self):
		self.run_test("해롭다", "{{ko-IPA|l=y}}", "haeropda", "rr")
	def test_haeropda_rrr(self):
		self.run_test("해롭다", "{{ko-IPA|l=y}}", "haelobda", "rrr")
	def test_haeropda_mr(self):
		self.run_test("해롭다", "{{ko-IPA|l=y}}", "haeropta", "mr")
	def test_haeropda_yr(self):
		self.run_test("해롭다", "{{ko-IPA|l=y}}", "hāylopta", "yr")
	def test_haeropda_ipa(self):
		self.run_test("해롭다", "{{ko-IPA|l=y}}", "[ˈhɛ(ː)ɾo̞p̚t͈a̠] ~ [ˈhe̞(ː)ɾo̞p̚t͈a̠]", "ipa")

	def test_haksaengdapda_ph(self):
		self.run_test("학생답다", "{{ko-IPA}}", "학쌩답따/학쎙답따", "ph")
	def test_haksaengdapda_rr(self):
		self.run_test("학생답다", "{{ko-IPA}}", "haksaengdapda", "rr")
	def test_haksaengdapda_rrr(self):
		self.run_test("학생답다", "{{ko-IPA}}", "hagsaengdabda", "rrr")
	def test_haksaengdapda_mr(self):
		self.run_test("학생답다", "{{ko-IPA}}", "haksaengdapta", "mr")
	def test_haksaengdapda_yr(self):
		self.run_test("학생답다", "{{ko-IPA}}", "hak.sayngtapta", "yr")
	def test_haksaengdapda_ipa(self):
		self.run_test("학생답다", "{{ko-IPA}}", "[ha̠ks͈ɛŋda̠p̚t͈a̠] ~ [ha̠ks͈e̞ŋda̠p̚t͈a̠]", "ipa")

	def test_piuda_ph(self):
		self.run_test("피우다", "{{ko-IPA}}", "피우다", "ph")
	def test_piuda_rr(self):
		self.run_test("피우다", "{{ko-IPA}}", "piuda", "rr")
	def test_piuda_rrr(self):
		self.run_test("피우다", "{{ko-IPA}}", "piuda", "rrr")
	def test_piuda_mr(self):
		self.run_test("피우다", "{{ko-IPA}}", "p'iuda", "mr")
	def test_piuda_yr(self):
		self.run_test("피우다", "{{ko-IPA}}", "phiwuta", "yr")
	def test_piuda_ipa(self):
		self.run_test("피우다", "{{ko-IPA}}", "[pʰiuda̠]", "ipa")

	def test_puda_ph(self):
		self.run_test("푸다", "{{ko-IPA}}", "푸다", "ph")
	def test_puda_rr(self):
		self.run_test("푸다", "{{ko-IPA}}", "puda", "rr")
	def test_puda_rrr(self):
		self.run_test("푸다", "{{ko-IPA}}", "puda", "rrr")
	def test_puda_mr(self):
		self.run_test("푸다", "{{ko-IPA}}", "p'uda", "mr")
	def test_puda_yr(self):
		self.run_test("푸다", "{{ko-IPA}}", "phuta", "yr")
	def test_puda_ipa(self):
		self.run_test("푸다", "{{ko-IPA}}", "[pʰuda̠]", "ipa")
	def test_puda_ph_1(self):
		self.run_test("푸다", "{{ko-IPA}}", "푸다", "ph")
	def test_puda_rr_1(self):
		self.run_test("푸다", "{{ko-IPA}}", "puda", "rr")
	def test_puda_rrr_1(self):
		self.run_test("푸다", "{{ko-IPA}}", "puda", "rrr")
	def test_puda_mr_1(self):
		self.run_test("푸다", "{{ko-IPA}}", "p'uda", "mr")
	def test_puda_yr_1(self):
		self.run_test("푸다", "{{ko-IPA}}", "phuta", "yr")
	def test_puda_ipa_1(self):
		self.run_test("푸다", "{{ko-IPA}}", "[pʰuda̠]", "ipa")

	def test_pyeoda_ph(self):
		self.run_test("펴다", "{{ko-IPA}}", "펴다", "ph")
	def test_pyeoda_rr(self):
		self.run_test("펴다", "{{ko-IPA}}", "pyeoda", "rr")
	def test_pyeoda_rrr(self):
		self.run_test("펴다", "{{ko-IPA}}", "pyeoda", "rrr")
	def test_pyeoda_mr(self):
		self.run_test("펴다", "{{ko-IPA}}", "p'yŏda", "mr")
	def test_pyeoda_yr(self):
		self.run_test("펴다", "{{ko-IPA}}", "phyeta", "yr")
	def test_pyeoda_ipa(self):
		self.run_test("펴다", "{{ko-IPA}}", "[pʰjʌ̹da̠]", "ipa")

	def test_parata_ph(self):
		self.run_test("파랗다", "{{ko-IPA|l=y}}", "파(ː)라타", "ph")
	def test_parata_rr(self):
		self.run_test("파랗다", "{{ko-IPA|l=y}}", "parata", "rr")
	def test_parata_rrr(self):
		self.run_test("파랗다", "{{ko-IPA|l=y}}", "palahda", "rrr")
	def test_parata_mr(self):
		self.run_test("파랗다", "{{ko-IPA|l=y}}", "p'arat'a", "mr")
	def test_parata_yr(self):
		self.run_test("파랗다", "{{ko-IPA|l=y}}", "phālahta", "yr")
	def test_parata_ipa(self):
		self.run_test("파랗다", "{{ko-IPA|l=y}}", "[ˈpʰa̠(ː)ɾa̠tʰa̠]", "ipa")

	def test_pada_ph(self):
		self.run_test("파다", "{{ko-IPA}}", "파다", "ph")
	def test_pada_rr(self):
		self.run_test("파다", "{{ko-IPA}}", "pada", "rr")
	def test_pada_rrr(self):
		self.run_test("파다", "{{ko-IPA}}", "pada", "rrr")
	def test_pada_mr(self):
		self.run_test("파다", "{{ko-IPA}}", "p'ada", "mr")
	def test_pada_yr(self):
		self.run_test("파다", "{{ko-IPA}}", "phata", "yr")
	def test_pada_ipa(self):
		self.run_test("파다", "{{ko-IPA}}", "[pʰa̠da̠]", "ipa")

	def test_joseonbando_ph(self):
		self.run_test("조선반도", "{{ko-ipa}}", "조선반도", "ph")
	def test_joseonbando_rr(self):
		self.run_test("조선반도", "{{ko-ipa}}", "joseonbando", "rr")
	def test_joseonbando_rrr(self):
		self.run_test("조선반도", "{{ko-ipa}}", "joseonbando", "rrr")
	def test_joseonbando_mr(self):
		self.run_test("조선반도", "{{ko-ipa}}", "chosŏnbando", "mr")
	def test_joseonbando_yr(self):
		self.run_test("조선반도", "{{ko-ipa}}", "cosenpanto", "yr")
	def test_joseonbando_ipa(self):
		self.run_test("조선반도", "{{ko-ipa}}", "[t͡ɕo̞sʰʌ̹nba̠ndo̞]", "ipa")

	def test_byeollil_ph(self):
		self.run_test("별일", "{{ko-IPA|ni=2}}", "별릴", "ph")
	def test_byeollil_rr(self):
		self.run_test("별일", "{{ko-IPA|ni=2}}", "byeollil", "rr")
	def test_byeollil_rrr(self):
		self.run_test("별일", "{{ko-IPA|ni=2}}", "byeol'il", "rrr")
	def test_byeollil_mr(self):
		self.run_test("별일", "{{ko-IPA|ni=2}}", "pyŏllil", "mr")
	def test_byeollil_yr(self):
		self.run_test("별일", "{{ko-IPA|ni=2}}", "pyellil", "yr")
	def test_byeollil_ipa(self):
		self.run_test("별일", "{{ko-IPA|ni=2}}", "[pjʌ̹ʎʎiɭ]", "ipa")

	def test_geonganghada_ph(self):
		self.run_test("건강하다", "{{ko-IPA|l=y}}", "건(ː)강하다", "ph")
	def test_geonganghada_rr(self):
		self.run_test("건강하다", "{{ko-IPA|l=y}}", "geon'ganghada", "rr")
	def test_geonganghada_rrr(self):
		self.run_test("건강하다", "{{ko-IPA|l=y}}", "geonganghada", "rrr")
	def test_geonganghada_mr(self):
		self.run_test("건강하다", "{{ko-IPA|l=y}}", "kŏn'ganghada", "mr")
	def test_geonganghada_yr(self):
		self.run_test("건강하다", "{{ko-IPA|l=y}}", "kēnkanghata", "yr")
	def test_geonganghada_ipa(self):
		self.run_test("건강하다", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)nɡa̠ŋɦa̠da̠]", "ipa")

	def test_myeot_ph(self):
		self.run_test("몇", "{{ko-IPA}}", "멷", "ph")
	def test_myeot_rr(self):
		self.run_test("몇", "{{ko-IPA}}", "myeot", "rr")
	def test_myeot_rrr(self):
		self.run_test("몇", "{{ko-IPA}}", "myeoch", "rrr")
	def test_myeot_mr(self):
		self.run_test("몇", "{{ko-IPA}}", "myŏt", "mr")
	def test_myeot_yr(self):
		self.run_test("몇", "{{ko-IPA}}", "myech", "yr")
	def test_myeot_ipa(self):
		self.run_test("몇", "{{ko-IPA}}", "[mjʌ̹t̚]", "ipa")

	def test_geuneul_ph(self):
		self.run_test("그늘", "{{ko-IPA}}", "그늘", "ph")
	def test_geuneul_rr(self):
		self.run_test("그늘", "{{ko-IPA}}", "geuneul", "rr")
	def test_geuneul_rrr(self):
		self.run_test("그늘", "{{ko-IPA}}", "geuneul", "rrr")
	def test_geuneul_mr(self):
		self.run_test("그늘", "{{ko-IPA}}", "kŭnŭl", "mr")
	def test_geuneul_yr(self):
		self.run_test("그늘", "{{ko-IPA}}", "kunul", "yr")
	def test_geuneul_ipa(self):
		self.run_test("그늘", "{{ko-IPA}}", "[kɯnɯɭ]", "ipa")

	def test_geurimja_ph(self):
		self.run_test("그림자", "{{ko-ipa|l=y}}", "그(ː)림자", "ph")
	def test_geurimja_rr(self):
		self.run_test("그림자", "{{ko-ipa|l=y}}", "geurimja", "rr")
	def test_geurimja_rrr(self):
		self.run_test("그림자", "{{ko-ipa|l=y}}", "geulimja", "rrr")
	def test_geurimja_mr(self):
		self.run_test("그림자", "{{ko-ipa|l=y}}", "kŭrimja", "mr")
	def test_geurimja_yr(self):
		self.run_test("그림자", "{{ko-ipa|l=y}}", "kūlimca", "yr")
	def test_geurimja_ipa(self):
		self.run_test("그림자", "{{ko-ipa|l=y}}", "[ˈkɯ(ː)ɾimd͡ʑa̠]", "ipa")

	def test_gyeong_ph(self):
		self.run_test("경", "{{ko-IPA|l=y}}", "경(ː)", "ph")
	def test_gyeong_rr(self):
		self.run_test("경", "{{ko-IPA|l=y}}", "gyeong", "rr")
	def test_gyeong_rrr(self):
		self.run_test("경", "{{ko-IPA|l=y}}", "gyeong", "rrr")
	def test_gyeong_mr(self):
		self.run_test("경", "{{ko-IPA|l=y}}", "kyŏng", "mr")
	def test_gyeong_yr(self):
		self.run_test("경", "{{ko-IPA|l=y}}", "kyēng", "yr")
	def test_gyeong_ipa(self):
		self.run_test("경", "{{ko-IPA|l=y}}", "[kjɘ(ː)ŋ]", "ipa")

	def test_ikkidorongnyong_ph(self):
		self.run_test("이끼도롱뇽", "{{ko-IPA}}", "이끼도롱뇽", "ph")
	def test_ikkidorongnyong_rr(self):
		self.run_test("이끼도롱뇽", "{{ko-IPA}}", "ikkidorongnyong", "rr")
	def test_ikkidorongnyong_rrr(self):
		self.run_test("이끼도롱뇽", "{{ko-IPA}}", "i'kkidolongnyong", "rrr")
	def test_ikkidorongnyong_mr(self):
		self.run_test("이끼도롱뇽", "{{ko-IPA}}", "ikkidorongnyong", "mr")
	def test_ikkidorongnyong_yr(self):
		self.run_test("이끼도롱뇽", "{{ko-IPA}}", "i.kkitolongnyong", "yr")
	def test_ikkidorongnyong_ipa(self):
		self.run_test("이끼도롱뇽", "{{ko-IPA}}", "[ik͈ido̞ɾo̞ŋɲoŋ]", "ipa")

	def test_teuda_ph(self):
		self.run_test("트다", "{{ko-IPA}}", "트다", "ph")
	def test_teuda_rr(self):
		self.run_test("트다", "{{ko-IPA}}", "teuda", "rr")
	def test_teuda_rrr(self):
		self.run_test("트다", "{{ko-IPA}}", "teuda", "rrr")
	def test_teuda_mr(self):
		self.run_test("트다", "{{ko-IPA}}", "t'ŭda", "mr")
	def test_teuda_yr(self):
		self.run_test("트다", "{{ko-IPA}}", "thuta", "yr")
	def test_teuda_ipa(self):
		self.run_test("트다", "{{ko-IPA}}", "[tʰɯda̠]", "ipa")

	def test_teolda_ph(self):
		self.run_test("털다", "{{ko-IPA|l=y}}", "털(ː)다", "ph")
	def test_teolda_rr(self):
		self.run_test("털다", "{{ko-IPA|l=y}}", "teolda", "rr")
	def test_teolda_rrr(self):
		self.run_test("털다", "{{ko-IPA|l=y}}", "teolda", "rrr")
	def test_teolda_mr(self):
		self.run_test("털다", "{{ko-IPA|l=y}}", "t'ŏlda", "mr")
	def test_teolda_yr(self):
		self.run_test("털다", "{{ko-IPA|l=y}}", "thēlta", "yr")
	def test_teolda_ipa(self):
		self.run_test("털다", "{{ko-IPA|l=y}}", "[ˈtʰɘ(ː)ɭda̠]", "ipa")

	def test_taeuda_ph(self):
		self.run_test("태우다", "{{ko-IPA}}", "태우다/테우다", "ph")
	def test_taeuda_rr(self):
		self.run_test("태우다", "{{ko-IPA}}", "tae'uda", "rr")
	def test_taeuda_rrr(self):
		self.run_test("태우다", "{{ko-IPA}}", "tae'uda", "rrr")
	def test_taeuda_mr(self):
		self.run_test("태우다", "{{ko-IPA}}", "t'aeuda", "mr")
	def test_taeuda_yr(self):
		self.run_test("태우다", "{{ko-IPA}}", "thaywuta", "yr")
	def test_taeuda_ipa(self):
		self.run_test("태우다", "{{ko-IPA}}", "[tʰɛuda̠] ~ [tʰe̞uda̠]", "ipa")

	def test_taireuda_ph(self):
		self.run_test("타이르다", "{{ko-IPA}}", "타이르다", "ph")
	def test_taireuda_rr(self):
		self.run_test("타이르다", "{{ko-IPA}}", "taireuda", "rr")
	def test_taireuda_rrr(self):
		self.run_test("타이르다", "{{ko-IPA}}", "taileuda", "rrr")
	def test_taireuda_mr(self):
		self.run_test("타이르다", "{{ko-IPA}}", "t'airŭda", "mr")
	def test_taireuda_yr(self):
		self.run_test("타이르다", "{{ko-IPA}}", "thailuta", "yr")
	def test_taireuda_ipa(self):
		self.run_test("타이르다", "{{ko-IPA}}", "[tʰa̠iɾɯda̠]", "ipa")

	def test_tada_ph(self):
		self.run_test("타다", "{{ko-IPA}}", "타다", "ph")
	def test_tada_rr(self):
		self.run_test("타다", "{{ko-IPA}}", "tada", "rr")
	def test_tada_rrr(self):
		self.run_test("타다", "{{ko-IPA}}", "tada", "rrr")
	def test_tada_mr(self):
		self.run_test("타다", "{{ko-IPA}}", "t'ada", "mr")
	def test_tada_yr(self):
		self.run_test("타다", "{{ko-IPA}}", "thata", "yr")
	def test_tada_ipa(self):
		self.run_test("타다", "{{ko-IPA}}", "[tʰa̠da̠]", "ipa")

	def test_keodarata_ph(self):
		self.run_test("커다랗다", "{{ko-IPA|l=y}}", "커(ː)다라타", "ph")
	def test_keodarata_rr(self):
		self.run_test("커다랗다", "{{ko-IPA|l=y}}", "keodarata", "rr")
	def test_keodarata_rrr(self):
		self.run_test("커다랗다", "{{ko-IPA|l=y}}", "keodalahda", "rrr")
	def test_keodarata_mr(self):
		self.run_test("커다랗다", "{{ko-IPA|l=y}}", "k'ŏdarat'a", "mr")
	def test_keodarata_yr(self):
		self.run_test("커다랗다", "{{ko-IPA|l=y}}", "khētalahta", "yr")
	def test_keodarata_ipa(self):
		self.run_test("커다랗다", "{{ko-IPA|l=y}}", "[ˈkʰɘ(ː)da̠ɾa̠tʰa̠]", "ipa")

	def test_chireuda_ph(self):
		self.run_test("치르다", "{{ko-IPA}}", "치르다", "ph")
	def test_chireuda_rr(self):
		self.run_test("치르다", "{{ko-IPA}}", "chireuda", "rr")
	def test_chireuda_rrr(self):
		self.run_test("치르다", "{{ko-IPA}}", "chileuda", "rrr")
	def test_chireuda_mr(self):
		self.run_test("치르다", "{{ko-IPA}}", "ch'irŭda", "mr")
	def test_chireuda_yr(self):
		self.run_test("치르다", "{{ko-IPA}}", "chiluta", "yr")
	def test_chireuda_ipa(self):
		self.run_test("치르다", "{{ko-IPA}}", "[t͡ɕʰiɾɯda̠]", "ipa")

	def test_chida_ph(self):
		self.run_test("치다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-치다.wav}}", "치다", "ph")
	def test_chida_rr(self):
		self.run_test("치다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-치다.wav}}", "chida", "rr")
	def test_chida_rrr(self):
		self.run_test("치다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-치다.wav}}", "chida", "rrr")
	def test_chida_mr(self):
		self.run_test("치다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-치다.wav}}", "ch'ida", "mr")
	def test_chida_yr(self):
		self.run_test("치다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-치다.wav}}", "chita", "yr")
	def test_chida_ipa(self):
		self.run_test("치다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-치다.wav}}", "[t͡ɕʰida̠]", "ipa")

	def test_chupda_ph(self):
		self.run_test("춥다", "{{ko-IPA}}", "춥따", "ph")
	def test_chupda_rr(self):
		self.run_test("춥다", "{{ko-IPA}}", "chupda", "rr")
	def test_chupda_rrr(self):
		self.run_test("춥다", "{{ko-IPA}}", "chubda", "rrr")
	def test_chupda_mr(self):
		self.run_test("춥다", "{{ko-IPA}}", "ch'upta", "mr")
	def test_chupda_yr(self):
		self.run_test("춥다", "{{ko-IPA}}", "chwupta", "yr")
	def test_chupda_ipa(self):
		self.run_test("춥다", "{{ko-IPA}}", "[t͡ɕʰup̚t͈a̠]", "ipa")

	def test_chada_ph(self):
		self.run_test("차다", "{{ko-IPA}}", "차다", "ph")
	def test_chada_rr(self):
		self.run_test("차다", "{{ko-IPA}}", "chada", "rr")
	def test_chada_rrr(self):
		self.run_test("차다", "{{ko-IPA}}", "chada", "rrr")
	def test_chada_mr(self):
		self.run_test("차다", "{{ko-IPA}}", "ch'ada", "mr")
	def test_chada_yr(self):
		self.run_test("차다", "{{ko-IPA}}", "chata", "yr")
	def test_chada_ipa(self):
		self.run_test("차다", "{{ko-IPA}}", "[t͡ɕʰa̠da̠]", "ipa")

	def test_chagapda_ph(self):
		self.run_test("차갑다", "{{ko-IPA}}", "차갑따", "ph")
	def test_chagapda_rr(self):
		self.run_test("차갑다", "{{ko-IPA}}", "chagapda", "rr")
	def test_chagapda_rrr(self):
		self.run_test("차갑다", "{{ko-IPA}}", "chagabda", "rrr")
	def test_chagapda_mr(self):
		self.run_test("차갑다", "{{ko-IPA}}", "ch'agapta", "mr")
	def test_chagapda_yr(self):
		self.run_test("차갑다", "{{ko-IPA}}", "chakapta", "yr")
	def test_chagapda_ipa(self):
		self.run_test("차갑다", "{{ko-IPA}}", "[t͡ɕʰa̠ɡa̠p̚t͈a̠]", "ipa")

	def test_mirae_ph(self):
		self.run_test("미래", "{{ko-IPA|l=y}}", "미(ː)래/미(ː)레", "ph")
	def test_mirae_rr(self):
		self.run_test("미래", "{{ko-IPA|l=y}}", "mirae", "rr")
	def test_mirae_rrr(self):
		self.run_test("미래", "{{ko-IPA|l=y}}", "milae", "rrr")
	def test_mirae_mr(self):
		self.run_test("미래", "{{ko-IPA|l=y}}", "mirae", "mr")
	def test_mirae_yr(self):
		self.run_test("미래", "{{ko-IPA|l=y}}", "mīlay", "yr")
	def test_mirae_ipa(self):
		self.run_test("미래", "{{ko-IPA|l=y}}", "[ˈmi(ː)ɾɛ] ~ [ˈmi(ː)ɾe̞]", "ipa")

	def test_banggeum_ph(self):
		self.run_test("방금", "{{ko-IPA}}", "방금", "ph")
	def test_banggeum_rr(self):
		self.run_test("방금", "{{ko-IPA}}", "banggeum", "rr")
	def test_banggeum_rrr(self):
		self.run_test("방금", "{{ko-IPA}}", "banggeum", "rrr")
	def test_banggeum_mr(self):
		self.run_test("방금", "{{ko-IPA}}", "panggŭm", "mr")
	def test_banggeum_yr(self):
		self.run_test("방금", "{{ko-IPA}}", "pangkum", "yr")
	def test_banggeum_ipa(self):
		self.run_test("방금", "{{ko-IPA}}", "[pa̠ŋɡɯm]", "ipa")

	def test_jjireuda_ph(self):
		self.run_test("찌르다", "{{ko-IPA}}", "찌르다", "ph")
	def test_jjireuda_rr(self):
		self.run_test("찌르다", "{{ko-IPA}}", "jjireuda", "rr")
	def test_jjireuda_rrr(self):
		self.run_test("찌르다", "{{ko-IPA}}", "jjileuda", "rrr")
	def test_jjireuda_mr(self):
		self.run_test("찌르다", "{{ko-IPA}}", "tchirŭda", "mr")
	def test_jjireuda_yr(self):
		self.run_test("찌르다", "{{ko-IPA}}", "cciluta", "yr")
	def test_jjireuda_ipa(self):
		self.run_test("찌르다", "{{ko-IPA}}", "[t͡ɕ͈iɾɯda̠]", "ipa")

	def test_jjida_ph(self):
		self.run_test("찌다", "{{ko-IPA}}", "찌다", "ph")
	def test_jjida_rr(self):
		self.run_test("찌다", "{{ko-IPA}}", "jjida", "rr")
	def test_jjida_rrr(self):
		self.run_test("찌다", "{{ko-IPA}}", "jjida", "rrr")
	def test_jjida_mr(self):
		self.run_test("찌다", "{{ko-IPA}}", "tchida", "mr")
	def test_jjida_yr(self):
		self.run_test("찌다", "{{ko-IPA}}", "ccita", "yr")
	def test_jjida_ipa(self):
		self.run_test("찌다", "{{ko-IPA}}", "[t͡ɕ͈ida̠]", "ipa")

	def test_jjada_ph(self):
		self.run_test("짜다", "{{ko-IPA|a=Ko-짜다.oga}}", "짜다", "ph")
	def test_jjada_rr(self):
		self.run_test("짜다", "{{ko-IPA|a=Ko-짜다.oga}}", "jjada", "rr")
	def test_jjada_rrr(self):
		self.run_test("짜다", "{{ko-IPA|a=Ko-짜다.oga}}", "jjada", "rrr")
	def test_jjada_mr(self):
		self.run_test("짜다", "{{ko-IPA|a=Ko-짜다.oga}}", "tchada", "mr")
	def test_jjada_yr(self):
		self.run_test("짜다", "{{ko-IPA|a=Ko-짜다.oga}}", "ccata", "yr")
	def test_jjada_ipa(self):
		self.run_test("짜다", "{{ko-IPA|a=Ko-짜다.oga}}", "[t͡ɕ͈a̠da̠]", "ipa")

	def test_jitda_ph(self):
		self.run_test("짓다", "{{ko-IPA|l=y|a=y}}", "짇(ː)따", "ph")
	def test_jitda_rr(self):
		self.run_test("짓다", "{{ko-IPA|l=y|a=y}}", "jitda", "rr")
	def test_jitda_rrr(self):
		self.run_test("짓다", "{{ko-IPA|l=y|a=y}}", "jisda", "rrr")
	def test_jitda_mr(self):
		self.run_test("짓다", "{{ko-IPA|l=y|a=y}}", "chitta", "mr")
	def test_jitda_yr(self):
		self.run_test("짓다", "{{ko-IPA|l=y|a=y}}", "cīsta", "yr")
	def test_jitda_ipa(self):
		self.run_test("짓다", "{{ko-IPA|l=y|a=y}}", "[ˈt͡ɕi(ː)t̚t͈a̠]", "ipa")

	def test_jireuda_ph(self):
		self.run_test("지르다", "{{ko-IPA}}", "지르다", "ph")
	def test_jireuda_rr(self):
		self.run_test("지르다", "{{ko-IPA}}", "jireuda", "rr")
	def test_jireuda_rrr(self):
		self.run_test("지르다", "{{ko-IPA}}", "jileuda", "rrr")
	def test_jireuda_mr(self):
		self.run_test("지르다", "{{ko-IPA}}", "chirŭda", "mr")
	def test_jireuda_yr(self):
		self.run_test("지르다", "{{ko-IPA}}", "ciluta", "yr")
	def test_jireuda_ipa(self):
		self.run_test("지르다", "{{ko-IPA}}", "[t͡ɕiɾɯda̠]", "ipa")

	def test_jida_ph(self):
		self.run_test("지다", "{{ko-IPA}}", "지다", "ph")
	def test_jida_rr(self):
		self.run_test("지다", "{{ko-IPA}}", "jida", "rr")
	def test_jida_rrr(self):
		self.run_test("지다", "{{ko-IPA}}", "jida", "rrr")
	def test_jida_mr(self):
		self.run_test("지다", "{{ko-IPA}}", "chida", "mr")
	def test_jida_yr(self):
		self.run_test("지다", "{{ko-IPA}}", "cita", "yr")
	def test_jida_ipa(self):
		self.run_test("지다", "{{ko-IPA}}", "[t͡ɕida̠]", "ipa")

	def test_jeulgeopda_ph(self):
		self.run_test("즐겁다", "{{ko-IPA}}", "즐겁따", "ph")
	def test_jeulgeopda_rr(self):
		self.run_test("즐겁다", "{{ko-IPA}}", "jeulgeopda", "rr")
	def test_jeulgeopda_rrr(self):
		self.run_test("즐겁다", "{{ko-IPA}}", "jeulgeobda", "rrr")
	def test_jeulgeopda_mr(self):
		self.run_test("즐겁다", "{{ko-IPA}}", "chŭlgŏpta", "mr")
	def test_jeulgeopda_yr(self):
		self.run_test("즐겁다", "{{ko-IPA}}", "cul.kepta", "yr")
	def test_jeulgeopda_ipa(self):
		self.run_test("즐겁다", "{{ko-IPA}}", "[t͡ɕɯɭɡʌ̹p̚t͈a̠]", "ipa")

	def test_jupda_ph(self):
		self.run_test("줍다", "{{ko-IPA|l=y}}", "줍(ː)따", "ph")
	def test_jupda_rr(self):
		self.run_test("줍다", "{{ko-IPA|l=y}}", "jupda", "rr")
	def test_jupda_rrr(self):
		self.run_test("줍다", "{{ko-IPA|l=y}}", "jubda", "rrr")
	def test_jupda_mr(self):
		self.run_test("줍다", "{{ko-IPA|l=y}}", "chupta", "mr")
	def test_jupda_yr(self):
		self.run_test("줍다", "{{ko-IPA|l=y}}", "cwūpta", "yr")
	def test_jupda_ipa(self):
		self.run_test("줍다", "{{ko-IPA|l=y}}", "[ˈt͡ɕu(ː)p̚t͈a̠]", "ipa")

	def test_jumureuda_ph(self):
		self.run_test("주무르다", "{{ko-IPA}}", "주무르다", "ph")
	def test_jumureuda_rr(self):
		self.run_test("주무르다", "{{ko-IPA}}", "jumureuda", "rr")
	def test_jumureuda_rrr(self):
		self.run_test("주무르다", "{{ko-IPA}}", "jumuleuda", "rrr")
	def test_jumureuda_mr(self):
		self.run_test("주무르다", "{{ko-IPA}}", "chumurŭda", "mr")
	def test_jumureuda_yr(self):
		self.run_test("주무르다", "{{ko-IPA}}", "cwumuluta", "yr")
	def test_jumureuda_ipa(self):
		self.run_test("주무르다", "{{ko-IPA}}", "[t͡ɕumuɾɯda̠]", "ipa")

	def test_joahada_ph(self):
		self.run_test("좋아하다", "{{ko-IPA|l=y}}", "조(ː)아하다", "ph")
	def test_joahada_rr(self):
		self.run_test("좋아하다", "{{ko-IPA|l=y}}", "joahada", "rr")
	def test_joahada_rrr(self):
		self.run_test("좋아하다", "{{ko-IPA|l=y}}", "joh'ahada", "rrr")
	def test_joahada_mr(self):
		self.run_test("좋아하다", "{{ko-IPA|l=y}}", "choahada", "mr")
	def test_joahada_yr(self):
		self.run_test("좋아하다", "{{ko-IPA|l=y}}", "cōh.ahata", "yr")
	def test_joahada_ipa(self):
		self.run_test("좋아하다", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)a̠ɦa̠da̠]", "ipa")

	def test_jolda_ph(self):
		self.run_test("졸다", "{{ko-IPA|l=y}}", "졸(ː)다", "ph")
	def test_jolda_rr(self):
		self.run_test("졸다", "{{ko-IPA|l=y}}", "jolda", "rr")
	def test_jolda_rrr(self):
		self.run_test("졸다", "{{ko-IPA|l=y}}", "jolda", "rrr")
	def test_jolda_mr(self):
		self.run_test("졸다", "{{ko-IPA|l=y}}", "cholda", "mr")
	def test_jolda_yr(self):
		self.run_test("졸다", "{{ko-IPA|l=y}}", "cōlta", "yr")
	def test_jolda_ipa(self):
		self.run_test("졸다", "{{ko-IPA|l=y}}", "[ˈt͡ɕo̞(ː)ɭda̠]", "ipa")

	def test_joreuda_ph(self):
		self.run_test("조르다", "{{ko-IPA}}", "조르다", "ph")
	def test_joreuda_rr(self):
		self.run_test("조르다", "{{ko-IPA}}", "joreuda", "rr")
	def test_joreuda_rrr(self):
		self.run_test("조르다", "{{ko-IPA}}", "joleuda", "rrr")
	def test_joreuda_mr(self):
		self.run_test("조르다", "{{ko-IPA}}", "chorŭda", "mr")
	def test_joreuda_yr(self):
		self.run_test("조르다", "{{ko-IPA}}", "coluta", "yr")
	def test_joreuda_ipa(self):
		self.run_test("조르다", "{{ko-IPA}}", "[t͡ɕo̞ɾɯda̠]", "ipa")

	def test_jogeumata_ph(self):
		self.run_test("조그맣다", "{{ko-IPA}}", "조그마타", "ph")
	def test_jogeumata_rr(self):
		self.run_test("조그맣다", "{{ko-IPA}}", "jogeumata", "rr")
	def test_jogeumata_rrr(self):
		self.run_test("조그맣다", "{{ko-IPA}}", "jogeumahda", "rrr")
	def test_jogeumata_mr(self):
		self.run_test("조그맣다", "{{ko-IPA}}", "chogŭmat'a", "mr")
	def test_jogeumata_yr(self):
		self.run_test("조그맣다", "{{ko-IPA}}", "cokumahta", "yr")
	def test_jogeumata_ipa(self):
		self.run_test("조그맣다", "{{ko-IPA}}", "[t͡ɕo̞ɡɯma̠tʰa̠]", "ipa")

	def test_jeongdapda_ph(self):
		self.run_test("정답다", "{{ko-IPA}}", "정답따", "ph")
	def test_jeongdapda_rr(self):
		self.run_test("정답다", "{{ko-IPA}}", "jeongdapda", "rr")
	def test_jeongdapda_rrr(self):
		self.run_test("정답다", "{{ko-IPA}}", "jeongdabda", "rrr")
	def test_jeongdapda_mr(self):
		self.run_test("정답다", "{{ko-IPA}}", "chŏngdapta", "mr")
	def test_jeongdapda_yr(self):
		self.run_test("정답다", "{{ko-IPA}}", "cengtapta", "yr")
	def test_jeongdapda_ipa(self):
		self.run_test("정답다", "{{ko-IPA}}", "[t͡ɕʌ̹ŋda̠p̚t͈a̠]", "ipa")

	def test_jeotda_ph(self):
		self.run_test("젓다", "{{ko-IPA|l=y}}", "젇(ː)따", "ph")
	def test_jeotda_rr(self):
		self.run_test("젓다", "{{ko-IPA|l=y}}", "jeotda", "rr")
	def test_jeotda_rrr(self):
		self.run_test("젓다", "{{ko-IPA|l=y}}", "jeosda", "rrr")
	def test_jeotda_mr(self):
		self.run_test("젓다", "{{ko-IPA|l=y}}", "chŏtta", "mr")
	def test_jeotda_yr(self):
		self.run_test("젓다", "{{ko-IPA|l=y}}", "cēsta", "yr")
	def test_jeotda_ipa(self):
		self.run_test("젓다", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)t̚t͈a̠]", "ipa")

	def test_jeopda_ph(self):
		self.run_test("접다", "{{ko-IPA}}", "접따", "ph")
	def test_jeopda_rr(self):
		self.run_test("접다", "{{ko-IPA}}", "jeopda", "rr")
	def test_jeopda_rrr(self):
		self.run_test("접다", "{{ko-IPA}}", "jeobda", "rrr")
	def test_jeopda_mr(self):
		self.run_test("접다", "{{ko-IPA}}", "chŏpta", "mr")
	def test_jeopda_yr(self):
		self.run_test("접다", "{{ko-IPA}}", "cepta", "yr")
	def test_jeopda_ipa(self):
		self.run_test("접다", "{{ko-IPA}}", "[t͡ɕʌ̹p̚t͈a̠]", "ipa")

	def test_jeoreota_ph(self):
		self.run_test("저렇다", "{{ko-IPA}}", "저러타", "ph")
	def test_jeoreota_rr(self):
		self.run_test("저렇다", "{{ko-IPA}}", "jeoreota", "rr")
	def test_jeoreota_rrr(self):
		self.run_test("저렇다", "{{ko-IPA}}", "jeoleohda", "rrr")
	def test_jeoreota_mr(self):
		self.run_test("저렇다", "{{ko-IPA}}", "chŏrŏt'a", "mr")
	def test_jeoreota_yr(self):
		self.run_test("저렇다", "{{ko-IPA}}", "celehta", "yr")
	def test_jeoreota_ipa(self):
		self.run_test("저렇다", "{{ko-IPA}}", "[t͡ɕʌ̹ɾʌ̹tʰa̠]", "ipa")

	def test_jamgeuda_ph(self):
		self.run_test("잠그다", "{{ko-IPA}}", "잠그다", "ph")
	def test_jamgeuda_rr(self):
		self.run_test("잠그다", "{{ko-IPA}}", "jamgeuda", "rr")
	def test_jamgeuda_rrr(self):
		self.run_test("잠그다", "{{ko-IPA}}", "jamgeuda", "rrr")
	def test_jamgeuda_mr(self):
		self.run_test("잠그다", "{{ko-IPA}}", "chamgŭda", "mr")
	def test_jamgeuda_yr(self):
		self.run_test("잠그다", "{{ko-IPA}}", "camkuta", "yr")
	def test_jamgeuda_ipa(self):
		self.run_test("잠그다", "{{ko-IPA}}", "[t͡ɕa̠mɡɯda̠]", "ipa")
	def test_jamgeuda_ph_1(self):
		self.run_test("잠그다", "{{ko-IPA}}", "잠그다", "ph")
	def test_jamgeuda_rr_1(self):
		self.run_test("잠그다", "{{ko-IPA}}", "jamgeuda", "rr")
	def test_jamgeuda_rrr_1(self):
		self.run_test("잠그다", "{{ko-IPA}}", "jamgeuda", "rrr")
	def test_jamgeuda_mr_1(self):
		self.run_test("잠그다", "{{ko-IPA}}", "chamgŭda", "mr")
	def test_jamgeuda_yr_1(self):
		self.run_test("잠그다", "{{ko-IPA}}", "camkuta", "yr")
	def test_jamgeuda_ipa_1(self):
		self.run_test("잠그다", "{{ko-IPA}}", "[t͡ɕa̠mɡɯda̠]", "ipa")

	def test_jarada_ph(self):
		self.run_test("자라다", "{{ko-IPA}}", "자라다", "ph")
	def test_jarada_rr(self):
		self.run_test("자라다", "{{ko-IPA}}", "jarada", "rr")
	def test_jarada_rrr(self):
		self.run_test("자라다", "{{ko-IPA}}", "jalada", "rrr")
	def test_jarada_mr(self):
		self.run_test("자라다", "{{ko-IPA}}", "charada", "mr")
	def test_jarada_yr(self):
		self.run_test("자라다", "{{ko-IPA}}", "calata", "yr")
	def test_jarada_ipa(self):
		self.run_test("자라다", "{{ko-IPA}}", "[t͡ɕa̠ɾa̠da̠]", "ipa")

	def test_itda_ph(self):
		self.run_test("잇다", "{{ko-IPA|l=y}}", "읻(ː)따", "ph")
	def test_itda_rr(self):
		self.run_test("잇다", "{{ko-IPA|l=y}}", "itda", "rr")
	def test_itda_rrr(self):
		self.run_test("잇다", "{{ko-IPA|l=y}}", "isda", "rrr")
	def test_itda_mr(self):
		self.run_test("잇다", "{{ko-IPA|l=y}}", "itta", "mr")
	def test_itda_yr(self):
		self.run_test("잇다", "{{ko-IPA|l=y}}", "īsta", "yr")
	def test_itda_ipa(self):
		self.run_test("잇다", "{{ko-IPA|l=y}}", "[ˈi(ː)t̚t͈a̠]", "ipa")

	def test_ireobeorida_ph(self):
		self.run_test("잃어버리다", "{{ko-IPA}}", "이러버리다", "ph")
	def test_ireobeorida_rr(self):
		self.run_test("잃어버리다", "{{ko-IPA}}", "ireobeorida", "rr")
	def test_ireobeorida_rrr(self):
		self.run_test("잃어버리다", "{{ko-IPA}}", "ilh'eobeolida", "rrr")
	def test_ireobeorida_mr(self):
		self.run_test("잃어버리다", "{{ko-IPA}}", "irŏbŏrida", "mr")
	def test_ireobeorida_yr(self):
		self.run_test("잃어버리다", "{{ko-IPA}}", "ilh.epelita", "yr")
	def test_ireobeorida_ipa(self):
		self.run_test("잃어버리다", "{{ko-IPA}}", "[iɾʌ̹bʌ̹ɾida̠]", "ipa")

	def test_ilhada_ph(self):
		self.run_test("일하다", "{{ko-IPA|l=y}}", "일(ː)하다", "ph")
	def test_ilhada_rr(self):
		self.run_test("일하다", "{{ko-IPA|l=y}}", "ilhada", "rr")
	def test_ilhada_rrr(self):
		self.run_test("일하다", "{{ko-IPA|l=y}}", "ilhada", "rrr")
	def test_ilhada_mr(self):
		self.run_test("일하다", "{{ko-IPA|l=y}}", "irhada", "mr")
	def test_ilhada_yr(self):
		self.run_test("일하다", "{{ko-IPA|l=y}}", "īl.hata", "yr")
	def test_ilhada_ipa(self):
		self.run_test("일하다", "{{ko-IPA|l=y}}", "[ˈi(ː)ɾɦa̠da̠]", "ipa")

	def test_ireonada_ph(self):
		self.run_test("일어나다", "{{ko-IPA|a=y}}", "이러나다", "ph")
	def test_ireonada_rr(self):
		self.run_test("일어나다", "{{ko-IPA|a=y}}", "ireonada", "rr")
	def test_ireonada_rrr(self):
		self.run_test("일어나다", "{{ko-IPA|a=y}}", "il'eonada", "rrr")
	def test_ireonada_mr(self):
		self.run_test("일어나다", "{{ko-IPA|a=y}}", "irŏnada", "mr")
	def test_ireonada_yr(self):
		self.run_test("일어나다", "{{ko-IPA|a=y}}", "il.enata", "yr")
	def test_ireonada_ipa(self):
		self.run_test("일어나다", "{{ko-IPA|a=y}}", "[iɾʌ̹na̠da̠]", "ipa")

	def test_mothada_ph(self):
		self.run_test("못하다", "{{ko-IPA|a=y|l=y}}", "모(ː)타다", "ph")
	def test_mothada_rr(self):
		self.run_test("못하다", "{{ko-IPA|a=y|l=y}}", "mothada", "rr")
	def test_mothada_rrr(self):
		self.run_test("못하다", "{{ko-IPA|a=y|l=y}}", "moshada", "rrr")
	def test_mothada_mr(self):
		self.run_test("못하다", "{{ko-IPA|a=y|l=y}}", "mothada", "mr")
	def test_mothada_yr(self):
		self.run_test("못하다", "{{ko-IPA|a=y|l=y}}", "mōshata", "yr")
	def test_mothada_ipa(self):
		self.run_test("못하다", "{{ko-IPA|a=y|l=y}}", "[ˈmo̞(ː)tʰa̠da̠]", "ipa")

	def test_gaelli_ph(self):
		self.run_test("갤리", "{{ko-IPA}}", "갤리/겔리", "ph")
	def test_gaelli_rr(self):
		self.run_test("갤리", "{{ko-IPA}}", "gaelli", "rr")
	def test_gaelli_rrr(self):
		self.run_test("갤리", "{{ko-IPA}}", "gaelli", "rrr")
	def test_gaelli_mr(self):
		self.run_test("갤리", "{{ko-IPA}}", "kaelli", "mr")
	def test_gaelli_yr(self):
		self.run_test("갤리", "{{ko-IPA}}", "kaylli", "yr")
	def test_gaelli_ipa(self):
		self.run_test("갤리", "{{ko-IPA}}", "[kɛʎʎi] ~ [ke̞ʎʎi]", "ipa")

	def test_galli_ph(self):
		self.run_test("갈리", "{{ko-ipa}}", "갈리", "ph")
	def test_galli_rr(self):
		self.run_test("갈리", "{{ko-ipa}}", "galli", "rr")
	def test_galli_rrr(self):
		self.run_test("갈리", "{{ko-ipa}}", "galli", "rrr")
	def test_galli_mr(self):
		self.run_test("갈리", "{{ko-ipa}}", "kalli", "mr")
	def test_galli_yr(self):
		self.run_test("갈리", "{{ko-ipa}}", "kalli", "yr")
	def test_galli_ipa(self):
		self.run_test("갈리", "{{ko-ipa}}", "[ka̠ʎʎi]", "ipa")

	def test_gallae_ph(self):
		self.run_test("갈래", "{{ko-ipa}}", "갈래/갈레", "ph")
	def test_gallae_rr(self):
		self.run_test("갈래", "{{ko-ipa}}", "gallae", "rr")
	def test_gallae_rrr(self):
		self.run_test("갈래", "{{ko-ipa}}", "gallae", "rrr")
	def test_gallae_mr(self):
		self.run_test("갈래", "{{ko-ipa}}", "kallae", "mr")
	def test_gallae_yr(self):
		self.run_test("갈래", "{{ko-ipa}}", "kallay", "yr")
	def test_gallae_ipa(self):
		self.run_test("갈래", "{{ko-ipa}}", "[ka̠ɭɭɛ] ~ [ka̠ɭɭe̞]", "ipa")

	def test_hwangsogaeguri_ph(self):
		self.run_test("황소개구리", "{{ko-IPA}}", "황소개구리/황소게구리", "ph")
	def test_hwangsogaeguri_rr(self):
		self.run_test("황소개구리", "{{ko-IPA}}", "hwangsogaeguri", "rr")
	def test_hwangsogaeguri_rrr(self):
		self.run_test("황소개구리", "{{ko-IPA}}", "hwangsogaeguli", "rrr")
	def test_hwangsogaeguri_mr(self):
		self.run_test("황소개구리", "{{ko-IPA}}", "hwangsogaeguri", "mr")
	def test_hwangsogaeguri_yr(self):
		self.run_test("황소개구리", "{{ko-IPA}}", "hwangsokaykwuli", "yr")
	def test_hwangsogaeguri_ipa(self):
		self.run_test("황소개구리", "{{ko-IPA}}", "[ɸwa̠ŋsʰo̞ɡɛɡuɾi] ~ [ɸwa̠ŋsʰo̞ɡe̞ɡuɾi]", "ipa")

	def test_maengkkongi_ph(self):
		self.run_test("맹꽁이", "{{ko-IPA|l=y}}", "맹(ː)꽁이/멩(ː)꽁이", "ph")
	def test_maengkkongi_rr(self):
		self.run_test("맹꽁이", "{{ko-IPA|l=y}}", "maengkkong'i", "rr")
	def test_maengkkongi_rrr(self):
		self.run_test("맹꽁이", "{{ko-IPA|l=y}}", "maengkkong'i", "rrr")
	def test_maengkkongi_mr(self):
		self.run_test("맹꽁이", "{{ko-IPA|l=y}}", "maengkkongi", "mr")
	def test_maengkkongi_yr(self):
		self.run_test("맹꽁이", "{{ko-IPA|l=y}}", "māyngkkongi", "yr")
	def test_maengkkongi_ipa(self):
		self.run_test("맹꽁이", "{{ko-IPA|l=y}}", "[ˈmɛ(ː)ŋk͈o̞ŋi] ~ [ˈme̞(ː)ŋk͈o̞ŋi]", "ipa")

	def test_suwoncheonggaeguri_ph(self):
		self.run_test("수원청개구리", "{{ko-IPA}}", "수원청개구리/수원청게구리", "ph")
	def test_suwoncheonggaeguri_rr(self):
		self.run_test("수원청개구리", "{{ko-IPA}}", "suwoncheonggaeguri", "rr")
	def test_suwoncheonggaeguri_rrr(self):
		self.run_test("수원청개구리", "{{ko-IPA}}", "suwoncheonggaeguli", "rrr")
	def test_suwoncheonggaeguri_mr(self):
		self.run_test("수원청개구리", "{{ko-IPA}}", "suwŏnch'ŏnggaeguri", "mr")
	def test_suwoncheonggaeguri_yr(self):
		self.run_test("수원청개구리", "{{ko-IPA}}", "swuwen.chengkaykwuli", "yr")
	def test_suwoncheonggaeguri_ipa(self):
		self.run_test("수원청개구리", "{{ko-IPA}}", "[sʰuwʌ̹ɲt͡ɕʰʌ̹ŋɡɛɡuɾi] ~ [sʰuwʌ̹ɲt͡ɕʰʌ̹ŋɡe̞ɡuɾi]", "ipa")

	def test_cheonggaeguri_ph(self):
		self.run_test("청개구리", "{{ko-IPA}}", "청개구리/청게구리", "ph")
	def test_cheonggaeguri_rr(self):
		self.run_test("청개구리", "{{ko-IPA}}", "cheonggaeguri", "rr")
	def test_cheonggaeguri_rrr(self):
		self.run_test("청개구리", "{{ko-IPA}}", "cheonggaeguli", "rrr")
	def test_cheonggaeguri_mr(self):
		self.run_test("청개구리", "{{ko-IPA}}", "ch'ŏnggaeguri", "mr")
	def test_cheonggaeguri_yr(self):
		self.run_test("청개구리", "{{ko-IPA}}", "chengkaykwuli", "yr")
	def test_cheonggaeguri_ipa(self):
		self.run_test("청개구리", "{{ko-IPA}}", "[t͡ɕʰʌ̹ŋɡɛɡuɾi] ~ [t͡ɕʰʌ̹ŋɡe̞ɡuɾi]", "ipa")

	def test_muldukkeobi_ph(self):
		self.run_test("물두꺼비", "{{ko-IPA}}", "물두꺼비", "ph")
	def test_muldukkeobi_rr(self):
		self.run_test("물두꺼비", "{{ko-IPA}}", "muldukkeobi", "rr")
	def test_muldukkeobi_rrr(self):
		self.run_test("물두꺼비", "{{ko-IPA}}", "muldu'kkeobi", "rrr")
	def test_muldukkeobi_mr(self):
		self.run_test("물두꺼비", "{{ko-IPA}}", "muldukkŏbi", "mr")
	def test_muldukkeobi_yr(self):
		self.run_test("물두꺼비", "{{ko-IPA}}", "multwu.kkepi", "yr")
	def test_muldukkeobi_ipa(self):
		self.run_test("물두꺼비", "{{ko-IPA}}", "[muɭduk͈ʌ̹bi]", "ipa")

	def test_jageundukkeobi_ph(self):
		self.run_test("작은두꺼비", "{{ko-IPA|l=y}}", "자(ː)근두꺼비", "ph")
	def test_jageundukkeobi_rr(self):
		self.run_test("작은두꺼비", "{{ko-IPA|l=y}}", "jageundukkeobi", "rr")
	def test_jageundukkeobi_rrr(self):
		self.run_test("작은두꺼비", "{{ko-IPA|l=y}}", "jag'eundu'kkeobi", "rrr")
	def test_jageundukkeobi_mr(self):
		self.run_test("작은두꺼비", "{{ko-IPA|l=y}}", "chagŭndukkŏbi", "mr")
	def test_jageundukkeobi_yr(self):
		self.run_test("작은두꺼비", "{{ko-IPA|l=y}}", "cāk.untwu.kkepi", "yr")
	def test_jageundukkeobi_ipa(self):
		self.run_test("작은두꺼비", "{{ko-IPA|l=y}}", "[ˈt͡ɕa̠(ː)ɡɯnduk͈ʌ̹bi]", "ipa")

	def test_goridorongnyong_ph(self):
		self.run_test("고리도롱뇽", "{{ko-IPA}}", "고리도롱뇽", "ph")
	def test_goridorongnyong_rr(self):
		self.run_test("고리도롱뇽", "{{ko-IPA}}", "goridorongnyong", "rr")
	def test_goridorongnyong_rrr(self):
		self.run_test("고리도롱뇽", "{{ko-IPA}}", "golidolongnyong", "rrr")
	def test_goridorongnyong_mr(self):
		self.run_test("고리도롱뇽", "{{ko-IPA}}", "koridorongnyong", "mr")
	def test_goridorongnyong_yr(self):
		self.run_test("고리도롱뇽", "{{ko-IPA}}", "kolitolongnyong", "yr")
	def test_goridorongnyong_ipa(self):
		self.run_test("고리도롱뇽", "{{ko-IPA}}", "[ko̞ɾido̞ɾo̞ŋɲoŋ]", "ipa")

	def test_gyegoksangaeguri_ph(self):
		self.run_test("계곡산개구리", "{{ko-IPA}}", "계곡싼개구리/게곡싼개구리/계곡싼게구리/게곡싼게구리", "ph")
	def test_gyegoksangaeguri_rr(self):
		self.run_test("계곡산개구리", "{{ko-IPA}}", "gyegoksan'gaeguri", "rr")
	def test_gyegoksangaeguri_rrr(self):
		self.run_test("계곡산개구리", "{{ko-IPA}}", "gyegogsangaeguli", "rrr")
	def test_gyegoksangaeguri_mr(self):
		self.run_test("계곡산개구리", "{{ko-IPA}}", "kyegoksan'gaeguri", "mr")
	def test_gyegoksangaeguri_yr(self):
		self.run_test("계곡산개구리", "{{ko-IPA}}", "kyeykok.sankaykwuli", "yr")
	def test_gyegoksangaeguri_ipa(self):
		self.run_test("계곡산개구리", "{{ko-IPA}}", "[kje̞ɡo̞ks͈a̠nɡɛɡuɾi] ~ [ke̞ɡo̞ks͈a̠nɡɛɡuɾi] ~ [kje̞ɡo̞ks͈a̠nɡe̞ɡuɾi] ~ [ke̞ɡo̞ks͈a̠nɡe̞ɡuɾi]", "ipa")

	def test_jungguksangaeguri_ph(self):
		self.run_test("중국산개구리", "{{ko-IPA}}", "중국싼개구리/중국싼게구리", "ph")
	def test_jungguksangaeguri_rr(self):
		self.run_test("중국산개구리", "{{ko-IPA}}", "jungguksan'gaeguri", "rr")
	def test_jungguksangaeguri_rrr(self):
		self.run_test("중국산개구리", "{{ko-IPA}}", "junggugsangaeguli", "rrr")
	def test_jungguksangaeguri_mr(self):
		self.run_test("중국산개구리", "{{ko-IPA}}", "chungguksan'gaeguri", "mr")
	def test_jungguksangaeguri_yr(self):
		self.run_test("중국산개구리", "{{ko-IPA}}", "cwungkwuk.sankaykwuli", "yr")
	def test_jungguksangaeguri_ipa(self):
		self.run_test("중국산개구리", "{{ko-IPA}}", "[t͡ɕuŋɡuks͈a̠nɡɛɡuɾi] ~ [t͡ɕuŋɡuks͈a̠nɡe̞ɡuɾi]", "ipa")

	def test_amureusangaeguri_ph(self):
		self.run_test("아무르산개구리", "{{ko-IPA}}", "아무르산개구리/아무르산게구리", "ph")
	def test_amureusangaeguri_rr(self):
		self.run_test("아무르산개구리", "{{ko-IPA}}", "amureusan'gaeguri", "rr")
	def test_amureusangaeguri_rrr(self):
		self.run_test("아무르산개구리", "{{ko-IPA}}", "amuleusangaeguli", "rrr")
	def test_amureusangaeguri_mr(self):
		self.run_test("아무르산개구리", "{{ko-IPA}}", "amurŭsan'gaeguri", "mr")
	def test_amureusangaeguri_yr(self):
		self.run_test("아무르산개구리", "{{ko-IPA}}", "amulusankaykwuli", "yr")
	def test_amureusangaeguri_ipa(self):
		self.run_test("아무르산개구리", "{{ko-IPA}}", "[a̠muɾɯsʰa̠nɡɛɡuɾi] ~ [a̠muɾɯsʰa̠nɡe̞ɡuɾi]", "ipa")

	def test_nebalgarakdorongnyong_ph(self):
		self.run_test("네발가락도롱뇽", "{{ko-IPA|l=y|com=2}}", "네(ː)발까락또롱뇽", "ph")
	def test_nebalgarakdorongnyong_rr(self):
		self.run_test("네발가락도롱뇽", "{{ko-IPA|l=y|com=2}}", "nebalgarakdorongnyong", "rr")
	def test_nebalgarakdorongnyong_rrr(self):
		self.run_test("네발가락도롱뇽", "{{ko-IPA|l=y|com=2}}", "nebalgalagdolongnyong", "rrr")
	def test_nebalgarakdorongnyong_mr(self):
		self.run_test("네발가락도롱뇽", "{{ko-IPA|l=y|com=2}}", "nebalkaraktorongnyong", "mr")
	def test_nebalgarakdorongnyong_yr(self):
		self.run_test("네발가락도롱뇽", "{{ko-IPA|l=y|com=2}}", "nēypalqkalaktolongnyong", "yr")
	def test_nebalgarakdorongnyong_ipa(self):
		self.run_test("네발가락도롱뇽", "{{ko-IPA|l=y|com=2}}", "[ˈne̞(ː)ba̠ɭk͈a̠ɾa̠k̚t͈o̞ɾo̞ŋɲoŋ]", "ipa")

	def test_kkorichiredorongnyong_ph(self):
		self.run_test("꼬리치레도롱뇽", "{{ko-IPA}}", "꼬리치레도롱뇽", "ph")
	def test_kkorichiredorongnyong_rr(self):
		self.run_test("꼬리치레도롱뇽", "{{ko-IPA}}", "kkorichiredorongnyong", "rr")
	def test_kkorichiredorongnyong_rrr(self):
		self.run_test("꼬리치레도롱뇽", "{{ko-IPA}}", "kkolichiledolongnyong", "rrr")
	def test_kkorichiredorongnyong_mr(self):
		self.run_test("꼬리치레도롱뇽", "{{ko-IPA}}", "kkorich'iredorongnyong", "mr")
	def test_kkorichiredorongnyong_yr(self):
		self.run_test("꼬리치레도롱뇽", "{{ko-IPA}}", "kkoli.chileytolongnyong", "yr")
	def test_kkorichiredorongnyong_ipa(self):
		self.run_test("꼬리치레도롱뇽", "{{ko-IPA}}", "[k͈o̞ɾit͡ɕʰiɾe̞do̞ɾo̞ŋɲoŋ]", "ipa")

	def test_omgaeguri_ph(self):
		self.run_test("옴개구리", "{{ko-IPA}}", "옴개구리/옴게구리", "ph")
	def test_omgaeguri_rr(self):
		self.run_test("옴개구리", "{{ko-IPA}}", "omgaeguri", "rr")
	def test_omgaeguri_rrr(self):
		self.run_test("옴개구리", "{{ko-IPA}}", "omgaeguli", "rrr")
	def test_omgaeguri_mr(self):
		self.run_test("옴개구리", "{{ko-IPA}}", "omgaeguri", "mr")
	def test_omgaeguri_yr(self):
		self.run_test("옴개구리", "{{ko-IPA}}", "omkaykwuli", "yr")
	def test_omgaeguri_ipa(self):
		self.run_test("옴개구리", "{{ko-IPA}}", "[o̞mɡɛɡuɾi] ~ [o̞mɡe̞ɡuɾi]", "ipa")

	def test_geumgaeguri_ph(self):
		self.run_test("금개구리", "{{ko-IPA}}", "금개구리/금게구리", "ph")
	def test_geumgaeguri_rr(self):
		self.run_test("금개구리", "{{ko-IPA}}", "geumgaeguri", "rr")
	def test_geumgaeguri_rrr(self):
		self.run_test("금개구리", "{{ko-IPA}}", "geumgaeguli", "rrr")
	def test_geumgaeguri_mr(self):
		self.run_test("금개구리", "{{ko-IPA}}", "kŭmgaeguri", "mr")
	def test_geumgaeguri_yr(self):
		self.run_test("금개구리", "{{ko-IPA}}", "kumkaykwuli", "yr")
	def test_geumgaeguri_ipa(self):
		self.run_test("금개구리", "{{ko-IPA}}", "[kɯmɡɛɡuɾi] ~ [kɯmɡe̞ɡuɾi]", "ipa")

	def test_chamgaeguri_ph(self):
		self.run_test("참개구리", "{{ko-IPA}}", "참개구리/참게구리", "ph")
	def test_chamgaeguri_rr(self):
		self.run_test("참개구리", "{{ko-IPA}}", "chamgaeguri", "rr")
	def test_chamgaeguri_rrr(self):
		self.run_test("참개구리", "{{ko-IPA}}", "chamgaeguli", "rrr")
	def test_chamgaeguri_mr(self):
		self.run_test("참개구리", "{{ko-IPA}}", "ch'amgaeguri", "mr")
	def test_chamgaeguri_yr(self):
		self.run_test("참개구리", "{{ko-IPA}}", "chamkaykwuli", "yr")
	def test_chamgaeguri_ipa(self):
		self.run_test("참개구리", "{{ko-IPA}}", "[t͡ɕʰa̠mɡɛɡuɾi] ~ [t͡ɕʰa̠mɡe̞ɡuɾi]", "ipa")

	def test_sangaeguri_ph(self):
		self.run_test("산개구리", "{{ko-IPA}}", "산개구리/산게구리", "ph")
	def test_sangaeguri_rr(self):
		self.run_test("산개구리", "{{ko-IPA}}", "san'gaeguri", "rr")
	def test_sangaeguri_rrr(self):
		self.run_test("산개구리", "{{ko-IPA}}", "sangaeguli", "rrr")
	def test_sangaeguri_mr(self):
		self.run_test("산개구리", "{{ko-IPA}}", "san'gaeguri", "mr")
	def test_sangaeguri_yr(self):
		self.run_test("산개구리", "{{ko-IPA}}", "sankaykwuli", "yr")
	def test_sangaeguri_ipa(self):
		self.run_test("산개구리", "{{ko-IPA}}", "[sʰa̠nɡɛɡuɾi] ~ [sʰa̠nɡe̞ɡuɾi]", "ipa")

	def test_guyu_ph(self):
		self.run_test("구유", "{{ko-IPA}}", "구유", "ph")
	def test_guyu_rr(self):
		self.run_test("구유", "{{ko-IPA}}", "guyu", "rr")
	def test_guyu_rrr(self):
		self.run_test("구유", "{{ko-IPA}}", "guyu", "rrr")
	def test_guyu_mr(self):
		self.run_test("구유", "{{ko-IPA}}", "kuyu", "mr")
	def test_guyu_yr(self):
		self.run_test("구유", "{{ko-IPA}}", "kwu.yu", "yr")
	def test_guyu_ipa(self):
		self.run_test("구유", "{{ko-IPA}}", "[kuju]", "ipa")

	def test_geurida_ph(self):
		self.run_test("그리다", "{{ko-IPA}}", "그리다", "ph")
	def test_geurida_rr(self):
		self.run_test("그리다", "{{ko-IPA}}", "geurida", "rr")
	def test_geurida_rrr(self):
		self.run_test("그리다", "{{ko-IPA}}", "geulida", "rrr")
	def test_geurida_mr(self):
		self.run_test("그리다", "{{ko-IPA}}", "kŭrida", "mr")
	def test_geurida_yr(self):
		self.run_test("그리다", "{{ko-IPA}}", "kulita", "yr")
	def test_geurida_ipa(self):
		self.run_test("그리다", "{{ko-IPA}}", "[kɯɾida̠]", "ipa")

	def test_geuripda_ph(self):
		self.run_test("그립다", "{{ko-IPA}}", "그립따", "ph")
	def test_geuripda_rr(self):
		self.run_test("그립다", "{{ko-IPA}}", "geuripda", "rr")
	def test_geuripda_rrr(self):
		self.run_test("그립다", "{{ko-IPA}}", "geulibda", "rrr")
	def test_geuripda_mr(self):
		self.run_test("그립다", "{{ko-IPA}}", "kŭripta", "mr")
	def test_geuripda_yr(self):
		self.run_test("그립다", "{{ko-IPA}}", "kulipta", "yr")
	def test_geuripda_ipa(self):
		self.run_test("그립다", "{{ko-IPA}}", "[kɯɾip̚t͈a̠]", "ipa")

	def test_geutda_ph(self):
		self.run_test("긋다", "{{ko-IPA|l=y}}", "귿(ː)따", "ph")
	def test_geutda_rr(self):
		self.run_test("긋다", "{{ko-IPA|l=y}}", "geutda", "rr")
	def test_geutda_rrr(self):
		self.run_test("긋다", "{{ko-IPA|l=y}}", "geusda", "rrr")
	def test_geutda_mr(self):
		self.run_test("긋다", "{{ko-IPA|l=y}}", "kŭtta", "mr")
	def test_geutda_yr(self):
		self.run_test("긋다", "{{ko-IPA|l=y}}", "kūsta", "yr")
	def test_geutda_ipa(self):
		self.run_test("긋다", "{{ko-IPA|l=y}}", "[ˈkɯ(ː)t̚t͈a̠]", "ipa")

	def test_gippeuda_ph(self):
		self.run_test("기쁘다", "{{ko-IPA}}", "기쁘다", "ph")
	def test_gippeuda_rr(self):
		self.run_test("기쁘다", "{{ko-IPA}}", "gippeuda", "rr")
	def test_gippeuda_rrr(self):
		self.run_test("기쁘다", "{{ko-IPA}}", "gi'ppeuda", "rrr")
	def test_gippeuda_mr(self):
		self.run_test("기쁘다", "{{ko-IPA}}", "kippŭda", "mr")
	def test_gippeuda_yr(self):
		self.run_test("기쁘다", "{{ko-IPA}}", "ki.pputa", "yr")
	def test_gippeuda_ipa(self):
		self.run_test("기쁘다", "{{ko-IPA}}", "[kip͈ɯda̠]", "ipa")

	def test_giurida_ph(self):
		self.run_test("기울이다", "{{ko-IPA}}", "기우리다", "ph")
	def test_giurida_rr(self):
		self.run_test("기울이다", "{{ko-IPA}}", "giurida", "rr")
	def test_giurida_rrr(self):
		self.run_test("기울이다", "{{ko-IPA}}", "giul'ida", "rrr")
	def test_giurida_mr(self):
		self.run_test("기울이다", "{{ko-IPA}}", "kiurida", "mr")
	def test_giurida_yr(self):
		self.run_test("기울이다", "{{ko-IPA}}", "kiwul.ita", "yr")
	def test_giurida_ipa(self):
		self.run_test("기울이다", "{{ko-IPA}}", "[kiuɾida̠]", "ipa")

	def test_gipda_ph(self):
		self.run_test("깁다", "{{ko-IPA|l=y}}", "깁(ː)따", "ph")
	def test_gipda_rr(self):
		self.run_test("깁다", "{{ko-IPA|l=y}}", "gipda", "rr")
	def test_gipda_rrr(self):
		self.run_test("깁다", "{{ko-IPA|l=y}}", "gibda", "rrr")
	def test_gipda_mr(self):
		self.run_test("깁다", "{{ko-IPA|l=y}}", "kipta", "mr")
	def test_gipda_yr(self):
		self.run_test("깁다", "{{ko-IPA|l=y}}", "kīpta", "yr")
	def test_gipda_ipa(self):
		self.run_test("깁다", "{{ko-IPA|l=y}}", "[ˈki(ː)p̚t͈a̠]", "ipa")

	def test_kkada_ph(self):
		self.run_test("까다", "{{ko-IPA}}", "까다", "ph")
	def test_kkada_rr(self):
		self.run_test("까다", "{{ko-IPA}}", "kkada", "rr")
	def test_kkada_rrr(self):
		self.run_test("까다", "{{ko-IPA}}", "kkada", "rrr")
	def test_kkada_mr(self):
		self.run_test("까다", "{{ko-IPA}}", "kkada", "mr")
	def test_kkada_yr(self):
		self.run_test("까다", "{{ko-IPA}}", "kkata", "yr")
	def test_kkada_ipa(self):
		self.run_test("까다", "{{ko-IPA}}", "[k͈a̠da̠]", "ipa")

	def test_kkida_ph(self):
		self.run_test("끼다", "{{ko-IPA}}", "끼다", "ph")
	def test_kkida_rr(self):
		self.run_test("끼다", "{{ko-IPA}}", "kkida", "rr")
	def test_kkida_rrr(self):
		self.run_test("끼다", "{{ko-IPA}}", "kkida", "rrr")
	def test_kkida_mr(self):
		self.run_test("끼다", "{{ko-IPA}}", "kkida", "mr")
	def test_kkida_yr(self):
		self.run_test("끼다", "{{ko-IPA}}", "kkita", "yr")
	def test_kkida_ipa(self):
		self.run_test("끼다", "{{ko-IPA}}", "[k͈ida̠]", "ipa")
	def test_kkida_ph_1(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "끼(ː)다", "ph")
	def test_kkida_rr_1(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "kkida", "rr")
	def test_kkida_rrr_1(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "kkida", "rrr")
	def test_kkida_mr_1(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "kkida", "mr")
	def test_kkida_yr_1(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "kkīta", "yr")
	def test_kkida_ipa_1(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "[ˈk͈i(ː)da̠]", "ipa")
	def test_kkida_ph_2(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "끼(ː)다", "ph")
	def test_kkida_rr_2(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "kkida", "rr")
	def test_kkida_rrr_2(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "kkida", "rrr")
	def test_kkida_mr_2(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "kkida", "mr")
	def test_kkida_yr_2(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "kkīta", "yr")
	def test_kkida_ipa_2(self):
		self.run_test("끼다", "{{ko-IPA|l=y}}", "[ˈk͈i(ː)da̠]", "ipa")

	def test_kkeurida_ph(self):
		self.run_test("끓이다", "{{ko-IPA}}", "끄리다", "ph")
	def test_kkeurida_rr(self):
		self.run_test("끓이다", "{{ko-IPA}}", "kkeurida", "rr")
	def test_kkeurida_rrr(self):
		self.run_test("끓이다", "{{ko-IPA}}", "kkeulh'ida", "rrr")
	def test_kkeurida_mr(self):
		self.run_test("끓이다", "{{ko-IPA}}", "kkŭrida", "mr")
	def test_kkeurida_yr(self):
		self.run_test("끓이다", "{{ko-IPA}}", "kkulh.ita", "yr")
	def test_kkeurida_ipa(self):
		self.run_test("끓이다", "{{ko-IPA}}", "[k͈ɯɾida̠]", "ipa")

	def test_kkeullida_ph(self):
		self.run_test("끌리다", "{{ko-IPA|l=y}}", "끌(ː)리다", "ph")
	def test_kkeullida_rr(self):
		self.run_test("끌리다", "{{ko-IPA|l=y}}", "kkeullida", "rr")
	def test_kkeullida_rrr(self):
		self.run_test("끌리다", "{{ko-IPA|l=y}}", "kkeullida", "rrr")
	def test_kkeullida_mr(self):
		self.run_test("끌리다", "{{ko-IPA|l=y}}", "kkŭllida", "mr")
	def test_kkeullida_yr(self):
		self.run_test("끌리다", "{{ko-IPA|l=y}}", "kkūllita", "yr")
	def test_kkeullida_ipa(self):
		self.run_test("끌리다", "{{ko-IPA|l=y}}", "[ˈk͈ɯ(ː)ʎʎida̠]", "ipa")

	def test_kkeunnada_ph(self):
		self.run_test("끝나다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-끝나다.wav}}", "끈나다", "ph")
	def test_kkeunnada_rr(self):
		self.run_test("끝나다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-끝나다.wav}}", "kkeunnada", "rr")
	def test_kkeunnada_rrr(self):
		self.run_test("끝나다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-끝나다.wav}}", "kkeutnada", "rrr")
	def test_kkeunnada_mr(self):
		self.run_test("끝나다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-끝나다.wav}}", "kkŭnnada", "mr")
	def test_kkeunnada_yr(self):
		self.run_test("끝나다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-끝나다.wav}}", "kkuthnata", "yr")
	def test_kkeunnada_ipa(self):
		self.run_test("끝나다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-끝나다.wav}}", "[k͈ɯnna̠da̠]", "ipa")

	def test_kkeuda_ph(self):
		self.run_test("끄다", "{{ko-IPA}}", "끄다", "ph")
	def test_kkeuda_rr(self):
		self.run_test("끄다", "{{ko-IPA}}", "kkeuda", "rr")
	def test_kkeuda_rrr(self):
		self.run_test("끄다", "{{ko-IPA}}", "kkeuda", "rrr")
	def test_kkeuda_mr(self):
		self.run_test("끄다", "{{ko-IPA}}", "kkŭda", "mr")
	def test_kkeuda_yr(self):
		self.run_test("끄다", "{{ko-IPA}}", "kkuta", "yr")
	def test_kkeuda_ipa(self):
		self.run_test("끄다", "{{ko-IPA}}", "[k͈ɯda̠]", "ipa")

	def test_kkeonaeda_ph(self):
		self.run_test("꺼내다", "{{ko-IPA|l=y}}", "꺼(ː)내다/꺼(ː)네다", "ph")
	def test_kkeonaeda_rr(self):
		self.run_test("꺼내다", "{{ko-IPA|l=y}}", "kkeonaeda", "rr")
	def test_kkeonaeda_rrr(self):
		self.run_test("꺼내다", "{{ko-IPA|l=y}}", "kkeonaeda", "rrr")
	def test_kkeonaeda_mr(self):
		self.run_test("꺼내다", "{{ko-IPA|l=y}}", "kkŏnaeda", "mr")
	def test_kkeonaeda_yr(self):
		self.run_test("꺼내다", "{{ko-IPA|l=y}}", "kkēnayta", "yr")
	def test_kkeonaeda_ipa(self):
		self.run_test("꺼내다", "{{ko-IPA|l=y}}", "[ˈk͈ɘ(ː)nɛda̠] ~ [ˈk͈ɘ(ː)ne̞da̠]", "ipa")

	def test_kkaedatda_ph(self):
		self.run_test("깨닫다", "{{ko-IPA}}", "깨닫따/께닫따", "ph")
	def test_kkaedatda_rr(self):
		self.run_test("깨닫다", "{{ko-IPA}}", "kkaedatda", "rr")
	def test_kkaedatda_rrr(self):
		self.run_test("깨닫다", "{{ko-IPA}}", "kkaedadda", "rrr")
	def test_kkaedatda_mr(self):
		self.run_test("깨닫다", "{{ko-IPA}}", "kkaedatta", "mr")
	def test_kkaedatda_yr(self):
		self.run_test("깨닫다", "{{ko-IPA}}", "kkaytat.ta", "yr")
	def test_kkaedatda_ipa(self):
		self.run_test("깨닫다", "{{ko-IPA}}", "[k͈ɛda̠t̚t͈a̠] ~ [k͈e̞da̠t̚t͈a̠]", "ipa")

	def test_kkaetteurida_ph(self):
		self.run_test("깨뜨리다", "{{ko-IPA}}", "깨뜨리다/께뜨리다", "ph")
	def test_kkaetteurida_rr(self):
		self.run_test("깨뜨리다", "{{ko-IPA}}", "kkaetteurida", "rr")
	def test_kkaetteurida_rrr(self):
		self.run_test("깨뜨리다", "{{ko-IPA}}", "kkae'tteulida", "rrr")
	def test_kkaetteurida_mr(self):
		self.run_test("깨뜨리다", "{{ko-IPA}}", "kkaettŭrida", "mr")
	def test_kkaetteurida_yr(self):
		self.run_test("깨뜨리다", "{{ko-IPA}}", "kkay.ttulita", "yr")
	def test_kkaetteurida_ipa(self):
		self.run_test("깨뜨리다", "{{ko-IPA}}", "[k͈ɛt͈ɯɾida̠] ~ [k͈e̞t͈ɯɾida̠]", "ipa")

	def test_kkaeda_ph(self):
		self.run_test("깨다", "{{ko-IPA|l=y|a=Ko-깨다.oga}}", "깨(ː)다/께(ː)다", "ph")
	def test_kkaeda_rr(self):
		self.run_test("깨다", "{{ko-IPA|l=y|a=Ko-깨다.oga}}", "kkaeda", "rr")
	def test_kkaeda_rrr(self):
		self.run_test("깨다", "{{ko-IPA|l=y|a=Ko-깨다.oga}}", "kkaeda", "rrr")
	def test_kkaeda_mr(self):
		self.run_test("깨다", "{{ko-IPA|l=y|a=Ko-깨다.oga}}", "kkaeda", "mr")
	def test_kkaeda_yr(self):
		self.run_test("깨다", "{{ko-IPA|l=y|a=Ko-깨다.oga}}", "kkāyta", "yr")
	def test_kkaeda_ipa(self):
		self.run_test("깨다", "{{ko-IPA|l=y|a=Ko-깨다.oga}}", "[ˈk͈ɛ(ː)da̠] ~ [ˈk͈e̞(ː)da̠]", "ipa")
	def test_kkaeda_ph_1(self):
		self.run_test("깨다", "{{ko-IPA|a=Ko-깨다.oga}}", "깨다/께다", "ph")
	def test_kkaeda_rr_1(self):
		self.run_test("깨다", "{{ko-IPA|a=Ko-깨다.oga}}", "kkaeda", "rr")
	def test_kkaeda_rrr_1(self):
		self.run_test("깨다", "{{ko-IPA|a=Ko-깨다.oga}}", "kkaeda", "rrr")
	def test_kkaeda_mr_1(self):
		self.run_test("깨다", "{{ko-IPA|a=Ko-깨다.oga}}", "kkaeda", "mr")
	def test_kkaeda_yr_1(self):
		self.run_test("깨다", "{{ko-IPA|a=Ko-깨다.oga}}", "kkayta", "yr")
	def test_kkaeda_ipa_1(self):
		self.run_test("깨다", "{{ko-IPA|a=Ko-깨다.oga}}", "[k͈ɛda̠] ~ [k͈e̞da̠]", "ipa")

	def test_kkaekkeuthada_ph(self):
		self.run_test("깨끗하다", "{{ko-IPA}}", "깨끄타다/께끄타다", "ph")
	def test_kkaekkeuthada_rr(self):
		self.run_test("깨끗하다", "{{ko-IPA}}", "kkaekkeuthada", "rr")
	def test_kkaekkeuthada_rrr(self):
		self.run_test("깨끗하다", "{{ko-IPA}}", "kkae'kkeushada", "rrr")
	def test_kkaekkeuthada_mr(self):
		self.run_test("깨끗하다", "{{ko-IPA}}", "kkaekkŭthada", "mr")
	def test_kkaekkeuthada_yr(self):
		self.run_test("깨끗하다", "{{ko-IPA}}", "kkay.kkushata", "yr")
	def test_kkaekkeuthada_ipa(self):
		self.run_test("깨끗하다", "{{ko-IPA}}", "[k͈ɛk͈ɯtʰa̠da̠] ~ [k͈e̞k͈ɯtʰa̠da̠]", "ipa")

	def test_kkamata_ph(self):
		self.run_test("까맣다", "{{ko-IPA|l=y}}", "까(ː)마타", "ph")
	def test_kkamata_rr(self):
		self.run_test("까맣다", "{{ko-IPA|l=y}}", "kkamata", "rr")
	def test_kkamata_rrr(self):
		self.run_test("까맣다", "{{ko-IPA|l=y}}", "kkamahda", "rrr")
	def test_kkamata_mr(self):
		self.run_test("까맣다", "{{ko-IPA|l=y}}", "kkamat'a", "mr")
	def test_kkamata_yr(self):
		self.run_test("까맣다", "{{ko-IPA|l=y}}", "kkāmahta", "yr")
	def test_kkamata_ipa(self):
		self.run_test("까맣다", "{{ko-IPA|l=y}}", "[ˈk͈a̠(ː)ma̠tʰa̠]", "ipa")

	def test_geuruteogi_ph(self):
		self.run_test("그루터기", "{{ko-IPA}}", "그루터기", "ph")
	def test_geuruteogi_rr(self):
		self.run_test("그루터기", "{{ko-IPA}}", "geuruteogi", "rr")
	def test_geuruteogi_rrr(self):
		self.run_test("그루터기", "{{ko-IPA}}", "geuluteogi", "rrr")
	def test_geuruteogi_mr(self):
		self.run_test("그루터기", "{{ko-IPA}}", "kŭrut'ŏgi", "mr")
	def test_geuruteogi_yr(self):
		self.run_test("그루터기", "{{ko-IPA}}", "kulwu.theki", "yr")
	def test_geuruteogi_ipa(self):
		self.run_test("그루터기", "{{ko-IPA}}", "[kɯɾutʰʌ̹ɡi]", "ipa")

	def test_geuru_ph(self):
		self.run_test("그루", "{{ko-ipa}}", "그루", "ph")
	def test_geuru_rr(self):
		self.run_test("그루", "{{ko-ipa}}", "geuru", "rr")
	def test_geuru_rrr(self):
		self.run_test("그루", "{{ko-ipa}}", "geulu", "rrr")
	def test_geuru_mr(self):
		self.run_test("그루", "{{ko-ipa}}", "kŭru", "mr")
	def test_geuru_yr(self):
		self.run_test("그루", "{{ko-ipa}}", "kulwu", "yr")
	def test_geuru_ipa(self):
		self.run_test("그루", "{{ko-ipa}}", "[kɯɾu]", "ipa")

	def test_geumul_ph(self):
		self.run_test("그물", "{{ko-IPA}}", "그물", "ph")
	def test_geumul_rr(self):
		self.run_test("그물", "{{ko-IPA}}", "geumul", "rr")
	def test_geumul_rrr(self):
		self.run_test("그물", "{{ko-IPA}}", "geumul", "rrr")
	def test_geumul_mr(self):
		self.run_test("그물", "{{ko-IPA}}", "kŭmul", "mr")
	def test_geumul_yr(self):
		self.run_test("그물", "{{ko-IPA}}", "kumul", "yr")
	def test_geumul_ipa(self):
		self.run_test("그물", "{{ko-IPA}}", "[kɯmuɭ]", "ipa")

	def test_tongbal_ph(self):
		self.run_test("통발", "{{ko-IPA}}", "통발", "ph")
	def test_tongbal_rr(self):
		self.run_test("통발", "{{ko-IPA}}", "tongbal", "rr")
	def test_tongbal_rrr(self):
		self.run_test("통발", "{{ko-IPA}}", "tongbal", "rrr")
	def test_tongbal_mr(self):
		self.run_test("통발", "{{ko-IPA}}", "t'ongbal", "mr")
	def test_tongbal_yr(self):
		self.run_test("통발", "{{ko-IPA}}", "thongpal", "yr")
	def test_tongbal_ipa(self):
		self.run_test("통발", "{{ko-IPA}}", "[tʰo̞ŋba̠ɭ]", "ipa")


	def test_namgida_ph(self):
		self.run_test("남기다", "{{ko-IPA}}", "남기다", "ph")
	def test_namgida_rr(self):
		self.run_test("남기다", "{{ko-IPA}}", "namgida", "rr")
	def test_namgida_rrr(self):
		self.run_test("남기다", "{{ko-IPA}}", "namgida", "rrr")
	def test_namgida_mr(self):
		self.run_test("남기다", "{{ko-IPA}}", "namgida", "mr")
	def test_namgida_yr(self):
		self.run_test("남기다", "{{ko-IPA}}", "namkita", "yr")
	def test_namgida_ipa(self):
		self.run_test("남기다", "{{ko-IPA}}", "[na̠mɡida̠]", "ipa")

	def test_nallida_ph(self):
		self.run_test("날리다", "{{ko-IPA}}", "날리다", "ph")
	def test_nallida_rr(self):
		self.run_test("날리다", "{{ko-IPA}}", "nallida", "rr")
	def test_nallida_rrr(self):
		self.run_test("날리다", "{{ko-IPA}}", "nallida", "rrr")
	def test_nallida_mr(self):
		self.run_test("날리다", "{{ko-IPA}}", "nallida", "mr")
	def test_nallida_yr(self):
		self.run_test("날리다", "{{ko-IPA}}", "nallita", "yr")
	def test_nallida_ipa(self):
		self.run_test("날리다", "{{ko-IPA}}", "[na̠ʎʎida̠]", "ipa")

	def test_namurada_ph(self):
		self.run_test("나무라다", "{{ko-IPA}}", "나무라다", "ph")
	def test_namurada_rr(self):
		self.run_test("나무라다", "{{ko-IPA}}", "namurada", "rr")
	def test_namurada_rrr(self):
		self.run_test("나무라다", "{{ko-IPA}}", "namulada", "rrr")
	def test_namurada_mr(self):
		self.run_test("나무라다", "{{ko-IPA}}", "namurada", "mr")
	def test_namurada_yr(self):
		self.run_test("나무라다", "{{ko-IPA}}", "namulata", "yr")
	def test_namurada_ipa(self):
		self.run_test("나무라다", "{{ko-IPA}}", "[na̠muɾa̠da̠]", "ipa")

	def test_nareuda_ph(self):
		self.run_test("나르다", "{{ko-IPA}}", "나르다", "ph")
	def test_nareuda_rr(self):
		self.run_test("나르다", "{{ko-IPA}}", "nareuda", "rr")
	def test_nareuda_rrr(self):
		self.run_test("나르다", "{{ko-IPA}}", "naleuda", "rrr")
	def test_nareuda_mr(self):
		self.run_test("나르다", "{{ko-IPA}}", "narŭda", "mr")
	def test_nareuda_yr(self):
		self.run_test("나르다", "{{ko-IPA}}", "naluta", "yr")
	def test_nareuda_ipa(self):
		self.run_test("나르다", "{{ko-IPA}}", "[na̠ɾɯda̠]", "ipa")

	def test_kkaeuda_ph(self):
		self.run_test("깨우다", "{{ko-IPA}}", "깨우다/께우다", "ph")
	def test_kkaeuda_rr(self):
		self.run_test("깨우다", "{{ko-IPA}}", "kkae'uda", "rr")
	def test_kkaeuda_rrr(self):
		self.run_test("깨우다", "{{ko-IPA}}", "kkae'uda", "rrr")
	def test_kkaeuda_mr(self):
		self.run_test("깨우다", "{{ko-IPA}}", "kkaeuda", "mr")
	def test_kkaeuda_yr(self):
		self.run_test("깨우다", "{{ko-IPA}}", "kkaywuta", "yr")
	def test_kkaeuda_ipa(self):
		self.run_test("깨우다", "{{ko-IPA}}", "[k͈ɛuda̠] ~ [k͈e̞uda̠]", "ipa")

	def test_neulda_ph(self):
		self.run_test("늘다", "{{ko-IPA}}", "늘다", "ph")
	def test_neulda_rr(self):
		self.run_test("늘다", "{{ko-IPA}}", "neulda", "rr")
	def test_neulda_rrr(self):
		self.run_test("늘다", "{{ko-IPA}}", "neulda", "rrr")
	def test_neulda_mr(self):
		self.run_test("늘다", "{{ko-IPA}}", "nŭlda", "mr")
	def test_neulda_yr(self):
		self.run_test("늘다", "{{ko-IPA}}", "nulta", "yr")
	def test_neulda_ipa(self):
		self.run_test("늘다", "{{ko-IPA}}", "[nɯɭda̠]", "ipa")

	def test_neukkida_ph(self):
		self.run_test("느끼다", "{{ko-IPA|a=y}}", "느끼다", "ph")
	def test_neukkida_rr(self):
		self.run_test("느끼다", "{{ko-IPA|a=y}}", "neukkida", "rr")
	def test_neukkida_rrr(self):
		self.run_test("느끼다", "{{ko-IPA|a=y}}", "neu'kkida", "rrr")
	def test_neukkida_mr(self):
		self.run_test("느끼다", "{{ko-IPA|a=y}}", "nŭkkida", "mr")
	def test_neukkida_yr(self):
		self.run_test("느끼다", "{{ko-IPA|a=y}}", "nu.kkita", "yr")
	def test_neukkida_ipa(self):
		self.run_test("느끼다", "{{ko-IPA|a=y}}", "[nɯk͈ida̠]", "ipa")

	def test_nureota_ph(self):
		self.run_test("누렇다", "{{ko-IPA|l=y}}", "누(ː)러타", "ph")
	def test_nureota_rr(self):
		self.run_test("누렇다", "{{ko-IPA|l=y}}", "nureota", "rr")
	def test_nureota_rrr(self):
		self.run_test("누렇다", "{{ko-IPA|l=y}}", "nuleohda", "rrr")
	def test_nureota_mr(self):
		self.run_test("누렇다", "{{ko-IPA|l=y}}", "nurŏt'a", "mr")
	def test_nureota_yr(self):
		self.run_test("누렇다", "{{ko-IPA|l=y}}", "nwūlehta", "yr")
	def test_nureota_ipa(self):
		self.run_test("누렇다", "{{ko-IPA|l=y}}", "[ˈnu(ː)ɾʌ̹tʰa̠]", "ipa")

	def test_nollida_ph(self):
		self.run_test("놀리다", "{{ko-IPA}}", "놀리다", "ph")
	def test_nollida_rr(self):
		self.run_test("놀리다", "{{ko-IPA}}", "nollida", "rr")
	def test_nollida_rrr(self):
		self.run_test("놀리다", "{{ko-IPA}}", "nollida", "rrr")
	def test_nollida_mr(self):
		self.run_test("놀리다", "{{ko-IPA}}", "nollida", "mr")
	def test_nollida_yr(self):
		self.run_test("놀리다", "{{ko-IPA}}", "nollita", "yr")
	def test_nollida_ipa(self):
		self.run_test("놀리다", "{{ko-IPA}}", "[no̞ʎʎida̠]", "ipa")

	def test_nollapda_ph(self):
		self.run_test("놀랍다", "{{ko-IPA|l=y}}", "놀(ː)랍따", "ph")
	def test_nollapda_rr(self):
		self.run_test("놀랍다", "{{ko-IPA|l=y}}", "nollapda", "rr")
	def test_nollapda_rrr(self):
		self.run_test("놀랍다", "{{ko-IPA|l=y}}", "nollabda", "rrr")
	def test_nollapda_mr(self):
		self.run_test("놀랍다", "{{ko-IPA|l=y}}", "nollapta", "mr")
	def test_nollapda_yr(self):
		self.run_test("놀랍다", "{{ko-IPA|l=y}}", "nōllapta", "yr")
	def test_nollapda_ipa(self):
		self.run_test("놀랍다", "{{ko-IPA|l=y}}", "[ˈno̞(ː)ɭɭa̠p̚t͈a̠]", "ipa")

	def test_nollada_ph(self):
		self.run_test("놀라다", "{{ko-IPA|l=y}}", "놀(ː)라다", "ph")
	def test_nollada_rr(self):
		self.run_test("놀라다", "{{ko-IPA|l=y}}", "nollada", "rr")
	def test_nollada_rrr(self):
		self.run_test("놀라다", "{{ko-IPA|l=y}}", "nollada", "rrr")
	def test_nollada_mr(self):
		self.run_test("놀라다", "{{ko-IPA|l=y}}", "nollada", "mr")
	def test_nollada_yr(self):
		self.run_test("놀라다", "{{ko-IPA|l=y}}", "nōllata", "yr")
	def test_nollada_ipa(self):
		self.run_test("놀라다", "{{ko-IPA|l=y}}", "[ˈno̞(ː)ɭɭa̠da̠]", "ipa")

	def test_neogeureopda_ph(self):
		self.run_test("너그럽다", "{{ko-IPA}}", "너그럽따", "ph")
	def test_neogeureopda_rr(self):
		self.run_test("너그럽다", "{{ko-IPA}}", "neogeureopda", "rr")
	def test_neogeureopda_rrr(self):
		self.run_test("너그럽다", "{{ko-IPA}}", "neogeuleobda", "rrr")
	def test_neogeureopda_mr(self):
		self.run_test("너그럽다", "{{ko-IPA}}", "nŏgŭrŏpta", "mr")
	def test_neogeureopda_yr(self):
		self.run_test("너그럽다", "{{ko-IPA}}", "nekulepta", "yr")
	def test_neogeureopda_ipa(self):
		self.run_test("너그럽다", "{{ko-IPA}}", "[nʌ̹ɡɯɾʌ̹p̚t͈a̠]", "ipa")

	def test_neolda_ph(self):
		self.run_test("널다", "{{ko-IPA|l=y}}", "널(ː)다", "ph")
	def test_neolda_rr(self):
		self.run_test("널다", "{{ko-IPA|l=y}}", "neolda", "rr")
	def test_neolda_rrr(self):
		self.run_test("널다", "{{ko-IPA|l=y}}", "neolda", "rrr")
	def test_neolda_mr(self):
		self.run_test("널다", "{{ko-IPA|l=y}}", "nŏlda", "mr")
	def test_neolda_yr(self):
		self.run_test("널다", "{{ko-IPA|l=y}}", "nēlta", "yr")
	def test_neolda_ipa(self):
		self.run_test("널다", "{{ko-IPA|l=y}}", "[ˈnɘ(ː)ɭda̠]", "ipa")

	def test_neomgida_ph(self):
		self.run_test("넘기다", "{{ko-IPA}}", "넘기다", "ph")
	def test_neomgida_rr(self):
		self.run_test("넘기다", "{{ko-IPA}}", "neomgida", "rr")
	def test_neomgida_rrr(self):
		self.run_test("넘기다", "{{ko-IPA}}", "neomgida", "rrr")
	def test_neomgida_mr(self):
		self.run_test("넘기다", "{{ko-IPA}}", "nŏmgida", "mr")
	def test_neomgida_yr(self):
		self.run_test("넘기다", "{{ko-IPA}}", "nemkita", "yr")
	def test_neomgida_ipa(self):
		self.run_test("넘기다", "{{ko-IPA}}", "[nʌ̹mɡida̠]", "ipa")

	def test_norata_ph(self):
		self.run_test("노랗다", "{{ko-IPA|l=y}}", "노(ː)라타", "ph")
	def test_norata_rr(self):
		self.run_test("노랗다", "{{ko-IPA|l=y}}", "norata", "rr")
	def test_norata_rrr(self):
		self.run_test("노랗다", "{{ko-IPA|l=y}}", "nolahda", "rrr")
	def test_norata_mr(self):
		self.run_test("노랗다", "{{ko-IPA|l=y}}", "norat'a", "mr")
	def test_norata_yr(self):
		self.run_test("노랗다", "{{ko-IPA|l=y}}", "nōlahta", "yr")
	def test_norata_ipa(self):
		self.run_test("노랗다", "{{ko-IPA|l=y}}", "[ˈno̞(ː)ɾa̠tʰa̠]", "ipa")

	def test_nolda_ph(self):
		self.run_test("놀다", "{{ko-IPA|l=y}}", "놀(ː)다", "ph")
	def test_nolda_rr(self):
		self.run_test("놀다", "{{ko-IPA|l=y}}", "nolda", "rr")
	def test_nolda_rrr(self):
		self.run_test("놀다", "{{ko-IPA|l=y}}", "nolda", "rrr")
	def test_nolda_mr(self):
		self.run_test("놀다", "{{ko-IPA|l=y}}", "nolda", "mr")
	def test_nolda_yr(self):
		self.run_test("놀다", "{{ko-IPA|l=y}}", "nōlta", "yr")
	def test_nolda_ipa(self):
		self.run_test("놀다", "{{ko-IPA|l=y}}", "[ˈno̞(ː)ɭda̠]", "ipa")

	def test_naeda_ph(self):
		self.run_test("내다", "{{ko-IPA|l=y|a=y}}", "내(ː)다/네(ː)다", "ph")
	def test_naeda_rr(self):
		self.run_test("내다", "{{ko-IPA|l=y|a=y}}", "naeda", "rr")
	def test_naeda_rrr(self):
		self.run_test("내다", "{{ko-IPA|l=y|a=y}}", "naeda", "rrr")
	def test_naeda_mr(self):
		self.run_test("내다", "{{ko-IPA|l=y|a=y}}", "naeda", "mr")
	def test_naeda_yr(self):
		self.run_test("내다", "{{ko-IPA|l=y|a=y}}", "nāyta", "yr")
	def test_naeda_ipa(self):
		self.run_test("내다", "{{ko-IPA|l=y|a=y}}", "[ˈnɛ(ː)da̠] ~ [ˈne̞(ː)da̠]", "ipa")

	def test_naerida_ph(self):
		self.run_test("내리다", "{{ko-IPA|a=y}}", "내리다/네리다", "ph")
	def test_naerida_rr(self):
		self.run_test("내리다", "{{ko-IPA|a=y}}", "naerida", "rr")
	def test_naerida_rrr(self):
		self.run_test("내리다", "{{ko-IPA|a=y}}", "naelida", "rrr")
	def test_naerida_mr(self):
		self.run_test("내리다", "{{ko-IPA|a=y}}", "naerida", "mr")
	def test_naerida_yr(self):
		self.run_test("내리다", "{{ko-IPA|a=y}}", "naylita", "yr")
	def test_naerida_ipa(self):
		self.run_test("내리다", "{{ko-IPA|a=y}}", "[nɛɾida̠] ~ [ne̞ɾida̠]", "ipa")

	def test_natda_ph(self):
		self.run_test("낫다", "{{ko-IPA|l=y}}", "낟(ː)따", "ph")
	def test_natda_rr(self):
		self.run_test("낫다", "{{ko-IPA|l=y}}", "natda", "rr")
	def test_natda_rrr(self):
		self.run_test("낫다", "{{ko-IPA|l=y}}", "nasda", "rrr")
	def test_natda_mr(self):
		self.run_test("낫다", "{{ko-IPA|l=y}}", "natta", "mr")
	def test_natda_yr(self):
		self.run_test("낫다", "{{ko-IPA|l=y}}", "nāsta", "yr")
	def test_natda_ipa(self):
		self.run_test("낫다", "{{ko-IPA|l=y}}", "[ˈna̠(ː)t̚t͈a̠]", "ipa")

	def test_danida_ph(self):
		self.run_test("다니다", "{{ko-IPA|a=y}}", "다니다", "ph")
	def test_danida_rr(self):
		self.run_test("다니다", "{{ko-IPA|a=y}}", "danida", "rr")
	def test_danida_rrr(self):
		self.run_test("다니다", "{{ko-IPA|a=y}}", "danida", "rrr")
	def test_danida_mr(self):
		self.run_test("다니다", "{{ko-IPA|a=y}}", "tanida", "mr")
	def test_danida_yr(self):
		self.run_test("다니다", "{{ko-IPA|a=y}}", "tanita", "yr")
	def test_danida_ipa(self):
		self.run_test("다니다", "{{ko-IPA|a=y}}", "[ta̠nida̠]", "ipa")

	def test_deonjida_ph(self):
		self.run_test("던지다", "{{ko-IPA}}", "던지다", "ph")
	def test_deonjida_rr(self):
		self.run_test("던지다", "{{ko-IPA}}", "deonjida", "rr")
	def test_deonjida_rrr(self):
		self.run_test("던지다", "{{ko-IPA}}", "deonjida", "rrr")
	def test_deonjida_mr(self):
		self.run_test("던지다", "{{ko-IPA}}", "tŏnjida", "mr")
	def test_deonjida_yr(self):
		self.run_test("던지다", "{{ko-IPA}}", "ten.cita", "yr")
	def test_deonjida_ipa(self):
		self.run_test("던지다", "{{ko-IPA}}", "[tʌ̹ɲd͡ʑida̠]", "ipa")

	def test_deoreopda_ph(self):
		self.run_test("더럽다", "{{ko-IPA|l=y}}", "더(ː)럽따", "ph")
	def test_deoreopda_rr(self):
		self.run_test("더럽다", "{{ko-IPA|l=y}}", "deoreopda", "rr")
	def test_deoreopda_rrr(self):
		self.run_test("더럽다", "{{ko-IPA|l=y}}", "deoleobda", "rrr")
	def test_deoreopda_mr(self):
		self.run_test("더럽다", "{{ko-IPA|l=y}}", "tŏrŏpta", "mr")
	def test_deoreopda_yr(self):
		self.run_test("더럽다", "{{ko-IPA|l=y}}", "tēlepta", "yr")
	def test_deoreopda_ipa(self):
		self.run_test("더럽다", "{{ko-IPA|l=y}}", "[ˈtɘ(ː)ɾʌ̹p̚t͈a̠]", "ipa")

	def test_damgeuda_ph(self):
		self.run_test("담그다", "{{ko-IPA}}", "담그다", "ph")
	def test_damgeuda_rr(self):
		self.run_test("담그다", "{{ko-IPA}}", "damgeuda", "rr")
	def test_damgeuda_rrr(self):
		self.run_test("담그다", "{{ko-IPA}}", "damgeuda", "rrr")
	def test_damgeuda_mr(self):
		self.run_test("담그다", "{{ko-IPA}}", "tamgŭda", "mr")
	def test_damgeuda_yr(self):
		self.run_test("담그다", "{{ko-IPA}}", "tamkuta", "yr")
	def test_damgeuda_ipa(self):
		self.run_test("담그다", "{{ko-IPA}}", "[ta̠mɡɯda̠]", "ipa")

	def test_dallida_ph(self):
		self.run_test("달리다", "{{ko-IPA}}", "달리다", "ph")
	def test_dallida_rr(self):
		self.run_test("달리다", "{{ko-IPA}}", "dallida", "rr")
	def test_dallida_rrr(self):
		self.run_test("달리다", "{{ko-IPA}}", "dallida", "rrr")
	def test_dallida_mr(self):
		self.run_test("달리다", "{{ko-IPA}}", "tallida", "mr")
	def test_dallida_yr(self):
		self.run_test("달리다", "{{ko-IPA}}", "tallita", "yr")
	def test_dallida_ipa(self):
		self.run_test("달리다", "{{ko-IPA}}", "[ta̠ʎʎida̠]", "ipa")
	def test_dallida_ph_1(self):
		self.run_test("달리다", "{{ko-IPA}}", "달리다", "ph")
	def test_dallida_rr_1(self):
		self.run_test("달리다", "{{ko-IPA}}", "dallida", "rr")
	def test_dallida_rrr_1(self):
		self.run_test("달리다", "{{ko-IPA}}", "dallida", "rrr")
	def test_dallida_mr_1(self):
		self.run_test("달리다", "{{ko-IPA}}", "tallida", "mr")
	def test_dallida_yr_1(self):
		self.run_test("달리다", "{{ko-IPA}}", "tallita", "yr")
	def test_dallida_ipa_1(self):
		self.run_test("달리다", "{{ko-IPA}}", "[ta̠ʎʎida̠]", "ipa")

	def test_dachida_ph(self):
		self.run_test("다치다", "{{ko-IPA}}", "다치다", "ph")
	def test_dachida_rr(self):
		self.run_test("다치다", "{{ko-IPA}}", "dachida", "rr")
	def test_dachida_rrr(self):
		self.run_test("다치다", "{{ko-IPA}}", "dachida", "rrr")
	def test_dachida_mr(self):
		self.run_test("다치다", "{{ko-IPA}}", "tach'ida", "mr")
	def test_dachida_yr(self):
		self.run_test("다치다", "{{ko-IPA}}", "ta.chita", "yr")
	def test_dachida_ipa(self):
		self.run_test("다치다", "{{ko-IPA}}", "[ta̠t͡ɕʰida̠]", "ipa")

	def test_dareuda_ph(self):
		self.run_test("다르다", "{{ko-IPA|a=y}}", "다르다", "ph")
	def test_dareuda_rr(self):
		self.run_test("다르다", "{{ko-IPA|a=y}}", "dareuda", "rr")
	def test_dareuda_rrr(self):
		self.run_test("다르다", "{{ko-IPA|a=y}}", "daleuda", "rrr")
	def test_dareuda_mr(self):
		self.run_test("다르다", "{{ko-IPA|a=y}}", "tarŭda", "mr")
	def test_dareuda_yr(self):
		self.run_test("다르다", "{{ko-IPA|a=y}}", "taluta", "yr")
	def test_dareuda_ipa(self):
		self.run_test("다르다", "{{ko-IPA|a=y}}", "[ta̠ɾɯda̠]", "ipa")

	def test_deulleuda_ph(self):
		self.run_test("들르다", "{{ko-IPA}}", "들르다", "ph")
	def test_deulleuda_rr(self):
		self.run_test("들르다", "{{ko-IPA}}", "deulleuda", "rr")
	def test_deulleuda_rrr(self):
		self.run_test("들르다", "{{ko-IPA}}", "deulleuda", "rrr")
	def test_deulleuda_mr(self):
		self.run_test("들르다", "{{ko-IPA}}", "tŭllŭda", "mr")
	def test_deulleuda_yr(self):
		self.run_test("들르다", "{{ko-IPA}}", "tulluta", "yr")
	def test_deulleuda_ipa(self):
		self.run_test("들르다", "{{ko-IPA}}", "[tɯɭɭɯda̠]", "ipa")

	def test_deutda_ph(self):
		self.run_test("듣다", "{{ko-IPA|a=y}}", "듣따", "ph")
	def test_deutda_rr(self):
		self.run_test("듣다", "{{ko-IPA|a=y}}", "deutda", "rr")
	def test_deutda_rrr(self):
		self.run_test("듣다", "{{ko-IPA|a=y}}", "deudda", "rrr")
	def test_deutda_mr(self):
		self.run_test("듣다", "{{ko-IPA|a=y}}", "tŭtta", "mr")
	def test_deutda_yr(self):
		self.run_test("듣다", "{{ko-IPA|a=y}}", "tut.ta", "yr")
	def test_deutda_ipa(self):
		self.run_test("듣다", "{{ko-IPA|a=y}}", "[tɯt̚t͈a̠]", "ipa")

	def test_deumulda_ph(self):
		self.run_test("드물다", "{{ko-IPA}}", "드물다", "ph")
	def test_deumulda_rr(self):
		self.run_test("드물다", "{{ko-IPA}}", "deumulda", "rr")
	def test_deumulda_rrr(self):
		self.run_test("드물다", "{{ko-IPA}}", "deumulda", "rrr")
	def test_deumulda_mr(self):
		self.run_test("드물다", "{{ko-IPA}}", "tŭmulda", "mr")
	def test_deumulda_yr(self):
		self.run_test("드물다", "{{ko-IPA}}", "tumulta", "yr")
	def test_deumulda_ipa(self):
		self.run_test("드물다", "{{ko-IPA}}", "[tɯmuɭda̠]", "ipa")

	def test_dwijida_ph(self):
		self.run_test("뒤지다", "{{ko-IPA}}", "뒤지다", "ph")
	def test_dwijida_rr(self):
		self.run_test("뒤지다", "{{ko-IPA}}", "dwijida", "rr")
	def test_dwijida_rrr(self):
		self.run_test("뒤지다", "{{ko-IPA}}", "dwijida", "rrr")
	def test_dwijida_mr(self):
		self.run_test("뒤지다", "{{ko-IPA}}", "twijida", "mr")
	def test_dwijida_yr(self):
		self.run_test("뒤지다", "{{ko-IPA}}", "twicita", "yr")
	def test_dwijida_ipa(self):
		self.run_test("뒤지다", "{{ko-IPA}}", "[tɥid͡ʑida̠] ~ [tyd͡ʑida̠]", "ipa")

	def test_dunggeulda_ph(self):
		self.run_test("둥글다", "{{ko-IPA}}", "둥글다", "ph")
	def test_dunggeulda_rr(self):
		self.run_test("둥글다", "{{ko-IPA}}", "dunggeulda", "rr")
	def test_dunggeulda_rrr(self):
		self.run_test("둥글다", "{{ko-IPA}}", "dunggeulda", "rrr")
	def test_dunggeulda_mr(self):
		self.run_test("둥글다", "{{ko-IPA}}", "tunggŭlda", "mr")
	def test_dunggeulda_yr(self):
		self.run_test("둥글다", "{{ko-IPA}}", "twungkulta", "yr")
	def test_dunggeulda_ipa(self):
		self.run_test("둥글다", "{{ko-IPA}}", "[tuŋɡɯɭda̠]", "ipa")

	def test_duryeopda_ph(self):
		self.run_test("두렵다", "{{ko-IPA}}", "두렵따", "ph")
	def test_duryeopda_rr(self):
		self.run_test("두렵다", "{{ko-IPA}}", "duryeopda", "rr")
	def test_duryeopda_rrr(self):
		self.run_test("두렵다", "{{ko-IPA}}", "dulyeobda", "rrr")
	def test_duryeopda_mr(self):
		self.run_test("두렵다", "{{ko-IPA}}", "turyŏpta", "mr")
	def test_duryeopda_yr(self):
		self.run_test("두렵다", "{{ko-IPA}}", "twulyepta", "yr")
	def test_duryeopda_ipa(self):
		self.run_test("두렵다", "{{ko-IPA}}", "[tuɾjʌ̹p̚t͈a̠]", "ipa")

	def test_deolda_ph(self):
		self.run_test("덜다", "{{ko-IPA|l=y}}", "덜(ː)다", "ph")
	def test_deolda_rr(self):
		self.run_test("덜다", "{{ko-IPA|l=y}}", "deolda", "rr")
	def test_deolda_rrr(self):
		self.run_test("덜다", "{{ko-IPA|l=y}}", "deolda", "rrr")
	def test_deolda_mr(self):
		self.run_test("덜다", "{{ko-IPA|l=y}}", "tŏlda", "mr")
	def test_deolda_yr(self):
		self.run_test("덜다", "{{ko-IPA|l=y}}", "tēlta", "yr")
	def test_deolda_ipa(self):
		self.run_test("덜다", "{{ko-IPA|l=y}}", "[ˈtɘ(ː)ɭda̠]", "ipa")

	def test_dopda_ph(self):
		self.run_test("돕다", "{{ko-IPA|l=y}}", "돕(ː)따", "ph")
	def test_dopda_rr(self):
		self.run_test("돕다", "{{ko-IPA|l=y}}", "dopda", "rr")
	def test_dopda_rrr(self):
		self.run_test("돕다", "{{ko-IPA|l=y}}", "dobda", "rrr")
	def test_dopda_mr(self):
		self.run_test("돕다", "{{ko-IPA|l=y}}", "topta", "mr")
	def test_dopda_yr(self):
		self.run_test("돕다", "{{ko-IPA|l=y}}", "tōpta", "yr")
	def test_dopda_ipa(self):
		self.run_test("돕다", "{{ko-IPA|l=y}}", "[ˈto̞(ː)p̚t͈a̠]", "ipa")

	def test_tteuda_ph(self):
		self.run_test("뜨다", "{{ko-IPA}}", "뜨다", "ph")
	def test_tteuda_rr(self):
		self.run_test("뜨다", "{{ko-IPA}}", "tteuda", "rr")
	def test_tteuda_rrr(self):
		self.run_test("뜨다", "{{ko-IPA}}", "tteuda", "rrr")
	def test_tteuda_mr(self):
		self.run_test("뜨다", "{{ko-IPA}}", "ttŭda", "mr")
	def test_tteuda_yr(self):
		self.run_test("뜨다", "{{ko-IPA}}", "ttuta", "yr")
	def test_tteuda_ipa(self):
		self.run_test("뜨다", "{{ko-IPA}}", "[t͈ɯda̠]", "ipa")

	def test_tteugeopda_ph(self):
		self.run_test("뜨겁다", "{{ko-IPA}}", "뜨겁따", "ph")
	def test_tteugeopda_rr(self):
		self.run_test("뜨겁다", "{{ko-IPA}}", "tteugeopda", "rr")
	def test_tteugeopda_rrr(self):
		self.run_test("뜨겁다", "{{ko-IPA}}", "tteugeobda", "rrr")
	def test_tteugeopda_mr(self):
		self.run_test("뜨겁다", "{{ko-IPA}}", "ttŭgŏpta", "mr")
	def test_tteugeopda_yr(self):
		self.run_test("뜨겁다", "{{ko-IPA}}", "ttukepta", "yr")
	def test_tteugeopda_ipa(self):
		self.run_test("뜨겁다", "{{ko-IPA}}", "[t͈ɯɡʌ̹p̚t͈a̠]", "ipa")

	def test_tteolda_ph(self):
		self.run_test("떨다", "{{ko-IPA|l=y}}", "떨(ː)다", "ph")
	def test_tteolda_rr(self):
		self.run_test("떨다", "{{ko-IPA|l=y}}", "tteolda", "rr")
	def test_tteolda_rrr(self):
		self.run_test("떨다", "{{ko-IPA|l=y}}", "tteolda", "rrr")
	def test_tteolda_mr(self):
		self.run_test("떨다", "{{ko-IPA|l=y}}", "ttŏlda", "mr")
	def test_tteolda_yr(self):
		self.run_test("떨다", "{{ko-IPA|l=y}}", "ttēlta", "yr")
	def test_tteolda_ipa(self):
		self.run_test("떨다", "{{ko-IPA|l=y}}", "[ˈt͈ɘ(ː)ɭda̠]", "ipa")

	def test_tteodeulda_ph(self):
		self.run_test("떠들다", "{{ko-IPA|l=y}}", "떠(ː)들다", "ph")
	def test_tteodeulda_rr(self):
		self.run_test("떠들다", "{{ko-IPA|l=y}}", "tteodeulda", "rr")
	def test_tteodeulda_rrr(self):
		self.run_test("떠들다", "{{ko-IPA|l=y}}", "tteodeulda", "rrr")
	def test_tteodeulda_mr(self):
		self.run_test("떠들다", "{{ko-IPA|l=y}}", "ttŏdŭlda", "mr")
	def test_tteodeulda_yr(self):
		self.run_test("떠들다", "{{ko-IPA|l=y}}", "ttētulta", "yr")
	def test_tteodeulda_ipa(self):
		self.run_test("떠들다", "{{ko-IPA|l=y}}", "[ˈt͈ɘ(ː)dɯɭda̠]", "ipa")

	def test_tteonada_ph(self):
		self.run_test("떠나다", "{{ko-IPA|a=y}}", "떠나다", "ph")
	def test_tteonada_rr(self):
		self.run_test("떠나다", "{{ko-IPA|a=y}}", "tteonada", "rr")
	def test_tteonada_rrr(self):
		self.run_test("떠나다", "{{ko-IPA|a=y}}", "tteonada", "rrr")
	def test_tteonada_mr(self):
		self.run_test("떠나다", "{{ko-IPA|a=y}}", "ttŏnada", "mr")
	def test_tteonada_yr(self):
		self.run_test("떠나다", "{{ko-IPA|a=y}}", "ttenata", "yr")
	def test_tteonada_ipa(self):
		self.run_test("떠나다", "{{ko-IPA|a=y}}", "[t͈ʌ̹na̠da̠]", "ipa")

	def test_ttareuda_ph(self):
		self.run_test("따르다", "{{ko-IPA}}", "따르다", "ph")
	def test_ttareuda_rr(self):
		self.run_test("따르다", "{{ko-IPA}}", "ttareuda", "rr")
	def test_ttareuda_rrr(self):
		self.run_test("따르다", "{{ko-IPA}}", "ttaleuda", "rrr")
	def test_ttareuda_mr(self):
		self.run_test("따르다", "{{ko-IPA}}", "ttarŭda", "mr")
	def test_ttareuda_yr(self):
		self.run_test("따르다", "{{ko-IPA}}", "ttaluta", "yr")
	def test_ttareuda_ipa(self):
		self.run_test("따르다", "{{ko-IPA}}", "[t͈a̠ɾɯda̠]", "ipa")

	def test_amho_ph(self):
		self.run_test("암호", "{{ko-IPA|l=y}}", "암(ː)호", "ph")
	def test_amho_rr(self):
		self.run_test("암호", "{{ko-IPA|l=y}}", "amho", "rr")
	def test_amho_rrr(self):
		self.run_test("암호", "{{ko-IPA|l=y}}", "amho", "rrr")
	def test_amho_mr(self):
		self.run_test("암호", "{{ko-IPA|l=y}}", "amho", "mr")
	def test_amho_yr(self):
		self.run_test("암호", "{{ko-IPA|l=y}}", "āmho", "yr")
	def test_amho_ipa(self):
		self.run_test("암호", "{{ko-IPA|l=y}}", "[ˈa̠(ː)mβo̞]", "ipa")

	def test_banbok_ph(self):
		self.run_test("반복", "{{ko-IPA|l=y}}", "반(ː)복", "ph")
	def test_banbok_rr(self):
		self.run_test("반복", "{{ko-IPA|l=y}}", "banbok", "rr")
	def test_banbok_rrr(self):
		self.run_test("반복", "{{ko-IPA|l=y}}", "banbog", "rrr")
	def test_banbok_mr(self):
		self.run_test("반복", "{{ko-IPA|l=y}}", "panbok", "mr")
	def test_banbok_yr(self):
		self.run_test("반복", "{{ko-IPA|l=y}}", "pānpok", "yr")
	def test_banbok_ipa(self):
		self.run_test("반복", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)nbo̞k̚]", "ipa")

	def test_sayongja_ph(self):
		self.run_test("사용자", "{{ko-ipa|l=y}}", "사(ː)용자", "ph")
	def test_sayongja_rr(self):
		self.run_test("사용자", "{{ko-ipa|l=y}}", "sayongja", "rr")
	def test_sayongja_rrr(self):
		self.run_test("사용자", "{{ko-ipa|l=y}}", "sayongja", "rrr")
	def test_sayongja_mr(self):
		self.run_test("사용자", "{{ko-ipa|l=y}}", "sayongja", "mr")
	def test_sayongja_yr(self):
		self.run_test("사용자", "{{ko-ipa|l=y}}", "sā.yongca", "yr")
	def test_sayongja_ipa(self):
		self.run_test("사용자", "{{ko-ipa|l=y}}", "[ˈsʰa̠(ː)joŋd͡ʑa̠]", "ipa")

	def test_molda_ph(self):
		self.run_test("몰다", "{{ko-IPA|l=y}}", "몰(ː)다", "ph")
	def test_molda_rr(self):
		self.run_test("몰다", "{{ko-IPA|l=y}}", "molda", "rr")
	def test_molda_rrr(self):
		self.run_test("몰다", "{{ko-IPA|l=y}}", "molda", "rrr")
	def test_molda_mr(self):
		self.run_test("몰다", "{{ko-IPA|l=y}}", "molda", "mr")
	def test_molda_yr(self):
		self.run_test("몰다", "{{ko-IPA|l=y}}", "mōlta", "yr")
	def test_molda_ipa(self):
		self.run_test("몰다", "{{ko-IPA|l=y}}", "[ˈmo̞(ː)ɭda̠]", "ipa")

	def test_mojarada_ph(self):
		self.run_test("모자라다", "{{ko-IPA|l=y}}", "모(ː)자라다", "ph")
	def test_mojarada_rr(self):
		self.run_test("모자라다", "{{ko-IPA|l=y}}", "mojarada", "rr")
	def test_mojarada_rrr(self):
		self.run_test("모자라다", "{{ko-IPA|l=y}}", "mojalada", "rrr")
	def test_mojarada_mr(self):
		self.run_test("모자라다", "{{ko-IPA|l=y}}", "mojarada", "mr")
	def test_mojarada_yr(self):
		self.run_test("모자라다", "{{ko-IPA|l=y}}", "mōcalata", "yr")
	def test_mojarada_ipa(self):
		self.run_test("모자라다", "{{ko-IPA|l=y}}", "[ˈmo̞(ː)d͡ʑa̠ɾa̠da̠]", "ipa")

	def test_moeuda_ph(self):
		self.run_test("모으다", "{{ko-IPA|a=y}}", "모으다", "ph")
	def test_moeuda_rr(self):
		self.run_test("모으다", "{{ko-IPA|a=y}}", "mo'euda", "rr")
	def test_moeuda_rrr(self):
		self.run_test("모으다", "{{ko-IPA|a=y}}", "mo'euda", "rrr")
	def test_moeuda_mr(self):
		self.run_test("모으다", "{{ko-IPA|a=y}}", "moŭda", "mr")
	def test_moeuda_yr(self):
		self.run_test("모으다", "{{ko-IPA|a=y}}", "mouta", "yr")
	def test_moeuda_ipa(self):
		self.run_test("모으다", "{{ko-IPA|a=y}}", "[mo̞ɯda̠]", "ipa")

	def test_meotjida_ph(self):
		self.run_test("멋지다", "{{ko-IPA}}", "먿찌다", "ph")
	def test_meotjida_rr(self):
		self.run_test("멋지다", "{{ko-IPA}}", "meotjida", "rr")
	def test_meotjida_rrr(self):
		self.run_test("멋지다", "{{ko-IPA}}", "meosjida", "rrr")
	def test_meotjida_mr(self):
		self.run_test("멋지다", "{{ko-IPA}}", "mŏtchida", "mr")
	def test_meotjida_yr(self):
		self.run_test("멋지다", "{{ko-IPA}}", "mescita", "yr")
	def test_meotjida_ipa(self):
		self.run_test("멋지다", "{{ko-IPA}}", "[mʌ̹t̚t͡ɕ͈ida̠]", "ipa")

	def test_meomureuda_ph(self):
		self.run_test("머무르다", "{{ko-IPA}}", "머무르다", "ph")
	def test_meomureuda_rr(self):
		self.run_test("머무르다", "{{ko-IPA}}", "meomureuda", "rr")
	def test_meomureuda_rrr(self):
		self.run_test("머무르다", "{{ko-IPA}}", "meomuleuda", "rrr")
	def test_meomureuda_mr(self):
		self.run_test("머무르다", "{{ko-IPA}}", "mŏmurŭda", "mr")
	def test_meomureuda_yr(self):
		self.run_test("머무르다", "{{ko-IPA}}", "memuluta", "yr")
	def test_meomureuda_ipa(self):
		self.run_test("머무르다", "{{ko-IPA}}", "[mʌ̹muɾɯda̠]", "ipa")

	def test_maepda_ph(self):
		self.run_test("맵다", "{{ko-IPA}}", "맵따/멥따", "ph")
	def test_maepda_rr(self):
		self.run_test("맵다", "{{ko-IPA}}", "maepda", "rr")
	def test_maepda_rrr(self):
		self.run_test("맵다", "{{ko-IPA}}", "maebda", "rrr")
	def test_maepda_mr(self):
		self.run_test("맵다", "{{ko-IPA}}", "maepta", "mr")
	def test_maepda_yr(self):
		self.run_test("맵다", "{{ko-IPA}}", "maypta", "yr")
	def test_maepda_ipa(self):
		self.run_test("맵다", "{{ko-IPA}}", "[mɛp̚t͈a̠] ~ [me̞p̚t͈a̠]", "ipa")

	def test_matda_ph(self):
		self.run_test("맡다", "{{ko-IPA}}", "맏따", "ph")
	def test_matda_rr(self):
		self.run_test("맡다", "{{ko-IPA}}", "matda", "rr")
	def test_matda_rrr(self):
		self.run_test("맡다", "{{ko-IPA}}", "matda", "rrr")
	def test_matda_mr(self):
		self.run_test("맡다", "{{ko-IPA}}", "matta", "mr")
	def test_matda_yr(self):
		self.run_test("맡다", "{{ko-IPA}}", "mathta", "yr")
	def test_matda_ipa(self):
		self.run_test("맡다", "{{ko-IPA}}", "[ma̠t̚t͈a̠]", "ipa")

	def test_malda_ph(self):
		self.run_test("말다", "{{ko-IPA|l=y}}", "말(ː)다", "ph")
	def test_malda_rr(self):
		self.run_test("말다", "{{ko-IPA|l=y}}", "malda", "rr")
	def test_malda_rrr(self):
		self.run_test("말다", "{{ko-IPA|l=y}}", "malda", "rrr")
	def test_malda_mr(self):
		self.run_test("말다", "{{ko-IPA|l=y}}", "malda", "mr")
	def test_malda_yr(self):
		self.run_test("말다", "{{ko-IPA|l=y}}", "mālta", "yr")
	def test_malda_ipa(self):
		self.run_test("말다", "{{ko-IPA|l=y}}", "[ˈma̠(ː)ɭda̠]", "ipa")
	def test_malda_ph_1(self):
		self.run_test("말다", "{{ko-IPA}}", "말다", "ph")
	def test_malda_rr_1(self):
		self.run_test("말다", "{{ko-IPA}}", "malda", "rr")
	def test_malda_rrr_1(self):
		self.run_test("말다", "{{ko-IPA}}", "malda", "rrr")
	def test_malda_mr_1(self):
		self.run_test("말다", "{{ko-IPA}}", "malda", "mr")
	def test_malda_yr_1(self):
		self.run_test("말다", "{{ko-IPA}}", "malta", "yr")
	def test_malda_ipa_1(self):
		self.run_test("말다", "{{ko-IPA}}", "[ma̠ɭda̠]", "ipa")

	def test_mareuda_ph(self):
		self.run_test("마르다", "{{ko-IPA}}", "마르다", "ph")
	def test_mareuda_rr(self):
		self.run_test("마르다", "{{ko-IPA}}", "mareuda", "rr")
	def test_mareuda_rrr(self):
		self.run_test("마르다", "{{ko-IPA}}", "maleuda", "rrr")
	def test_mareuda_mr(self):
		self.run_test("마르다", "{{ko-IPA}}", "marŭda", "mr")
	def test_mareuda_yr(self):
		self.run_test("마르다", "{{ko-IPA}}", "maluta", "yr")
	def test_mareuda_ipa(self):
		self.run_test("마르다", "{{ko-IPA}}", "[ma̠ɾɯda̠]", "ipa")

	def test_mipda_ph(self):
		self.run_test("밉다", "{{ko-IPA}}", "밉따", "ph")
	def test_mipda_rr(self):
		self.run_test("밉다", "{{ko-IPA}}", "mipda", "rr")
	def test_mipda_rrr(self):
		self.run_test("밉다", "{{ko-IPA}}", "mibda", "rrr")
	def test_mipda_mr(self):
		self.run_test("밉다", "{{ko-IPA}}", "mipta", "mr")
	def test_mipda_yr(self):
		self.run_test("밉다", "{{ko-IPA}}", "mipta", "yr")
	def test_mipda_ipa(self):
		self.run_test("밉다", "{{ko-IPA}}", "[mip̚t͈a̠]", "ipa")

	def test_milda_ph(self):
		self.run_test("밀다", "{{ko-IPA|l=y}}", "밀(ː)다", "ph")
	def test_milda_rr(self):
		self.run_test("밀다", "{{ko-IPA|l=y}}", "milda", "rr")
	def test_milda_rrr(self):
		self.run_test("밀다", "{{ko-IPA|l=y}}", "milda", "rrr")
	def test_milda_mr(self):
		self.run_test("밀다", "{{ko-IPA|l=y}}", "milda", "mr")
	def test_milda_yr(self):
		self.run_test("밀다", "{{ko-IPA|l=y}}", "mīlta", "yr")
	def test_milda_ipa(self):
		self.run_test("밀다", "{{ko-IPA|l=y}}", "[ˈmi(ː)ɭda̠]", "ipa")

	def test_miruda_ph(self):
		self.run_test("미루다", "{{ko-IPA}}", "미루다", "ph")
	def test_miruda_rr(self):
		self.run_test("미루다", "{{ko-IPA}}", "miruda", "rr")
	def test_miruda_rrr(self):
		self.run_test("미루다", "{{ko-IPA}}", "miluda", "rrr")
	def test_miruda_mr(self):
		self.run_test("미루다", "{{ko-IPA}}", "miruda", "mr")
	def test_miruda_yr(self):
		self.run_test("미루다", "{{ko-IPA}}", "milwuta", "yr")
	def test_miruda_ipa(self):
		self.run_test("미루다", "{{ko-IPA}}", "[miɾuda̠]", "ipa")

	def test_mikkeureopda_ph(self):
		self.run_test("미끄럽다", "{{ko-IPA}}", "미끄럽따", "ph")
	def test_mikkeureopda_rr(self):
		self.run_test("미끄럽다", "{{ko-IPA}}", "mikkeureopda", "rr")
	def test_mikkeureopda_rrr(self):
		self.run_test("미끄럽다", "{{ko-IPA}}", "mi'kkeuleobda", "rrr")
	def test_mikkeureopda_mr(self):
		self.run_test("미끄럽다", "{{ko-IPA}}", "mikkŭrŏpta", "mr")
	def test_mikkeureopda_yr(self):
		self.run_test("미끄럽다", "{{ko-IPA}}", "mi.kkulepta", "yr")
	def test_mikkeureopda_ipa(self):
		self.run_test("미끄럽다", "{{ko-IPA}}", "[mik͈ɯɾʌ̹p̚t͈a̠]", "ipa")

	def test_mutda_ph(self):
		self.run_test("묻다", "{{ko-IPA|l=y}}", "묻(ː)따", "ph")
	def test_mutda_rr(self):
		self.run_test("묻다", "{{ko-IPA|l=y}}", "mutda", "rr")
	def test_mutda_rrr(self):
		self.run_test("묻다", "{{ko-IPA|l=y}}", "mudda", "rrr")
	def test_mutda_mr(self):
		self.run_test("묻다", "{{ko-IPA|l=y}}", "mutta", "mr")
	def test_mutda_yr(self):
		self.run_test("묻다", "{{ko-IPA|l=y}}", "mūt.ta", "yr")
	def test_mutda_ipa(self):
		self.run_test("묻다", "{{ko-IPA|l=y}}", "[ˈmu(ː)t̚t͈a̠]", "ipa")
	def test_mutda_ph_1(self):
		self.run_test("묻다", "{{ko-IPA}}", "묻따", "ph")
	def test_mutda_rr_1(self):
		self.run_test("묻다", "{{ko-IPA}}", "mutda", "rr")
	def test_mutda_rrr_1(self):
		self.run_test("묻다", "{{ko-IPA}}", "mudda", "rrr")
	def test_mutda_mr_1(self):
		self.run_test("묻다", "{{ko-IPA}}", "mutta", "mr")
	def test_mutda_yr_1(self):
		self.run_test("묻다", "{{ko-IPA}}", "mut.ta", "yr")
	def test_mutda_ipa_1(self):
		self.run_test("묻다", "{{ko-IPA}}", "[mut̚t͈a̠]", "ipa")
	def test_mutda_ph_2(self):
		self.run_test("묻다", "{{ko-IPA}}", "묻따", "ph")
	def test_mutda_rr_2(self):
		self.run_test("묻다", "{{ko-IPA}}", "mutda", "rr")
	def test_mutda_rrr_2(self):
		self.run_test("묻다", "{{ko-IPA}}", "mudda", "rrr")
	def test_mutda_mr_2(self):
		self.run_test("묻다", "{{ko-IPA}}", "mutta", "mr")
	def test_mutda_yr_2(self):
		self.run_test("묻다", "{{ko-IPA}}", "mut.ta", "yr")
	def test_mutda_ipa_2(self):
		self.run_test("묻다", "{{ko-IPA}}", "[mut̚t͈a̠]", "ipa")

	def test_munjireuda_ph(self):
		self.run_test("문지르다", "{{ko-IPA}}", "문지르다", "ph")
	def test_munjireuda_rr(self):
		self.run_test("문지르다", "{{ko-IPA}}", "munjireuda", "rr")
	def test_munjireuda_rrr(self):
		self.run_test("문지르다", "{{ko-IPA}}", "munjileuda", "rrr")
	def test_munjireuda_mr(self):
		self.run_test("문지르다", "{{ko-IPA}}", "munjirŭda", "mr")
	def test_munjireuda_yr(self):
		self.run_test("문지르다", "{{ko-IPA}}", "mun.ciluta", "yr")
	def test_munjireuda_ipa(self):
		self.run_test("문지르다", "{{ko-IPA}}", "[muɲd͡ʑiɾɯda̠]", "ipa")

	def test_mujjireuda_ph(self):
		self.run_test("무찌르다", "{{ko-IPA}}", "무찌르다", "ph")
	def test_mujjireuda_rr(self):
		self.run_test("무찌르다", "{{ko-IPA}}", "mujjireuda", "rr")
	def test_mujjireuda_rrr(self):
		self.run_test("무찌르다", "{{ko-IPA}}", "mu'jjileuda", "rrr")
	def test_mujjireuda_mr(self):
		self.run_test("무찌르다", "{{ko-IPA}}", "mutchirŭda", "mr")
	def test_mujjireuda_yr(self):
		self.run_test("무찌르다", "{{ko-IPA}}", "mu.cciluta", "yr")
	def test_mujjireuda_ipa(self):
		self.run_test("무찌르다", "{{ko-IPA}}", "[mut͡ɕ͈iɾɯda̠]", "ipa")

	def test_mugeopda_ph(self):
		self.run_test("무겁다", "{{ko-IPA}}", "무겁따", "ph")
	def test_mugeopda_rr(self):
		self.run_test("무겁다", "{{ko-IPA}}", "mugeopda", "rr")
	def test_mugeopda_rrr(self):
		self.run_test("무겁다", "{{ko-IPA}}", "mugeobda", "rrr")
	def test_mugeopda_mr(self):
		self.run_test("무겁다", "{{ko-IPA}}", "mugŏpta", "mr")
	def test_mugeopda_yr(self):
		self.run_test("무겁다", "{{ko-IPA}}", "mukepta", "yr")
	def test_mugeopda_ipa(self):
		self.run_test("무겁다", "{{ko-IPA}}", "[muɡʌ̹p̚t͈a̠]", "ipa")

	def test_ppuyeota_ph(self):
		self.run_test("뿌옇다", "{{ko-IPA|l=y}}", "뿌(ː)여타", "ph")
	def test_ppuyeota_rr(self):
		self.run_test("뿌옇다", "{{ko-IPA|l=y}}", "ppuyeota", "rr")
	def test_ppuyeota_rrr(self):
		self.run_test("뿌옇다", "{{ko-IPA|l=y}}", "ppuyeohda", "rrr")
	def test_ppuyeota_mr(self):
		self.run_test("뿌옇다", "{{ko-IPA|l=y}}", "ppuyŏt'a", "mr")
	def test_ppuyeota_yr(self):
		self.run_test("뿌옇다", "{{ko-IPA|l=y}}", "ppū.yehta", "yr")
	def test_ppuyeota_ipa(self):
		self.run_test("뿌옇다", "{{ko-IPA|l=y}}", "[ˈp͈u(ː)jʌ̹tʰa̠]", "ipa")

	def test_bilda_ph(self):
		self.run_test("빌다", "{{ko-IPA|l=y}}", "빌(ː)다", "ph")
	def test_bilda_rr(self):
		self.run_test("빌다", "{{ko-IPA|l=y}}", "bilda", "rr")
	def test_bilda_rrr(self):
		self.run_test("빌다", "{{ko-IPA|l=y}}", "bilda", "rrr")
	def test_bilda_mr(self):
		self.run_test("빌다", "{{ko-IPA|l=y}}", "pilda", "mr")
	def test_bilda_yr(self):
		self.run_test("빌다", "{{ko-IPA|l=y}}", "pīlta", "yr")
	def test_bilda_ipa(self):
		self.run_test("빌다", "{{ko-IPA|l=y}}", "[ˈpi(ː)ɭda̠]", "ipa")

	def test_butda_ph(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "붇(ː)따", "ph")
	def test_butda_rr(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "butda", "rr")
	def test_butda_rrr(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "busda", "rrr")
	def test_butda_mr(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "putta", "mr")
	def test_butda_yr(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "pūsta", "yr")
	def test_butda_ipa(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "[ˈpu(ː)t̚t͈a̠]", "ipa")
	def test_butda_ph_1(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "붇(ː)따", "ph")
	def test_butda_rr_1(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "butda", "rr")
	def test_butda_rrr_1(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "busda", "rrr")
	def test_butda_mr_1(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "putta", "mr")
	def test_butda_yr_1(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "pūsta", "yr")
	def test_butda_ipa_1(self):
		self.run_test("붓다", "{{ko-IPA|l=y}}", "[ˈpu(ː)t̚t͈a̠]", "ipa")

	def test_bureopda_ph(self):
		self.run_test("부럽다", "{{ko-IPA}}", "부럽따", "ph")
	def test_bureopda_rr(self):
		self.run_test("부럽다", "{{ko-IPA}}", "bureopda", "rr")
	def test_bureopda_rrr(self):
		self.run_test("부럽다", "{{ko-IPA}}", "buleobda", "rrr")
	def test_bureopda_mr(self):
		self.run_test("부럽다", "{{ko-IPA}}", "purŏpta", "mr")
	def test_bureopda_yr(self):
		self.run_test("부럽다", "{{ko-IPA}}", "pulepta", "yr")
	def test_bureopda_ipa(self):
		self.run_test("부럽다", "{{ko-IPA}}", "[puɾʌ̹p̚t͈a̠]", "ipa")

	def test_bukkeureopda_ph(self):
		self.run_test("부끄럽다", "{{ko-IPA}}", "부끄럽따", "ph")
	def test_bukkeureopda_rr(self):
		self.run_test("부끄럽다", "{{ko-IPA}}", "bukkeureopda", "rr")
	def test_bukkeureopda_rrr(self):
		self.run_test("부끄럽다", "{{ko-IPA}}", "bu'kkeuleobda", "rrr")
	def test_bukkeureopda_mr(self):
		self.run_test("부끄럽다", "{{ko-IPA}}", "pukkŭrŏpta", "mr")
	def test_bukkeureopda_yr(self):
		self.run_test("부끄럽다", "{{ko-IPA}}", "pu.kkulepta", "yr")
	def test_bukkeureopda_ipa(self):
		self.run_test("부끄럽다", "{{ko-IPA}}", "[puk͈ɯɾʌ̹p̚t͈a̠]", "ipa")

	def test_boepda_ph(self):
		self.run_test("뵙다", "{{ko-IPA|l=y}}", "뷉(ː)따/뵙(ː)따", "ph")
	def test_boepda_rr(self):
		self.run_test("뵙다", "{{ko-IPA|l=y}}", "boepda", "rr")
	def test_boepda_rrr(self):
		self.run_test("뵙다", "{{ko-IPA|l=y}}", "boebda", "rrr")
	def test_boepda_mr(self):
		self.run_test("뵙다", "{{ko-IPA|l=y}}", "poepta", "mr")
	def test_boepda_yr(self):
		self.run_test("뵙다", "{{ko-IPA|l=y}}", "pōypta", "yr")
	def test_boepda_ipa(self):
		self.run_test("뵙다", "{{ko-IPA|l=y}}", "[ˈpwe̞(ː)p̚t͈a̠] ~ [ˈpø̞(ː)p̚t͈a̠]", "ipa")

	def test_boeda_ph(self):
		self.run_test("뵈다", "{{ko-IPA|l=y}}", "붸(ː)다/뵈(ː)다", "ph")
	def test_boeda_rr(self):
		self.run_test("뵈다", "{{ko-IPA|l=y}}", "boeda", "rr")
	def test_boeda_rrr(self):
		self.run_test("뵈다", "{{ko-IPA|l=y}}", "boeda", "rrr")
	def test_boeda_mr(self):
		self.run_test("뵈다", "{{ko-IPA|l=y}}", "poeda", "mr")
	def test_boeda_yr(self):
		self.run_test("뵈다", "{{ko-IPA|l=y}}", "pōyta", "yr")
	def test_boeda_ipa(self):
		self.run_test("뵈다", "{{ko-IPA|l=y}}", "[ˈpwe̞(ː)da̠] ~ [ˈpø̞(ː)da̠]", "ipa")

	def test_beorida_ph(self):
		self.run_test("버리다", "{{ko-IPA|a=y}}", "버리다", "ph")
	def test_beorida_rr(self):
		self.run_test("버리다", "{{ko-IPA|a=y}}", "beorida", "rr")
	def test_beorida_rrr(self):
		self.run_test("버리다", "{{ko-IPA|a=y}}", "beolida", "rrr")
	def test_beorida_mr(self):
		self.run_test("버리다", "{{ko-IPA|a=y}}", "pŏrida", "mr")
	def test_beorida_yr(self):
		self.run_test("버리다", "{{ko-IPA|a=y}}", "pelita", "yr")
	def test_beorida_ipa(self):
		self.run_test("버리다", "{{ko-IPA|a=y}}", "[pʌ̹ɾida̠]", "ipa")

	def test_baeuda_ph(self):
		self.run_test("배우다", "{{ko-IPA}}", "배우다/베우다", "ph")
	def test_baeuda_rr(self):
		self.run_test("배우다", "{{ko-IPA}}", "bae'uda", "rr")
	def test_baeuda_rrr(self):
		self.run_test("배우다", "{{ko-IPA}}", "bae'uda", "rrr")
	def test_baeuda_mr(self):
		self.run_test("배우다", "{{ko-IPA}}", "paeuda", "mr")
	def test_baeuda_yr(self):
		self.run_test("배우다", "{{ko-IPA}}", "paywuta", "yr")
	def test_baeuda_ipa(self):
		self.run_test("배우다", "{{ko-IPA}}", "[pɛuda̠] ~ [pe̞uda̠]", "ipa")

	def test_bappeuda_ph(self):
		self.run_test("바쁘다", "{{ko-IPA}}", "바쁘다", "ph")
	def test_bappeuda_rr(self):
		self.run_test("바쁘다", "{{ko-IPA}}", "bappeuda", "rr")
	def test_bappeuda_rrr(self):
		self.run_test("바쁘다", "{{ko-IPA}}", "ba'ppeuda", "rrr")
	def test_bappeuda_mr(self):
		self.run_test("바쁘다", "{{ko-IPA}}", "pappŭda", "mr")
	def test_bappeuda_yr(self):
		self.run_test("바쁘다", "{{ko-IPA}}", "pa.pputa", "yr")
	def test_bappeuda_ipa(self):
		self.run_test("바쁘다", "{{ko-IPA}}", "[pa̠p͈ɯda̠]", "ipa")

	def test_barada_ph(self):
		self.run_test("바라다", "{{ko-IPA}}", "바라다", "ph")
	def test_barada_rr(self):
		self.run_test("바라다", "{{ko-IPA}}", "barada", "rr")
	def test_barada_rrr(self):
		self.run_test("바라다", "{{ko-IPA}}", "balada", "rrr")
	def test_barada_mr(self):
		self.run_test("바라다", "{{ko-IPA}}", "parada", "mr")
	def test_barada_yr(self):
		self.run_test("바라다", "{{ko-IPA}}", "palata", "yr")
	def test_barada_ipa(self):
		self.run_test("바라다", "{{ko-IPA}}", "[pa̠ɾa̠da̠]", "ipa")

	def test_u_ph(self):
		self.run_test("우", "{{ko-IPA}}", "우", "ph")
	def test_u_rr(self):
		self.run_test("우", "{{ko-IPA}}", "u", "rr")
	def test_u_rrr(self):
		self.run_test("우", "{{ko-IPA}}", "u", "rrr")
	def test_u_mr(self):
		self.run_test("우", "{{ko-IPA}}", "u", "mr")
	def test_u_yr(self):
		self.run_test("우", "{{ko-IPA}}", "wu", "yr")
	def test_u_ipa(self):
		self.run_test("우", "{{ko-IPA}}", "[u]", "ipa")
	def test_u_ph_1(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "우(ː)", "ph")
	def test_u_rr_1(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "u", "rr")
	def test_u_rrr_1(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "u", "rrr")
	def test_u_mr_1(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "u", "mr")
	def test_u_yr_1(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "wū", "yr")
	def test_u_ipa_1(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "[u(ː)]", "ipa")
	def test_u_ph_2(self):
		self.run_test("우", "{{ko-IPA}}", "우", "ph")
	def test_u_rr_2(self):
		self.run_test("우", "{{ko-IPA}}", "u", "rr")
	def test_u_rrr_2(self):
		self.run_test("우", "{{ko-IPA}}", "u", "rrr")
	def test_u_mr_2(self):
		self.run_test("우", "{{ko-IPA}}", "u", "mr")
	def test_u_yr_2(self):
		self.run_test("우", "{{ko-IPA}}", "wu", "yr")
	def test_u_ipa_2(self):
		self.run_test("우", "{{ko-IPA}}", "[u]", "ipa")
	def test_u_ph_3(self):
		self.run_test("우", "{{ko-IPA}}", "우", "ph")
	def test_u_rr_3(self):
		self.run_test("우", "{{ko-IPA}}", "u", "rr")
	def test_u_rrr_3(self):
		self.run_test("우", "{{ko-IPA}}", "u", "rrr")
	def test_u_mr_3(self):
		self.run_test("우", "{{ko-IPA}}", "u", "mr")
	def test_u_yr_3(self):
		self.run_test("우", "{{ko-IPA}}", "wu", "yr")
	def test_u_ipa_3(self):
		self.run_test("우", "{{ko-IPA}}", "[u]", "ipa")
	def test_u_ph_4(self):
		self.run_test("우", "{{ko-IPA}}", "우", "ph")
	def test_u_rr_4(self):
		self.run_test("우", "{{ko-IPA}}", "u", "rr")
	def test_u_rrr_4(self):
		self.run_test("우", "{{ko-IPA}}", "u", "rrr")
	def test_u_mr_4(self):
		self.run_test("우", "{{ko-IPA}}", "u", "mr")
	def test_u_yr_4(self):
		self.run_test("우", "{{ko-IPA}}", "wu", "yr")
	def test_u_ipa_4(self):
		self.run_test("우", "{{ko-IPA}}", "[u]", "ipa")
	def test_u_ph_5(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "우(ː)", "ph")
	def test_u_rr_5(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "u", "rr")
	def test_u_rrr_5(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "u", "rrr")
	def test_u_mr_5(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "u", "mr")
	def test_u_yr_5(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "wū", "yr")
	def test_u_ipa_5(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "[u(ː)]", "ipa")
	def test_u_ph_6(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "우(ː)", "ph")
	def test_u_rr_6(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "u", "rr")
	def test_u_rrr_6(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "u", "rrr")
	def test_u_mr_6(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "u", "mr")
	def test_u_yr_6(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "wū", "yr")
	def test_u_ipa_6(self):
		self.run_test("우", "{{ko-IPA|l=y}}", "[u(ː)]", "ipa")

	def test_hanguksangaeguri_ph(self):
		self.run_test("한국산개구리", "{{ko-IPA}}", "한국싼개구리/한국싼게구리", "ph")
	def test_hanguksangaeguri_rr(self):
		self.run_test("한국산개구리", "{{ko-IPA}}", "han'guksan'gaeguri", "rr")
	def test_hanguksangaeguri_rrr(self):
		self.run_test("한국산개구리", "{{ko-IPA}}", "hangugsangaeguli", "rrr")
	def test_hanguksangaeguri_mr(self):
		self.run_test("한국산개구리", "{{ko-IPA}}", "han'guksan'gaeguri", "mr")
	def test_hanguksangaeguri_yr(self):
		self.run_test("한국산개구리", "{{ko-IPA}}", "hankwuk.sankaykwuli", "yr")
	def test_hanguksangaeguri_ipa(self):
		self.run_test("한국산개구리", "{{ko-IPA}}", "[ha̠nɡuks͈a̠nɡɛɡuɾi] ~ [ha̠nɡuks͈a̠nɡe̞ɡuɾi]", "ipa")

	def test_ige_ph(self):
		self.run_test("이게", "{{ko-IPA}}", "이게", "ph")
	def test_ige_rr(self):
		self.run_test("이게", "{{ko-IPA}}", "ige", "rr")
	def test_ige_rrr(self):
		self.run_test("이게", "{{ko-IPA}}", "ige", "rrr")
	def test_ige_mr(self):
		self.run_test("이게", "{{ko-IPA}}", "ige", "mr")
	def test_ige_yr(self):
		self.run_test("이게", "{{ko-IPA}}", "ikey", "yr")
	def test_ige_ipa(self):
		self.run_test("이게", "{{ko-IPA}}", "[iɡe̞]", "ipa")

	def test_geuge_ph(self):
		self.run_test("그게", "{{ko-IPA}}", "그게", "ph")
	def test_geuge_rr(self):
		self.run_test("그게", "{{ko-IPA}}", "geuge", "rr")
	def test_geuge_rrr(self):
		self.run_test("그게", "{{ko-IPA}}", "geuge", "rrr")
	def test_geuge_mr(self):
		self.run_test("그게", "{{ko-IPA}}", "kŭge", "mr")
	def test_geuge_yr(self):
		self.run_test("그게", "{{ko-IPA}}", "kukey", "yr")
	def test_geuge_ipa(self):
		self.run_test("그게", "{{ko-IPA}}", "[kɯɡe̞]", "ipa")


	def test_ppopda_ph(self):
		self.run_test("뽑다", "{{ko-IPA}}", "뽑따", "ph")
	def test_ppopda_rr(self):
		self.run_test("뽑다", "{{ko-IPA}}", "ppopda", "rr")
	def test_ppopda_rrr(self):
		self.run_test("뽑다", "{{ko-IPA}}", "ppobda", "rrr")
	def test_ppopda_mr(self):
		self.run_test("뽑다", "{{ko-IPA}}", "ppopta", "mr")
	def test_ppopda_yr(self):
		self.run_test("뽑다", "{{ko-IPA}}", "ppopta", "yr")
	def test_ppopda_ipa(self):
		self.run_test("뽑다", "{{ko-IPA}}", "[p͈o̞p̚t͈a̠]", "ipa")

	def test_jipda_ph(self):
		self.run_test("집다", "{{ko-IPA}}", "집따", "ph")
	def test_jipda_rr(self):
		self.run_test("집다", "{{ko-IPA}}", "jipda", "rr")
	def test_jipda_rrr(self):
		self.run_test("집다", "{{ko-IPA}}", "jibda", "rrr")
	def test_jipda_mr(self):
		self.run_test("집다", "{{ko-IPA}}", "chipta", "mr")
	def test_jipda_yr(self):
		self.run_test("집다", "{{ko-IPA}}", "cipta", "yr")
	def test_jipda_ipa(self):
		self.run_test("집다", "{{ko-IPA}}", "[t͡ɕip̚t͈a̠]", "ipa")

	def test_jeonyeok_ph(self):
		self.run_test("저녁", "{{ko-IPA}}", "저녁", "ph")
	def test_jeonyeok_rr(self):
		self.run_test("저녁", "{{ko-IPA}}", "jeonyeok", "rr")
	def test_jeonyeok_rrr(self):
		self.run_test("저녁", "{{ko-IPA}}", "jeonyeog", "rrr")
	def test_jeonyeok_mr(self):
		self.run_test("저녁", "{{ko-IPA}}", "chŏnyŏk", "mr")
	def test_jeonyeok_yr(self):
		self.run_test("저녁", "{{ko-IPA}}", "cenyek", "yr")
	def test_jeonyeok_ipa(self):
		self.run_test("저녁", "{{ko-IPA}}", "[t͡ɕʌ̹ɲʌ̹k̚]", "ipa")

	def test_sang_ph(self):
		self.run_test("상", "{{ko-IPA|l=y}}", "상(ː)", "ph")
	def test_sang_rr(self):
		self.run_test("상", "{{ko-IPA|l=y}}", "sang", "rr")
	def test_sang_rrr(self):
		self.run_test("상", "{{ko-IPA|l=y}}", "sang", "rrr")
	def test_sang_mr(self):
		self.run_test("상", "{{ko-IPA|l=y}}", "sang", "mr")
	def test_sang_yr(self):
		self.run_test("상", "{{ko-IPA|l=y}}", "sāng", "yr")
	def test_sang_ipa(self):
		self.run_test("상", "{{ko-IPA|l=y}}", "[sʰa̠(ː)ŋ]", "ipa")
	def test_sang_ph_1(self):
		self.run_test("상", "{{ko-IPA}}", "상", "ph")
	def test_sang_rr_1(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rr")
	def test_sang_rrr_1(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rrr")
	def test_sang_mr_1(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "mr")
	def test_sang_yr_1(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "yr")
	def test_sang_ipa_1(self):
		self.run_test("상", "{{ko-IPA}}", "[sʰa̠ŋ]", "ipa")
	def test_sang_ph_2(self):
		self.run_test("상", "{{ko-IPA}}", "상", "ph")
	def test_sang_rr_2(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rr")
	def test_sang_rrr_2(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rrr")
	def test_sang_mr_2(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "mr")
	def test_sang_yr_2(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "yr")
	def test_sang_ipa_2(self):
		self.run_test("상", "{{ko-IPA}}", "[sʰa̠ŋ]", "ipa")
	def test_sang_ph_3(self):
		self.run_test("상", "{{ko-IPA}}", "상", "ph")
	def test_sang_rr_3(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rr")
	def test_sang_rrr_3(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rrr")
	def test_sang_mr_3(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "mr")
	def test_sang_yr_3(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "yr")
	def test_sang_ipa_3(self):
		self.run_test("상", "{{ko-IPA}}", "[sʰa̠ŋ]", "ipa")
	def test_sang_ph_4(self):
		self.run_test("상", "{{ko-IPA}}", "상", "ph")
	def test_sang_rr_4(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rr")
	def test_sang_rrr_4(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rrr")
	def test_sang_mr_4(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "mr")
	def test_sang_yr_4(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "yr")
	def test_sang_ipa_4(self):
		self.run_test("상", "{{ko-IPA}}", "[sʰa̠ŋ]", "ipa")
	def test_sang_ph_5(self):
		self.run_test("상", "{{ko-IPA}}", "상", "ph")
	def test_sang_rr_5(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rr")
	def test_sang_rrr_5(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "rrr")
	def test_sang_mr_5(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "mr")
	def test_sang_yr_5(self):
		self.run_test("상", "{{ko-IPA}}", "sang", "yr")
	def test_sang_ipa_5(self):
		self.run_test("상", "{{ko-IPA}}", "[sʰa̠ŋ]", "ipa")

	def test_swida_ph(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "쉬(ː)다", "ph")
	def test_swida_rr(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swida", "rr")
	def test_swida_rrr(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swida", "rrr")
	def test_swida_mr(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "shwida", "mr")
	def test_swida_yr(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swīta", "yr")
	def test_swida_ipa(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "[ˈʃʰɥi(ː)da̠] ~ [ˈʃʰy(ː)da̠]", "ipa")
	def test_swida_ph_1(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "쉬(ː)다", "ph")
	def test_swida_rr_1(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swida", "rr")
	def test_swida_rrr_1(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swida", "rrr")
	def test_swida_mr_1(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "shwida", "mr")
	def test_swida_yr_1(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swīta", "yr")
	def test_swida_ipa_1(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "[ˈʃʰɥi(ː)da̠] ~ [ˈʃʰy(ː)da̠]", "ipa")
	def test_swida_ph_2(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "쉬(ː)다", "ph")
	def test_swida_rr_2(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swida", "rr")
	def test_swida_rrr_2(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swida", "rrr")
	def test_swida_mr_2(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "shwida", "mr")
	def test_swida_yr_2(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swīta", "yr")
	def test_swida_ipa_2(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "[ˈʃʰɥi(ː)da̠] ~ [ˈʃʰy(ː)da̠]", "ipa")
	def test_swida_ph_3(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "쉬(ː)다", "ph")
	def test_swida_rr_3(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swida", "rr")
	def test_swida_rrr_3(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swida", "rrr")
	def test_swida_mr_3(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "shwida", "mr")
	def test_swida_yr_3(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "swīta", "yr")
	def test_swida_ipa_3(self):
		self.run_test("쉬다", "{{ko-IPA|l=y}}", "[ˈʃʰɥi(ː)da̠] ~ [ˈʃʰy(ː)da̠]", "ipa")
	def test_swida_ph_4(self):
		self.run_test("쉬다", "{{ko-IPA}}", "쉬다", "ph")
	def test_swida_rr_4(self):
		self.run_test("쉬다", "{{ko-IPA}}", "swida", "rr")
	def test_swida_rrr_4(self):
		self.run_test("쉬다", "{{ko-IPA}}", "swida", "rrr")
	def test_swida_mr_4(self):
		self.run_test("쉬다", "{{ko-IPA}}", "shwida", "mr")
	def test_swida_yr_4(self):
		self.run_test("쉬다", "{{ko-IPA}}", "swita", "yr")
	def test_swida_ipa_4(self):
		self.run_test("쉬다", "{{ko-IPA}}", "[ʃʰɥida̠] ~ [ʃʰyda̠]", "ipa")

	def test_sanapda_ph(self):
		self.run_test("사납다", "{{ko-IPA|l=y}}", "사(ː)납따", "ph")
	def test_sanapda_rr(self):
		self.run_test("사납다", "{{ko-IPA|l=y}}", "sanapda", "rr")
	def test_sanapda_rrr(self):
		self.run_test("사납다", "{{ko-IPA|l=y}}", "sanabda", "rrr")
	def test_sanapda_mr(self):
		self.run_test("사납다", "{{ko-IPA|l=y}}", "sanapta", "mr")
	def test_sanapda_yr(self):
		self.run_test("사납다", "{{ko-IPA|l=y}}", "sānapta", "yr")
	def test_sanapda_ipa(self):
		self.run_test("사납다", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)na̠p̚t͈a̠]", "ipa")

	def test_salda_ph(self):
		self.run_test("살다", "{{ko-IPA|l=y|a=y}}", "살(ː)다", "ph")
	def test_salda_rr(self):
		self.run_test("살다", "{{ko-IPA|l=y|a=y}}", "salda", "rr")
	def test_salda_rrr(self):
		self.run_test("살다", "{{ko-IPA|l=y|a=y}}", "salda", "rrr")
	def test_salda_mr(self):
		self.run_test("살다", "{{ko-IPA|l=y|a=y}}", "salda", "mr")
	def test_salda_yr(self):
		self.run_test("살다", "{{ko-IPA|l=y|a=y}}", "sālta", "yr")
	def test_salda_ipa(self):
		self.run_test("살다", "{{ko-IPA|l=y|a=y}}", "[ˈsʰa̠(ː)ɭda̠]", "ipa")

	def test_saeropda_ph(self):
		self.run_test("새롭다", "{{ko-IPA}}", "새롭따/세롭따", "ph")
	def test_saeropda_rr(self):
		self.run_test("새롭다", "{{ko-IPA}}", "saeropda", "rr")
	def test_saeropda_rrr(self):
		self.run_test("새롭다", "{{ko-IPA}}", "saelobda", "rrr")
	def test_saeropda_mr(self):
		self.run_test("새롭다", "{{ko-IPA}}", "saeropta", "mr")
	def test_saeropda_yr(self):
		self.run_test("새롭다", "{{ko-IPA}}", "saylopta", "yr")
	def test_saeropda_ipa(self):
		self.run_test("새롭다", "{{ko-IPA}}", "[sʰɛɾo̞p̚t͈a̠] ~ [sʰe̞ɾo̞p̚t͈a̠]", "ipa")

	def test_seoda_ph(self):
		self.run_test("서다", "{{ko-IPA|a=y}}", "서다", "ph")
	def test_seoda_rr(self):
		self.run_test("서다", "{{ko-IPA|a=y}}", "seoda", "rr")
	def test_seoda_rrr(self):
		self.run_test("서다", "{{ko-IPA|a=y}}", "seoda", "rrr")
	def test_seoda_mr(self):
		self.run_test("서다", "{{ko-IPA|a=y}}", "sŏda", "mr")
	def test_seoda_yr(self):
		self.run_test("서다", "{{ko-IPA|a=y}}", "seta", "yr")
	def test_seoda_ipa(self):
		self.run_test("서다", "{{ko-IPA|a=y}}", "[sʰʌ̹da̠]", "ipa")

	def test_seodureuda_ph(self):
		self.run_test("서두르다", "{{ko-IPA}}", "서두르다", "ph")
	def test_seodureuda_rr(self):
		self.run_test("서두르다", "{{ko-IPA}}", "seodureuda", "rr")
	def test_seodureuda_rrr(self):
		self.run_test("서두르다", "{{ko-IPA}}", "seoduleuda", "rrr")
	def test_seodureuda_mr(self):
		self.run_test("서두르다", "{{ko-IPA}}", "sŏdurŭda", "mr")
	def test_seodureuda_yr(self):
		self.run_test("서두르다", "{{ko-IPA}}", "setwuluta", "yr")
	def test_seodureuda_ipa(self):
		self.run_test("서두르다", "{{ko-IPA}}", "[sʰʌ̹duɾɯda̠]", "ipa")

	def test_seoreopda_ph(self):
		self.run_test("서럽다", "{{ko-IPA|l=y}}", "서(ː)럽따", "ph")
	def test_seoreopda_rr(self):
		self.run_test("서럽다", "{{ko-IPA|l=y}}", "seoreopda", "rr")
	def test_seoreopda_rrr(self):
		self.run_test("서럽다", "{{ko-IPA|l=y}}", "seoleobda", "rrr")
	def test_seoreopda_mr(self):
		self.run_test("서럽다", "{{ko-IPA|l=y}}", "sŏrŏpta", "mr")
	def test_seoreopda_yr(self):
		self.run_test("서럽다", "{{ko-IPA|l=y}}", "sēlepta", "yr")
	def test_seoreopda_ipa(self):
		self.run_test("서럽다", "{{ko-IPA|l=y}}", "[ˈsʰɘ(ː)ɾʌ̹p̚t͈a̠]", "ipa")

	def test_sujupda_ph(self):
		self.run_test("수줍다", "{{ko-IPA}}", "수줍따", "ph")
	def test_sujupda_rr(self):
		self.run_test("수줍다", "{{ko-IPA}}", "sujupda", "rr")
	def test_sujupda_rrr(self):
		self.run_test("수줍다", "{{ko-IPA}}", "sujubda", "rrr")
	def test_sujupda_mr(self):
		self.run_test("수줍다", "{{ko-IPA}}", "sujupta", "mr")
	def test_sujupda_yr(self):
		self.run_test("수줍다", "{{ko-IPA}}", "swucwupta", "yr")
	def test_sujupda_ipa(self):
		self.run_test("수줍다", "{{ko-IPA}}", "[sʰud͡ʑup̚t͈a̠]", "ipa")

	def test_swipda_ph(self):
		self.run_test("쉽다", "{{ko-IPA|l=y|a=y}}", "쉽(ː)따", "ph")
	def test_swipda_rr(self):
		self.run_test("쉽다", "{{ko-IPA|l=y|a=y}}", "swipda", "rr")
	def test_swipda_rrr(self):
		self.run_test("쉽다", "{{ko-IPA|l=y|a=y}}", "swibda", "rrr")
	def test_swipda_mr(self):
		self.run_test("쉽다", "{{ko-IPA|l=y|a=y}}", "shwipta", "mr")
	def test_swipda_yr(self):
		self.run_test("쉽다", "{{ko-IPA|l=y|a=y}}", "swīpta", "yr")
	def test_swipda_ipa(self):
		self.run_test("쉽다", "{{ko-IPA|l=y|a=y}}", "[ˈʃʰɥi(ː)p̚t͈a̠] ~ [ˈʃʰy(ː)p̚t͈a̠]", "ipa")

	def test_seulpeuda_ph(self):
		self.run_test("슬프다", "{{ko-IPA}}", "슬프다", "ph")
	def test_seulpeuda_rr(self):
		self.run_test("슬프다", "{{ko-IPA}}", "seulpeuda", "rr")
	def test_seulpeuda_rrr(self):
		self.run_test("슬프다", "{{ko-IPA}}", "seulpeuda", "rrr")
	def test_seulpeuda_mr(self):
		self.run_test("슬프다", "{{ko-IPA}}", "sŭlp'ŭda", "mr")
	def test_seulpeuda_yr(self):
		self.run_test("슬프다", "{{ko-IPA}}", "sul.phuta", "yr")
	def test_seulpeuda_ipa(self):
		self.run_test("슬프다", "{{ko-IPA}}", "[sʰɯɭpʰɯda̠]", "ipa")

	def test_sikkeureopda_ph(self):
		self.run_test("시끄럽다", "{{ko-IPA}}", "시끄럽따", "ph")
	def test_sikkeureopda_rr(self):
		self.run_test("시끄럽다", "{{ko-IPA}}", "sikkeureopda", "rr")
	def test_sikkeureopda_rrr(self):
		self.run_test("시끄럽다", "{{ko-IPA}}", "si'kkeuleobda", "rrr")
	def test_sikkeureopda_mr(self):
		self.run_test("시끄럽다", "{{ko-IPA}}", "sikkŭrŏpta", "mr")
	def test_sikkeureopda_yr(self):
		self.run_test("시끄럽다", "{{ko-IPA}}", "si.kkulepta", "yr")
	def test_sikkeureopda_ipa(self):
		self.run_test("시끄럽다", "{{ko-IPA}}", "[ɕʰik͈ɯɾʌ̹p̚t͈a̠]", "ipa")

	def test_sikida_ph(self):
		self.run_test("시키다", "{{ko-IPA}}", "시키다", "ph")
	def test_sikida_rr(self):
		self.run_test("시키다", "{{ko-IPA}}", "sikida", "rr")
	def test_sikida_rrr(self):
		self.run_test("시키다", "{{ko-IPA}}", "sikida", "rrr")
	def test_sikida_mr(self):
		self.run_test("시키다", "{{ko-IPA}}", "sik'ida", "mr")
	def test_sikida_yr(self):
		self.run_test("시키다", "{{ko-IPA}}", "si.khita", "yr")
	def test_sikida_ipa(self):
		self.run_test("시키다", "{{ko-IPA}}", "[ɕʰicçida̠]", "ipa")

	def test_sitda_ph(self):
		self.run_test("싣다", "{{ko-IPA|l=y}}", "싣(ː)따", "ph")
	def test_sitda_rr(self):
		self.run_test("싣다", "{{ko-IPA|l=y}}", "sitda", "rr")
	def test_sitda_rrr(self):
		self.run_test("싣다", "{{ko-IPA|l=y}}", "sidda", "rrr")
	def test_sitda_mr(self):
		self.run_test("싣다", "{{ko-IPA|l=y}}", "sitta", "mr")
	def test_sitda_yr(self):
		self.run_test("싣다", "{{ko-IPA|l=y}}", "sīt.ta", "yr")
	def test_sitda_ipa(self):
		self.run_test("싣다", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)t̚t͈a̠]", "ipa")

	def test_singgeopda_ph(self):
		self.run_test("싱겁다", "{{ko-IPA}}", "싱겁따", "ph")
	def test_singgeopda_rr(self):
		self.run_test("싱겁다", "{{ko-IPA}}", "singgeopda", "rr")
	def test_singgeopda_rrr(self):
		self.run_test("싱겁다", "{{ko-IPA}}", "singgeobda", "rrr")
	def test_singgeopda_mr(self):
		self.run_test("싱겁다", "{{ko-IPA}}", "singgŏpta", "mr")
	def test_singgeopda_yr(self):
		self.run_test("싱겁다", "{{ko-IPA}}", "singkepta", "yr")
	def test_singgeopda_ipa(self):
		self.run_test("싱겁다", "{{ko-IPA}}", "[ɕʰiŋɡʌ̹p̚t͈a̠]", "ipa")

	def test_ssata_ph(self):
		self.run_test("쌓다", "{{ko-IPA}}", "싸타", "ph")
	def test_ssata_rr(self):
		self.run_test("쌓다", "{{ko-IPA}}", "ssata", "rr")
	def test_ssata_rrr(self):
		self.run_test("쌓다", "{{ko-IPA}}", "ssahda", "rrr")
	def test_ssata_mr(self):
		self.run_test("쌓다", "{{ko-IPA}}", "ssat'a", "mr")
	def test_ssata_yr(self):
		self.run_test("쌓다", "{{ko-IPA}}", "ssahta", "yr")
	def test_ssata_ipa(self):
		self.run_test("쌓다", "{{ko-IPA}}", "[s͈a̠tʰa̠]", "ipa")

	def test_akkapda_ph(self):
		self.run_test("아깝다", "{{ko-IPA}}", "아깝따", "ph")
	def test_akkapda_rr(self):
		self.run_test("아깝다", "{{ko-IPA}}", "akkapda", "rr")
	def test_akkapda_rrr(self):
		self.run_test("아깝다", "{{ko-IPA}}", "a'kkabda", "rrr")
	def test_akkapda_mr(self):
		self.run_test("아깝다", "{{ko-IPA}}", "akkapta", "mr")
	def test_akkapda_yr(self):
		self.run_test("아깝다", "{{ko-IPA}}", "a.kkapta", "yr")
	def test_akkapda_ipa(self):
		self.run_test("아깝다", "{{ko-IPA}}", "[a̠k͈a̠p̚t͈a̠]", "ipa")

	def test_ireota_ph(self):
		self.run_test("이렇다", "{{ko-IPA|a=y}}", "이러타", "ph")
	def test_ireota_rr(self):
		self.run_test("이렇다", "{{ko-IPA|a=y}}", "ireota", "rr")
	def test_ireota_rrr(self):
		self.run_test("이렇다", "{{ko-IPA|a=y}}", "ileohda", "rrr")
	def test_ireota_mr(self):
		self.run_test("이렇다", "{{ko-IPA|a=y}}", "irŏt'a", "mr")
	def test_ireota_yr(self):
		self.run_test("이렇다", "{{ko-IPA|a=y}}", "ilehta", "yr")
	def test_ireota_ipa(self):
		self.run_test("이렇다", "{{ko-IPA|a=y}}", "[iɾʌ̹tʰa̠]", "ipa")

	def test_utgida_ph(self):
		self.run_test("웃기다", "{{ko-IPA}}", "욷끼다", "ph")
	def test_utgida_rr(self):
		self.run_test("웃기다", "{{ko-IPA}}", "utgida", "rr")
	def test_utgida_rrr(self):
		self.run_test("웃기다", "{{ko-IPA}}", "usgida", "rrr")
	def test_utgida_mr(self):
		self.run_test("웃기다", "{{ko-IPA}}", "utkida", "mr")
	def test_utgida_yr(self):
		self.run_test("웃기다", "{{ko-IPA}}", "wuskita", "yr")
	def test_utgida_ipa(self):
		self.run_test("웃기다", "{{ko-IPA}}", "[ut̚k͈ida̠]", "ipa")

	def test_ulda_ph(self):
		self.run_test("울다", "{{ko-IPA|l=y}}", "울(ː)다", "ph")
	def test_ulda_rr(self):
		self.run_test("울다", "{{ko-IPA|l=y}}", "ulda", "rr")
	def test_ulda_rrr(self):
		self.run_test("울다", "{{ko-IPA|l=y}}", "ulda", "rrr")
	def test_ulda_mr(self):
		self.run_test("울다", "{{ko-IPA|l=y}}", "ulda", "mr")
	def test_ulda_yr(self):
		self.run_test("울다", "{{ko-IPA|l=y}}", "wūlta", "yr")
	def test_ulda_ipa(self):
		self.run_test("울다", "{{ko-IPA|l=y}}", "[ˈu(ː)ɭda̠]", "ipa")

	def test_useupda_ph(self):
		self.run_test("우습다", "{{ko-IPA|l=y}}", "우(ː)습따", "ph")
	def test_useupda_rr(self):
		self.run_test("우습다", "{{ko-IPA|l=y}}", "useupda", "rr")
	def test_useupda_rrr(self):
		self.run_test("우습다", "{{ko-IPA|l=y}}", "useubda", "rrr")
	def test_useupda_mr(self):
		self.run_test("우습다", "{{ko-IPA|l=y}}", "usŭpta", "mr")
	def test_useupda_yr(self):
		self.run_test("우습다", "{{ko-IPA|l=y}}", "wūsupta", "yr")
	def test_useupda_ipa(self):
		self.run_test("우습다", "{{ko-IPA|l=y}}", "[ˈu(ː)sʰɯp̚t͈a̠]", "ipa")

	def test_oeuda_ph(self):
		self.run_test("외우다", "{{ko-IPA}}", "웨우다/외우다", "ph")
	def test_oeuda_rr(self):
		self.run_test("외우다", "{{ko-IPA}}", "oe'uda", "rr")
	def test_oeuda_rrr(self):
		self.run_test("외우다", "{{ko-IPA}}", "oe'uda", "rrr")
	def test_oeuda_mr(self):
		self.run_test("외우다", "{{ko-IPA}}", "oeuda", "mr")
	def test_oeuda_yr(self):
		self.run_test("외우다", "{{ko-IPA}}", "oywuta", "yr")
	def test_oeuda_ipa(self):
		self.run_test("외우다", "{{ko-IPA}}", "[we̞uda̠] ~ [ø̞uda̠]", "ipa")

	def test_oeropda_ph(self):
		self.run_test("외롭다", "{{ko-IPA}}", "웨롭따/외롭따", "ph")
	def test_oeropda_rr(self):
		self.run_test("외롭다", "{{ko-IPA}}", "oeropda", "rr")
	def test_oeropda_rrr(self):
		self.run_test("외롭다", "{{ko-IPA}}", "oelobda", "rrr")
	def test_oeropda_mr(self):
		self.run_test("외롭다", "{{ko-IPA}}", "oeropta", "mr")
	def test_oeropda_yr(self):
		self.run_test("외롭다", "{{ko-IPA}}", "oylopta", "yr")
	def test_oeropda_ipa(self):
		self.run_test("외롭다", "{{ko-IPA}}", "[we̞ɾo̞p̚t͈a̠] ~ [ø̞ɾo̞p̚t͈a̠]", "ipa")

	def test_oreuda_ph(self):
		self.run_test("오르다", "{{ko-IPA}}", "오르다", "ph")
	def test_oreuda_rr(self):
		self.run_test("오르다", "{{ko-IPA}}", "oreuda", "rr")
	def test_oreuda_rrr(self):
		self.run_test("오르다", "{{ko-IPA}}", "oleuda", "rrr")
	def test_oreuda_mr(self):
		self.run_test("오르다", "{{ko-IPA}}", "orŭda", "mr")
	def test_oreuda_yr(self):
		self.run_test("오르다", "{{ko-IPA}}", "oluta", "yr")
	def test_oreuda_ipa(self):
		self.run_test("오르다", "{{ko-IPA}}", "[o̞ɾɯda̠]", "ipa")

	def test_yeppeuda_ph(self):
		self.run_test("예쁘다", "{{ko-IPA|l=y}}", "예(ː)쁘다", "ph")
	def test_yeppeuda_rr(self):
		self.run_test("예쁘다", "{{ko-IPA|l=y}}", "yeppeuda", "rr")
	def test_yeppeuda_rrr(self):
		self.run_test("예쁘다", "{{ko-IPA|l=y}}", "ye'ppeuda", "rrr")
	def test_yeppeuda_mr(self):
		self.run_test("예쁘다", "{{ko-IPA|l=y}}", "yeppŭda", "mr")
	def test_yeppeuda_yr(self):
		self.run_test("예쁘다", "{{ko-IPA|l=y}}", "yēy.pputa", "yr")
	def test_yeppeuda_ipa(self):
		self.run_test("예쁘다", "{{ko-IPA|l=y}}", "[ˈje̞(ː)p͈ɯda̠]", "ipa")

	def test_yeolda_ph(self):
		self.run_test("열다", "{{ko-IPA|l=y|a=y}}", "열(ː)다", "ph")
	def test_yeolda_rr(self):
		self.run_test("열다", "{{ko-IPA|l=y|a=y}}", "yeolda", "rr")
	def test_yeolda_rrr(self):
		self.run_test("열다", "{{ko-IPA|l=y|a=y}}", "yeolda", "rrr")
	def test_yeolda_mr(self):
		self.run_test("열다", "{{ko-IPA|l=y|a=y}}", "yŏlda", "mr")
	def test_yeolda_yr(self):
		self.run_test("열다", "{{ko-IPA|l=y|a=y}}", "yēlta", "yr")
	def test_yeolda_ipa(self):
		self.run_test("열다", "{{ko-IPA|l=y|a=y}}", "[ˈjɘ(ː)ɭda̠]", "ipa")

	def test_yeojjuda_ph(self):
		self.run_test("여쭈다", "{{ko-IPA|l=y}}", "여(ː)쭈다", "ph")
	def test_yeojjuda_rr(self):
		self.run_test("여쭈다", "{{ko-IPA|l=y}}", "yeojjuda", "rr")
	def test_yeojjuda_rrr(self):
		self.run_test("여쭈다", "{{ko-IPA|l=y}}", "yeo'jjuda", "rrr")
	def test_yeojjuda_mr(self):
		self.run_test("여쭈다", "{{ko-IPA|l=y}}", "yŏtchuda", "mr")
	def test_yeojjuda_yr(self):
		self.run_test("여쭈다", "{{ko-IPA|l=y}}", "yē.ccwuta", "yr")
	def test_yeojjuda_ipa(self):
		self.run_test("여쭈다", "{{ko-IPA|l=y}}", "[ˈjɘ(ː)t͡ɕ͈uda̠]", "ipa")

	def test_eolda_ph(self):
		self.run_test("얼다", "{{ko-IPA|l=y}}", "얼(ː)다", "ph")
	def test_eolda_rr(self):
		self.run_test("얼다", "{{ko-IPA|l=y}}", "eolda", "rr")
	def test_eolda_rrr(self):
		self.run_test("얼다", "{{ko-IPA|l=y}}", "eolda", "rrr")
	def test_eolda_mr(self):
		self.run_test("얼다", "{{ko-IPA|l=y}}", "ŏlda", "mr")
	def test_eolda_yr(self):
		self.run_test("얼다", "{{ko-IPA|l=y}}", "ēlta", "yr")
	def test_eolda_ipa(self):
		self.run_test("얼다", "{{ko-IPA|l=y}}", "[ˈɘ(ː)ɭda̠]", "ipa")

	def test_eojireopda_ph(self):
		self.run_test("어지럽다", "{{ko-IPA}}", "어지럽따", "ph")
	def test_eojireopda_rr(self):
		self.run_test("어지럽다", "{{ko-IPA}}", "eojireopda", "rr")
	def test_eojireopda_rrr(self):
		self.run_test("어지럽다", "{{ko-IPA}}", "eojileobda", "rrr")
	def test_eojireopda_mr(self):
		self.run_test("어지럽다", "{{ko-IPA}}", "ŏjirŏpta", "mr")
	def test_eojireopda_yr(self):
		self.run_test("어지럽다", "{{ko-IPA}}", "ecilepta", "yr")
	def test_eojireopda_ipa(self):
		self.run_test("어지럽다", "{{ko-IPA}}", "[ʌ̹d͡ʑiɾʌ̹p̚t͈a̠]", "ipa")

	def test_areumdapda_ph(self):
		self.run_test("아름답다", "{{ko-IPA|a=y}}", "아름답따", "ph")
	def test_areumdapda_rr(self):
		self.run_test("아름답다", "{{ko-IPA|a=y}}", "areumdapda", "rr")
	def test_areumdapda_rrr(self):
		self.run_test("아름답다", "{{ko-IPA|a=y}}", "aleumdabda", "rrr")
	def test_areumdapda_mr(self):
		self.run_test("아름답다", "{{ko-IPA|a=y}}", "arŭmdapta", "mr")
	def test_areumdapda_yr(self):
		self.run_test("아름답다", "{{ko-IPA|a=y}}", "alumtapta", "yr")
	def test_areumdapda_ipa(self):
		self.run_test("아름답다", "{{ko-IPA|a=y}}", "[a̠ɾɯmda̠p̚t͈a̠]", "ipa")

	def test_apeuda_ph(self):
		self.run_test("아프다", "{{ko-IPA}}", "아프다", "ph")
	def test_apeuda_rr(self):
		self.run_test("아프다", "{{ko-IPA}}", "apeuda", "rr")
	def test_apeuda_rrr(self):
		self.run_test("아프다", "{{ko-IPA}}", "apeuda", "rrr")
	def test_apeuda_mr(self):
		self.run_test("아프다", "{{ko-IPA}}", "ap'ŭda", "mr")
	def test_apeuda_yr(self):
		self.run_test("아프다", "{{ko-IPA}}", "a.phuta", "yr")
	def test_apeuda_ipa(self):
		self.run_test("아프다", "{{ko-IPA}}", "[a̠pʰɯda̠]", "ipa")

	def test_antakkapda_ph(self):
		self.run_test("안타깝다", "{{ko-IPA}}", "안타깝따", "ph")
	def test_antakkapda_rr(self):
		self.run_test("안타깝다", "{{ko-IPA}}", "antakkapda", "rr")
	def test_antakkapda_rrr(self):
		self.run_test("안타깝다", "{{ko-IPA}}", "anta'kkabda", "rrr")
	def test_antakkapda_mr(self):
		self.run_test("안타깝다", "{{ko-IPA}}", "ant'akkapta", "mr")
	def test_antakkapda_yr(self):
		self.run_test("안타깝다", "{{ko-IPA}}", "antha.kkapta", "yr")
	def test_antakkapda_ipa(self):
		self.run_test("안타깝다", "{{ko-IPA}}", "[a̠ntʰa̠k͈a̠p̚t͈a̠]", "ipa")

	def test_eodupda_ph(self):
		self.run_test("어둡다", "{{ko-IPA}}", "어둡따", "ph")
	def test_eodupda_rr(self):
		self.run_test("어둡다", "{{ko-IPA}}", "eodupda", "rr")
	def test_eodupda_rrr(self):
		self.run_test("어둡다", "{{ko-IPA}}", "eodubda", "rrr")
	def test_eodupda_mr(self):
		self.run_test("어둡다", "{{ko-IPA}}", "ŏdupta", "mr")
	def test_eodupda_yr(self):
		self.run_test("어둡다", "{{ko-IPA}}", "etwupta", "yr")
	def test_eodupda_ipa(self):
		self.run_test("어둡다", "{{ko-IPA}}", "[ʌ̹dup̚t͈a̠]", "ipa")

	def test_eoullida_ph(self):
		self.run_test("어울리다", "{{ko-IPA}}", "어울리다", "ph")
	def test_eoullida_rr(self):
		self.run_test("어울리다", "{{ko-IPA}}", "eoullida", "rr")
	def test_eoullida_rrr(self):
		self.run_test("어울리다", "{{ko-IPA}}", "eoullida", "rrr")
	def test_eoullida_mr(self):
		self.run_test("어울리다", "{{ko-IPA}}", "ŏullida", "mr")
	def test_eoullida_yr(self):
		self.run_test("어울리다", "{{ko-IPA}}", "ewullita", "yr")
	def test_eoullida_ipa(self):
		self.run_test("어울리다", "{{ko-IPA}}", "[ʌ̹uʎʎida̠]", "ipa")

	def test_museopda_ph(self):
		self.run_test("무섭다", "{{ko-IPA}}", "무섭따", "ph")
	def test_museopda_rr(self):
		self.run_test("무섭다", "{{ko-IPA}}", "museopda", "rr")
	def test_museopda_rrr(self):
		self.run_test("무섭다", "{{ko-IPA}}", "museobda", "rrr")
	def test_museopda_mr(self):
		self.run_test("무섭다", "{{ko-IPA}}", "musŏpta", "mr")
	def test_museopda_yr(self):
		self.run_test("무섭다", "{{ko-IPA}}", "musepta", "yr")
	def test_museopda_ipa(self):
		self.run_test("무섭다", "{{ko-IPA}}", "[musʰʌ̹p̚t͈a̠]", "ipa")

	def test_dadareuda_ph(self):
		self.run_test("다다르다", "{{ko-IPA}}", "다다르다", "ph")
	def test_dadareuda_rr(self):
		self.run_test("다다르다", "{{ko-IPA}}", "dadareuda", "rr")
	def test_dadareuda_rrr(self):
		self.run_test("다다르다", "{{ko-IPA}}", "dadaleuda", "rrr")
	def test_dadareuda_mr(self):
		self.run_test("다다르다", "{{ko-IPA}}", "tadarŭda", "mr")
	def test_dadareuda_yr(self):
		self.run_test("다다르다", "{{ko-IPA}}", "tataluta", "yr")
	def test_dadareuda_ipa(self):
		self.run_test("다다르다", "{{ko-IPA}}", "[ta̠da̠ɾɯda̠]", "ipa")

	def test_teum_ph(self):
		self.run_test("틈", "{{ko-IPA}}", "틈", "ph")
	def test_teum_rr(self):
		self.run_test("틈", "{{ko-IPA}}", "teum", "rr")
	def test_teum_rrr(self):
		self.run_test("틈", "{{ko-IPA}}", "teum", "rrr")
	def test_teum_mr(self):
		self.run_test("틈", "{{ko-IPA}}", "t'ŭm", "mr")
	def test_teum_yr(self):
		self.run_test("틈", "{{ko-IPA}}", "thum", "yr")
	def test_teum_ipa(self):
		self.run_test("틈", "{{ko-IPA}}", "[tʰɯm]", "ipa")


	def test_hante_ph(self):
		self.run_test("-한테", "{{ko-IPA}}", "한테", "ph")
	def test_hante_rr(self):
		self.run_test("-한테", "{{ko-IPA}}", "hante", "rr")
	def test_hante_rrr(self):
		self.run_test("-한테", "{{ko-IPA}}", "hante", "rrr")
	def test_hante_mr(self):
		self.run_test("-한테", "{{ko-IPA}}", "hant'e", "mr")
	def test_hante_yr(self):
		self.run_test("-한테", "{{ko-IPA}}", "hanthey", "yr")
	def test_hante_ipa(self):
		self.run_test("-한테", "{{ko-IPA}}", "[ha̠ntʰe̞]", "ipa")

	def test_geomeori_ph(self):
		self.run_test("거머리", "{{ko-ipa|l=y}}", "거(ː)머리", "ph")
	def test_geomeori_rr(self):
		self.run_test("거머리", "{{ko-ipa|l=y}}", "geomeori", "rr")
	def test_geomeori_rrr(self):
		self.run_test("거머리", "{{ko-ipa|l=y}}", "geomeoli", "rrr")
	def test_geomeori_mr(self):
		self.run_test("거머리", "{{ko-ipa|l=y}}", "kŏmŏri", "mr")
	def test_geomeori_yr(self):
		self.run_test("거머리", "{{ko-ipa|l=y}}", "kēmeli", "yr")
	def test_geomeori_ipa(self):
		self.run_test("거머리", "{{ko-ipa|l=y}}", "[ˈkɘ(ː)mʌ̹ɾi]", "ipa")


	def test_boksuhyeong_ph(self):
		self.run_test("복수형", "{{ko-IPA}}", "복쑤형", "ph")
	def test_boksuhyeong_rr(self):
		self.run_test("복수형", "{{ko-IPA}}", "boksuhyeong", "rr")
	def test_boksuhyeong_rrr(self):
		self.run_test("복수형", "{{ko-IPA}}", "bogsuhyeong", "rrr")
	def test_boksuhyeong_mr(self):
		self.run_test("복수형", "{{ko-IPA}}", "poksuhyŏng", "mr")
	def test_boksuhyeong_yr(self):
		self.run_test("복수형", "{{ko-IPA}}", "pok.swuhyeng", "yr")
	def test_boksuhyeong_ipa(self):
		self.run_test("복수형", "{{ko-IPA}}", "[po̞ks͈uʝʌ̹ŋ]", "ipa")

	def test_banchan_ph(self):
		self.run_test("반찬", "{{ko-IPA}}", "반찬", "ph")
	def test_banchan_rr(self):
		self.run_test("반찬", "{{ko-IPA}}", "banchan", "rr")
	def test_banchan_rrr(self):
		self.run_test("반찬", "{{ko-IPA}}", "banchan", "rrr")
	def test_banchan_mr(self):
		self.run_test("반찬", "{{ko-IPA}}", "panch'an", "mr")
	def test_banchan_yr(self):
		self.run_test("반찬", "{{ko-IPA}}", "pan.chan", "yr")
	def test_banchan_ipa(self):
		self.run_test("반찬", "{{ko-IPA}}", "[pa̠ɲt͡ɕʰa̠n]", "ipa")

	def test_hyeongtae_ph(self):
		self.run_test("형태", "{{ko-IPA}}", "형태/형테", "ph")
	def test_hyeongtae_rr(self):
		self.run_test("형태", "{{ko-IPA}}", "hyeongtae", "rr")
	def test_hyeongtae_rrr(self):
		self.run_test("형태", "{{ko-IPA}}", "hyeongtae", "rrr")
	def test_hyeongtae_mr(self):
		self.run_test("형태", "{{ko-IPA}}", "hyŏngt'ae", "mr")
	def test_hyeongtae_yr(self):
		self.run_test("형태", "{{ko-IPA}}", "hyengthay", "yr")
	def test_hyeongtae_ipa(self):
		self.run_test("형태", "{{ko-IPA}}", "[çʌ̹ŋtʰɛ] ~ [çʌ̹ŋtʰe̞]", "ipa")

	def test_pyeonchanta_ph(self):
		self.run_test("편찮다", "{{ko-IPA}}", "편찬타", "ph")
	def test_pyeonchanta_rr(self):
		self.run_test("편찮다", "{{ko-IPA}}", "pyeonchanta", "rr")
	def test_pyeonchanta_rrr(self):
		self.run_test("편찮다", "{{ko-IPA}}", "pyeonchanhda", "rrr")
	def test_pyeonchanta_mr(self):
		self.run_test("편찮다", "{{ko-IPA}}", "p'yŏnch'ant'a", "mr")
	def test_pyeonchanta_yr(self):
		self.run_test("편찮다", "{{ko-IPA}}", "phyen.chanhta", "yr")
	def test_pyeonchanta_ipa(self):
		self.run_test("편찮다", "{{ko-IPA}}", "[pʰjʌ̹ɲt͡ɕʰa̠ntʰa̠]", "ipa")

	def test_bang_ph(self):
		self.run_test("방", "{{ko-IPA}}", "방", "ph")
	def test_bang_rr(self):
		self.run_test("방", "{{ko-IPA}}", "bang", "rr")
	def test_bang_rrr(self):
		self.run_test("방", "{{ko-IPA}}", "bang", "rrr")
	def test_bang_mr(self):
		self.run_test("방", "{{ko-IPA}}", "pang", "mr")
	def test_bang_yr(self):
		self.run_test("방", "{{ko-IPA}}", "pang", "yr")
	def test_bang_ipa(self):
		self.run_test("방", "{{ko-IPA}}", "[pa̠ŋ]", "ipa")
	def test_bang_ph_1(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "방(ː)", "ph")
	def test_bang_rr_1(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "bang", "rr")
	def test_bang_rrr_1(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "bang", "rrr")
	def test_bang_mr_1(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "pang", "mr")
	def test_bang_yr_1(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "pāng", "yr")
	def test_bang_ipa_1(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "[pa̠(ː)ŋ]", "ipa")
	def test_bang_ph_2(self):
		self.run_test("방", "{{ko-IPA}}", "방", "ph")
	def test_bang_rr_2(self):
		self.run_test("방", "{{ko-IPA}}", "bang", "rr")
	def test_bang_rrr_2(self):
		self.run_test("방", "{{ko-IPA}}", "bang", "rrr")
	def test_bang_mr_2(self):
		self.run_test("방", "{{ko-IPA}}", "pang", "mr")
	def test_bang_yr_2(self):
		self.run_test("방", "{{ko-IPA}}", "pang", "yr")
	def test_bang_ipa_2(self):
		self.run_test("방", "{{ko-IPA}}", "[pa̠ŋ]", "ipa")
	def test_bang_ph_3(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "방(ː)", "ph")
	def test_bang_rr_3(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "bang", "rr")
	def test_bang_rrr_3(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "bang", "rrr")
	def test_bang_mr_3(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "pang", "mr")
	def test_bang_yr_3(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "pāng", "yr")
	def test_bang_ipa_3(self):
		self.run_test("방", "{{ko-IPA|l=y}}", "[pa̠(ː)ŋ]", "ipa")
	def test_bang_ph_4(self):
		self.run_test("방", "{{ko-ipa}}", "방", "ph")
	def test_bang_rr_4(self):
		self.run_test("방", "{{ko-ipa}}", "bang", "rr")
	def test_bang_rrr_4(self):
		self.run_test("방", "{{ko-ipa}}", "bang", "rrr")
	def test_bang_mr_4(self):
		self.run_test("방", "{{ko-ipa}}", "pang", "mr")
	def test_bang_yr_4(self):
		self.run_test("방", "{{ko-ipa}}", "pang", "yr")
	def test_bang_ipa_4(self):
		self.run_test("방", "{{ko-ipa}}", "[pa̠ŋ]", "ipa")

	def test_naksi_ph(self):
		self.run_test("낚시", "{{ko-IPA}}", "낙씨", "ph")
	def test_naksi_rr(self):
		self.run_test("낚시", "{{ko-IPA}}", "naksi", "rr")
	def test_naksi_rrr(self):
		self.run_test("낚시", "{{ko-IPA}}", "nakksi", "rrr")
	def test_naksi_mr(self):
		self.run_test("낚시", "{{ko-IPA}}", "naksi", "mr")
	def test_naksi_yr(self):
		self.run_test("낚시", "{{ko-IPA}}", "nakksi", "yr")
	def test_naksi_ipa(self):
		self.run_test("낚시", "{{ko-IPA}}", "[na̠kɕ͈i]", "ipa")


	def test_yogu_ph(self):
		self.run_test("요구", "{{ko-IPA}}", "요구", "ph")
	def test_yogu_rr(self):
		self.run_test("요구", "{{ko-IPA}}", "yogu", "rr")
	def test_yogu_rrr(self):
		self.run_test("요구", "{{ko-IPA}}", "yogu", "rrr")
	def test_yogu_mr(self):
		self.run_test("요구", "{{ko-IPA}}", "yogu", "mr")
	def test_yogu_yr(self):
		self.run_test("요구", "{{ko-IPA}}", "yokwu", "yr")
	def test_yogu_ipa(self):
		self.run_test("요구", "{{ko-IPA}}", "[joɡu]", "ipa")

	def test_mitda_ph(self):
		self.run_test("믿다", "{{ko-IPA}}", "믿따", "ph")
	def test_mitda_rr(self):
		self.run_test("믿다", "{{ko-IPA}}", "mitda", "rr")
	def test_mitda_rrr(self):
		self.run_test("믿다", "{{ko-IPA}}", "midda", "rrr")
	def test_mitda_mr(self):
		self.run_test("믿다", "{{ko-IPA}}", "mitta", "mr")
	def test_mitda_yr(self):
		self.run_test("믿다", "{{ko-IPA}}", "mit.ta", "yr")
	def test_mitda_ipa(self):
		self.run_test("믿다", "{{ko-IPA}}", "[mit̚t͈a̠]", "ipa")





	def test_Kanada_ph(self):
		self.run_test("카나다", "{{ko-IPA|cap=y}}", "카나다", "ph")
	def test_Kanada_rr(self):
		self.run_test("카나다", "{{ko-IPA|cap=y}}", "Kanada", "rr")
	def test_Kanada_rrr(self):
		self.run_test("카나다", "{{ko-IPA|cap=y}}", "Kanada", "rrr")
	def test_Kanada_mr(self):
		self.run_test("카나다", "{{ko-IPA|cap=y}}", "K'anada", "mr")
	def test_Kanada_yr(self):
		self.run_test("카나다", "{{ko-IPA|cap=y}}", "khanata", "yr")
	def test_Kanada_ipa(self):
		self.run_test("카나다", "{{ko-IPA|cap=y}}", "[kʰa̠na̠da̠]", "ipa")

	def test_daneo_ph(self):
		self.run_test("단어", "{{ko-IPA}}", "다너", "ph")
	def test_daneo_rr(self):
		self.run_test("단어", "{{ko-IPA}}", "daneo", "rr")
	def test_daneo_rrr(self):
		self.run_test("단어", "{{ko-IPA}}", "dan'eo", "rrr")
	def test_daneo_mr(self):
		self.run_test("단어", "{{ko-IPA}}", "tanŏ", "mr")
	def test_daneo_yr(self):
		self.run_test("단어", "{{ko-IPA}}", "tan.e", "yr")
	def test_daneo_ipa(self):
		self.run_test("단어", "{{ko-IPA}}", "[ta̠nʌ̹]", "ipa")

	def test_anta_ph(self):
		self.run_test("않다", "{{ko-IPA|a=Ko-않다.ogg}}", "안타", "ph")
	def test_anta_rr(self):
		self.run_test("않다", "{{ko-IPA|a=Ko-않다.ogg}}", "anta", "rr")
	def test_anta_rrr(self):
		self.run_test("않다", "{{ko-IPA|a=Ko-않다.ogg}}", "anhda", "rrr")
	def test_anta_mr(self):
		self.run_test("않다", "{{ko-IPA|a=Ko-않다.ogg}}", "ant'a", "mr")
	def test_anta_yr(self):
		self.run_test("않다", "{{ko-IPA|a=Ko-않다.ogg}}", "anhta", "yr")
	def test_anta_ipa(self):
		self.run_test("않다", "{{ko-IPA|a=Ko-않다.ogg}}", "[a̠ntʰa̠]", "ipa")

	def test_gatda_ph(self):
		self.run_test("같다", "{{ko-IPA|a=y}}", "갇따", "ph")
	def test_gatda_rr(self):
		self.run_test("같다", "{{ko-IPA|a=y}}", "gatda", "rr")
	def test_gatda_rrr(self):
		self.run_test("같다", "{{ko-IPA|a=y}}", "gatda", "rrr")
	def test_gatda_mr(self):
		self.run_test("같다", "{{ko-IPA|a=y}}", "katta", "mr")
	def test_gatda_yr(self):
		self.run_test("같다", "{{ko-IPA|a=y}}", "kathta", "yr")
	def test_gatda_ipa(self):
		self.run_test("같다", "{{ko-IPA|a=y}}", "[ka̠t̚t͈a̠]", "ipa")


	def test_jeuk_ph(self):
		self.run_test("즉", "{{ko-IPA}}", "즉", "ph")
	def test_jeuk_rr(self):
		self.run_test("즉", "{{ko-IPA}}", "jeuk", "rr")
	def test_jeuk_rrr(self):
		self.run_test("즉", "{{ko-IPA}}", "jeug", "rrr")
	def test_jeuk_mr(self):
		self.run_test("즉", "{{ko-IPA}}", "chŭk", "mr")
	def test_jeuk_yr(self):
		self.run_test("즉", "{{ko-IPA}}", "cuk", "yr")
	def test_jeuk_ipa(self):
		self.run_test("즉", "{{ko-IPA}}", "[t͡ɕɯk̚]", "ipa")

	def test_daehada_ph(self):
		self.run_test("대하다", "{{ko-IPA|l=y|a=y}}", "대(ː)하다/데(ː)하다", "ph")
	def test_daehada_rr(self):
		self.run_test("대하다", "{{ko-IPA|l=y|a=y}}", "daehada", "rr")
	def test_daehada_rrr(self):
		self.run_test("대하다", "{{ko-IPA|l=y|a=y}}", "daehada", "rrr")
	def test_daehada_mr(self):
		self.run_test("대하다", "{{ko-IPA|l=y|a=y}}", "taehada", "mr")
	def test_daehada_yr(self):
		self.run_test("대하다", "{{ko-IPA|l=y|a=y}}", "tāyhata", "yr")
	def test_daehada_ipa(self):
		self.run_test("대하다", "{{ko-IPA|l=y|a=y}}", "[ˈtɛ(ː)ɦa̠da̠] ~ [ˈte̞(ː)ɦa̠da̠]", "ipa")

	def test_ttaemun_ph(self):
		self.run_test("때문", "{{ko-IPA|a=y}}", "때문/떼문", "ph")
	def test_ttaemun_rr(self):
		self.run_test("때문", "{{ko-IPA|a=y}}", "ttaemun", "rr")
	def test_ttaemun_rrr(self):
		self.run_test("때문", "{{ko-IPA|a=y}}", "ttaemun", "rrr")
	def test_ttaemun_mr(self):
		self.run_test("때문", "{{ko-IPA|a=y}}", "ttaemun", "mr")
	def test_ttaemun_yr(self):
		self.run_test("때문", "{{ko-IPA|a=y}}", "ttaymun", "yr")
	def test_ttaemun_ipa(self):
		self.run_test("때문", "{{ko-IPA|a=y}}", "[t͈ɛmun] ~ [t͈e̞mun]", "ipa")

	def test_wihada_ph(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "위하다", "ph")
	def test_wihada_rr(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "wihada", "rr")
	def test_wihada_rrr(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "wihada", "rrr")
	def test_wihada_mr(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "wihada", "mr")
	def test_wihada_yr(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "wihata", "yr")
	def test_wihada_ipa(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "[ɥiɦa̠da̠] ~ [yɦa̠da̠]", "ipa")
	def test_wihada_ph_1(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "위하다", "ph")
	def test_wihada_rr_1(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "wihada", "rr")
	def test_wihada_rrr_1(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "wihada", "rrr")
	def test_wihada_mr_1(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "wihada", "mr")
	def test_wihada_yr_1(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "wihata", "yr")
	def test_wihada_ipa_1(self):
		self.run_test("위하다", "{{ko-IPA|a=y}}", "[ɥiɦa̠da̠] ~ [yɦa̠da̠]", "ipa")

	def test_geureona_ph(self):
		self.run_test("그러나", "{{ko-IPA|a=y}}", "그러나", "ph")
	def test_geureona_rr(self):
		self.run_test("그러나", "{{ko-IPA|a=y}}", "geureona", "rr")
	def test_geureona_rrr(self):
		self.run_test("그러나", "{{ko-IPA|a=y}}", "geuleona", "rrr")
	def test_geureona_mr(self):
		self.run_test("그러나", "{{ko-IPA|a=y}}", "kŭrŏna", "mr")
	def test_geureona_yr(self):
		self.run_test("그러나", "{{ko-IPA|a=y}}", "kulena", "yr")
	def test_geureona_ipa(self):
		self.run_test("그러나", "{{ko-IPA|a=y}}", "[kɯɾʌ̹na̠]", "ipa")

	def test_sahoe_ph(self):
		self.run_test("사회", "{{ko-IPA}}", "사훼/사회", "ph")
	def test_sahoe_rr(self):
		self.run_test("사회", "{{ko-IPA}}", "sahoe", "rr")
	def test_sahoe_rrr(self):
		self.run_test("사회", "{{ko-IPA}}", "sahoe", "rrr")
	def test_sahoe_mr(self):
		self.run_test("사회", "{{ko-IPA}}", "sahoe", "mr")
	def test_sahoe_yr(self):
		self.run_test("사회", "{{ko-IPA}}", "sahoy", "yr")
	def test_sahoe_ipa(self):
		self.run_test("사회", "{{ko-IPA}}", "[sʰa̠βwe̞] ~ [sʰa̠ɦø̞]", "ipa")

	def test_naoda_ph(self):
		self.run_test("나오다", "{{ko-IPA|a=y}}", "나오다", "ph")
	def test_naoda_rr(self):
		self.run_test("나오다", "{{ko-IPA|a=y}}", "naoda", "rr")
	def test_naoda_rrr(self):
		self.run_test("나오다", "{{ko-IPA|a=y}}", "naoda", "rrr")
	def test_naoda_mr(self):
		self.run_test("나오다", "{{ko-IPA|a=y}}", "naoda", "mr")
	def test_naoda_yr(self):
		self.run_test("나오다", "{{ko-IPA|a=y}}", "naota", "yr")
	def test_naoda_ipa(self):
		self.run_test("나오다", "{{ko-IPA|a=y}}", "[na̠o̞da̠]", "ipa")

	def test_geurigo_ph(self):
		self.run_test("그리고", "{{ko-IPA|a=y}}", "그리고", "ph")
	def test_geurigo_rr(self):
		self.run_test("그리고", "{{ko-IPA|a=y}}", "geurigo", "rr")
	def test_geurigo_rrr(self):
		self.run_test("그리고", "{{ko-IPA|a=y}}", "geuligo", "rrr")
	def test_geurigo_mr(self):
		self.run_test("그리고", "{{ko-IPA|a=y}}", "kŭrigo", "mr")
	def test_geurigo_yr(self):
		self.run_test("그리고", "{{ko-IPA|a=y}}", "kuliko", "yr")
	def test_geurigo_ipa(self):
		self.run_test("그리고", "{{ko-IPA|a=y}}", "[kɯɾiɡo̞]", "ipa")

	def test_munje_ph(self):
		self.run_test("문제", "{{ko-IPA|l=y|a=y}}", "문(ː)제", "ph")
	def test_munje_rr(self):
		self.run_test("문제", "{{ko-IPA|l=y|a=y}}", "munje", "rr")
	def test_munje_rrr(self):
		self.run_test("문제", "{{ko-IPA|l=y|a=y}}", "munje", "rrr")
	def test_munje_mr(self):
		self.run_test("문제", "{{ko-IPA|l=y|a=y}}", "munje", "mr")
	def test_munje_yr(self):
		self.run_test("문제", "{{ko-IPA|l=y|a=y}}", "mūn.cey", "yr")
	def test_munje_ipa(self):
		self.run_test("문제", "{{ko-IPA|l=y|a=y}}", "[ˈmu(ː)ɲd͡ʑe̞]", "ipa")

	def test_geureon_ph(self):
		self.run_test("그런", "{{ko-IPA|a=y}}", "그런", "ph")
	def test_geureon_rr(self):
		self.run_test("그런", "{{ko-IPA|a=y}}", "geureon", "rr")
	def test_geureon_rrr(self):
		self.run_test("그런", "{{ko-IPA|a=y}}", "geuleon", "rrr")
	def test_geureon_mr(self):
		self.run_test("그런", "{{ko-IPA|a=y}}", "kŭrŏn", "mr")
	def test_geureon_yr(self):
		self.run_test("그런", "{{ko-IPA|a=y}}", "kulen", "yr")
	def test_geureon_ipa(self):
		self.run_test("그런", "{{ko-IPA|a=y}}", "[kɯɾʌ̹n]", "ipa")

	def test_saenggakhada_ph(self):
		self.run_test("생각하다", "{{ko-IPA|a=y}}", "생가카다/셍가카다", "ph")
	def test_saenggakhada_rr(self):
		self.run_test("생각하다", "{{ko-IPA|a=y}}", "saenggakhada", "rr")
	def test_saenggakhada_rrr(self):
		self.run_test("생각하다", "{{ko-IPA|a=y}}", "saenggaghada", "rrr")
	def test_saenggakhada_mr(self):
		self.run_test("생각하다", "{{ko-IPA|a=y}}", "saenggakhada", "mr")
	def test_saenggakhada_yr(self):
		self.run_test("생각하다", "{{ko-IPA|a=y}}", "sayngkak.hata", "yr")
	def test_saenggakhada_ipa(self):
		self.run_test("생각하다", "{{ko-IPA|a=y}}", "[sʰɛŋɡa̠kʰa̠da̠] ~ [sʰe̞ŋɡa̠kʰa̠da̠]", "ipa")

	def test_sok_ph(self):
		self.run_test("속", "{{ko-IPA|l=y}}", "속(ː)", "ph")
	def test_sok_rr(self):
		self.run_test("속", "{{ko-IPA|l=y}}", "sok", "rr")
	def test_sok_rrr(self):
		self.run_test("속", "{{ko-IPA|l=y}}", "sog", "rrr")
	def test_sok_mr(self):
		self.run_test("속", "{{ko-IPA|l=y}}", "sok", "mr")
	def test_sok_yr(self):
		self.run_test("속", "{{ko-IPA|l=y}}", "sōk", "yr")
	def test_sok_ipa(self):
		self.run_test("속", "{{ko-IPA|l=y}}", "[sʰo̞(ː)k̚]", "ipa")
	def test_sok_ph_1(self):
		self.run_test("속", "{{ko-IPA}}", "속", "ph")
	def test_sok_rr_1(self):
		self.run_test("속", "{{ko-IPA}}", "sok", "rr")
	def test_sok_rrr_1(self):
		self.run_test("속", "{{ko-IPA}}", "sog", "rrr")
	def test_sok_mr_1(self):
		self.run_test("속", "{{ko-IPA}}", "sok", "mr")
	def test_sok_yr_1(self):
		self.run_test("속", "{{ko-IPA}}", "sok", "yr")
	def test_sok_ipa_1(self):
		self.run_test("속", "{{ko-IPA}}", "[sʰo̞k̚]", "ipa")
	def test_sok_ph_2(self):
		self.run_test("속", "{{ko-IPA}}", "속", "ph")
	def test_sok_rr_2(self):
		self.run_test("속", "{{ko-IPA}}", "sok", "rr")
	def test_sok_rrr_2(self):
		self.run_test("속", "{{ko-IPA}}", "sog", "rrr")
	def test_sok_mr_2(self):
		self.run_test("속", "{{ko-IPA}}", "sok", "mr")
	def test_sok_yr_2(self):
		self.run_test("속", "{{ko-IPA}}", "sok", "yr")
	def test_sok_ipa_2(self):
		self.run_test("속", "{{ko-IPA}}", "[sʰo̞k̚]", "ipa")

	def test_tonghada_ph(self):
		self.run_test("통하다", "{{ko-IPA|a=Ko-통하다.oga}}", "통하다", "ph")
	def test_tonghada_rr(self):
		self.run_test("통하다", "{{ko-IPA|a=Ko-통하다.oga}}", "tonghada", "rr")
	def test_tonghada_rrr(self):
		self.run_test("통하다", "{{ko-IPA|a=Ko-통하다.oga}}", "tonghada", "rrr")
	def test_tonghada_mr(self):
		self.run_test("통하다", "{{ko-IPA|a=Ko-통하다.oga}}", "t'onghada", "mr")
	def test_tonghada_yr(self):
		self.run_test("통하다", "{{ko-IPA|a=Ko-통하다.oga}}", "thonghata", "yr")
	def test_tonghada_ipa(self):
		self.run_test("통하다", "{{ko-IPA|a=Ko-통하다.oga}}", "[tʰo̞ŋɦa̠da̠]", "ipa")

	def test_deulda_ph(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "들다", "ph")
	def test_deulda_rr(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "deulda", "rr")
	def test_deulda_rrr(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "deulda", "rrr")
	def test_deulda_mr(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "tŭlda", "mr")
	def test_deulda_yr(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "tulta", "yr")
	def test_deulda_ipa(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "[tɯɭda̠]", "ipa")
	def test_deulda_ph_1(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "들다", "ph")
	def test_deulda_rr_1(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "deulda", "rr")
	def test_deulda_rrr_1(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "deulda", "rrr")
	def test_deulda_mr_1(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "tŭlda", "mr")
	def test_deulda_yr_1(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "tulta", "yr")
	def test_deulda_ipa_1(self):
		self.run_test("들다", "{{ko-IPA|a=y}}", "[tɯɭda̠]", "ipa")
	def test_deulda_ph_2(self):
		self.run_test("들다", "{{ko-IPA}}", "들다", "ph")
	def test_deulda_rr_2(self):
		self.run_test("들다", "{{ko-IPA}}", "deulda", "rr")
	def test_deulda_rrr_2(self):
		self.run_test("들다", "{{ko-IPA}}", "deulda", "rrr")
	def test_deulda_mr_2(self):
		self.run_test("들다", "{{ko-IPA}}", "tŭlda", "mr")
	def test_deulda_yr_2(self):
		self.run_test("들다", "{{ko-IPA}}", "tulta", "yr")
	def test_deulda_ipa_2(self):
		self.run_test("들다", "{{ko-IPA}}", "[tɯɭda̠]", "ipa")

	def test_sipda_ph(self):
		self.run_test("싶다", "{{ko-IPA|a=y}}", "십따", "ph")
	def test_sipda_rr(self):
		self.run_test("싶다", "{{ko-IPA|a=y}}", "sipda", "rr")
	def test_sipda_rrr(self):
		self.run_test("싶다", "{{ko-IPA|a=y}}", "sipda", "rrr")
	def test_sipda_mr(self):
		self.run_test("싶다", "{{ko-IPA|a=y}}", "sipta", "mr")
	def test_sipda_yr(self):
		self.run_test("싶다", "{{ko-IPA|a=y}}", "siphta", "yr")
	def test_sipda_ipa(self):
		self.run_test("싶다", "{{ko-IPA|a=y}}", "[ɕʰip̚t͈a̠]", "ipa")

	def test_jung_ph(self):
		self.run_test("중", "{{ko-IPA}}", "중", "ph")
	def test_jung_rr(self):
		self.run_test("중", "{{ko-IPA}}", "jung", "rr")
	def test_jung_rrr(self):
		self.run_test("중", "{{ko-IPA}}", "jung", "rrr")
	def test_jung_mr(self):
		self.run_test("중", "{{ko-IPA}}", "chung", "mr")
	def test_jung_yr(self):
		self.run_test("중", "{{ko-IPA}}", "cwung", "yr")
	def test_jung_ipa(self):
		self.run_test("중", "{{ko-IPA}}", "[t͡ɕuŋ]", "ipa")
	def test_jung_ph_1(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "중(ː)", "ph")
	def test_jung_rr_1(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "jung", "rr")
	def test_jung_rrr_1(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "jung", "rrr")
	def test_jung_mr_1(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "chung", "mr")
	def test_jung_yr_1(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "cwūng", "yr")
	def test_jung_ipa_1(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "[t͡ɕu(ː)ŋ]", "ipa")
	def test_jung_ph_2(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "중(ː)", "ph")
	def test_jung_rr_2(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "jung", "rr")
	def test_jung_rrr_2(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "jung", "rrr")
	def test_jung_mr_2(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "chung", "mr")
	def test_jung_yr_2(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "cwūng", "yr")
	def test_jung_ipa_2(self):
		self.run_test("중", "{{ko-IPA|l=y}}", "[t͡ɕu(ː)ŋ]", "ipa")

	def test_gyeongu_ph(self):
		self.run_test("경우", "{{ko-IPA|a=y}}", "경우", "ph")
	def test_gyeongu_rr(self):
		self.run_test("경우", "{{ko-IPA|a=y}}", "gyeong'u", "rr")
	def test_gyeongu_rrr(self):
		self.run_test("경우", "{{ko-IPA|a=y}}", "gyeong'u", "rrr")
	def test_gyeongu_mr(self):
		self.run_test("경우", "{{ko-IPA|a=y}}", "kyŏngu", "mr")
	def test_gyeongu_yr(self):
		self.run_test("경우", "{{ko-IPA|a=y}}", "kyengwu", "yr")
	def test_gyeongu_ipa(self):
		self.run_test("경우", "{{ko-IPA|a=y}}", "[kjʌ̹ŋu]", "ipa")

	def test_jasin_ph(self):
		self.run_test("자신", "{{ko-IPA}}", "자신", "ph")
	def test_jasin_rr(self):
		self.run_test("자신", "{{ko-IPA}}", "jasin", "rr")
	def test_jasin_rrr(self):
		self.run_test("자신", "{{ko-IPA}}", "jasin", "rrr")
	def test_jasin_mr(self):
		self.run_test("자신", "{{ko-IPA}}", "chasin", "mr")
	def test_jasin_yr(self):
		self.run_test("자신", "{{ko-IPA}}", "casin", "yr")
	def test_jasin_ipa(self):
		self.run_test("자신", "{{ko-IPA}}", "[t͡ɕa̠ɕʰin]", "ipa")
	def test_jasin_ph_1(self):
		self.run_test("자신", "{{ko-IPA}}", "자신", "ph")
	def test_jasin_rr_1(self):
		self.run_test("자신", "{{ko-IPA}}", "jasin", "rr")
	def test_jasin_rrr_1(self):
		self.run_test("자신", "{{ko-IPA}}", "jasin", "rrr")
	def test_jasin_mr_1(self):
		self.run_test("자신", "{{ko-IPA}}", "chasin", "mr")
	def test_jasin_yr_1(self):
		self.run_test("자신", "{{ko-IPA}}", "casin", "yr")
	def test_jasin_ipa_1(self):
		self.run_test("자신", "{{ko-IPA}}", "[t͡ɕa̠ɕʰin]", "ipa")

	def test_munhwa_ph(self):
		self.run_test("문화", "{{ko-IPA|a=Ko-문화.oga}}", "문화", "ph")
	def test_munhwa_rr(self):
		self.run_test("문화", "{{ko-IPA|a=Ko-문화.oga}}", "munhwa", "rr")
	def test_munhwa_rrr(self):
		self.run_test("문화", "{{ko-IPA|a=Ko-문화.oga}}", "munhwa", "rrr")
	def test_munhwa_mr(self):
		self.run_test("문화", "{{ko-IPA|a=Ko-문화.oga}}", "munhwa", "mr")
	def test_munhwa_yr(self):
		self.run_test("문화", "{{ko-IPA|a=Ko-문화.oga}}", "mun.hwa", "yr")
	def test_munhwa_ipa(self):
		self.run_test("문화", "{{ko-IPA|a=Ko-문화.oga}}", "[munβwa̠]", "ipa")

	def test_saenggak_ph(self):
		self.run_test("생각", "{{ko-IPA|a=Ko-생각.oga}}", "생각/셍각", "ph")
	def test_saenggak_rr(self):
		self.run_test("생각", "{{ko-IPA|a=Ko-생각.oga}}", "saenggak", "rr")
	def test_saenggak_rrr(self):
		self.run_test("생각", "{{ko-IPA|a=Ko-생각.oga}}", "saenggag", "rrr")
	def test_saenggak_mr(self):
		self.run_test("생각", "{{ko-IPA|a=Ko-생각.oga}}", "saenggak", "mr")
	def test_saenggak_yr(self):
		self.run_test("생각", "{{ko-IPA|a=Ko-생각.oga}}", "sayngkak", "yr")
	def test_saenggak_ipa(self):
		self.run_test("생각", "{{ko-IPA|a=Ko-생각.oga}}", "[sʰɛŋɡa̠k̚] ~ [sʰe̞ŋɡa̠k̚]", "ipa")

	def test_jeongdo_ph(self):
		self.run_test("정도", "{{ko-IPA|a=y}}", "정도", "ph")
	def test_jeongdo_rr(self):
		self.run_test("정도", "{{ko-IPA|a=y}}", "jeongdo", "rr")
	def test_jeongdo_rrr(self):
		self.run_test("정도", "{{ko-IPA|a=y}}", "jeongdo", "rrr")
	def test_jeongdo_mr(self):
		self.run_test("정도", "{{ko-IPA|a=y}}", "chŏngdo", "mr")
	def test_jeongdo_yr(self):
		self.run_test("정도", "{{ko-IPA|a=y}}", "cengto", "yr")
	def test_jeongdo_ipa(self):
		self.run_test("정도", "{{ko-IPA|a=y}}", "[t͡ɕʌ̹ŋdo̞]", "ipa")

	def test_myeong_ph(self):
		self.run_test("명", "{{ko-IPA|a=ko-명.oga}}", "명", "ph")
	def test_myeong_rr(self):
		self.run_test("명", "{{ko-IPA|a=ko-명.oga}}", "myeong", "rr")
	def test_myeong_rrr(self):
		self.run_test("명", "{{ko-IPA|a=ko-명.oga}}", "myeong", "rrr")
	def test_myeong_mr(self):
		self.run_test("명", "{{ko-IPA|a=ko-명.oga}}", "myŏng", "mr")
	def test_myeong_yr(self):
		self.run_test("명", "{{ko-IPA|a=ko-명.oga}}", "myeng", "yr")
	def test_myeong_ipa(self):
		self.run_test("명", "{{ko-IPA|a=ko-명.oga}}", "[mjʌ̹ŋ]", "ipa")
	def test_myeong_ph_1(self):
		self.run_test("명", "{{ko-IPA|l=y|a=ko-명.oga}}", "명(ː)", "ph")
	def test_myeong_rr_1(self):
		self.run_test("명", "{{ko-IPA|l=y|a=ko-명.oga}}", "myeong", "rr")
	def test_myeong_rrr_1(self):
		self.run_test("명", "{{ko-IPA|l=y|a=ko-명.oga}}", "myeong", "rrr")
	def test_myeong_mr_1(self):
		self.run_test("명", "{{ko-IPA|l=y|a=ko-명.oga}}", "myŏng", "mr")
	def test_myeong_yr_1(self):
		self.run_test("명", "{{ko-IPA|l=y|a=ko-명.oga}}", "myēng", "yr")
	def test_myeong_ipa_1(self):
		self.run_test("명", "{{ko-IPA|l=y|a=ko-명.oga}}", "[mjɘ(ː)ŋ]", "ipa")
	def test_Myeong_ph_2(self):
		self.run_test("명", "{{ko-IPA|cap=y|a=ko-명.oga}}", "명", "ph")
	def test_Myeong_rr_2(self):
		self.run_test("명", "{{ko-IPA|cap=y|a=ko-명.oga}}", "Myeong", "rr")
	def test_Myeong_rrr_2(self):
		self.run_test("명", "{{ko-IPA|cap=y|a=ko-명.oga}}", "Myeong", "rrr")
	def test_Myeong_mr_2(self):
		self.run_test("명", "{{ko-IPA|cap=y|a=ko-명.oga}}", "Myŏng", "mr")
	def test_Myeong_yr_2(self):
		self.run_test("명", "{{ko-IPA|cap=y|a=ko-명.oga}}", "myeng", "yr")
	def test_Myeong_ipa_2(self):
		self.run_test("명", "{{ko-IPA|cap=y|a=ko-명.oga}}", "[mjʌ̹ŋ]", "ipa")

	def test_hamkke_ph(self):
		self.run_test("함께", "{{ko-IPA|a=y}}", "함께", "ph")
	def test_hamkke_rr(self):
		self.run_test("함께", "{{ko-IPA|a=y}}", "hamkke", "rr")
	def test_hamkke_rrr(self):
		self.run_test("함께", "{{ko-IPA|a=y}}", "hamkke", "rrr")
	def test_hamkke_mr(self):
		self.run_test("함께", "{{ko-IPA|a=y}}", "hamkke", "mr")
	def test_hamkke_yr(self):
		self.run_test("함께", "{{ko-IPA|a=y}}", "hamkkey", "yr")
	def test_hamkke_ipa(self):
		self.run_test("함께", "{{ko-IPA|a=y}}", "[ha̠mk͈e̞]", "ipa")

	def test_dareun_ph(self):
		self.run_test("다른", "{{ko-IPA|a=Ko-다른.oga}}", "다른", "ph")
	def test_dareun_rr(self):
		self.run_test("다른", "{{ko-IPA|a=Ko-다른.oga}}", "dareun", "rr")
	def test_dareun_rrr(self):
		self.run_test("다른", "{{ko-IPA|a=Ko-다른.oga}}", "daleun", "rrr")
	def test_dareun_mr(self):
		self.run_test("다른", "{{ko-IPA|a=Ko-다른.oga}}", "tarŭn", "mr")
	def test_dareun_yr(self):
		self.run_test("다른", "{{ko-IPA|a=Ko-다른.oga}}", "talun", "yr")
	def test_dareun_ipa(self):
		self.run_test("다른", "{{ko-IPA|a=Ko-다른.oga}}", "[ta̠ɾɯn]", "ipa")

	def test_eotteon_ph(self):
		self.run_test("어떤", "{{ko-IPA|a=y}}", "어떤", "ph")
	def test_eotteon_rr(self):
		self.run_test("어떤", "{{ko-IPA|a=y}}", "eotteon", "rr")
	def test_eotteon_rrr(self):
		self.run_test("어떤", "{{ko-IPA|a=y}}", "eo'tteon", "rrr")
	def test_eotteon_mr(self):
		self.run_test("어떤", "{{ko-IPA|a=y}}", "ŏttŏn", "mr")
	def test_eotteon_yr(self):
		self.run_test("어떤", "{{ko-IPA|a=y}}", "e.tten", "yr")
	def test_eotteon_ipa(self):
		self.run_test("어떤", "{{ko-IPA|a=y}}", "[ʌ̹t͈ʌ̹n]", "ipa")

	def test_ireon_ph(self):
		self.run_test("이런", "{{ko-IPA|a=Ko-이런.oga}}", "이런", "ph")
	def test_ireon_rr(self):
		self.run_test("이런", "{{ko-IPA|a=Ko-이런.oga}}", "ireon", "rr")
	def test_ireon_rrr(self):
		self.run_test("이런", "{{ko-IPA|a=Ko-이런.oga}}", "ileon", "rrr")
	def test_ireon_mr(self):
		self.run_test("이런", "{{ko-IPA|a=Ko-이런.oga}}", "irŏn", "mr")
	def test_ireon_yr(self):
		self.run_test("이런", "{{ko-IPA|a=Ko-이런.oga}}", "ilen", "yr")
	def test_ireon_ipa(self):
		self.run_test("이런", "{{ko-IPA|a=Ko-이런.oga}}", "[iɾʌ̹n]", "ipa")

	def test_boida_ph(self):
		self.run_test("보이다", "{{ko-IPA|a=y}}", "보이다", "ph")
	def test_boida_rr(self):
		self.run_test("보이다", "{{ko-IPA|a=y}}", "boida", "rr")
	def test_boida_rrr(self):
		self.run_test("보이다", "{{ko-IPA|a=y}}", "boida", "rrr")
	def test_boida_mr(self):
		self.run_test("보이다", "{{ko-IPA|a=y}}", "poida", "mr")
	def test_boida_yr(self):
		self.run_test("보이다", "{{ko-IPA|a=y}}", "poita", "yr")
	def test_boida_ipa(self):
		self.run_test("보이다", "{{ko-IPA|a=y}}", "[po̞ida̠]", "ipa")

	def test_jinada_ph(self):
		self.run_test("지나다", "{{ko-IPA|a=y}}", "지나다", "ph")
	def test_jinada_rr(self):
		self.run_test("지나다", "{{ko-IPA|a=y}}", "jinada", "rr")
	def test_jinada_rrr(self):
		self.run_test("지나다", "{{ko-IPA|a=y}}", "jinada", "rrr")
	def test_jinada_mr(self):
		self.run_test("지나다", "{{ko-IPA|a=y}}", "chinada", "mr")
	def test_jinada_yr(self):
		self.run_test("지나다", "{{ko-IPA|a=y}}", "cinata", "yr")
	def test_jinada_ipa(self):
		self.run_test("지나다", "{{ko-IPA|a=y}}", "[t͡ɕina̠da̠]", "ipa")

	def test_natanada_ph(self):
		self.run_test("나타나다", "{{ko-IPA|a=y}}", "나타나다", "ph")
	def test_natanada_rr(self):
		self.run_test("나타나다", "{{ko-IPA|a=y}}", "natanada", "rr")
	def test_natanada_rrr(self):
		self.run_test("나타나다", "{{ko-IPA|a=y}}", "natanada", "rrr")
	def test_natanada_mr(self):
		self.run_test("나타나다", "{{ko-IPA|a=y}}", "nat'anada", "mr")
	def test_natanada_yr(self):
		self.run_test("나타나다", "{{ko-IPA|a=y}}", "na.thanata", "yr")
	def test_natanada_ipa(self):
		self.run_test("나타나다", "{{ko-IPA|a=y}}", "[na̠tʰa̠na̠da̠]", "ipa")

	def test_uihada_ph(self):
		self.run_test("의하다", "{{ko-IPA|a=y}}", "의하다", "ph")
	def test_uihada_rr(self):
		self.run_test("의하다", "{{ko-IPA|a=y}}", "uihada", "rr")
	def test_uihada_rrr(self):
		self.run_test("의하다", "{{ko-IPA|a=y}}", "uihada", "rrr")
	def test_uihada_mr(self):
		self.run_test("의하다", "{{ko-IPA|a=y}}", "ŭihada", "mr")
	def test_uihada_yr(self):
		self.run_test("의하다", "{{ko-IPA|a=y}}", "uyhata", "yr")
	def test_uihada_ipa(self):
		self.run_test("의하다", "{{ko-IPA|a=y}}", "[ɰiɦa̠da̠]", "ipa")

	def test_sidae_ph(self):
		self.run_test("시대", "{{ko-IPA|a=y}}", "시대/시데", "ph")
	def test_sidae_rr(self):
		self.run_test("시대", "{{ko-IPA|a=y}}", "sidae", "rr")
	def test_sidae_rrr(self):
		self.run_test("시대", "{{ko-IPA|a=y}}", "sidae", "rrr")
	def test_sidae_mr(self):
		self.run_test("시대", "{{ko-IPA|a=y}}", "sidae", "mr")
	def test_sidae_yr(self):
		self.run_test("시대", "{{ko-IPA|a=y}}", "sitay", "yr")
	def test_sidae_ipa(self):
		self.run_test("시대", "{{ko-IPA|a=y}}", "[ɕʰidɛ] ~ [ɕʰide̞]", "ipa")

	def test_ireohada_ph(self):
		self.run_test("이러하다", "{{ko-IPA|a=y}}", "이러하다", "ph")
	def test_ireohada_rr(self):
		self.run_test("이러하다", "{{ko-IPA|a=y}}", "ireohada", "rr")
	def test_ireohada_rrr(self):
		self.run_test("이러하다", "{{ko-IPA|a=y}}", "ileohada", "rrr")
	def test_ireohada_mr(self):
		self.run_test("이러하다", "{{ko-IPA|a=y}}", "irŏhada", "mr")
	def test_ireohada_yr(self):
		self.run_test("이러하다", "{{ko-IPA|a=y}}", "ilehata", "yr")
	def test_ireohada_ipa(self):
		self.run_test("이러하다", "{{ko-IPA|a=y}}", "[iɾʌ̹ɦa̠da̠]", "ipa")

	def test_pon_ph(self):
		self.run_test("폰", "{{ko-IPA}}", "폰", "ph")
	def test_pon_rr(self):
		self.run_test("폰", "{{ko-IPA}}", "pon", "rr")
	def test_pon_rrr(self):
		self.run_test("폰", "{{ko-IPA}}", "pon", "rrr")
	def test_pon_mr(self):
		self.run_test("폰", "{{ko-IPA}}", "p'on", "mr")
	def test_pon_yr(self):
		self.run_test("폰", "{{ko-IPA}}", "phon", "yr")
	def test_pon_ipa(self):
		self.run_test("폰", "{{ko-IPA}}", "[pʰo̞n]", "ipa")

	def test_nugu_ph(self):
		self.run_test("누구", "{{ko-IPA|a=y}}", "누구", "ph")
	def test_nugu_rr(self):
		self.run_test("누구", "{{ko-IPA|a=y}}", "nugu", "rr")
	def test_nugu_rrr(self):
		self.run_test("누구", "{{ko-IPA|a=y}}", "nugu", "rrr")
	def test_nugu_mr(self):
		self.run_test("누구", "{{ko-IPA|a=y}}", "nugu", "mr")
	def test_nugu_yr(self):
		self.run_test("누구", "{{ko-IPA|a=y}}", "nwukwu", "yr")
	def test_nugu_ipa(self):
		self.run_test("누구", "{{ko-IPA|a=y}}", "[nuɡu]", "ipa")

	def test_yeoreo_ph(self):
		self.run_test("여러", "{{ko-IPA|a=y}}", "여러", "ph")
	def test_yeoreo_rr(self):
		self.run_test("여러", "{{ko-IPA|a=y}}", "yeoreo", "rr")
	def test_yeoreo_rrr(self):
		self.run_test("여러", "{{ko-IPA|a=y}}", "yeoleo", "rrr")
	def test_yeoreo_mr(self):
		self.run_test("여러", "{{ko-IPA|a=y}}", "yŏrŏ", "mr")
	def test_yeoreo_yr(self):
		self.run_test("여러", "{{ko-IPA|a=y}}", "yele", "yr")
	def test_yeoreo_ipa(self):
		self.run_test("여러", "{{ko-IPA|a=y}}", "[jʌ̹ɾʌ̹]", "ipa")

	def test_gyoyuk_ph(self):
		self.run_test("교육", "{{ko-IPA|l=y|a=y}}", "교(ː)육", "ph")
	def test_gyoyuk_rr(self):
		self.run_test("교육", "{{ko-IPA|l=y|a=y}}", "gyoyuk", "rr")
	def test_gyoyuk_rrr(self):
		self.run_test("교육", "{{ko-IPA|l=y|a=y}}", "gyoyug", "rrr")
	def test_gyoyuk_mr(self):
		self.run_test("교육", "{{ko-IPA|l=y|a=y}}", "kyoyuk", "mr")
	def test_gyoyuk_yr(self):
		self.run_test("교육", "{{ko-IPA|l=y|a=y}}", "kyō.yuk", "yr")
	def test_gyoyuk_ipa(self):
		self.run_test("교육", "{{ko-IPA|l=y|a=y}}", "[ˈkjo(ː)juk̚]", "ipa")

	def test_isang_ph(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "이(ː)상", "ph")
	def test_isang_rr(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "isang", "rr")
	def test_isang_rrr(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "isang", "rrr")
	def test_isang_mr(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "isang", "mr")
	def test_isang_yr(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "īsang", "yr")
	def test_isang_ipa(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "[ˈi(ː)sʰa̠ŋ]", "ipa")
	def test_isang_ph_1(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "이(ː)상", "ph")
	def test_isang_rr_1(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "isang", "rr")
	def test_isang_rrr_1(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "isang", "rrr")
	def test_isang_mr_1(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "isang", "mr")
	def test_isang_yr_1(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "īsang", "yr")
	def test_isang_ipa_1(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "[ˈi(ː)sʰa̠ŋ]", "ipa")
	def test_isang_ph_2(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "이(ː)상", "ph")
	def test_isang_rr_2(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "isang", "rr")
	def test_isang_rrr_2(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "isang", "rrr")
	def test_isang_mr_2(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "isang", "mr")
	def test_isang_yr_2(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "īsang", "yr")
	def test_isang_ipa_2(self):
		self.run_test("이상", "{{ko-IPA|l=y}}", "[ˈi(ː)sʰa̠ŋ]", "ipa")

	def test_anda_ph(self):
		self.run_test("앉다", "{{ko-IPA|a=Ko-안따.ogg}}", "안따", "ph")
	def test_anda_rr(self):
		self.run_test("앉다", "{{ko-IPA|a=Ko-안따.ogg}}", "anda", "rr")
	def test_anda_rrr(self):
		self.run_test("앉다", "{{ko-IPA|a=Ko-안따.ogg}}", "anjda", "rrr")
	def test_anda_mr(self):
		self.run_test("앉다", "{{ko-IPA|a=Ko-안따.ogg}}", "anta", "mr")
	def test_anda_yr(self):
		self.run_test("앉다", "{{ko-IPA|a=Ko-안따.ogg}}", "ancta", "yr")
	def test_anda_ipa(self):
		self.run_test("앉다", "{{ko-IPA|a=Ko-안따.ogg}}", "[a̠nt͈a̠]", "ipa")

	def test_eolgul_ph(self):
		self.run_test("얼굴", "{{ko-IPA|audio=Ko-얼굴.ogg}}", "얼굴", "ph")
	def test_eolgul_rr(self):
		self.run_test("얼굴", "{{ko-IPA|audio=Ko-얼굴.ogg}}", "eolgul", "rr")
	def test_eolgul_rrr(self):
		self.run_test("얼굴", "{{ko-IPA|audio=Ko-얼굴.ogg}}", "eolgul", "rrr")
	def test_eolgul_mr(self):
		self.run_test("얼굴", "{{ko-IPA|audio=Ko-얼굴.ogg}}", "ŏlgul", "mr")
	def test_eolgul_yr(self):
		self.run_test("얼굴", "{{ko-IPA|audio=Ko-얼굴.ogg}}", "el.kwul", "yr")
	def test_eolgul_ipa(self):
		self.run_test("얼굴", "{{ko-IPA|audio=Ko-얼굴.ogg}}", "[ʌ̹ɭɡuɭ]", "ipa")

	def test_teukhi_ph(self):
		self.run_test("특히", "{{ko-IPA|a=y}}", "트키", "ph")
	def test_teukhi_rr(self):
		self.run_test("특히", "{{ko-IPA|a=y}}", "teukhi", "rr")
	def test_teukhi_rrr(self):
		self.run_test("특히", "{{ko-IPA|a=y}}", "teughi", "rrr")
	def test_teukhi_mr(self):
		self.run_test("특히", "{{ko-IPA|a=y}}", "t'ŭkhi", "mr")
	def test_teukhi_yr(self):
		self.run_test("특히", "{{ko-IPA|a=y}}", "thuk.hi", "yr")
	def test_teukhi_ipa(self):
		self.run_test("특히", "{{ko-IPA|a=y}}", "[tʰɯcçi]", "ipa")

	def test_gwajeong_ph(self):
		self.run_test("과정", "{{ko-IPA|l=y|a=y}}", "과(ː)정", "ph")
	def test_gwajeong_rr(self):
		self.run_test("과정", "{{ko-IPA|l=y|a=y}}", "gwajeong", "rr")
	def test_gwajeong_rrr(self):
		self.run_test("과정", "{{ko-IPA|l=y|a=y}}", "gwajeong", "rrr")
	def test_gwajeong_mr(self):
		self.run_test("과정", "{{ko-IPA|l=y|a=y}}", "kwajŏng", "mr")
	def test_gwajeong_yr(self):
		self.run_test("과정", "{{ko-IPA|l=y|a=y}}", "kwāceng", "yr")
	def test_gwajeong_ipa(self):
		self.run_test("과정", "{{ko-IPA|l=y|a=y}}", "[ˈkwa̠(ː)d͡ʑʌ̹ŋ]", "ipa")

	def test_undong_ph(self):
		self.run_test("운동", "{{ko-IPA|l=y|a=y}}", "운(ː)동", "ph")
	def test_undong_rr(self):
		self.run_test("운동", "{{ko-IPA|l=y|a=y}}", "undong", "rr")
	def test_undong_rrr(self):
		self.run_test("운동", "{{ko-IPA|l=y|a=y}}", "undong", "rrr")
	def test_undong_mr(self):
		self.run_test("운동", "{{ko-IPA|l=y|a=y}}", "undong", "mr")
	def test_undong_yr(self):
		self.run_test("운동", "{{ko-IPA|l=y|a=y}}", "wūntong", "yr")
	def test_undong_ipa(self):
		self.run_test("운동", "{{ko-IPA|l=y|a=y}}", "[ˈu(ː)ndo̞ŋ]", "ipa")

	def test_daetongnyeong_ph(self):
		self.run_test("대통령", "{{ko-IPA|l=y|a=y}}", "대(ː)통녕/데(ː)통녕", "ph")
	def test_daetongnyeong_rr(self):
		self.run_test("대통령", "{{ko-IPA|l=y|a=y}}", "daetongnyeong", "rr")
	def test_daetongnyeong_rrr(self):
		self.run_test("대통령", "{{ko-IPA|l=y|a=y}}", "daetonglyeong", "rrr")
	def test_daetongnyeong_mr(self):
		self.run_test("대통령", "{{ko-IPA|l=y|a=y}}", "taet'ongnyŏng", "mr")
	def test_daetongnyeong_yr(self):
		self.run_test("대통령", "{{ko-IPA|l=y|a=y}}", "tāy.thonglyeng", "yr")
	def test_daetongnyeong_ipa(self):
		self.run_test("대통령", "{{ko-IPA|l=y|a=y}}", "[ˈtɛ(ː)tʰo̞ŋɲʌ̹ŋ] ~ [ˈte̞(ː)tʰo̞ŋɲʌ̹ŋ]", "ipa")

	def test_peosenteu_ph(self):
		self.run_test("퍼센트", "{{ko-IPA|a=y}}", "퍼센트", "ph")
	def test_peosenteu_rr(self):
		self.run_test("퍼센트", "{{ko-IPA|a=y}}", "peosenteu", "rr")
	def test_peosenteu_rrr(self):
		self.run_test("퍼센트", "{{ko-IPA|a=y}}", "peosenteu", "rrr")
	def test_peosenteu_mr(self):
		self.run_test("퍼센트", "{{ko-IPA|a=y}}", "p'ŏsent'ŭ", "mr")
	def test_peosenteu_yr(self):
		self.run_test("퍼센트", "{{ko-IPA|a=y}}", "pheseynthu", "yr")
	def test_peosenteu_ipa(self):
		self.run_test("퍼센트", "{{ko-IPA|a=y}}", "[pʰʌ̹sʰe̞ntʰɯ]", "ipa")

	def test_jagi_ph(self):
		self.run_test("자기", "{{ko-IPA}}", "자기", "ph")
	def test_jagi_rr(self):
		self.run_test("자기", "{{ko-IPA}}", "jagi", "rr")
	def test_jagi_rrr(self):
		self.run_test("자기", "{{ko-IPA}}", "jagi", "rrr")
	def test_jagi_mr(self):
		self.run_test("자기", "{{ko-IPA}}", "chagi", "mr")
	def test_jagi_yr(self):
		self.run_test("자기", "{{ko-IPA}}", "caki", "yr")
	def test_jagi_ipa(self):
		self.run_test("자기", "{{ko-IPA}}", "[t͡ɕa̠ɡi]", "ipa")
	def test_jagi_ph_1(self):
		self.run_test("자기", "{{ko-IPA|l=y}}", "자(ː)기", "ph")
	def test_jagi_rr_1(self):
		self.run_test("자기", "{{ko-IPA|l=y}}", "jagi", "rr")
	def test_jagi_rrr_1(self):
		self.run_test("자기", "{{ko-IPA|l=y}}", "jagi", "rrr")
	def test_jagi_mr_1(self):
		self.run_test("자기", "{{ko-IPA|l=y}}", "chagi", "mr")
	def test_jagi_yr_1(self):
		self.run_test("자기", "{{ko-IPA|l=y}}", "cāki", "yr")
	def test_jagi_ipa_1(self):
		self.run_test("자기", "{{ko-IPA|l=y}}", "[ˈt͡ɕa̠(ː)ɡi]", "ipa")

	def test_baro_ph(self):
		self.run_test("바로", "{{ko-IPA|a=y}}", "바로", "ph")
	def test_baro_rr(self):
		self.run_test("바로", "{{ko-IPA|a=y}}", "baro", "rr")
	def test_baro_rrr(self):
		self.run_test("바로", "{{ko-IPA|a=y}}", "balo", "rrr")
	def test_baro_mr(self):
		self.run_test("바로", "{{ko-IPA|a=y}}", "paro", "mr")
	def test_baro_yr(self):
		self.run_test("바로", "{{ko-IPA|a=y}}", "palo", "yr")
	def test_baro_ipa(self):
		self.run_test("바로", "{{ko-IPA|a=y}}", "[pa̠ɾo̞]", "ipa")

	def test_geuraeseo_ph(self):
		self.run_test("그래서", "{{ko-IPA|a=y}}", "그래서/그레서", "ph")
	def test_geuraeseo_rr(self):
		self.run_test("그래서", "{{ko-IPA|a=y}}", "geuraeseo", "rr")
	def test_geuraeseo_rrr(self):
		self.run_test("그래서", "{{ko-IPA|a=y}}", "geulaeseo", "rrr")
	def test_geuraeseo_mr(self):
		self.run_test("그래서", "{{ko-IPA|a=y}}", "kŭraesŏ", "mr")
	def test_geuraeseo_yr(self):
		self.run_test("그래서", "{{ko-IPA|a=y}}", "kulayse", "yr")
	def test_geuraeseo_ipa(self):
		self.run_test("그래서", "{{ko-IPA|a=y}}", "[kɯɾɛsʰʌ̹] ~ [kɯɾe̞sʰʌ̹]", "ipa")

	def test_geureonde_ph(self):
		self.run_test("그런데", "{{ko-IPA|a=y}}", "그런데", "ph")
	def test_geureonde_rr(self):
		self.run_test("그런데", "{{ko-IPA|a=y}}", "geureonde", "rr")
	def test_geureonde_rrr(self):
		self.run_test("그런데", "{{ko-IPA|a=y}}", "geuleonde", "rrr")
	def test_geureonde_mr(self):
		self.run_test("그런데", "{{ko-IPA|a=y}}", "kŭrŏnde", "mr")
	def test_geureonde_yr(self):
		self.run_test("그런데", "{{ko-IPA|a=y}}", "kulentey", "yr")
	def test_geureonde_ipa(self):
		self.run_test("그런데", "{{ko-IPA|a=y}}", "[kɯɾʌ̹nde̞]", "ipa")

	def test_modu_ph(self):
		self.run_test("모두", "{{ko-IPA|a=y}}", "모두", "ph")
	def test_modu_rr(self):
		self.run_test("모두", "{{ko-IPA|a=y}}", "modu", "rr")
	def test_modu_rrr(self):
		self.run_test("모두", "{{ko-IPA|a=y}}", "modu", "rrr")
	def test_modu_mr(self):
		self.run_test("모두", "{{ko-IPA|a=y}}", "modu", "mr")
	def test_modu_yr(self):
		self.run_test("모두", "{{ko-IPA|a=y}}", "motwu", "yr")
	def test_modu_ipa(self):
		self.run_test("모두", "{{ko-IPA|a=y}}", "[mo̞du]", "ipa")

	def test_eopsi_ph(self):
		self.run_test("없이", "{{ko-IPA|l=y|a=Ko-없이.ogg}}", "업(ː)씨", "ph")
	def test_eopsi_rr(self):
		self.run_test("없이", "{{ko-IPA|l=y|a=Ko-없이.ogg}}", "eopsi", "rr")
	def test_eopsi_rrr(self):
		self.run_test("없이", "{{ko-IPA|l=y|a=Ko-없이.ogg}}", "eobs'i", "rrr")
	def test_eopsi_mr(self):
		self.run_test("없이", "{{ko-IPA|l=y|a=Ko-없이.ogg}}", "ŏpsi", "mr")
	def test_eopsi_yr(self):
		self.run_test("없이", "{{ko-IPA|l=y|a=Ko-없이.ogg}}", "ēps.i", "yr")
	def test_eopsi_ipa(self):
		self.run_test("없이", "{{ko-IPA|l=y|a=Ko-없이.ogg}}", "[ˈɘ(ː)pɕ͈i]", "ipa")

	def test_eoneu_ph(self):
		self.run_test("어느", "{{ko-IPA|audio=Ko-어느.ogg}}", "어느", "ph")
	def test_eoneu_rr(self):
		self.run_test("어느", "{{ko-IPA|audio=Ko-어느.ogg}}", "eoneu", "rr")
	def test_eoneu_rrr(self):
		self.run_test("어느", "{{ko-IPA|audio=Ko-어느.ogg}}", "eoneu", "rrr")
	def test_eoneu_mr(self):
		self.run_test("어느", "{{ko-IPA|audio=Ko-어느.ogg}}", "ŏnŭ", "mr")
	def test_eoneu_yr(self):
		self.run_test("어느", "{{ko-IPA|audio=Ko-어느.ogg}}", "enu", "yr")
	def test_eoneu_ipa(self):
		self.run_test("어느", "{{ko-IPA|audio=Ko-어느.ogg}}", "[ʌ̹nɯ]", "ipa")

	def test_modeun_ph(self):
		self.run_test("모든", "{{ko-IPA|l=y||a=y}}", "모(ː)든", "ph")
	def test_modeun_rr(self):
		self.run_test("모든", "{{ko-IPA|l=y||a=y}}", "modeun", "rr")
	def test_modeun_rrr(self):
		self.run_test("모든", "{{ko-IPA|l=y||a=y}}", "modeun", "rrr")
	def test_modeun_mr(self):
		self.run_test("모든", "{{ko-IPA|l=y||a=y}}", "modŭn", "mr")
	def test_modeun_yr(self):
		self.run_test("모든", "{{ko-IPA|l=y||a=y}}", "mōtun", "yr")
	def test_modeun_ipa(self):
		self.run_test("모든", "{{ko-IPA|l=y||a=y}}", "[ˈmo̞(ː)dɯn]", "ipa")

	def test_moseup_ph(self):
		self.run_test("모습", "{{ko-IPA}}", "모습", "ph")
	def test_moseup_rr(self):
		self.run_test("모습", "{{ko-IPA}}", "moseup", "rr")
	def test_moseup_rrr(self):
		self.run_test("모습", "{{ko-IPA}}", "moseub", "rrr")
	def test_moseup_mr(self):
		self.run_test("모습", "{{ko-IPA}}", "mosŭp", "mr")
	def test_moseup_yr(self):
		self.run_test("모습", "{{ko-IPA}}", "mosup", "yr")
	def test_moseup_ipa(self):
		self.run_test("모습", "{{ko-IPA}}", "[mo̞sʰɯp̚]", "ipa")

	def test_jiyeok_ph(self):
		self.run_test("지역", "{{ko-IPA|a=y}}", "지역", "ph")
	def test_jiyeok_rr(self):
		self.run_test("지역", "{{ko-IPA|a=y}}", "jiyeok", "rr")
	def test_jiyeok_rrr(self):
		self.run_test("지역", "{{ko-IPA|a=y}}", "jiyeog", "rrr")
	def test_jiyeok_mr(self):
		self.run_test("지역", "{{ko-IPA|a=y}}", "chiyŏk", "mr")
	def test_jiyeok_yr(self):
		self.run_test("지역", "{{ko-IPA|a=y}}", "ciyek", "yr")
	def test_jiyeok_ipa(self):
		self.run_test("지역", "{{ko-IPA|a=y}}", "[t͡ɕijʌ̹k̚]", "ipa")

	def test_eodi_ph(self):
		self.run_test("어디", "{{ko-IPA}}", "어디", "ph")
	def test_eodi_rr(self):
		self.run_test("어디", "{{ko-IPA}}", "eodi", "rr")
	def test_eodi_rrr(self):
		self.run_test("어디", "{{ko-IPA}}", "eodi", "rrr")
	def test_eodi_mr(self):
		self.run_test("어디", "{{ko-IPA}}", "ŏdi", "mr")
	def test_eodi_yr(self):
		self.run_test("어디", "{{ko-IPA}}", "eti", "yr")
	def test_eodi_ipa(self):
		self.run_test("어디", "{{ko-IPA}}", "[ʌ̹di]", "ipa")

	def test_gwangye_ph(self):
		self.run_test("관계", "{{ko-IPA|a=y}}", "관계/관게", "ph")
	def test_gwangye_rr(self):
		self.run_test("관계", "{{ko-IPA|a=y}}", "gwan'gye", "rr")
	def test_gwangye_rrr(self):
		self.run_test("관계", "{{ko-IPA|a=y}}", "gwangye", "rrr")
	def test_gwangye_mr(self):
		self.run_test("관계", "{{ko-IPA|a=y}}", "kwan'gye", "mr")
	def test_gwangye_yr(self):
		self.run_test("관계", "{{ko-IPA|a=y}}", "kwankyey", "yr")
	def test_gwangye_ipa(self):
		self.run_test("관계", "{{ko-IPA|a=y}}", "[kwa̠nɡje̞] ~ [kwa̠nɡe̞]", "ipa")

	def test_yeogi_ph(self):
		self.run_test("여기", "{{ko-IPA|a=y}}", "여기", "ph")
	def test_yeogi_rr(self):
		self.run_test("여기", "{{ko-IPA|a=y}}", "yeogi", "rr")
	def test_yeogi_rrr(self):
		self.run_test("여기", "{{ko-IPA|a=y}}", "yeogi", "rrr")
	def test_yeogi_mr(self):
		self.run_test("여기", "{{ko-IPA|a=y}}", "yŏgi", "mr")
	def test_yeogi_yr(self):
		self.run_test("여기", "{{ko-IPA|a=y}}", "yeki", "yr")
	def test_yeogi_ipa(self):
		self.run_test("여기", "{{ko-IPA|a=y}}", "[jʌ̹ɡi]", "ipa")

	def test_gukga_ph(self):
		self.run_test("국가", "{{ko-IPA}}", "국까", "ph")
	def test_gukga_rr(self):
		self.run_test("국가", "{{ko-IPA}}", "gukga", "rr")
	def test_gukga_rrr(self):
		self.run_test("국가", "{{ko-IPA}}", "gugga", "rrr")
	def test_gukga_mr(self):
		self.run_test("국가", "{{ko-IPA}}", "kukka", "mr")
	def test_gukga_yr(self):
		self.run_test("국가", "{{ko-IPA}}", "kwuk.ka", "yr")
	def test_gukga_ipa(self):
		self.run_test("국가", "{{ko-IPA}}", "[kuk̚k͈a̠]", "ipa")

	def test_beon_ph(self):
		self.run_test("번", "{{ko-IPA}}", "번", "ph")
	def test_beon_rr(self):
		self.run_test("번", "{{ko-IPA}}", "beon", "rr")
	def test_beon_rrr(self):
		self.run_test("번", "{{ko-IPA}}", "beon", "rrr")
	def test_beon_mr(self):
		self.run_test("번", "{{ko-IPA}}", "pŏn", "mr")
	def test_beon_yr(self):
		self.run_test("번", "{{ko-IPA}}", "pen", "yr")
	def test_beon_ipa(self):
		self.run_test("번", "{{ko-IPA}}", "[pʌ̹n]", "ipa")

	def test_jeongbu_ph(self):
		self.run_test("정부", "{{ko-IPA|a=y}}", "정부", "ph")
	def test_jeongbu_rr(self):
		self.run_test("정부", "{{ko-IPA|a=y}}", "jeongbu", "rr")
	def test_jeongbu_rrr(self):
		self.run_test("정부", "{{ko-IPA|a=y}}", "jeongbu", "rrr")
	def test_jeongbu_mr(self):
		self.run_test("정부", "{{ko-IPA|a=y}}", "chŏngbu", "mr")
	def test_jeongbu_yr(self):
		self.run_test("정부", "{{ko-IPA|a=y}}", "cengpu", "yr")
	def test_jeongbu_ipa(self):
		self.run_test("정부", "{{ko-IPA|a=y}}", "[t͡ɕʌ̹ŋbu]", "ipa")

	def test_namda_ph(self):
		self.run_test("남다", "{{ko-IPA|l=y|com=1|a=y}}", "남(ː)따", "ph")
	def test_namda_rr(self):
		self.run_test("남다", "{{ko-IPA|l=y|com=1|a=y}}", "namda", "rr")
	def test_namda_rrr(self):
		self.run_test("남다", "{{ko-IPA|l=y|com=1|a=y}}", "namda", "rrr")
	def test_namda_mr(self):
		self.run_test("남다", "{{ko-IPA|l=y|com=1|a=y}}", "namta", "mr")
	def test_namda_yr(self):
		self.run_test("남다", "{{ko-IPA|l=y|com=1|a=y}}", "nāmqta", "yr")
	def test_namda_ipa(self):
		self.run_test("남다", "{{ko-IPA|l=y|com=1|a=y}}", "[ˈna̠(ː)mt͈a̠]", "ipa")

	def test_geuttae_ph(self):
		self.run_test("그때", "{{ko-IPA|a=y}}", "그때/그떼", "ph")
	def test_geuttae_rr(self):
		self.run_test("그때", "{{ko-IPA|a=y}}", "geuttae", "rr")
	def test_geuttae_rrr(self):
		self.run_test("그때", "{{ko-IPA|a=y}}", "geu'ttae", "rrr")
	def test_geuttae_mr(self):
		self.run_test("그때", "{{ko-IPA|a=y}}", "kŭttae", "mr")
	def test_geuttae_yr(self):
		self.run_test("그때", "{{ko-IPA|a=y}}", "ku.ttay", "yr")
	def test_geuttae_ipa(self):
		self.run_test("그때", "{{ko-IPA|a=y}}", "[kɯt͈ɛ] ~ [kɯt͈e̞]", "ipa")

	def test_cheoeum_ph(self):
		self.run_test("처음", "{{ko-IPA|a=y}}", "처음", "ph")
	def test_cheoeum_rr(self):
		self.run_test("처음", "{{ko-IPA|a=y}}", "cheo'eum", "rr")
	def test_cheoeum_rrr(self):
		self.run_test("처음", "{{ko-IPA|a=y}}", "cheo'eum", "rrr")
	def test_cheoeum_mr(self):
		self.run_test("처음", "{{ko-IPA|a=y}}", "ch'ŏŭm", "mr")
	def test_cheoeum_yr(self):
		self.run_test("처음", "{{ko-IPA|a=y}}", "cheum", "yr")
	def test_cheoeum_ipa(self):
		self.run_test("처음", "{{ko-IPA|a=y}}", "[t͡ɕʰʌ̹ɯm]", "ipa")

	def test_urinara_ph(self):
		self.run_test("우리나라", "{{ko-IPA|a=y}}", "우리나라", "ph")
	def test_urinara_rr(self):
		self.run_test("우리나라", "{{ko-IPA|a=y}}", "urinara", "rr")
	def test_urinara_rrr(self):
		self.run_test("우리나라", "{{ko-IPA|a=y}}", "ulinala", "rrr")
	def test_urinara_mr(self):
		self.run_test("우리나라", "{{ko-IPA|a=y}}", "urinara", "mr")
	def test_urinara_yr(self):
		self.run_test("우리나라", "{{ko-IPA|a=y}}", "wulinala", "yr")
	def test_urinara_ipa(self):
		self.run_test("우리나라", "{{ko-IPA|a=y}}", "[uɾina̠ɾa̠]", "ipa")

	def test_sai_ph(self):
		self.run_test("사이", "{{ko-IPA|a=y}}", "사이", "ph")
	def test_sai_rr(self):
		self.run_test("사이", "{{ko-IPA|a=y}}", "sai", "rr")
	def test_sai_rrr(self):
		self.run_test("사이", "{{ko-IPA|a=y}}", "sai", "rrr")
	def test_sai_mr(self):
		self.run_test("사이", "{{ko-IPA|a=y}}", "sai", "mr")
	def test_sai_yr(self):
		self.run_test("사이", "{{ko-IPA|a=y}}", "sai", "yr")
	def test_sai_ipa(self):
		self.run_test("사이", "{{ko-IPA|a=y}}", "[sʰa̠i]", "ipa")

	def test_ppun_ph(self):
		self.run_test("뿐", "{{ko-IPA|a=y}}", "뿐", "ph")
	def test_ppun_rr(self):
		self.run_test("뿐", "{{ko-IPA|a=y}}", "ppun", "rr")
	def test_ppun_rrr(self):
		self.run_test("뿐", "{{ko-IPA|a=y}}", "ppun", "rrr")
	def test_ppun_mr(self):
		self.run_test("뿐", "{{ko-IPA|a=y}}", "ppun", "mr")
	def test_ppun_yr(self):
		self.run_test("뿐", "{{ko-IPA|a=y}}", "ppun", "yr")
	def test_ppun_ipa(self):
		self.run_test("뿐", "{{ko-IPA|a=y}}", "[p͈un]", "ipa")

	def test_saenghwal_ph(self):
		self.run_test("생활", "{{ko-IPA|a=y}}", "생활/셍활", "ph")
	def test_saenghwal_rr(self):
		self.run_test("생활", "{{ko-IPA|a=y}}", "saenghwal", "rr")
	def test_saenghwal_rrr(self):
		self.run_test("생활", "{{ko-IPA|a=y}}", "saenghwal", "rrr")
	def test_saenghwal_mr(self):
		self.run_test("생활", "{{ko-IPA|a=y}}", "saenghwal", "mr")
	def test_saenghwal_yr(self):
		self.run_test("생활", "{{ko-IPA|a=y}}", "saynghwal", "yr")
	def test_saenghwal_ipa(self):
		self.run_test("생활", "{{ko-IPA|a=y}}", "[sʰɛŋβwa̠ɭ] ~ [sʰe̞ŋβwa̠ɭ]", "ipa")

	def test_ibeon_ph(self):
		self.run_test("이번", "{{ko-IPA|a=y}}", "이번", "ph")
	def test_ibeon_rr(self):
		self.run_test("이번", "{{ko-IPA|a=y}}", "ibeon", "rr")
	def test_ibeon_rrr(self):
		self.run_test("이번", "{{ko-IPA|a=y}}", "ibeon", "rrr")
	def test_ibeon_mr(self):
		self.run_test("이번", "{{ko-IPA|a=y}}", "ibŏn", "mr")
	def test_ibeon_yr(self):
		self.run_test("이번", "{{ko-IPA|a=y}}", "ipen", "yr")
	def test_ibeon_ipa(self):
		self.run_test("이번", "{{ko-IPA|a=y}}", "[ibʌ̹n]", "ipa")

	def test_geogi_ph(self):
		self.run_test("거기", "{{ko-IPA|a=y}}", "거기", "ph")
	def test_geogi_rr(self):
		self.run_test("거기", "{{ko-IPA|a=y}}", "geogi", "rr")
	def test_geogi_rrr(self):
		self.run_test("거기", "{{ko-IPA|a=y}}", "geogi", "rrr")
	def test_geogi_mr(self):
		self.run_test("거기", "{{ko-IPA|a=y}}", "kŏgi", "mr")
	def test_geogi_yr(self):
		self.run_test("거기", "{{ko-IPA|a=y}}", "keki", "yr")
	def test_geogi_ipa(self):
		self.run_test("거기", "{{ko-IPA|a=y}}", "[kʌ̹ɡi]", "ipa")

	def test_daehak_ph(self):
		self.run_test("대학", "{{ko-IPA|l=y|a=y}}", "대(ː)학/데(ː)학", "ph")
	def test_daehak_rr(self):
		self.run_test("대학", "{{ko-IPA|l=y|a=y}}", "daehak", "rr")
	def test_daehak_rrr(self):
		self.run_test("대학", "{{ko-IPA|l=y|a=y}}", "daehag", "rrr")
	def test_daehak_mr(self):
		self.run_test("대학", "{{ko-IPA|l=y|a=y}}", "taehak", "mr")
	def test_daehak_yr(self):
		self.run_test("대학", "{{ko-IPA|l=y|a=y}}", "tāyhak", "yr")
	def test_daehak_ipa(self):
		self.run_test("대학", "{{ko-IPA|l=y|a=y}}", "[ˈtɛ(ː)ɦa̠k̚] ~ [ˈte̞(ː)ɦa̠k̚]", "ipa")

	def test_sesang_ph(self):
		self.run_test("세상", "{{ko-IPA|l=y}}", "세(ː)상", "ph")
	def test_sesang_rr(self):
		self.run_test("세상", "{{ko-IPA|l=y}}", "sesang", "rr")
	def test_sesang_rrr(self):
		self.run_test("세상", "{{ko-IPA|l=y}}", "sesang", "rrr")
	def test_sesang_mr(self):
		self.run_test("세상", "{{ko-IPA|l=y}}", "sesang", "mr")
	def test_sesang_yr(self):
		self.run_test("세상", "{{ko-IPA|l=y}}", "sēysang", "yr")
	def test_sesang_ipa(self):
		self.run_test("세상", "{{ko-IPA|l=y}}", "[ˈsʰe̞(ː)sʰa̠ŋ]", "ipa")

	def test_nampyeon_ph(self):
		self.run_test("남편", "{{ko-IPA|a=y}}", "남편", "ph")
	def test_nampyeon_rr(self):
		self.run_test("남편", "{{ko-IPA|a=y}}", "nampyeon", "rr")
	def test_nampyeon_rrr(self):
		self.run_test("남편", "{{ko-IPA|a=y}}", "nampyeon", "rrr")
	def test_nampyeon_mr(self):
		self.run_test("남편", "{{ko-IPA|a=y}}", "namp'yŏn", "mr")
	def test_nampyeon_yr(self):
		self.run_test("남편", "{{ko-IPA|a=y}}", "namphyen", "yr")
	def test_nampyeon_ipa(self):
		self.run_test("남편", "{{ko-IPA|a=y}}", "[na̠mpʰjʌ̹n]", "ipa")

	def test_sageon_ph(self):
		self.run_test("사건", "{{ko-IPA|l=y|com=1|a=y}}", "사(ː)껀", "ph")
	def test_sageon_rr(self):
		self.run_test("사건", "{{ko-IPA|l=y|com=1|a=y}}", "sageon", "rr")
	def test_sageon_rrr(self):
		self.run_test("사건", "{{ko-IPA|l=y|com=1|a=y}}", "sageon", "rrr")
	def test_sageon_mr(self):
		self.run_test("사건", "{{ko-IPA|l=y|com=1|a=y}}", "sakŏn", "mr")
	def test_sageon_yr(self):
		self.run_test("사건", "{{ko-IPA|l=y|com=1|a=y}}", "sāqken", "yr")
	def test_sageon_ipa(self):
		self.run_test("사건", "{{ko-IPA|l=y|com=1|a=y}}", "[ˈsʰa̠(ː)k͈ʌ̹n]", "ipa")

	def test_saengmyeong_ph(self):
		self.run_test("생명", "{{ko-IPA|a=y}}", "생명/셍명", "ph")
	def test_saengmyeong_rr(self):
		self.run_test("생명", "{{ko-IPA|a=y}}", "saengmyeong", "rr")
	def test_saengmyeong_rrr(self):
		self.run_test("생명", "{{ko-IPA|a=y}}", "saengmyeong", "rrr")
	def test_saengmyeong_mr(self):
		self.run_test("생명", "{{ko-IPA|a=y}}", "saengmyŏng", "mr")
	def test_saengmyeong_yr(self):
		self.run_test("생명", "{{ko-IPA|a=y}}", "sayngmyeng", "yr")
	def test_saengmyeong_ipa(self):
		self.run_test("생명", "{{ko-IPA|a=y}}", "[sʰɛŋmjʌ̹ŋ] ~ [sʰe̞ŋmjʌ̹ŋ]", "ipa")

	def test_gungmin_ph(self):
		self.run_test("국민", "{{ko-IPA|a=y}}", "궁민", "ph")
	def test_gungmin_rr(self):
		self.run_test("국민", "{{ko-IPA|a=y}}", "gungmin", "rr")
	def test_gungmin_rrr(self):
		self.run_test("국민", "{{ko-IPA|a=y}}", "gugmin", "rrr")
	def test_gungmin_mr(self):
		self.run_test("국민", "{{ko-IPA|a=y}}", "kungmin", "mr")
	def test_gungmin_yr(self):
		self.run_test("국민", "{{ko-IPA|a=y}}", "kwukmin", "yr")
	def test_gungmin_ipa(self):
		self.run_test("국민", "{{ko-IPA|a=y}}", "[kuŋmin]", "ipa")

	def test_uimi_ph(self):
		self.run_test("의미", "{{ko-IPA|l=y|a=y}}", "의(ː)미", "ph")
	def test_uimi_rr(self):
		self.run_test("의미", "{{ko-IPA|l=y|a=y}}", "uimi", "rr")
	def test_uimi_rrr(self):
		self.run_test("의미", "{{ko-IPA|l=y|a=y}}", "uimi", "rrr")
	def test_uimi_mr(self):
		self.run_test("의미", "{{ko-IPA|l=y|a=y}}", "ŭimi", "mr")
	def test_uimi_yr(self):
		self.run_test("의미", "{{ko-IPA|l=y|a=y}}", "ūymi", "yr")
	def test_uimi_ipa(self):
		self.run_test("의미", "{{ko-IPA|l=y|a=y}}", "[ˈɰi(ː)mi]", "ipa")

	def test_dongan_ph(self):
		self.run_test("동안", "{{ko-IPA|a=y}}", "동안", "ph")
	def test_dongan_rr(self):
		self.run_test("동안", "{{ko-IPA|a=y}}", "dong'an", "rr")
	def test_dongan_rrr(self):
		self.run_test("동안", "{{ko-IPA|a=y}}", "dong'an", "rrr")
	def test_dongan_mr(self):
		self.run_test("동안", "{{ko-IPA|a=y}}", "tongan", "mr")
	def test_dongan_yr(self):
		self.run_test("동안", "{{ko-IPA|a=y}}", "tongan", "yr")
	def test_dongan_ipa(self):
		self.run_test("동안", "{{ko-IPA|a=y}}", "[to̞ŋa̠n]", "ipa")

	def test_naeyong_ph(self):
		self.run_test("내용", "{{ko-IPA|l=y|a=y}}", "내(ː)용/네(ː)용", "ph")
	def test_naeyong_rr(self):
		self.run_test("내용", "{{ko-IPA|l=y|a=y}}", "naeyong", "rr")
	def test_naeyong_rrr(self):
		self.run_test("내용", "{{ko-IPA|l=y|a=y}}", "naeyong", "rrr")
	def test_naeyong_mr(self):
		self.run_test("내용", "{{ko-IPA|l=y|a=y}}", "naeyong", "mr")
	def test_naeyong_yr(self):
		self.run_test("내용", "{{ko-IPA|l=y|a=y}}", "nāyyong", "yr")
	def test_naeyong_ipa(self):
		self.run_test("내용", "{{ko-IPA|l=y|a=y}}", "[ˈnɛ(ː)joŋ] ~ [ˈne̞(ː)joŋ]", "ipa")

	def test_gyeolgwa_ph(self):
		self.run_test("결과", "{{ko-IPA|a=y}}", "결과", "ph")
	def test_gyeolgwa_rr(self):
		self.run_test("결과", "{{ko-IPA|a=y}}", "gyeolgwa", "rr")
	def test_gyeolgwa_rrr(self):
		self.run_test("결과", "{{ko-IPA|a=y}}", "gyeolgwa", "rrr")
	def test_gyeolgwa_mr(self):
		self.run_test("결과", "{{ko-IPA|a=y}}", "kyŏlgwa", "mr")
	def test_gyeolgwa_yr(self):
		self.run_test("결과", "{{ko-IPA|a=y}}", "kyel.kwa", "yr")
	def test_gyeolgwa_ipa(self):
		self.run_test("결과", "{{ko-IPA|a=y}}", "[kjʌ̹ɭɡwa̠]", "ipa")

	def test_bonaeda_ph(self):
		self.run_test("보내다", "{{ko-IPA|a=y}}", "보내다/보네다", "ph")
	def test_bonaeda_rr(self):
		self.run_test("보내다", "{{ko-IPA|a=y}}", "bonaeda", "rr")
	def test_bonaeda_rrr(self):
		self.run_test("보내다", "{{ko-IPA|a=y}}", "bonaeda", "rrr")
	def test_bonaeda_mr(self):
		self.run_test("보내다", "{{ko-IPA|a=y}}", "ponaeda", "mr")
	def test_bonaeda_yr(self):
		self.run_test("보내다", "{{ko-IPA|a=y}}", "ponayta", "yr")
	def test_bonaeda_ipa(self):
		self.run_test("보내다", "{{ko-IPA|a=y}}", "[po̞nɛda̠] ~ [po̞ne̞da̠]", "ipa")

	def test_gieop_ph(self):
		self.run_test("기업", "{{ko-IPA|a=y}}", "기업", "ph")
	def test_gieop_rr(self):
		self.run_test("기업", "{{ko-IPA|a=y}}", "gieop", "rr")
	def test_gieop_rrr(self):
		self.run_test("기업", "{{ko-IPA|a=y}}", "gieob", "rrr")
	def test_gieop_mr(self):
		self.run_test("기업", "{{ko-IPA|a=y}}", "kiŏp", "mr")
	def test_gieop_yr(self):
		self.run_test("기업", "{{ko-IPA|a=y}}", "kiep", "yr")
	def test_gieop_ipa(self):
		self.run_test("기업", "{{ko-IPA|a=y}}", "[kiʌ̹p̚]", "ipa")

	def test_jakpum_ph(self):
		self.run_test("작품", "{{ko-IPA|a=y}}", "작품", "ph")
	def test_jakpum_rr(self):
		self.run_test("작품", "{{ko-IPA|a=y}}", "jakpum", "rr")
	def test_jakpum_rrr(self):
		self.run_test("작품", "{{ko-IPA|a=y}}", "jagpum", "rrr")
	def test_jakpum_mr(self):
		self.run_test("작품", "{{ko-IPA|a=y}}", "chakp'um", "mr")
	def test_jakpum_yr(self):
		self.run_test("작품", "{{ko-IPA|a=y}}", "cakphum", "yr")
	def test_jakpum_ipa(self):
		self.run_test("작품", "{{ko-IPA|a=y}}", "[t͡ɕa̠k̚pʰum]", "ipa")

	def test_sanghwang_ph(self):
		self.run_test("상황", "{{ko-IPA|a=y}}", "상황", "ph")
	def test_sanghwang_rr(self):
		self.run_test("상황", "{{ko-IPA|a=y}}", "sanghwang", "rr")
	def test_sanghwang_rrr(self):
		self.run_test("상황", "{{ko-IPA|a=y}}", "sanghwang", "rrr")
	def test_sanghwang_mr(self):
		self.run_test("상황", "{{ko-IPA|a=y}}", "sanghwang", "mr")
	def test_sanghwang_yr(self):
		self.run_test("상황", "{{ko-IPA|a=y}}", "sanghwang", "yr")
	def test_sanghwang_ipa(self):
		self.run_test("상황", "{{ko-IPA|a=y}}", "[sʰa̠ŋβwa̠ŋ]", "ipa")

	def test_ihu_ph(self):
		self.run_test("이후", "{{ko-IPA|a=y|l=y}}", "이(ː)후", "ph")
	def test_ihu_rr(self):
		self.run_test("이후", "{{ko-IPA|a=y|l=y}}", "ihu", "rr")
	def test_ihu_rrr(self):
		self.run_test("이후", "{{ko-IPA|a=y|l=y}}", "ihu", "rrr")
	def test_ihu_mr(self):
		self.run_test("이후", "{{ko-IPA|a=y|l=y}}", "ihu", "mr")
	def test_ihu_yr(self):
		self.run_test("이후", "{{ko-IPA|a=y|l=y}}", "īhwu", "yr")
	def test_ihu_ipa(self):
		self.run_test("이후", "{{ko-IPA|a=y|l=y}}", "[ˈi(ː)βu]", "ipa")

	def test_dangsi_ph(self):
		self.run_test("당시", "{{ko-IPA}}", "당시", "ph")
	def test_dangsi_rr(self):
		self.run_test("당시", "{{ko-IPA}}", "dangsi", "rr")
	def test_dangsi_rrr(self):
		self.run_test("당시", "{{ko-IPA}}", "dangsi", "rrr")
	def test_dangsi_mr(self):
		self.run_test("당시", "{{ko-IPA}}", "tangsi", "mr")
	def test_dangsi_yr(self):
		self.run_test("당시", "{{ko-IPA}}", "tangsi", "yr")
	def test_dangsi_ipa(self):
		self.run_test("당시", "{{ko-IPA}}", "[ta̠ŋɕʰi]", "ipa")
	def test_dangsi_ph_1(self):
		self.run_test("당시", "{{ko-IPA}}", "당시", "ph")
	def test_dangsi_rr_1(self):
		self.run_test("당시", "{{ko-IPA}}", "dangsi", "rr")
	def test_dangsi_rrr_1(self):
		self.run_test("당시", "{{ko-IPA}}", "dangsi", "rrr")
	def test_dangsi_mr_1(self):
		self.run_test("당시", "{{ko-IPA}}", "tangsi", "mr")
	def test_dangsi_yr_1(self):
		self.run_test("당시", "{{ko-IPA}}", "tangsi", "yr")
	def test_dangsi_ipa_1(self):
		self.run_test("당시", "{{ko-IPA}}", "[ta̠ŋɕʰi]", "ipa")

	def test_munhak_ph(self):
		self.run_test("문학", "{{ko-IPA|a=y}}", "문학", "ph")
	def test_munhak_rr(self):
		self.run_test("문학", "{{ko-IPA|a=y}}", "munhak", "rr")
	def test_munhak_rrr(self):
		self.run_test("문학", "{{ko-IPA|a=y}}", "munhag", "rrr")
	def test_munhak_mr(self):
		self.run_test("문학", "{{ko-IPA|a=y}}", "munhak", "mr")
	def test_munhak_yr(self):
		self.run_test("문학", "{{ko-IPA|a=y}}", "mun.hak", "yr")
	def test_munhak_ipa(self):
		self.run_test("문학", "{{ko-IPA|a=y}}", "[munɦa̠k̚]", "ipa")

	def test_jibang_ph(self):
		self.run_test("지방", "{{ko-IPA}}", "지방", "ph")
	def test_jibang_rr(self):
		self.run_test("지방", "{{ko-IPA}}", "jibang", "rr")
	def test_jibang_rrr(self):
		self.run_test("지방", "{{ko-IPA}}", "jibang", "rrr")
	def test_jibang_mr(self):
		self.run_test("지방", "{{ko-IPA}}", "chibang", "mr")
	def test_jibang_yr(self):
		self.run_test("지방", "{{ko-IPA}}", "cipang", "yr")
	def test_jibang_ipa(self):
		self.run_test("지방", "{{ko-IPA}}", "[t͡ɕiba̠ŋ]", "ipa")

	def test_choegeun_ph(self):
		self.run_test("최근", "{{ko-IPA|l=y|a=y}}", "췌(ː)근/최(ː)근", "ph")
	def test_choegeun_rr(self):
		self.run_test("최근", "{{ko-IPA|l=y|a=y}}", "choegeun", "rr")
	def test_choegeun_rrr(self):
		self.run_test("최근", "{{ko-IPA|l=y|a=y}}", "choegeun", "rrr")
	def test_choegeun_mr(self):
		self.run_test("최근", "{{ko-IPA|l=y|a=y}}", "ch'oegŭn", "mr")
	def test_choegeun_yr(self):
		self.run_test("최근", "{{ko-IPA|l=y|a=y}}", "chōykun", "yr")
	def test_choegeun_ipa(self):
		self.run_test("최근", "{{ko-IPA|l=y|a=y}}", "[ˈt͡ɕʰwe̞(ː)ɡɯn] ~ [ˈt͡ɕʰø̞(ː)ɡɯn]", "ipa")

	def test_hyeonsil_ph(self):
		self.run_test("현실", "{{ko-IPA|l=y|a=y}}", "현(ː)실", "ph")
	def test_hyeonsil_rr(self):
		self.run_test("현실", "{{ko-IPA|l=y|a=y}}", "hyeonsil", "rr")
	def test_hyeonsil_rrr(self):
		self.run_test("현실", "{{ko-IPA|l=y|a=y}}", "hyeonsil", "rrr")
	def test_hyeonsil_mr(self):
		self.run_test("현실", "{{ko-IPA|l=y|a=y}}", "hyŏnsil", "mr")
	def test_hyeonsil_yr(self):
		self.run_test("현실", "{{ko-IPA|l=y|a=y}}", "hyēnsil", "yr")
	def test_hyeonsil_ipa(self):
		self.run_test("현실", "{{ko-IPA|l=y|a=y}}", "[ˈçɘ(ː)nɕʰiɭ]", "ipa")

	def test_hwangyeong_ph(self):
		self.run_test("환경", "{{ko-IPA|a=y}}", "환경", "ph")
	def test_hwangyeong_rr(self):
		self.run_test("환경", "{{ko-IPA|a=y}}", "hwan'gyeong", "rr")
	def test_hwangyeong_rrr(self):
		self.run_test("환경", "{{ko-IPA|a=y}}", "hwangyeong", "rrr")
	def test_hwangyeong_mr(self):
		self.run_test("환경", "{{ko-IPA|a=y}}", "hwan'gyŏng", "mr")
	def test_hwangyeong_yr(self):
		self.run_test("환경", "{{ko-IPA|a=y}}", "hwankyeng", "yr")
	def test_hwangyeong_ipa(self):
		self.run_test("환경", "{{ko-IPA|a=y}}", "[ɸwa̠nɡjʌ̹ŋ]", "ipa")

	def test_jache_ph(self):
		self.run_test("자체", "{{ko-IPA|a=y}}", "자체", "ph")
	def test_jache_rr(self):
		self.run_test("자체", "{{ko-IPA|a=y}}", "jache", "rr")
	def test_jache_rrr(self):
		self.run_test("자체", "{{ko-IPA|a=y}}", "jache", "rrr")
	def test_jache_mr(self):
		self.run_test("자체", "{{ko-IPA|a=y}}", "chach'e", "mr")
	def test_jache_yr(self):
		self.run_test("자체", "{{ko-IPA|a=y}}", "ca.chey", "yr")
	def test_jache_ipa(self):
		self.run_test("자체", "{{ko-IPA|a=y}}", "[t͡ɕa̠t͡ɕʰe̞]", "ipa")

	def test_bubun_ph(self):
		self.run_test("부분", "{{ko-IPA}}", "부분", "ph")
	def test_bubun_rr(self):
		self.run_test("부분", "{{ko-IPA}}", "bubun", "rr")
	def test_bubun_rrr(self):
		self.run_test("부분", "{{ko-IPA}}", "bubun", "rrr")
	def test_bubun_mr(self):
		self.run_test("부분", "{{ko-IPA}}", "pubun", "mr")
	def test_bubun_yr(self):
		self.run_test("부분", "{{ko-IPA}}", "pupun", "yr")
	def test_bubun_ipa(self):
		self.run_test("부분", "{{ko-IPA}}", "[pubun]", "ipa")

	def test_jungyohada_ph(self):
		self.run_test("중요하다", "{{ko-IPA|l=y|a=y}}", "중(ː)요하다", "ph")
	def test_jungyohada_rr(self):
		self.run_test("중요하다", "{{ko-IPA|l=y|a=y}}", "jung'yohada", "rr")
	def test_jungyohada_rrr(self):
		self.run_test("중요하다", "{{ko-IPA|l=y|a=y}}", "jung'yohada", "rrr")
	def test_jungyohada_mr(self):
		self.run_test("중요하다", "{{ko-IPA|l=y|a=y}}", "chungyohada", "mr")
	def test_jungyohada_yr(self):
		self.run_test("중요하다", "{{ko-IPA|l=y|a=y}}", "cwūngyohata", "yr")
	def test_jungyohada_ipa(self):
		self.run_test("중요하다", "{{ko-IPA|l=y|a=y}}", "[ˈt͡ɕu(ː)ŋjoɦa̠da̠]", "ipa")

	def test_jukda_ph(self):
		self.run_test("죽다", "{{ko-IPA|a=Ko-죽다.ogg}}", "죽따", "ph")
	def test_jukda_rr(self):
		self.run_test("죽다", "{{ko-IPA|a=Ko-죽다.ogg}}", "jukda", "rr")
	def test_jukda_rrr(self):
		self.run_test("죽다", "{{ko-IPA|a=Ko-죽다.ogg}}", "jugda", "rrr")
	def test_jukda_mr(self):
		self.run_test("죽다", "{{ko-IPA|a=Ko-죽다.ogg}}", "chukta", "mr")
	def test_jukda_yr(self):
		self.run_test("죽다", "{{ko-IPA|a=Ko-죽다.ogg}}", "cwukta", "yr")
	def test_jukda_ipa(self):
		self.run_test("죽다", "{{ko-IPA|a=Ko-죽다.ogg}}", "[t͡ɕuk̚t͈a̠]", "ipa")

	def test_piryohada_ph(self):
		self.run_test("필요하다", "{{ko-IPA|a=y}}", "피료하다", "ph")
	def test_piryohada_rr(self):
		self.run_test("필요하다", "{{ko-IPA|a=y}}", "piryohada", "rr")
	def test_piryohada_rrr(self):
		self.run_test("필요하다", "{{ko-IPA|a=y}}", "pil'yohada", "rrr")
	def test_piryohada_mr(self):
		self.run_test("필요하다", "{{ko-IPA|a=y}}", "p'iryohada", "mr")
	def test_piryohada_yr(self):
		self.run_test("필요하다", "{{ko-IPA|a=y}}", "phil.yohata", "yr")
	def test_piryohada_ipa(self):
		self.run_test("필요하다", "{{ko-IPA|a=y}}", "[pʰiɾjoɦa̠da̠]", "ipa")

	def test_sayonghada_ph(self):
		self.run_test("사용하다", "{{ko-IPA|l=y|a=y}}", "사(ː)용하다", "ph")
	def test_sayonghada_rr(self):
		self.run_test("사용하다", "{{ko-IPA|l=y|a=y}}", "sayonghada", "rr")
	def test_sayonghada_rrr(self):
		self.run_test("사용하다", "{{ko-IPA|l=y|a=y}}", "sayonghada", "rrr")
	def test_sayonghada_mr(self):
		self.run_test("사용하다", "{{ko-IPA|l=y|a=y}}", "sayonghada", "mr")
	def test_sayonghada_yr(self):
		self.run_test("사용하다", "{{ko-IPA|l=y|a=y}}", "sā.yonghata", "yr")
	def test_sayonghada_ipa(self):
		self.run_test("사용하다", "{{ko-IPA|l=y|a=y}}", "[ˈsʰa̠(ː)joŋɦa̠da̠]", "ipa")

	def test_saenggida_ph(self):
		self.run_test("생기다", "{{ko-IPA|a=y}}", "생기다/셍기다", "ph")
	def test_saenggida_rr(self):
		self.run_test("생기다", "{{ko-IPA|a=y}}", "saenggida", "rr")
	def test_saenggida_rrr(self):
		self.run_test("생기다", "{{ko-IPA|a=y}}", "saenggida", "rrr")
	def test_saenggida_mr(self):
		self.run_test("생기다", "{{ko-IPA|a=y}}", "saenggida", "mr")
	def test_saenggida_yr(self):
		self.run_test("생기다", "{{ko-IPA|a=y}}", "sayngkita", "yr")
	def test_saenggida_ipa(self):
		self.run_test("생기다", "{{ko-IPA|a=y}}", "[sʰɛŋɡida̠] ~ [sʰe̞ŋɡida̠]", "ipa")

	def test_deureooda_ph(self):
		self.run_test("들어오다", "{{ko-IPA|a=y}}", "드러오다", "ph")
	def test_deureooda_rr(self):
		self.run_test("들어오다", "{{ko-IPA|a=y}}", "deureooda", "rr")
	def test_deureooda_rrr(self):
		self.run_test("들어오다", "{{ko-IPA|a=y}}", "deul'eooda", "rrr")
	def test_deureooda_mr(self):
		self.run_test("들어오다", "{{ko-IPA|a=y}}", "tŭrŏoda", "mr")
	def test_deureooda_yr(self):
		self.run_test("들어오다", "{{ko-IPA|a=y}}", "tul.eota", "yr")
	def test_deureooda_ipa(self):
		self.run_test("들어오다", "{{ko-IPA|a=y}}", "[tɯɾʌ̹o̞da̠]", "ipa")

	def test_jasu_ph(self):
		self.run_test("자수", "{{ko-IPA|l=y}}", "자(ː)수", "ph")
	def test_jasu_rr(self):
		self.run_test("자수", "{{ko-IPA|l=y}}", "jasu", "rr")
	def test_jasu_rrr(self):
		self.run_test("자수", "{{ko-IPA|l=y}}", "jasu", "rrr")
	def test_jasu_mr(self):
		self.run_test("자수", "{{ko-IPA|l=y}}", "chasu", "mr")
	def test_jasu_yr(self):
		self.run_test("자수", "{{ko-IPA|l=y}}", "cāswu", "yr")
	def test_jasu_ipa(self):
		self.run_test("자수", "{{ko-IPA|l=y}}", "[ˈt͡ɕa̠(ː)sʰu]", "ipa")
	def test_jasu_ph_1(self):
		self.run_test("자수", "{{ko-IPA}}", "자수", "ph")
	def test_jasu_rr_1(self):
		self.run_test("자수", "{{ko-IPA}}", "jasu", "rr")
	def test_jasu_rrr_1(self):
		self.run_test("자수", "{{ko-IPA}}", "jasu", "rrr")
	def test_jasu_mr_1(self):
		self.run_test("자수", "{{ko-IPA}}", "chasu", "mr")
	def test_jasu_yr_1(self):
		self.run_test("자수", "{{ko-IPA}}", "caswu", "yr")
	def test_jasu_ipa_1(self):
		self.run_test("자수", "{{ko-IPA}}", "[t͡ɕa̠sʰu]", "ipa")

	def test_him_ph(self):
		self.run_test("힘", "{{ko-IPA|a=y}}", "힘", "ph")
	def test_him_rr(self):
		self.run_test("힘", "{{ko-IPA|a=y}}", "him", "rr")
	def test_him_rrr(self):
		self.run_test("힘", "{{ko-IPA|a=y}}", "him", "rrr")
	def test_him_mr(self):
		self.run_test("힘", "{{ko-IPA|a=y}}", "him", "mr")
	def test_him_yr(self):
		self.run_test("힘", "{{ko-IPA|a=y}}", "him", "yr")
	def test_him_ipa(self):
		self.run_test("힘", "{{ko-IPA|a=y}}", "[çim]", "ipa")

	def test_jjok_ph(self):
		self.run_test("쪽", "{{ko-IPA|a=y}}", "쪽", "ph")
	def test_jjok_rr(self):
		self.run_test("쪽", "{{ko-IPA|a=y}}", "jjok", "rr")
	def test_jjok_rrr(self):
		self.run_test("쪽", "{{ko-IPA|a=y}}", "jjog", "rrr")
	def test_jjok_mr(self):
		self.run_test("쪽", "{{ko-IPA|a=y}}", "tchok", "mr")
	def test_jjok_yr(self):
		self.run_test("쪽", "{{ko-IPA|a=y}}", "ccok", "yr")
	def test_jjok_ipa(self):
		self.run_test("쪽", "{{ko-IPA|a=y}}", "[t͡ɕ͈o̞k̚]", "ipa")

	def test_mit_ph(self):
		self.run_test("및", "{{ko-IPA}}", "믿", "ph")
	def test_mit_rr(self):
		self.run_test("및", "{{ko-IPA}}", "mit", "rr")
	def test_mit_rrr(self):
		self.run_test("및", "{{ko-IPA}}", "mich", "rrr")
	def test_mit_mr(self):
		self.run_test("및", "{{ko-IPA}}", "mit", "mr")
	def test_mit_yr(self):
		self.run_test("및", "{{ko-IPA}}", "mich", "yr")
	def test_mit_ipa(self):
		self.run_test("및", "{{ko-IPA}}", "[mit̚]", "ipa")

	def test_geul_ph(self):
		self.run_test("글", "{{ko-IPA|a=y}}", "글", "ph")
	def test_geul_rr(self):
		self.run_test("글", "{{ko-IPA|a=y}}", "geul", "rr")
	def test_geul_rrr(self):
		self.run_test("글", "{{ko-IPA|a=y}}", "geul", "rrr")
	def test_geul_mr(self):
		self.run_test("글", "{{ko-IPA|a=y}}", "kŭl", "mr")
	def test_geul_yr(self):
		self.run_test("글", "{{ko-IPA|a=y}}", "kul", "yr")
	def test_geul_ipa(self):
		self.run_test("글", "{{ko-IPA|a=y}}", "[kɯɭ]", "ipa")

	def test_gaunde_ph(self):
		self.run_test("가운데", "{{ko-IPA|a=y}}", "가운데", "ph")
	def test_gaunde_rr(self):
		self.run_test("가운데", "{{ko-IPA|a=y}}", "gaunde", "rr")
	def test_gaunde_rrr(self):
		self.run_test("가운데", "{{ko-IPA|a=y}}", "gaunde", "rrr")
	def test_gaunde_mr(self):
		self.run_test("가운데", "{{ko-IPA|a=y}}", "kaunde", "mr")
	def test_gaunde_yr(self):
		self.run_test("가운데", "{{ko-IPA|a=y}}", "kawuntey", "yr")
	def test_gaunde_ipa(self):
		self.run_test("가운데", "{{ko-IPA|a=y}}", "[ka̠unde̞]", "ipa")

	def test_museun_ph(self):
		self.run_test("무슨", "{{ko-IPA|a=y}}", "무슨", "ph")
	def test_museun_rr(self):
		self.run_test("무슨", "{{ko-IPA|a=y}}", "museun", "rr")
	def test_museun_rrr(self):
		self.run_test("무슨", "{{ko-IPA|a=y}}", "museun", "rrr")
	def test_museun_mr(self):
		self.run_test("무슨", "{{ko-IPA|a=y}}", "musŭn", "mr")
	def test_museun_yr(self):
		self.run_test("무슨", "{{ko-IPA|a=y}}", "musun", "yr")
	def test_museun_ipa(self):
		self.run_test("무슨", "{{ko-IPA|a=y}}", "[musʰɯn]", "ipa")

	def test_keompyuteo_ph(self):
		self.run_test("컴퓨터", "{{ko-IPA|a=y}}", "컴퓨터", "ph")
	def test_keompyuteo_rr(self):
		self.run_test("컴퓨터", "{{ko-IPA|a=y}}", "keompyuteo", "rr")
	def test_keompyuteo_rrr(self):
		self.run_test("컴퓨터", "{{ko-IPA|a=y}}", "keompyuteo", "rrr")
	def test_keompyuteo_mr(self):
		self.run_test("컴퓨터", "{{ko-IPA|a=y}}", "k'ŏmp'yut'ŏ", "mr")
	def test_keompyuteo_yr(self):
		self.run_test("컴퓨터", "{{ko-IPA|a=y}}", "khemphyu.the", "yr")
	def test_keompyuteo_ipa(self):
		self.run_test("컴퓨터", "{{ko-IPA|a=y}}", "[kʰʌ̹mpʰjutʰʌ̹]", "ipa")

	def test_ttohan_ph(self):
		self.run_test("또한", "{{ko-IPA|a=y}}", "또한", "ph")
	def test_ttohan_rr(self):
		self.run_test("또한", "{{ko-IPA|a=y}}", "ttohan", "rr")
	def test_ttohan_rrr(self):
		self.run_test("또한", "{{ko-IPA|a=y}}", "ttohan", "rrr")
	def test_ttohan_mr(self):
		self.run_test("또한", "{{ko-IPA|a=y}}", "ttohan", "mr")
	def test_ttohan_yr(self):
		self.run_test("또한", "{{ko-IPA|a=y}}", "ttohan", "yr")
	def test_ttohan_ipa(self):
		self.run_test("또한", "{{ko-IPA|a=y}}", "[t͈o̞ɦa̠n]", "ipa")

	def test_eolmana_ph(self):
		self.run_test("얼마나", "{{ko-IPA|a=y}}", "얼마나", "ph")
	def test_eolmana_rr(self):
		self.run_test("얼마나", "{{ko-IPA|a=y}}", "eolmana", "rr")
	def test_eolmana_rrr(self):
		self.run_test("얼마나", "{{ko-IPA|a=y}}", "eolmana", "rrr")
	def test_eolmana_mr(self):
		self.run_test("얼마나", "{{ko-IPA|a=y}}", "ŏlmana", "mr")
	def test_eolmana_yr(self):
		self.run_test("얼마나", "{{ko-IPA|a=y}}", "el.mana", "yr")
	def test_eolmana_ipa(self):
		self.run_test("얼마나", "{{ko-IPA|a=y}}", "[ʌ̹ɭma̠na̠]", "ipa")

	def test_meonjeo_ph(self):
		self.run_test("먼저", "{{ko-IPA|a=y}}", "먼저", "ph")
	def test_meonjeo_rr(self):
		self.run_test("먼저", "{{ko-IPA|a=y}}", "meonjeo", "rr")
	def test_meonjeo_rrr(self):
		self.run_test("먼저", "{{ko-IPA|a=y}}", "meonjeo", "rrr")
	def test_meonjeo_mr(self):
		self.run_test("먼저", "{{ko-IPA|a=y}}", "mŏnjŏ", "mr")
	def test_meonjeo_yr(self):
		self.run_test("먼저", "{{ko-IPA|a=y}}", "men.ce", "yr")
	def test_meonjeo_ipa(self):
		self.run_test("먼저", "{{ko-IPA|a=y}}", "[mʌ̹ɲd͡ʑʌ̹]", "ipa")

	def test_deouk_ph(self):
		self.run_test("더욱", "{{ko-IPA|a=y}}", "더욱", "ph")
	def test_deouk_rr(self):
		self.run_test("더욱", "{{ko-IPA|a=y}}", "deouk", "rr")
	def test_deouk_rrr(self):
		self.run_test("더욱", "{{ko-IPA|a=y}}", "deoug", "rrr")
	def test_deouk_mr(self):
		self.run_test("더욱", "{{ko-IPA|a=y}}", "tŏuk", "mr")
	def test_deouk_yr(self):
		self.run_test("더욱", "{{ko-IPA|a=y}}", "tewuk", "yr")
	def test_deouk_ipa(self):
		self.run_test("더욱", "{{ko-IPA|a=y}}", "[tʌ̹uk̚]", "ipa")

	def test_eotda_ph(self):
		self.run_test("얻다", "{{ko-IPA|l=y}}", "얻(ː)따", "ph")
	def test_eotda_rr(self):
		self.run_test("얻다", "{{ko-IPA|l=y}}", "eotda", "rr")
	def test_eotda_rrr(self):
		self.run_test("얻다", "{{ko-IPA|l=y}}", "eodda", "rrr")
	def test_eotda_mr(self):
		self.run_test("얻다", "{{ko-IPA|l=y}}", "ŏtta", "mr")
	def test_eotda_yr(self):
		self.run_test("얻다", "{{ko-IPA|l=y}}", "ēt.ta", "yr")
	def test_eotda_ipa(self):
		self.run_test("얻다", "{{ko-IPA|l=y}}", "[ˈɘ(ː)t̚t͈a̠]", "ipa")
	def test_eotda_ph_1(self):
		self.run_test("얻다", "{{ko-IPA}}", "얻따", "ph")
	def test_eotda_rr_1(self):
		self.run_test("얻다", "{{ko-IPA}}", "eotda", "rr")
	def test_eotda_rrr_1(self):
		self.run_test("얻다", "{{ko-IPA}}", "eodda", "rrr")
	def test_eotda_mr_1(self):
		self.run_test("얻다", "{{ko-IPA}}", "ŏtta", "mr")
	def test_eotda_yr_1(self):
		self.run_test("얻다", "{{ko-IPA}}", "et.ta", "yr")
	def test_eotda_ipa_1(self):
		self.run_test("얻다", "{{ko-IPA}}", "[ʌ̹t̚t͈a̠]", "ipa")

	def test_ttoneun_ph(self):
		self.run_test("또는", "{{ko-IPA|a=y}}", "또는", "ph")
	def test_ttoneun_rr(self):
		self.run_test("또는", "{{ko-IPA|a=y}}", "ttoneun", "rr")
	def test_ttoneun_rrr(self):
		self.run_test("또는", "{{ko-IPA|a=y}}", "ttoneun", "rrr")
	def test_ttoneun_mr(self):
		self.run_test("또는", "{{ko-IPA|a=y}}", "ttonŭn", "mr")
	def test_ttoneun_yr(self):
		self.run_test("또는", "{{ko-IPA|a=y}}", "ttonun", "yr")
	def test_ttoneun_ipa(self):
		self.run_test("또는", "{{ko-IPA|a=y}}", "[t͈o̞nɯn]", "ipa")

	def test_gwansim_ph(self):
		self.run_test("관심", "{{ko-IPA|a=y}}", "관심", "ph")
	def test_gwansim_rr(self):
		self.run_test("관심", "{{ko-IPA|a=y}}", "gwansim", "rr")
	def test_gwansim_rrr(self):
		self.run_test("관심", "{{ko-IPA|a=y}}", "gwansim", "rrr")
	def test_gwansim_mr(self):
		self.run_test("관심", "{{ko-IPA|a=y}}", "kwansim", "mr")
	def test_gwansim_yr(self):
		self.run_test("관심", "{{ko-IPA|a=y}}", "kwansim", "yr")
	def test_gwansim_ipa(self):
		self.run_test("관심", "{{ko-IPA|a=y}}", "[kwa̠nɕʰim]", "ipa")

	def test_gwanggo_ph(self):
		self.run_test("광고", "{{ko-IPA|l=y|a=y}}", "광(ː)고", "ph")
	def test_gwanggo_rr(self):
		self.run_test("광고", "{{ko-IPA|l=y|a=y}}", "gwanggo", "rr")
	def test_gwanggo_rrr(self):
		self.run_test("광고", "{{ko-IPA|l=y|a=y}}", "gwanggo", "rrr")
	def test_gwanggo_mr(self):
		self.run_test("광고", "{{ko-IPA|l=y|a=y}}", "kwanggo", "mr")
	def test_gwanggo_yr(self):
		self.run_test("광고", "{{ko-IPA|l=y|a=y}}", "kwāngko", "yr")
	def test_gwanggo_ipa(self):
		self.run_test("광고", "{{ko-IPA|l=y|a=y}}", "[ˈkwa̠(ː)ŋɡo̞]", "ipa")

	def test_hyeonsang_ph(self):
		self.run_test("현상", "{{ko-ipa|l=y}}", "현(ː)상", "ph")
	def test_hyeonsang_rr(self):
		self.run_test("현상", "{{ko-ipa|l=y}}", "hyeonsang", "rr")
	def test_hyeonsang_rrr(self):
		self.run_test("현상", "{{ko-ipa|l=y}}", "hyeonsang", "rrr")
	def test_hyeonsang_mr(self):
		self.run_test("현상", "{{ko-ipa|l=y}}", "hyŏnsang", "mr")
	def test_hyeonsang_yr(self):
		self.run_test("현상", "{{ko-ipa|l=y}}", "hyēnsang", "yr")
	def test_hyeonsang_ipa(self):
		self.run_test("현상", "{{ko-ipa|l=y}}", "[ˈçɘ(ː)nsʰa̠ŋ]", "ipa")

	def test_gisul_ph(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "기술", "ph")
	def test_gisul_rr(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "gisul", "rr")
	def test_gisul_rrr(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "gisul", "rrr")
	def test_gisul_mr(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "kisul", "mr")
	def test_gisul_yr(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "kiswul", "yr")
	def test_gisul_ipa(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "[kisʰuɭ]", "ipa")
	def test_gisul_ph_1(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "기술", "ph")
	def test_gisul_rr_1(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "gisul", "rr")
	def test_gisul_rrr_1(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "gisul", "rrr")
	def test_gisul_mr_1(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "kisul", "mr")
	def test_gisul_yr_1(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "kiswul", "yr")
	def test_gisul_ipa_1(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "[kisʰuɭ]", "ipa")
	def test_gisul_ph_2(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "기술", "ph")
	def test_gisul_rr_2(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "gisul", "rr")
	def test_gisul_rrr_2(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "gisul", "rrr")
	def test_gisul_mr_2(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "kisul", "mr")
	def test_gisul_yr_2(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "kiswul", "yr")
	def test_gisul_ipa_2(self):
		self.run_test("기술", "{{ko-IPA|a=y}}", "[kisʰuɭ]", "ipa")

	def test_minjok_ph(self):
		self.run_test("민족", "{{ko-IPA|a=y}}", "민족", "ph")
	def test_minjok_rr(self):
		self.run_test("민족", "{{ko-IPA|a=y}}", "minjok", "rr")
	def test_minjok_rrr(self):
		self.run_test("민족", "{{ko-IPA|a=y}}", "minjog", "rrr")
	def test_minjok_mr(self):
		self.run_test("민족", "{{ko-IPA|a=y}}", "minjok", "mr")
	def test_minjok_yr(self):
		self.run_test("민족", "{{ko-IPA|a=y}}", "min.cok", "yr")
	def test_minjok_ipa(self):
		self.run_test("민족", "{{ko-IPA|a=y}}", "[miɲd͡ʑo̞k̚]", "ipa")

	def test_yeonghwa_ph(self):
		self.run_test("영화", "{{ko-IPA}}", "영화", "ph")
	def test_yeonghwa_rr(self):
		self.run_test("영화", "{{ko-IPA}}", "yeonghwa", "rr")
	def test_yeonghwa_rrr(self):
		self.run_test("영화", "{{ko-IPA}}", "yeonghwa", "rrr")
	def test_yeonghwa_mr(self):
		self.run_test("영화", "{{ko-IPA}}", "yŏnghwa", "mr")
	def test_yeonghwa_yr(self):
		self.run_test("영화", "{{ko-IPA}}", "yenghwa", "yr")
	def test_yeonghwa_ipa(self):
		self.run_test("영화", "{{ko-IPA}}", "[jʌ̹ŋβwa̠]", "ipa")

	def test_nyeondae_ph(self):
		self.run_test("년대", "{{ko-IPA|a=y}}", "년대/년데", "ph")
	def test_nyeondae_rr(self):
		self.run_test("년대", "{{ko-IPA|a=y}}", "nyeondae", "rr")
	def test_nyeondae_rrr(self):
		self.run_test("년대", "{{ko-IPA|a=y}}", "nyeondae", "rrr")
	def test_nyeondae_mr(self):
		self.run_test("년대", "{{ko-IPA|a=y}}", "nyŏndae", "mr")
	def test_nyeondae_yr(self):
		self.run_test("년대", "{{ko-IPA|a=y}}", "nyentay", "yr")
	def test_nyeondae_ipa(self):
		self.run_test("년대", "{{ko-IPA|a=y}}", "[ɲʌ̹ndɛ] ~ [ɲʌ̹nde̞]", "ipa")

	def test_gwahak_ph(self):
		self.run_test("과학", "{{ko-IPA|a=y}}", "과학", "ph")
	def test_gwahak_rr(self):
		self.run_test("과학", "{{ko-IPA|a=y}}", "gwahak", "rr")
	def test_gwahak_rrr(self):
		self.run_test("과학", "{{ko-IPA|a=y}}", "gwahag", "rrr")
	def test_gwahak_mr(self):
		self.run_test("과학", "{{ko-IPA|a=y}}", "kwahak", "mr")
	def test_gwahak_yr(self):
		self.run_test("과학", "{{ko-IPA|a=y}}", "kwahak", "yr")
	def test_gwahak_ipa(self):
		self.run_test("과학", "{{ko-IPA|a=y}}", "[kwa̠ɦa̠k̚]", "ipa")

	def test_jayeon_ph(self):
		self.run_test("자연", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-자연.wav}}", "자연", "ph")
	def test_jayeon_rr(self):
		self.run_test("자연", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-자연.wav}}", "jayeon", "rr")
	def test_jayeon_rrr(self):
		self.run_test("자연", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-자연.wav}}", "jayeon", "rrr")
	def test_jayeon_mr(self):
		self.run_test("자연", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-자연.wav}}", "chayŏn", "mr")
	def test_jayeon_yr(self):
		self.run_test("자연", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-자연.wav}}", "ca.yen", "yr")
	def test_jayeon_ipa(self):
		self.run_test("자연", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-자연.wav}}", "[t͡ɕa̠jʌ̹n]", "ipa")

	def test_gujo_ph(self):
		self.run_test("구조", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-구조.wav}}", "구조", "ph")
	def test_gujo_rr(self):
		self.run_test("구조", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-구조.wav}}", "gujo", "rr")
	def test_gujo_rrr(self):
		self.run_test("구조", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-구조.wav}}", "gujo", "rrr")
	def test_gujo_mr(self):
		self.run_test("구조", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-구조.wav}}", "kujo", "mr")
	def test_gujo_yr(self):
		self.run_test("구조", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-구조.wav}}", "kwuco", "yr")
	def test_gujo_ipa(self):
		self.run_test("구조", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-구조.wav}}", "[kud͡ʑo̞]", "ipa")
	def test_gujo_ph_1(self):
		self.run_test("구조", "{{ko-IPA|l=y}}", "구(ː)조", "ph")
	def test_gujo_rr_1(self):
		self.run_test("구조", "{{ko-IPA|l=y}}", "gujo", "rr")
	def test_gujo_rrr_1(self):
		self.run_test("구조", "{{ko-IPA|l=y}}", "gujo", "rrr")
	def test_gujo_mr_1(self):
		self.run_test("구조", "{{ko-IPA|l=y}}", "kujo", "mr")
	def test_gujo_yr_1(self):
		self.run_test("구조", "{{ko-IPA|l=y}}", "kwūco", "yr")
	def test_gujo_ipa_1(self):
		self.run_test("구조", "{{ko-IPA|l=y}}", "[ˈku(ː)d͡ʑo̞]", "ipa")

	def test_gyosu_ph(self):
		self.run_test("교수", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-교수.wav}}", "교(ː)수", "ph")
	def test_gyosu_rr(self):
		self.run_test("교수", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-교수.wav}}", "gyosu", "rr")
	def test_gyosu_rrr(self):
		self.run_test("교수", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-교수.wav}}", "gyosu", "rrr")
	def test_gyosu_mr(self):
		self.run_test("교수", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-교수.wav}}", "kyosu", "mr")
	def test_gyosu_yr(self):
		self.run_test("교수", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-교수.wav}}", "kyōswu", "yr")
	def test_gyosu_ipa(self):
		self.run_test("교수", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-교수.wav}}", "[ˈkjo(ː)sʰu]", "ipa")

	def test_uisik_ph(self):
		self.run_test("의식", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-의식.wav}}", "의(ː)식", "ph")
	def test_uisik_rr(self):
		self.run_test("의식", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-의식.wav}}", "uisik", "rr")
	def test_uisik_rrr(self):
		self.run_test("의식", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-의식.wav}}", "uisig", "rrr")
	def test_uisik_mr(self):
		self.run_test("의식", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-의식.wav}}", "ŭisik", "mr")
	def test_uisik_yr(self):
		self.run_test("의식", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-의식.wav}}", "ūysik", "yr")
	def test_uisik_ipa(self):
		self.run_test("의식", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-의식.wav}}", "[ˈɰi(ː)ɕʰik̚]", "ipa")

	def test_hoesa_ph(self):
		self.run_test("회사", "{{ko-IPA|l=y}}", "훼(ː)사/회(ː)사", "ph")
	def test_hoesa_rr(self):
		self.run_test("회사", "{{ko-IPA|l=y}}", "hoesa", "rr")
	def test_hoesa_rrr(self):
		self.run_test("회사", "{{ko-IPA|l=y}}", "hoesa", "rrr")
	def test_hoesa_mr(self):
		self.run_test("회사", "{{ko-IPA|l=y}}", "hoesa", "mr")
	def test_hoesa_yr(self):
		self.run_test("회사", "{{ko-IPA|l=y}}", "hōysa", "yr")
	def test_hoesa_ipa(self):
		self.run_test("회사", "{{ko-IPA|l=y}}", "[ˈɸwe̞(ː)sʰa̠] ~ [ˈhø̞(ː)sʰa̠]", "ipa")

	def test_saneop_ph(self):
		self.run_test("산업", "{{ko-IPA|l=y}}", "사(ː)넙", "ph")
	def test_saneop_rr(self):
		self.run_test("산업", "{{ko-IPA|l=y}}", "saneop", "rr")
	def test_saneop_rrr(self):
		self.run_test("산업", "{{ko-IPA|l=y}}", "san'eob", "rrr")
	def test_saneop_mr(self):
		self.run_test("산업", "{{ko-IPA|l=y}}", "sanŏp", "mr")
	def test_saneop_yr(self):
		self.run_test("산업", "{{ko-IPA|l=y}}", "sān.ep", "yr")
	def test_saneop_ipa(self):
		self.run_test("산업", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)nʌ̹p̚]", "ipa")

	def test_eumsik_ph(self):
		self.run_test("음식", "{{ko-IPA|l=y}}", "음(ː)식", "ph")
	def test_eumsik_rr(self):
		self.run_test("음식", "{{ko-IPA|l=y}}", "eumsik", "rr")
	def test_eumsik_rrr(self):
		self.run_test("음식", "{{ko-IPA|l=y}}", "eumsig", "rrr")
	def test_eumsik_mr(self):
		self.run_test("음식", "{{ko-IPA|l=y}}", "ŭmsik", "mr")
	def test_eumsik_yr(self):
		self.run_test("음식", "{{ko-IPA|l=y}}", "ūmsik", "yr")
	def test_eumsik_ipa(self):
		self.run_test("음식", "{{ko-IPA|l=y}}", "[ˈɯ(ː)mɕʰik̚]", "ipa")

	def test_pyojeong_ph(self):
		self.run_test("표정", "{{ko-IPA}}", "표정", "ph")
	def test_pyojeong_rr(self):
		self.run_test("표정", "{{ko-IPA}}", "pyojeong", "rr")
	def test_pyojeong_rrr(self):
		self.run_test("표정", "{{ko-IPA}}", "pyojeong", "rrr")
	def test_pyojeong_mr(self):
		self.run_test("표정", "{{ko-IPA}}", "p'yojŏng", "mr")
	def test_pyojeong_yr(self):
		self.run_test("표정", "{{ko-IPA}}", "phyoceng", "yr")
	def test_pyojeong_ipa(self):
		self.run_test("표정", "{{ko-IPA}}", "[pʰjod͡ʑʌ̹ŋ]", "ipa")

	def test_ilbu_ph(self):
		self.run_test("일부", "{{ko-IPA}}", "일부", "ph")
	def test_ilbu_rr(self):
		self.run_test("일부", "{{ko-IPA}}", "ilbu", "rr")
	def test_ilbu_rrr(self):
		self.run_test("일부", "{{ko-IPA}}", "ilbu", "rrr")
	def test_ilbu_mr(self):
		self.run_test("일부", "{{ko-IPA}}", "ilbu", "mr")
	def test_ilbu_yr(self):
		self.run_test("일부", "{{ko-IPA}}", "il.pu", "yr")
	def test_ilbu_ipa(self):
		self.run_test("일부", "{{ko-IPA}}", "[iɭbu]", "ipa")

	def test_gyehoek_ph(self):
		self.run_test("계획", "{{ko-IPA|l=y}}", "계(ː)훽/계(ː)획/게(ː)훽/게(ː)획", "ph")
	def test_gyehoek_rr(self):
		self.run_test("계획", "{{ko-IPA|l=y}}", "gyehoek", "rr")
	def test_gyehoek_rrr(self):
		self.run_test("계획", "{{ko-IPA|l=y}}", "gyehoeg", "rrr")
	def test_gyehoek_mr(self):
		self.run_test("계획", "{{ko-IPA|l=y}}", "kyehoek", "mr")
	def test_gyehoek_yr(self):
		self.run_test("계획", "{{ko-IPA|l=y}}", "kyēyhoyk", "yr")
	def test_gyehoek_ipa(self):
		self.run_test("계획", "{{ko-IPA|l=y}}", "[ˈkje̞(ː)βwe̞k̚] ~ [ˈkje̞(ː)ɦø̞k̚] ~ [ˈke̞(ː)βwe̞k̚] ~ [ˈke̞(ː)ɦø̞k̚]", "ipa")

	def test_irueojida_ph(self):
		self.run_test("이루어지다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-이루어지다.wav}}", "이루어지다", "ph")
	def test_irueojida_rr(self):
		self.run_test("이루어지다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-이루어지다.wav}}", "irueojida", "rr")
	def test_irueojida_rrr(self):
		self.run_test("이루어지다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-이루어지다.wav}}", "ilueojida", "rrr")
	def test_irueojida_mr(self):
		self.run_test("이루어지다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-이루어지다.wav}}", "iruŏjida", "mr")
	def test_irueojida_yr(self):
		self.run_test("이루어지다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-이루어지다.wav}}", "ilwuecita", "yr")
	def test_irueojida_ipa(self):
		self.run_test("이루어지다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-이루어지다.wav}}", "[iɾuʌ̹d͡ʑida̠]", "ipa")

	def test_iruda_ph(self):
		self.run_test("이루다", "{{ko-IPA|a=y}}", "이루다", "ph")
	def test_iruda_rr(self):
		self.run_test("이루다", "{{ko-IPA|a=y}}", "iruda", "rr")
	def test_iruda_rrr(self):
		self.run_test("이루다", "{{ko-IPA|a=y}}", "iluda", "rrr")
	def test_iruda_mr(self):
		self.run_test("이루다", "{{ko-IPA|a=y}}", "iruda", "mr")
	def test_iruda_yr(self):
		self.run_test("이루다", "{{ko-IPA|a=y}}", "ilwuta", "yr")
	def test_iruda_ipa(self):
		self.run_test("이루다", "{{ko-IPA|a=y}}", "[iɾuda̠]", "ipa")

	def test_baraboda_ph(self):
		self.run_test("바라보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-바라보다.wav}}", "바라보다", "ph")
	def test_baraboda_rr(self):
		self.run_test("바라보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-바라보다.wav}}", "baraboda", "rr")
	def test_baraboda_rrr(self):
		self.run_test("바라보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-바라보다.wav}}", "balaboda", "rrr")
	def test_baraboda_mr(self):
		self.run_test("바라보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-바라보다.wav}}", "paraboda", "mr")
	def test_baraboda_yr(self):
		self.run_test("바라보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-바라보다.wav}}", "palapota", "yr")
	def test_baraboda_ipa(self):
		self.run_test("바라보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-바라보다.wav}}", "[pa̠ɾa̠bo̞da̠]", "ipa")

	def test_jikida_ph(self):
		self.run_test("지키다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-지키다.wav}}", "지키다", "ph")
	def test_jikida_rr(self):
		self.run_test("지키다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-지키다.wav}}", "jikida", "rr")
	def test_jikida_rrr(self):
		self.run_test("지키다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-지키다.wav}}", "jikida", "rrr")
	def test_jikida_mr(self):
		self.run_test("지키다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-지키다.wav}}", "chik'ida", "mr")
	def test_jikida_yr(self):
		self.run_test("지키다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-지키다.wav}}", "ci.khita", "yr")
	def test_jikida_ipa(self):
		self.run_test("지키다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-지키다.wav}}", "[t͡ɕicçida̠]", "ipa")

	def test_araboda_ph(self):
		self.run_test("알아보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-알아보다.wav}}", "아라보다", "ph")
	def test_araboda_rr(self):
		self.run_test("알아보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-알아보다.wav}}", "araboda", "rr")
	def test_araboda_rrr(self):
		self.run_test("알아보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-알아보다.wav}}", "al'aboda", "rrr")
	def test_araboda_mr(self):
		self.run_test("알아보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-알아보다.wav}}", "araboda", "mr")
	def test_araboda_yr(self):
		self.run_test("알아보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-알아보다.wav}}", "al.apota", "yr")
	def test_araboda_ipa(self):
		self.run_test("알아보다", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-알아보다.wav}}", "[a̠ɾa̠bo̞da̠]", "ipa")

	def test_bokho_ph(self):
		self.run_test("복호", "{{ko-IPA}}", "보코", "ph")
	def test_bokho_rr(self):
		self.run_test("복호", "{{ko-IPA}}", "bokho", "rr")
	def test_bokho_rrr(self):
		self.run_test("복호", "{{ko-IPA}}", "bogho", "rrr")
	def test_bokho_mr(self):
		self.run_test("복호", "{{ko-IPA}}", "pokho", "mr")
	def test_bokho_yr(self):
		self.run_test("복호", "{{ko-IPA}}", "pok.ho", "yr")
	def test_bokho_ipa(self):
		self.run_test("복호", "{{ko-IPA}}", "[po̞kʰo̞]", "ipa")

	def test_honja_ph(self):
		self.run_test("혼자", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-혼자.wav}}", "혼자", "ph")
	def test_honja_rr(self):
		self.run_test("혼자", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-혼자.wav}}", "honja", "rr")
	def test_honja_rrr(self):
		self.run_test("혼자", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-혼자.wav}}", "honja", "rrr")
	def test_honja_mr(self):
		self.run_test("혼자", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-혼자.wav}}", "honja", "mr")
	def test_honja_yr(self):
		self.run_test("혼자", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-혼자.wav}}", "hon.ca", "yr")
	def test_honja_ipa(self):
		self.run_test("혼자", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-혼자.wav}}", "[ɸʷo̞ɲd͡ʑa̠]", "ipa")

	def test_geurim_ph(self):
		self.run_test("그림", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-그림.wav}}", "그(ː)림", "ph")
	def test_geurim_rr(self):
		self.run_test("그림", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-그림.wav}}", "geurim", "rr")
	def test_geurim_rrr(self):
		self.run_test("그림", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-그림.wav}}", "geulim", "rrr")
	def test_geurim_mr(self):
		self.run_test("그림", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-그림.wav}}", "kŭrim", "mr")
	def test_geurim_yr(self):
		self.run_test("그림", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-그림.wav}}", "kūlim", "yr")
	def test_geurim_ipa(self):
		self.run_test("그림", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-그림.wav}}", "[ˈkɯ(ː)ɾim]", "ipa")

	def test_peurogeuraem_ph(self):
		self.run_test("프로그램", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-프로그램.wav}}", "프로그램/프로그렘", "ph")
	def test_peurogeuraem_rr(self):
		self.run_test("프로그램", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-프로그램.wav}}", "peurogeuraem", "rr")
	def test_peurogeuraem_rrr(self):
		self.run_test("프로그램", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-프로그램.wav}}", "peulogeulaem", "rrr")
	def test_peurogeuraem_mr(self):
		self.run_test("프로그램", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-프로그램.wav}}", "p'ŭrogŭraem", "mr")
	def test_peurogeuraem_yr(self):
		self.run_test("프로그램", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-프로그램.wav}}", "phulokulaym", "yr")
	def test_peurogeuraem_ipa(self):
		self.run_test("프로그램", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-프로그램.wav}}", "[pʰɯɾo̞ɡɯɾɛm] ~ [pʰɯɾo̞ɡɯɾe̞m]", "ipa")

	def test_daebubun_ph(self):
		self.run_test("대부분", "{{ko-IPA|l=y}}", "대(ː)부분/데(ː)부분", "ph")
	def test_daebubun_rr(self):
		self.run_test("대부분", "{{ko-IPA|l=y}}", "daebubun", "rr")
	def test_daebubun_rrr(self):
		self.run_test("대부분", "{{ko-IPA|l=y}}", "daebubun", "rrr")
	def test_daebubun_mr(self):
		self.run_test("대부분", "{{ko-IPA|l=y}}", "taebubun", "mr")
	def test_daebubun_yr(self):
		self.run_test("대부분", "{{ko-IPA|l=y}}", "tāypupun", "yr")
	def test_daebubun_ipa(self):
		self.run_test("대부분", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)bubun] ~ [ˈte̞(ː)bubun]", "ipa")

	def test_gaseum_ph(self):
		self.run_test("가슴", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-가슴.wav}}", "가슴", "ph")
	def test_gaseum_rr(self):
		self.run_test("가슴", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-가슴.wav}}", "gaseum", "rr")
	def test_gaseum_rrr(self):
		self.run_test("가슴", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-가슴.wav}}", "gaseum", "rrr")
	def test_gaseum_mr(self):
		self.run_test("가슴", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-가슴.wav}}", "kasŭm", "mr")
	def test_gaseum_yr(self):
		self.run_test("가슴", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-가슴.wav}}", "kasum", "yr")
	def test_gaseum_ipa(self):
		self.run_test("가슴", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-가슴.wav}}", "[ka̠sʰɯm]", "ipa")

	def test_keopi_ph(self):
		self.run_test("커피", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-커피.wav}}", "커피", "ph")
	def test_keopi_rr(self):
		self.run_test("커피", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-커피.wav}}", "keopi", "rr")
	def test_keopi_rrr(self):
		self.run_test("커피", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-커피.wav}}", "keopi", "rrr")
	def test_keopi_mr(self):
		self.run_test("커피", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-커피.wav}}", "k'ŏp'i", "mr")
	def test_keopi_yr(self):
		self.run_test("커피", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-커피.wav}}", "khe.phi", "yr")
	def test_keopi_ipa(self):
		self.run_test("커피", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-커피.wav}}", "[kʰʌ̹pʰi]", "ipa")

	def test_seoro_ph(self):
		self.run_test("서로", "{{ko-IPA|a=y}}", "서로", "ph")
	def test_seoro_rr(self):
		self.run_test("서로", "{{ko-IPA|a=y}}", "seoro", "rr")
	def test_seoro_rrr(self):
		self.run_test("서로", "{{ko-IPA|a=y}}", "seolo", "rrr")
	def test_seoro_mr(self):
		self.run_test("서로", "{{ko-IPA|a=y}}", "sŏro", "mr")
	def test_seoro_yr(self):
		self.run_test("서로", "{{ko-IPA|a=y}}", "selo", "yr")
	def test_seoro_ipa(self):
		self.run_test("서로", "{{ko-IPA|a=y}}", "[sʰʌ̹ɾo̞]", "ipa")

	def test_munseo_ph(self):
		self.run_test("문서", "{{ko-IPA}}", "문서", "ph")
	def test_munseo_rr(self):
		self.run_test("문서", "{{ko-IPA}}", "munseo", "rr")
	def test_munseo_rrr(self):
		self.run_test("문서", "{{ko-IPA}}", "munseo", "rrr")
	def test_munseo_mr(self):
		self.run_test("문서", "{{ko-IPA}}", "munsŏ", "mr")
	def test_munseo_yr(self):
		self.run_test("문서", "{{ko-IPA}}", "munse", "yr")
	def test_munseo_ipa(self):
		self.run_test("문서", "{{ko-IPA}}", "[munsʰʌ̹]", "ipa")

	def test_malgata_ph(self):
		self.run_test("말갛다", "{{ko-IPA|l=y}}", "말(ː)가타", "ph")
	def test_malgata_rr(self):
		self.run_test("말갛다", "{{ko-IPA|l=y}}", "malgata", "rr")
	def test_malgata_rrr(self):
		self.run_test("말갛다", "{{ko-IPA|l=y}}", "malgahda", "rrr")
	def test_malgata_mr(self):
		self.run_test("말갛다", "{{ko-IPA|l=y}}", "malgat'a", "mr")
	def test_malgata_yr(self):
		self.run_test("말갛다", "{{ko-IPA|l=y}}", "māl.kahta", "yr")
	def test_malgata_ipa(self):
		self.run_test("말갛다", "{{ko-IPA|l=y}}", "[ˈma̠(ː)ɭɡa̠tʰa̠]", "ipa")

	def test_mureuda_ph(self):
		self.run_test("무르다", "{{ko-IPA}}", "무르다", "ph")
	def test_mureuda_rr(self):
		self.run_test("무르다", "{{ko-IPA}}", "mureuda", "rr")
	def test_mureuda_rrr(self):
		self.run_test("무르다", "{{ko-IPA}}", "muleuda", "rrr")
	def test_mureuda_mr(self):
		self.run_test("무르다", "{{ko-IPA}}", "murŭda", "mr")
	def test_mureuda_yr(self):
		self.run_test("무르다", "{{ko-IPA}}", "muluta", "yr")
	def test_mureuda_ipa(self):
		self.run_test("무르다", "{{ko-IPA}}", "[muɾɯda̠]", "ipa")

	def test_dakda_ph(self):
		self.run_test("닦다", "{{ko-IPA}}", "닥따", "ph")
	def test_dakda_rr(self):
		self.run_test("닦다", "{{ko-IPA}}", "dakda", "rr")
	def test_dakda_rrr(self):
		self.run_test("닦다", "{{ko-IPA}}", "dakkda", "rrr")
	def test_dakda_mr(self):
		self.run_test("닦다", "{{ko-IPA}}", "takta", "mr")
	def test_dakda_yr(self):
		self.run_test("닦다", "{{ko-IPA}}", "takkta", "yr")
	def test_dakda_ipa(self):
		self.run_test("닦다", "{{ko-IPA}}", "[ta̠k̚t͈a̠]", "ipa")

	def test_dalta_ph(self):
		self.run_test("닳다", "{{ko-IPA}}", "달타", "ph")
	def test_dalta_rr(self):
		self.run_test("닳다", "{{ko-IPA}}", "dalta", "rr")
	def test_dalta_rrr(self):
		self.run_test("닳다", "{{ko-IPA}}", "dalhda", "rrr")
	def test_dalta_mr(self):
		self.run_test("닳다", "{{ko-IPA}}", "talt'a", "mr")
	def test_dalta_yr(self):
		self.run_test("닳다", "{{ko-IPA}}", "talhta", "yr")
	def test_dalta_ipa(self):
		self.run_test("닳다", "{{ko-IPA}}", "[ta̠ɭtʰa̠]", "ipa")

	def test_yeoksi_ph(self):
		self.run_test("역시", "{{ko-IPA|a=y}}", "역씨", "ph")
	def test_yeoksi_rr(self):
		self.run_test("역시", "{{ko-IPA|a=y}}", "yeoksi", "rr")
	def test_yeoksi_rrr(self):
		self.run_test("역시", "{{ko-IPA|a=y}}", "yeogsi", "rrr")
	def test_yeoksi_mr(self):
		self.run_test("역시", "{{ko-IPA|a=y}}", "yŏksi", "mr")
	def test_yeoksi_yr(self):
		self.run_test("역시", "{{ko-IPA|a=y}}", "yek.si", "yr")
	def test_yeoksi_ipa(self):
		self.run_test("역시", "{{ko-IPA|a=y}}", "[jʌ̹kɕ͈i]", "ipa")

	def test_geudaero_ph(self):
		self.run_test("그대로", "{{ko-IPA|a=y}}", "그대로/그데로", "ph")
	def test_geudaero_rr(self):
		self.run_test("그대로", "{{ko-IPA|a=y}}", "geudaero", "rr")
	def test_geudaero_rrr(self):
		self.run_test("그대로", "{{ko-IPA|a=y}}", "geudaelo", "rrr")
	def test_geudaero_mr(self):
		self.run_test("그대로", "{{ko-IPA|a=y}}", "kŭdaero", "mr")
	def test_geudaero_yr(self):
		self.run_test("그대로", "{{ko-IPA|a=y}}", "kutaylo", "yr")
	def test_geudaero_ipa(self):
		self.run_test("그대로", "{{ko-IPA|a=y}}", "[kɯdɛɾo̞] ~ [kɯde̞ɾo̞]", "ipa")

	def test_utda_ph(self):
		self.run_test("웃다", "{{ko-IPA|l=y|a=y}}", "욷(ː)따", "ph")
	def test_utda_rr(self):
		self.run_test("웃다", "{{ko-IPA|l=y|a=y}}", "utda", "rr")
	def test_utda_rrr(self):
		self.run_test("웃다", "{{ko-IPA|l=y|a=y}}", "usda", "rrr")
	def test_utda_mr(self):
		self.run_test("웃다", "{{ko-IPA|l=y|a=y}}", "utta", "mr")
	def test_utda_yr(self):
		self.run_test("웃다", "{{ko-IPA|l=y|a=y}}", "wūsta", "yr")
	def test_utda_ipa(self):
		self.run_test("웃다", "{{ko-IPA|l=y|a=y}}", "[ˈu(ː)t̚t͈a̠]", "ipa")

	def test_makhida_ph(self):
		self.run_test("막히다", "{{ko-IPA}}", "마키다", "ph")
	def test_makhida_rr(self):
		self.run_test("막히다", "{{ko-IPA}}", "makhida", "rr")
	def test_makhida_rrr(self):
		self.run_test("막히다", "{{ko-IPA}}", "maghida", "rrr")
	def test_makhida_mr(self):
		self.run_test("막히다", "{{ko-IPA}}", "makhida", "mr")
	def test_makhida_yr(self):
		self.run_test("막히다", "{{ko-IPA}}", "mak.hita", "yr")
	def test_makhida_ipa(self):
		self.run_test("막히다", "{{ko-IPA}}", "[ma̠cçida̠]", "ipa")

	def test_myeongjeol_ph(self):
		self.run_test("명절", "{{ko-IPA}}", "명절", "ph")
	def test_myeongjeol_rr(self):
		self.run_test("명절", "{{ko-IPA}}", "myeongjeol", "rr")
	def test_myeongjeol_rrr(self):
		self.run_test("명절", "{{ko-IPA}}", "myeongjeol", "rrr")
	def test_myeongjeol_mr(self):
		self.run_test("명절", "{{ko-IPA}}", "myŏngjŏl", "mr")
	def test_myeongjeol_yr(self):
		self.run_test("명절", "{{ko-IPA}}", "myengcel", "yr")
	def test_myeongjeol_ipa(self):
		self.run_test("명절", "{{ko-IPA}}", "[mjʌ̹ŋd͡ʑʌ̹ɭ]", "ipa")

	def test_mok_ph(self):
		self.run_test("몫", "{{ko-ipa}}", "목", "ph")
	def test_mok_rr(self):
		self.run_test("몫", "{{ko-ipa}}", "mok", "rr")
	def test_mok_rrr(self):
		self.run_test("몫", "{{ko-ipa}}", "mogs", "rrr")
	def test_mok_mr(self):
		self.run_test("몫", "{{ko-ipa}}", "mok", "mr")
	def test_mok_yr(self):
		self.run_test("몫", "{{ko-ipa}}", "moks", "yr")
	def test_mok_ipa(self):
		self.run_test("몫", "{{ko-ipa}}", "[mo̞k̚]", "ipa")

	def test_mullihak_ph(self):
		self.run_test("물리학", "{{ko-IPA}}", "물리학", "ph")
	def test_mullihak_rr(self):
		self.run_test("물리학", "{{ko-IPA}}", "mullihak", "rr")
	def test_mullihak_rrr(self):
		self.run_test("물리학", "{{ko-IPA}}", "mullihag", "rrr")
	def test_mullihak_mr(self):
		self.run_test("물리학", "{{ko-IPA}}", "mullihak", "mr")
	def test_mullihak_yr(self):
		self.run_test("물리학", "{{ko-IPA}}", "mullihak", "yr")
	def test_mullihak_ipa(self):
		self.run_test("물리학", "{{ko-IPA}}", "[muʎʎiɦa̠k̚]", "ipa")

	def test_ttatteuthada_ph(self):
		self.run_test("따뜻하다", "{{ko-IPA}}", "따뜨타다", "ph")
	def test_ttatteuthada_rr(self):
		self.run_test("따뜻하다", "{{ko-IPA}}", "ttatteuthada", "rr")
	def test_ttatteuthada_rrr(self):
		self.run_test("따뜻하다", "{{ko-IPA}}", "tta'tteushada", "rrr")
	def test_ttatteuthada_mr(self):
		self.run_test("따뜻하다", "{{ko-IPA}}", "ttattŭthada", "mr")
	def test_ttatteuthada_yr(self):
		self.run_test("따뜻하다", "{{ko-IPA}}", "tta.ttushata", "yr")
	def test_ttatteuthada_ipa(self):
		self.run_test("따뜻하다", "{{ko-IPA}}", "[t͈a̠t͈ɯtʰa̠da̠]", "ipa")

	def test_ttaro_ph(self):
		self.run_test("따로", "{{ko-IPA}}", "따로", "ph")
	def test_ttaro_rr(self):
		self.run_test("따로", "{{ko-IPA}}", "ttaro", "rr")
	def test_ttaro_rrr(self):
		self.run_test("따로", "{{ko-IPA}}", "ttalo", "rrr")
	def test_ttaro_mr(self):
		self.run_test("따로", "{{ko-IPA}}", "ttaro", "mr")
	def test_ttaro_yr(self):
		self.run_test("따로", "{{ko-IPA}}", "ttalo", "yr")
	def test_ttaro_ipa(self):
		self.run_test("따로", "{{ko-IPA}}", "[t͈a̠ɾo̞]", "ipa")

	def test_dallyeok_ph(self):
		self.run_test("달력", "{{ko-IPA}}", "달력", "ph")
	def test_dallyeok_rr(self):
		self.run_test("달력", "{{ko-IPA}}", "dallyeok", "rr")
	def test_dallyeok_rrr(self):
		self.run_test("달력", "{{ko-IPA}}", "dallyeog", "rrr")
	def test_dallyeok_mr(self):
		self.run_test("달력", "{{ko-IPA}}", "tallyŏk", "mr")
	def test_dallyeok_yr(self):
		self.run_test("달력", "{{ko-IPA}}", "tallyek", "yr")
	def test_dallyeok_ipa(self):
		self.run_test("달력", "{{ko-IPA}}", "[ta̠ʎʎʌ̹k̚]", "ipa")

	def test_ttam_ph(self):
		self.run_test("땀", "{{ko-IPA}}", "땀", "ph")
	def test_ttam_rr(self):
		self.run_test("땀", "{{ko-IPA}}", "ttam", "rr")
	def test_ttam_rrr(self):
		self.run_test("땀", "{{ko-IPA}}", "ttam", "rrr")
	def test_ttam_mr(self):
		self.run_test("땀", "{{ko-IPA}}", "ttam", "mr")
	def test_ttam_yr(self):
		self.run_test("땀", "{{ko-IPA}}", "ttam", "yr")
	def test_ttam_ipa(self):
		self.run_test("땀", "{{ko-IPA}}", "[t͈a̠m]", "ipa")
	def test_ttam_ph_1(self):
		self.run_test("땀", "{{ko-IPA}}", "땀", "ph")
	def test_ttam_rr_1(self):
		self.run_test("땀", "{{ko-IPA}}", "ttam", "rr")
	def test_ttam_rrr_1(self):
		self.run_test("땀", "{{ko-IPA}}", "ttam", "rrr")
	def test_ttam_mr_1(self):
		self.run_test("땀", "{{ko-IPA}}", "ttam", "mr")
	def test_ttam_yr_1(self):
		self.run_test("땀", "{{ko-IPA}}", "ttam", "yr")
	def test_ttam_ipa_1(self):
		self.run_test("땀", "{{ko-IPA}}", "[t͈a̠m]", "ipa")

	def test_deut_ph(self):
		self.run_test("듯", "{{ko-ipa}}", "듣", "ph")
	def test_deut_rr(self):
		self.run_test("듯", "{{ko-ipa}}", "deut", "rr")
	def test_deut_rrr(self):
		self.run_test("듯", "{{ko-ipa}}", "deus", "rrr")
	def test_deut_mr(self):
		self.run_test("듯", "{{ko-ipa}}", "tŭt", "mr")
	def test_deut_yr(self):
		self.run_test("듯", "{{ko-ipa}}", "tus", "yr")
	def test_deut_ipa(self):
		self.run_test("듯", "{{ko-ipa}}", "[tɯt̚]", "ipa")

	def test_deuthada_ph(self):
		self.run_test("듯하다", "{{ko-IPA|a=y}}", "드타다", "ph")
	def test_deuthada_rr(self):
		self.run_test("듯하다", "{{ko-IPA|a=y}}", "deuthada", "rr")
	def test_deuthada_rrr(self):
		self.run_test("듯하다", "{{ko-IPA|a=y}}", "deushada", "rrr")
	def test_deuthada_mr(self):
		self.run_test("듯하다", "{{ko-IPA|a=y}}", "tŭthada", "mr")
	def test_deuthada_yr(self):
		self.run_test("듯하다", "{{ko-IPA|a=y}}", "tushata", "yr")
	def test_deuthada_ipa(self):
		self.run_test("듯하다", "{{ko-IPA|a=y}}", "[tɯtʰa̠da̠]", "ipa")

	def test_gyeolguk_ph(self):
		self.run_test("결국", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-결국.wav}}", "결국", "ph")
	def test_gyeolguk_rr(self):
		self.run_test("결국", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-결국.wav}}", "gyeolguk", "rr")
	def test_gyeolguk_rrr(self):
		self.run_test("결국", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-결국.wav}}", "gyeolgug", "rrr")
	def test_gyeolguk_mr(self):
		self.run_test("결국", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-결국.wav}}", "kyŏlguk", "mr")
	def test_gyeolguk_yr(self):
		self.run_test("결국", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-결국.wav}}", "kyel.kwuk", "yr")
	def test_gyeolguk_ipa(self):
		self.run_test("결국", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-결국.wav}}", "[kjʌ̹ɭɡuk̚]", "ipa")

	def test_ohiryeo_ph(self):
		self.run_test("오히려", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-오히려.wav}}", "오히려", "ph")
	def test_ohiryeo_rr(self):
		self.run_test("오히려", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-오히려.wav}}", "ohiryeo", "rr")
	def test_ohiryeo_rrr(self):
		self.run_test("오히려", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-오히려.wav}}", "ohilyeo", "rrr")
	def test_ohiryeo_mr(self):
		self.run_test("오히려", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-오히려.wav}}", "ohiryŏ", "mr")
	def test_ohiryeo_yr(self):
		self.run_test("오히려", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-오히려.wav}}", "ohilye", "yr")
	def test_ohiryeo_ipa(self):
		self.run_test("오히려", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-오히려.wav}}", "[o̞ʝiɾjʌ̹]", "ipa")

	def test_yojeum_ph(self):
		self.run_test("요즘", "{{ko-IPA}}", "요즘", "ph")
	def test_yojeum_rr(self):
		self.run_test("요즘", "{{ko-IPA}}", "yojeum", "rr")
	def test_yojeum_rrr(self):
		self.run_test("요즘", "{{ko-IPA}}", "yojeum", "rrr")
	def test_yojeum_mr(self):
		self.run_test("요즘", "{{ko-IPA}}", "yojŭm", "mr")
	def test_yojeum_yr(self):
		self.run_test("요즘", "{{ko-IPA}}", "yocum", "yr")
	def test_yojeum_ipa(self):
		self.run_test("요즘", "{{ko-IPA}}", "[jod͡ʑɯm]", "ipa")

	def test_kkok_ph(self):
		self.run_test("꼭", "{{ko-IPA}}", "꼭", "ph")
	def test_kkok_rr(self):
		self.run_test("꼭", "{{ko-IPA}}", "kkok", "rr")
	def test_kkok_rrr(self):
		self.run_test("꼭", "{{ko-IPA}}", "kkog", "rrr")
	def test_kkok_mr(self):
		self.run_test("꼭", "{{ko-IPA}}", "kkok", "mr")
	def test_kkok_yr(self):
		self.run_test("꼭", "{{ko-IPA}}", "kkok", "yr")
	def test_kkok_ipa(self):
		self.run_test("꼭", "{{ko-IPA}}", "[k͈o̞k̚]", "ipa")

	def test_eolma_ph(self):
		self.run_test("얼마", "{{ko-IPA}}", "얼마", "ph")
	def test_eolma_rr(self):
		self.run_test("얼마", "{{ko-IPA}}", "eolma", "rr")
	def test_eolma_rrr(self):
		self.run_test("얼마", "{{ko-IPA}}", "eolma", "rrr")
	def test_eolma_mr(self):
		self.run_test("얼마", "{{ko-IPA}}", "ŏlma", "mr")
	def test_eolma_yr(self):
		self.run_test("얼마", "{{ko-IPA}}", "el.ma", "yr")
	def test_eolma_ipa(self):
		self.run_test("얼마", "{{ko-IPA}}", "[ʌ̹ɭma̠]", "ipa")

	def test_igeo_ph(self):
		self.run_test("이거", "{{ko-IPA|a=y}}", "이거", "ph")
	def test_igeo_rr(self):
		self.run_test("이거", "{{ko-IPA|a=y}}", "igeo", "rr")
	def test_igeo_rrr(self):
		self.run_test("이거", "{{ko-IPA|a=y}}", "igeo", "rrr")
	def test_igeo_mr(self):
		self.run_test("이거", "{{ko-IPA|a=y}}", "igŏ", "mr")
	def test_igeo_yr(self):
		self.run_test("이거", "{{ko-IPA|a=y}}", "ike", "yr")
	def test_igeo_ipa(self):
		self.run_test("이거", "{{ko-IPA|a=y}}", "[iɡʌ̹]", "ipa")

	def test_hyanghada_ph(self):
		self.run_test("향하다", "{{ko-IPA|l=y}}", "향(ː)하다", "ph")
	def test_hyanghada_rr(self):
		self.run_test("향하다", "{{ko-IPA|l=y}}", "hyanghada", "rr")
	def test_hyanghada_rrr(self):
		self.run_test("향하다", "{{ko-IPA|l=y}}", "hyanghada", "rrr")
	def test_hyanghada_mr(self):
		self.run_test("향하다", "{{ko-IPA|l=y}}", "hyanghada", "mr")
	def test_hyanghada_yr(self):
		self.run_test("향하다", "{{ko-IPA|l=y}}", "hyānghata", "yr")
	def test_hyanghada_ipa(self):
		self.run_test("향하다", "{{ko-IPA|l=y}}", "[ˈça̠(ː)ŋɦa̠da̠]", "ipa")

	def test_gwallyeon_ph(self):
		self.run_test("관련", "{{ko-IPA}}", "괄련", "ph")
	def test_gwallyeon_rr(self):
		self.run_test("관련", "{{ko-IPA}}", "gwallyeon", "rr")
	def test_gwallyeon_rrr(self):
		self.run_test("관련", "{{ko-IPA}}", "gwanlyeon", "rrr")
	def test_gwallyeon_mr(self):
		self.run_test("관련", "{{ko-IPA}}", "kwallyŏn", "mr")
	def test_gwallyeon_yr(self):
		self.run_test("관련", "{{ko-IPA}}", "kwanlyen", "yr")
	def test_gwallyeon_ipa(self):
		self.run_test("관련", "{{ko-IPA}}", "[kwa̠ʎʎʌ̹n]", "ipa")

	def test_jageop_ph(self):
		self.run_test("작업", "{{ko-IPA}}", "자겁", "ph")
	def test_jageop_rr(self):
		self.run_test("작업", "{{ko-IPA}}", "jageop", "rr")
	def test_jageop_rrr(self):
		self.run_test("작업", "{{ko-IPA}}", "jag'eob", "rrr")
	def test_jageop_mr(self):
		self.run_test("작업", "{{ko-IPA}}", "chagŏp", "mr")
	def test_jageop_yr(self):
		self.run_test("작업", "{{ko-IPA}}", "cak.ep", "yr")
	def test_jageop_ipa(self):
		self.run_test("작업", "{{ko-IPA}}", "[t͡ɕa̠ɡʌ̹p̚]", "ipa")

	def test_useon_ph(self):
		self.run_test("우선", "{{ko-IPA}}", "우선", "ph")
	def test_useon_rr(self):
		self.run_test("우선", "{{ko-IPA}}", "useon", "rr")
	def test_useon_rrr(self):
		self.run_test("우선", "{{ko-IPA}}", "useon", "rrr")
	def test_useon_mr(self):
		self.run_test("우선", "{{ko-IPA}}", "usŏn", "mr")
	def test_useon_yr(self):
		self.run_test("우선", "{{ko-IPA}}", "wusen", "yr")
	def test_useon_ipa(self):
		self.run_test("우선", "{{ko-IPA}}", "[usʰʌ̹n]", "ipa")

	def test_jeongbo_ph(self):
		self.run_test("정보", "{{ko-IPA}}", "정보", "ph")
	def test_jeongbo_rr(self):
		self.run_test("정보", "{{ko-IPA}}", "jeongbo", "rr")
	def test_jeongbo_rrr(self):
		self.run_test("정보", "{{ko-IPA}}", "jeongbo", "rrr")
	def test_jeongbo_mr(self):
		self.run_test("정보", "{{ko-IPA}}", "chŏngbo", "mr")
	def test_jeongbo_yr(self):
		self.run_test("정보", "{{ko-IPA}}", "cengpo", "yr")
	def test_jeongbo_ipa(self):
		self.run_test("정보", "{{ko-IPA}}", "[t͡ɕʌ̹ŋbo̞]", "ipa")

	def test_yeokhal_ph(self):
		self.run_test("역할", "{{ko-IPA}}", "여칼", "ph")
	def test_yeokhal_rr(self):
		self.run_test("역할", "{{ko-IPA}}", "yeokhal", "rr")
	def test_yeokhal_rrr(self):
		self.run_test("역할", "{{ko-IPA}}", "yeoghal", "rrr")
	def test_yeokhal_mr(self):
		self.run_test("역할", "{{ko-IPA}}", "yŏkhal", "mr")
	def test_yeokhal_yr(self):
		self.run_test("역할", "{{ko-IPA}}", "yek.hal", "yr")
	def test_yeokhal_ipa(self):
		self.run_test("역할", "{{ko-IPA}}", "[jʌ̹kʰa̠ɭ]", "ipa")

	def test_haengdong_ph(self):
		self.run_test("행동", "{{ko-IPA}}", "행동/헹동", "ph")
	def test_haengdong_rr(self):
		self.run_test("행동", "{{ko-IPA}}", "haengdong", "rr")
	def test_haengdong_rrr(self):
		self.run_test("행동", "{{ko-IPA}}", "haengdong", "rrr")
	def test_haengdong_mr(self):
		self.run_test("행동", "{{ko-IPA}}", "haengdong", "mr")
	def test_haengdong_yr(self):
		self.run_test("행동", "{{ko-IPA}}", "hayngtong", "yr")
	def test_haengdong_ipa(self):
		self.run_test("행동", "{{ko-IPA}}", "[hɛŋdo̞ŋ] ~ [he̞ŋdo̞ŋ]", "ipa")

	def test_gungnae_ph(self):
		self.run_test("국내", "{{ko-IPA}}", "궁내/궁네", "ph")
	def test_gungnae_rr(self):
		self.run_test("국내", "{{ko-IPA}}", "gungnae", "rr")
	def test_gungnae_rrr(self):
		self.run_test("국내", "{{ko-IPA}}", "gugnae", "rrr")
	def test_gungnae_mr(self):
		self.run_test("국내", "{{ko-IPA}}", "kungnae", "mr")
	def test_gungnae_yr(self):
		self.run_test("국내", "{{ko-IPA}}", "kwuknay", "yr")
	def test_gungnae_ipa(self):
		self.run_test("국내", "{{ko-IPA}}", "[kuŋnɛ] ~ [kuŋne̞]", "ipa")

	def test_ipjang_ph(self):
		self.run_test("입장", "{{ko-IPA}}", "입짱", "ph")
	def test_ipjang_rr(self):
		self.run_test("입장", "{{ko-IPA}}", "ipjang", "rr")
	def test_ipjang_rrr(self):
		self.run_test("입장", "{{ko-IPA}}", "ibjang", "rrr")
	def test_ipjang_mr(self):
		self.run_test("입장", "{{ko-IPA}}", "ipchang", "mr")
	def test_ipjang_yr(self):
		self.run_test("입장", "{{ko-IPA}}", "ipcang", "yr")
	def test_ipjang_ipa(self):
		self.run_test("입장", "{{ko-IPA}}", "[ip̚t͡ɕ͈a̠ŋ]", "ipa")

	def test_bangsik_ph(self):
		self.run_test("방식", "{{ko-IPA}}", "방식", "ph")
	def test_bangsik_rr(self):
		self.run_test("방식", "{{ko-IPA}}", "bangsik", "rr")
	def test_bangsik_rrr(self):
		self.run_test("방식", "{{ko-IPA}}", "bangsig", "rrr")
	def test_bangsik_mr(self):
		self.run_test("방식", "{{ko-IPA}}", "pangsik", "mr")
	def test_bangsik_yr(self):
		self.run_test("방식", "{{ko-IPA}}", "pangsik", "yr")
	def test_bangsik_ipa(self):
		self.run_test("방식", "{{ko-IPA}}", "[pa̠ŋɕʰik̚]", "ipa")
	def test_bangsik_ph_1(self):
		self.run_test("방식", "{{ko-IPA}}", "방식", "ph")
	def test_bangsik_rr_1(self):
		self.run_test("방식", "{{ko-IPA}}", "bangsik", "rr")
	def test_bangsik_rrr_1(self):
		self.run_test("방식", "{{ko-IPA}}", "bangsig", "rrr")
	def test_bangsik_mr_1(self):
		self.run_test("방식", "{{ko-IPA}}", "pangsik", "mr")
	def test_bangsik_yr_1(self):
		self.run_test("방식", "{{ko-IPA}}", "pangsik", "yr")
	def test_bangsik_ipa_1(self):
		self.run_test("방식", "{{ko-IPA}}", "[pa̠ŋɕʰik̚]", "ipa")

	def test_yeonghyang_ph(self):
		self.run_test("영향", "{{ko-IPA|l=y}}", "영(ː)향", "ph")
	def test_yeonghyang_rr(self):
		self.run_test("영향", "{{ko-IPA|l=y}}", "yeonghyang", "rr")
	def test_yeonghyang_rrr(self):
		self.run_test("영향", "{{ko-IPA|l=y}}", "yeonghyang", "rrr")
	def test_yeonghyang_mr(self):
		self.run_test("영향", "{{ko-IPA|l=y}}", "yŏnghyang", "mr")
	def test_yeonghyang_yr(self):
		self.run_test("영향", "{{ko-IPA|l=y}}", "yēnghyang", "yr")
	def test_yeonghyang_ipa(self):
		self.run_test("영향", "{{ko-IPA|l=y}}", "[ˈjɘ(ː)ŋʝa̠ŋ]", "ipa")

	def test_moyang_ph(self):
		self.run_test("모양", "{{ko-IPA}}", "모양", "ph")
	def test_moyang_rr(self):
		self.run_test("모양", "{{ko-IPA}}", "moyang", "rr")
	def test_moyang_rrr(self):
		self.run_test("모양", "{{ko-IPA}}", "moyang", "rrr")
	def test_moyang_mr(self):
		self.run_test("모양", "{{ko-IPA}}", "moyang", "mr")
	def test_moyang_yr(self):
		self.run_test("모양", "{{ko-IPA}}", "mo.yang", "yr")
	def test_moyang_ipa(self):
		self.run_test("모양", "{{ko-IPA}}", "[mo̞ja̠ŋ]", "ipa")

	def test_jogeon_ph(self):
		self.run_test("조건", "{{ko-IPA|com=1}}", "조껀", "ph")
	def test_jogeon_rr(self):
		self.run_test("조건", "{{ko-IPA|com=1}}", "jogeon", "rr")
	def test_jogeon_rrr(self):
		self.run_test("조건", "{{ko-IPA|com=1}}", "jogeon", "rrr")
	def test_jogeon_mr(self):
		self.run_test("조건", "{{ko-IPA|com=1}}", "chokŏn", "mr")
	def test_jogeon_yr(self):
		self.run_test("조건", "{{ko-IPA|com=1}}", "coqken", "yr")
	def test_jogeon_ipa(self):
		self.run_test("조건", "{{ko-IPA|com=1}}", "[t͡ɕo̞k͈ʌ̹n]", "ipa")

	def test_dangye_ph(self):
		self.run_test("단계", "{{ko-IPA}}", "단계/단게", "ph")
	def test_dangye_rr(self):
		self.run_test("단계", "{{ko-IPA}}", "dan'gye", "rr")
	def test_dangye_rrr(self):
		self.run_test("단계", "{{ko-IPA}}", "dangye", "rrr")
	def test_dangye_mr(self):
		self.run_test("단계", "{{ko-IPA}}", "tan'gye", "mr")
	def test_dangye_yr(self):
		self.run_test("단계", "{{ko-IPA}}", "tankyey", "yr")
	def test_dangye_ipa(self):
		self.run_test("단계", "{{ko-IPA}}", "[ta̠nɡje̞] ~ [ta̠nɡe̞]", "ipa")

	def test_gyosa_ph(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "교(ː)사", "ph")
	def test_gyosa_rr(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "gyosa", "rr")
	def test_gyosa_rrr(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "gyosa", "rrr")
	def test_gyosa_mr(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "kyosa", "mr")
	def test_gyosa_yr(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "kyōsa", "yr")
	def test_gyosa_ipa(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "[ˈkjo(ː)sʰa̠]", "ipa")
	def test_gyosa_ph_1(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "교(ː)사", "ph")
	def test_gyosa_rr_1(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "gyosa", "rr")
	def test_gyosa_rrr_1(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "gyosa", "rrr")
	def test_gyosa_mr_1(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "kyosa", "mr")
	def test_gyosa_yr_1(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "kyōsa", "yr")
	def test_gyosa_ipa_1(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "[ˈkjo(ː)sʰa̠]", "ipa")
	def test_gyosa_ph_2(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "교(ː)사", "ph")
	def test_gyosa_rr_2(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "gyosa", "rr")
	def test_gyosa_rrr_2(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "gyosa", "rrr")
	def test_gyosa_mr_2(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "kyosa", "mr")
	def test_gyosa_yr_2(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "kyōsa", "yr")
	def test_gyosa_ipa_2(self):
		self.run_test("교사", "{{ko-IPA|l=y}}", "[ˈkjo(ː)sʰa̠]", "ipa")
	def test_gyosa_ph_3(self):
		self.run_test("교사", "{{ko-IPA}}", "교사", "ph")
	def test_gyosa_rr_3(self):
		self.run_test("교사", "{{ko-IPA}}", "gyosa", "rr")
	def test_gyosa_rrr_3(self):
		self.run_test("교사", "{{ko-IPA}}", "gyosa", "rrr")
	def test_gyosa_mr_3(self):
		self.run_test("교사", "{{ko-IPA}}", "kyosa", "mr")
	def test_gyosa_yr_3(self):
		self.run_test("교사", "{{ko-IPA}}", "kyosa", "yr")
	def test_gyosa_ipa_3(self):
		self.run_test("교사", "{{ko-IPA}}", "[kjosʰa̠]", "ipa")

	def test_jaryo_ph(self):
		self.run_test("자료", "{{ko-IPA|a=y}}", "자료", "ph")
	def test_jaryo_rr(self):
		self.run_test("자료", "{{ko-IPA|a=y}}", "jaryo", "rr")
	def test_jaryo_rrr(self):
		self.run_test("자료", "{{ko-IPA|a=y}}", "jalyo", "rrr")
	def test_jaryo_mr(self):
		self.run_test("자료", "{{ko-IPA|a=y}}", "charyo", "mr")
	def test_jaryo_yr(self):
		self.run_test("자료", "{{ko-IPA|a=y}}", "calyo", "yr")
	def test_jaryo_ipa(self):
		self.run_test("자료", "{{ko-IPA|a=y}}", "[t͡ɕa̠ɾjo]", "ipa")

	def test_jumin_ph(self):
		self.run_test("주민", "{{ko-IPA|l=y|a=y}}", "주(ː)민", "ph")
	def test_jumin_rr(self):
		self.run_test("주민", "{{ko-IPA|l=y|a=y}}", "jumin", "rr")
	def test_jumin_rrr(self):
		self.run_test("주민", "{{ko-IPA|l=y|a=y}}", "jumin", "rrr")
	def test_jumin_mr(self):
		self.run_test("주민", "{{ko-IPA|l=y|a=y}}", "chumin", "mr")
	def test_jumin_yr(self):
		self.run_test("주민", "{{ko-IPA|l=y|a=y}}", "cwūmin", "yr")
	def test_jumin_ipa(self):
		self.run_test("주민", "{{ko-IPA|l=y|a=y}}", "[ˈt͡ɕu(ː)min]", "ipa")

	def test_jasik_ph(self):
		self.run_test("자식", "{{ko-IPA|a=y}}", "자식", "ph")
	def test_jasik_rr(self):
		self.run_test("자식", "{{ko-IPA|a=y}}", "jasik", "rr")
	def test_jasik_rrr(self):
		self.run_test("자식", "{{ko-IPA|a=y}}", "jasig", "rrr")
	def test_jasik_mr(self):
		self.run_test("자식", "{{ko-IPA|a=y}}", "chasik", "mr")
	def test_jasik_yr(self):
		self.run_test("자식", "{{ko-IPA|a=y}}", "casik", "yr")
	def test_jasik_ipa(self):
		self.run_test("자식", "{{ko-IPA|a=y}}", "[t͡ɕa̠ɕʰik̚]", "ipa")

	def test_neungnyeok_ph(self):
		self.run_test("능력", "{{ko-IPA|a=y}}", "능녁", "ph")
	def test_neungnyeok_rr(self):
		self.run_test("능력", "{{ko-IPA|a=y}}", "neungnyeok", "rr")
	def test_neungnyeok_rrr(self):
		self.run_test("능력", "{{ko-IPA|a=y}}", "neunglyeog", "rrr")
	def test_neungnyeok_mr(self):
		self.run_test("능력", "{{ko-IPA|a=y}}", "nŭngnyŏk", "mr")
	def test_neungnyeok_yr(self):
		self.run_test("능력", "{{ko-IPA|a=y}}", "nunglyek", "yr")
	def test_neungnyeok_ipa(self):
		self.run_test("능력", "{{ko-IPA|a=y}}", "[nɯŋɲʌ̹k̚]", "ipa")

	def test_danche_ph(self):
		self.run_test("단체", "{{ko-IPA|a=y}}", "단체", "ph")
	def test_danche_rr(self):
		self.run_test("단체", "{{ko-IPA|a=y}}", "danche", "rr")
	def test_danche_rrr(self):
		self.run_test("단체", "{{ko-IPA|a=y}}", "danche", "rrr")
	def test_danche_mr(self):
		self.run_test("단체", "{{ko-IPA|a=y}}", "tanch'e", "mr")
	def test_danche_yr(self):
		self.run_test("단체", "{{ko-IPA|a=y}}", "tan.chey", "yr")
	def test_danche_ipa(self):
		self.run_test("단체", "{{ko-IPA|a=y}}", "[ta̠ɲt͡ɕʰe̞]", "ipa")

	def test_daepyo_ph(self):
		self.run_test("대표", "{{ko-IPA|l=y}}", "대(ː)표/데(ː)표", "ph")
	def test_daepyo_rr(self):
		self.run_test("대표", "{{ko-IPA|l=y}}", "daepyo", "rr")
	def test_daepyo_rrr(self):
		self.run_test("대표", "{{ko-IPA|l=y}}", "daepyo", "rrr")
	def test_daepyo_mr(self):
		self.run_test("대표", "{{ko-IPA|l=y}}", "taep'yo", "mr")
	def test_daepyo_yr(self):
		self.run_test("대표", "{{ko-IPA|l=y}}", "tāy.phyo", "yr")
	def test_daepyo_ipa(self):
		self.run_test("대표", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)pʰjo] ~ [ˈte̞(ː)pʰjo]", "ipa")

	def test_noryeok_ph(self):
		self.run_test("노력", "{{ko-IPA}}", "노력", "ph")
	def test_noryeok_rr(self):
		self.run_test("노력", "{{ko-IPA}}", "noryeok", "rr")
	def test_noryeok_rrr(self):
		self.run_test("노력", "{{ko-IPA}}", "nolyeog", "rrr")
	def test_noryeok_mr(self):
		self.run_test("노력", "{{ko-IPA}}", "noryŏk", "mr")
	def test_noryeok_yr(self):
		self.run_test("노력", "{{ko-IPA}}", "nolyek", "yr")
	def test_noryeok_ipa(self):
		self.run_test("노력", "{{ko-IPA}}", "[no̞ɾjʌ̹k̚]", "ipa")

	def test_uiwon_ph(self):
		self.run_test("의원", "{{ko-IPA}}", "의원", "ph")
	def test_uiwon_rr(self):
		self.run_test("의원", "{{ko-IPA}}", "uiwon", "rr")
	def test_uiwon_rrr(self):
		self.run_test("의원", "{{ko-IPA}}", "uiwon", "rrr")
	def test_uiwon_mr(self):
		self.run_test("의원", "{{ko-IPA}}", "ŭiwŏn", "mr")
	def test_uiwon_yr(self):
		self.run_test("의원", "{{ko-IPA}}", "uywen", "yr")
	def test_uiwon_ipa(self):
		self.run_test("의원", "{{ko-IPA}}", "[ɰiwʌ̹n]", "ipa")

	def test_daehoe_ph(self):
		self.run_test("대회", "{{ko-IPA|l=y}}", "대(ː)훼/대(ː)회/데(ː)훼/데(ː)회", "ph")
	def test_daehoe_rr(self):
		self.run_test("대회", "{{ko-IPA|l=y}}", "daehoe", "rr")
	def test_daehoe_rrr(self):
		self.run_test("대회", "{{ko-IPA|l=y}}", "daehoe", "rrr")
	def test_daehoe_mr(self):
		self.run_test("대회", "{{ko-IPA|l=y}}", "taehoe", "mr")
	def test_daehoe_yr(self):
		self.run_test("대회", "{{ko-IPA|l=y}}", "tāyhoy", "yr")
	def test_daehoe_ipa(self):
		self.run_test("대회", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)βwe̞] ~ [ˈtɛ(ː)ɦø̞] ~ [ˈte̞(ː)βwe̞] ~ [ˈte̞(ː)ɦø̞]", "ipa")

	def test_banghyang_ph(self):
		self.run_test("방향", "{{ko-IPA}}", "방향", "ph")
	def test_banghyang_rr(self):
		self.run_test("방향", "{{ko-IPA}}", "banghyang", "rr")
	def test_banghyang_rrr(self):
		self.run_test("방향", "{{ko-IPA}}", "banghyang", "rrr")
	def test_banghyang_mr(self):
		self.run_test("방향", "{{ko-IPA}}", "panghyang", "mr")
	def test_banghyang_yr(self):
		self.run_test("방향", "{{ko-IPA}}", "panghyang", "yr")
	def test_banghyang_ipa(self):
		self.run_test("방향", "{{ko-IPA}}", "[pa̠ŋʝa̠ŋ]", "ipa")
	def test_banghyang_ph_1(self):
		self.run_test("방향", "{{ko-IPA}}", "방향", "ph")
	def test_banghyang_rr_1(self):
		self.run_test("방향", "{{ko-IPA}}", "banghyang", "rr")
	def test_banghyang_rrr_1(self):
		self.run_test("방향", "{{ko-IPA}}", "banghyang", "rrr")
	def test_banghyang_mr_1(self):
		self.run_test("방향", "{{ko-IPA}}", "panghyang", "mr")
	def test_banghyang_yr_1(self):
		self.run_test("방향", "{{ko-IPA}}", "panghyang", "yr")
	def test_banghyang_ipa_1(self):
		self.run_test("방향", "{{ko-IPA}}", "[pa̠ŋʝa̠ŋ]", "ipa")

	def test_daesin_ph(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "대(ː)신/데(ː)신", "ph")
	def test_daesin_rr(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "daesin", "rr")
	def test_daesin_rrr(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "daesin", "rrr")
	def test_daesin_mr(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "taesin", "mr")
	def test_daesin_yr(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "tāysin", "yr")
	def test_daesin_ipa(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)ɕʰin] ~ [ˈte̞(ː)ɕʰin]", "ipa")
	def test_daesin_ph_1(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "대(ː)신/데(ː)신", "ph")
	def test_daesin_rr_1(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "daesin", "rr")
	def test_daesin_rrr_1(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "daesin", "rrr")
	def test_daesin_mr_1(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "taesin", "mr")
	def test_daesin_yr_1(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "tāysin", "yr")
	def test_daesin_ipa_1(self):
		self.run_test("대신", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)ɕʰin] ~ [ˈte̞(ː)ɕʰin]", "ipa")

	def test_bandaemal_ph(self):
		self.run_test("반대말", "{{ko-IPA|l=y}}", "반(ː)대말/반(ː)데말", "ph")
	def test_bandaemal_rr(self):
		self.run_test("반대말", "{{ko-IPA|l=y}}", "bandaemal", "rr")
	def test_bandaemal_rrr(self):
		self.run_test("반대말", "{{ko-IPA|l=y}}", "bandaemal", "rrr")
	def test_bandaemal_mr(self):
		self.run_test("반대말", "{{ko-IPA|l=y}}", "pandaemal", "mr")
	def test_bandaemal_yr(self):
		self.run_test("반대말", "{{ko-IPA|l=y}}", "pāntaymal", "yr")
	def test_bandaemal_ipa(self):
		self.run_test("반대말", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)ndɛma̠ɭ] ~ [ˈpa̠(ː)nde̞ma̠ɭ]", "ipa")

	def test_domae_ph(self):
		self.run_test("도매", "{{ko-IPA}}", "도매/도메", "ph")
	def test_domae_rr(self):
		self.run_test("도매", "{{ko-IPA}}", "domae", "rr")
	def test_domae_rrr(self):
		self.run_test("도매", "{{ko-IPA}}", "domae", "rrr")
	def test_domae_mr(self):
		self.run_test("도매", "{{ko-IPA}}", "tomae", "mr")
	def test_domae_yr(self):
		self.run_test("도매", "{{ko-IPA}}", "tomay", "yr")
	def test_domae_ipa(self):
		self.run_test("도매", "{{ko-IPA}}", "[to̞mɛ] ~ [to̞me̞]", "ipa")

	def test_dochak_ph(self):
		self.run_test("도착", "{{ko-IPA|l=y}}", "도(ː)착", "ph")
	def test_dochak_rr(self):
		self.run_test("도착", "{{ko-IPA|l=y}}", "dochak", "rr")
	def test_dochak_rrr(self):
		self.run_test("도착", "{{ko-IPA|l=y}}", "dochag", "rrr")
	def test_dochak_mr(self):
		self.run_test("도착", "{{ko-IPA|l=y}}", "toch'ak", "mr")
	def test_dochak_yr(self):
		self.run_test("도착", "{{ko-IPA|l=y}}", "tō.chak", "yr")
	def test_dochak_ipa(self):
		self.run_test("도착", "{{ko-IPA|l=y}}", "[ˈto̞(ː)t͡ɕʰa̠k̚]", "ipa")

	def test_dolboda_ph(self):
		self.run_test("돌보다", "{{ko-IPA|l=y}}", "돌(ː)보다", "ph")
	def test_dolboda_rr(self):
		self.run_test("돌보다", "{{ko-IPA|l=y}}", "dolboda", "rr")
	def test_dolboda_rrr(self):
		self.run_test("돌보다", "{{ko-IPA|l=y}}", "dolboda", "rrr")
	def test_dolboda_mr(self):
		self.run_test("돌보다", "{{ko-IPA|l=y}}", "tolboda", "mr")
	def test_dolboda_yr(self):
		self.run_test("돌보다", "{{ko-IPA|l=y}}", "tōl.pota", "yr")
	def test_dolboda_ipa(self):
		self.run_test("돌보다", "{{ko-IPA|l=y}}", "[ˈto̞(ː)ɭbo̞da̠]", "ipa")

	def test_Dongyang_ph(self):
		self.run_test("동양", "{{ko-IPA|cap=y}}", "동양", "ph")
	def test_Dongyang_rr(self):
		self.run_test("동양", "{{ko-IPA|cap=y}}", "Dong'yang", "rr")
	def test_Dongyang_rrr(self):
		self.run_test("동양", "{{ko-IPA|cap=y}}", "Dong'yang", "rrr")
	def test_Dongyang_mr(self):
		self.run_test("동양", "{{ko-IPA|cap=y}}", "Tongyang", "mr")
	def test_Dongyang_yr(self):
		self.run_test("동양", "{{ko-IPA|cap=y}}", "tongyang", "yr")
	def test_Dongyang_ipa(self):
		self.run_test("동양", "{{ko-IPA|cap=y}}", "[to̞ŋja̠ŋ]", "ipa")

	def test_durumagi_ph(self):
		self.run_test("두루마기", "{{ko-IPA}}", "두루마기", "ph")
	def test_durumagi_rr(self):
		self.run_test("두루마기", "{{ko-IPA}}", "durumagi", "rr")
	def test_durumagi_rrr(self):
		self.run_test("두루마기", "{{ko-IPA}}", "dulumagi", "rrr")
	def test_durumagi_mr(self):
		self.run_test("두루마기", "{{ko-IPA}}", "turumagi", "mr")
	def test_durumagi_yr(self):
		self.run_test("두루마기", "{{ko-IPA}}", "twulwumaki", "yr")
	def test_durumagi_ipa(self):
		self.run_test("두루마기", "{{ko-IPA}}", "[tuɾuma̠ɡi]", "ipa")

	def test_ttungttunghada_ph(self):
		self.run_test("뚱뚱하다", "{{ko-IPA}}", "뚱뚱하다", "ph")
	def test_ttungttunghada_rr(self):
		self.run_test("뚱뚱하다", "{{ko-IPA}}", "ttungttunghada", "rr")
	def test_ttungttunghada_rrr(self):
		self.run_test("뚱뚱하다", "{{ko-IPA}}", "ttungttunghada", "rrr")
	def test_ttungttunghada_mr(self):
		self.run_test("뚱뚱하다", "{{ko-IPA}}", "ttungttunghada", "mr")
	def test_ttungttunghada_yr(self):
		self.run_test("뚱뚱하다", "{{ko-IPA}}", "ttwungttwunghata", "yr")
	def test_ttungttunghada_ipa(self):
		self.run_test("뚱뚱하다", "{{ko-IPA}}", "[t͈uŋt͈uŋɦa̠da̠]", "ipa")

	def test_deungsan_ph(self):
		self.run_test("등산", "{{ko-IPA}}", "등산", "ph")
	def test_deungsan_rr(self):
		self.run_test("등산", "{{ko-IPA}}", "deungsan", "rr")
	def test_deungsan_rrr(self):
		self.run_test("등산", "{{ko-IPA}}", "deungsan", "rrr")
	def test_deungsan_mr(self):
		self.run_test("등산", "{{ko-IPA}}", "tŭngsan", "mr")
	def test_deungsan_yr(self):
		self.run_test("등산", "{{ko-IPA}}", "tungsan", "yr")
	def test_deungsan_ipa(self):
		self.run_test("등산", "{{ko-IPA}}", "[tɯŋsʰa̠n]", "ipa")

	def test_damda_ph(self):
		self.run_test("닮다", "{{ko-IPA|l=y}}", "담(ː)따", "ph")
	def test_damda_rr(self):
		self.run_test("닮다", "{{ko-IPA|l=y}}", "damda", "rr")
	def test_damda_rrr(self):
		self.run_test("닮다", "{{ko-IPA|l=y}}", "dalmda", "rrr")
	def test_damda_mr(self):
		self.run_test("닮다", "{{ko-IPA|l=y}}", "tamta", "mr")
	def test_damda_yr(self):
		self.run_test("닮다", "{{ko-IPA|l=y}}", "tālmta", "yr")
	def test_damda_ipa(self):
		self.run_test("닮다", "{{ko-IPA|l=y}}", "[ˈta̠(ː)mt͈a̠]", "ipa")

	def test_dollida_ph(self):
		self.run_test("돌리다", "{{ko-IPA|a=y}}", "돌리다", "ph")
	def test_dollida_rr(self):
		self.run_test("돌리다", "{{ko-IPA|a=y}}", "dollida", "rr")
	def test_dollida_rrr(self):
		self.run_test("돌리다", "{{ko-IPA|a=y}}", "dollida", "rrr")
	def test_dollida_mr(self):
		self.run_test("돌리다", "{{ko-IPA|a=y}}", "tollida", "mr")
	def test_dollida_yr(self):
		self.run_test("돌리다", "{{ko-IPA|a=y}}", "tollita", "yr")
	def test_dollida_ipa(self):
		self.run_test("돌리다", "{{ko-IPA|a=y}}", "[to̞ʎʎida̠]", "ipa")

	def test_jujanghada_ph(self):
		self.run_test("주장하다", "{{ko-IPA|a=y}}", "주장하다", "ph")
	def test_jujanghada_rr(self):
		self.run_test("주장하다", "{{ko-IPA|a=y}}", "jujanghada", "rr")
	def test_jujanghada_rrr(self):
		self.run_test("주장하다", "{{ko-IPA|a=y}}", "jujanghada", "rrr")
	def test_jujanghada_mr(self):
		self.run_test("주장하다", "{{ko-IPA|a=y}}", "chujanghada", "mr")
	def test_jujanghada_yr(self):
		self.run_test("주장하다", "{{ko-IPA|a=y}}", "cwucanghata", "yr")
	def test_jujanghada_ipa(self):
		self.run_test("주장하다", "{{ko-IPA|a=y}}", "[t͡ɕud͡ʑa̠ŋɦa̠da̠]", "ipa")

	def test_umjigida_ph(self):
		self.run_test("움직이다", "{{ko-IPA}}", "움지기다", "ph")
	def test_umjigida_rr(self):
		self.run_test("움직이다", "{{ko-IPA}}", "umjigida", "rr")
	def test_umjigida_rrr(self):
		self.run_test("움직이다", "{{ko-IPA}}", "umjig'ida", "rrr")
	def test_umjigida_mr(self):
		self.run_test("움직이다", "{{ko-IPA}}", "umjigida", "mr")
	def test_umjigida_yr(self):
		self.run_test("움직이다", "{{ko-IPA}}", "wumcik.ita", "yr")
	def test_umjigida_ipa(self):
		self.run_test("움직이다", "{{ko-IPA}}", "[umd͡ʑiɡida̠]", "ipa")

	def test_jinida_ph(self):
		self.run_test("지니다", "{{ko-IPA}}", "지니다", "ph")
	def test_jinida_rr(self):
		self.run_test("지니다", "{{ko-IPA}}", "jinida", "rr")
	def test_jinida_rrr(self):
		self.run_test("지니다", "{{ko-IPA}}", "jinida", "rrr")
	def test_jinida_mr(self):
		self.run_test("지니다", "{{ko-IPA}}", "chinida", "mr")
	def test_jinida_yr(self):
		self.run_test("지니다", "{{ko-IPA}}", "cinita", "yr")
	def test_jinida_ipa(self):
		self.run_test("지니다", "{{ko-IPA}}", "[t͡ɕinida̠]", "ipa")

	def test_yeollida_ph(self):
		self.run_test("열리다", "{{ko-IPA}}", "열리다", "ph")
	def test_yeollida_rr(self):
		self.run_test("열리다", "{{ko-IPA}}", "yeollida", "rr")
	def test_yeollida_rrr(self):
		self.run_test("열리다", "{{ko-IPA}}", "yeollida", "rrr")
	def test_yeollida_mr(self):
		self.run_test("열리다", "{{ko-IPA}}", "yŏllida", "mr")
	def test_yeollida_yr(self):
		self.run_test("열리다", "{{ko-IPA}}", "yellita", "yr")
	def test_yeollida_ipa(self):
		self.run_test("열리다", "{{ko-IPA}}", "[jʌ̹ʎʎida̠]", "ipa")

	def test_neomda_ph(self):
		self.run_test("넘다", "{{ko-IPA|l=y|com=1}}", "넘(ː)따", "ph")
	def test_neomda_rr(self):
		self.run_test("넘다", "{{ko-IPA|l=y|com=1}}", "neomda", "rr")
	def test_neomda_rrr(self):
		self.run_test("넘다", "{{ko-IPA|l=y|com=1}}", "neomda", "rrr")
	def test_neomda_mr(self):
		self.run_test("넘다", "{{ko-IPA|l=y|com=1}}", "nŏmta", "mr")
	def test_neomda_yr(self):
		self.run_test("넘다", "{{ko-IPA|l=y|com=1}}", "nēmqta", "yr")
	def test_neomda_ipa(self):
		self.run_test("넘다", "{{ko-IPA|l=y|com=1}}", "[ˈnɘ(ː)mt͈a̠]", "ipa")

	def test_ollida_ph(self):
		self.run_test("올리다", "{{ko-IPA}}", "올리다", "ph")
	def test_ollida_rr(self):
		self.run_test("올리다", "{{ko-IPA}}", "ollida", "rr")
	def test_ollida_rrr(self):
		self.run_test("올리다", "{{ko-IPA}}", "ollida", "rrr")
	def test_ollida_mr(self):
		self.run_test("올리다", "{{ko-IPA}}", "ollida", "mr")
	def test_ollida_yr(self):
		self.run_test("올리다", "{{ko-IPA}}", "ollita", "yr")
	def test_ollida_ipa(self):
		self.run_test("올리다", "{{ko-IPA}}", "[o̞ʎʎida̠]", "ipa")

	def test_mankeum_ph(self):
		self.run_test("-만큼", "{{ko-IPA}}", "만큼", "ph")
	def test_mankeum_rr(self):
		self.run_test("-만큼", "{{ko-IPA}}", "mankeum", "rr")
	def test_mankeum_rrr(self):
		self.run_test("-만큼", "{{ko-IPA}}", "mankeum", "rrr")
	def test_mankeum_mr(self):
		self.run_test("-만큼", "{{ko-IPA}}", "mank'ŭm", "mr")
	def test_mankeum_yr(self):
		self.run_test("-만큼", "{{ko-IPA}}", "mankhum", "yr")
	def test_mankeum_ipa(self):
		self.run_test("-만큼", "{{ko-IPA}}", "[ma̠nkxɯm]", "ipa")

	def test_maeul_ph(self):
		self.run_test("마을", "{{ko-IPA}}", "마을", "ph")
	def test_maeul_rr(self):
		self.run_test("마을", "{{ko-IPA}}", "ma'eul", "rr")
	def test_maeul_rrr(self):
		self.run_test("마을", "{{ko-IPA}}", "ma'eul", "rrr")
	def test_maeul_mr(self):
		self.run_test("마을", "{{ko-IPA}}", "maŭl", "mr")
	def test_maeul_yr(self):
		self.run_test("마을", "{{ko-IPA}}", "maul", "yr")
	def test_maeul_ipa(self):
		self.run_test("마을", "{{ko-IPA}}", "[ma̠ɯɭ]", "ipa")

	def test_moksori_ph(self):
		self.run_test("목소리", "{{ko-IPA}}", "목쏘리", "ph")
	def test_moksori_rr(self):
		self.run_test("목소리", "{{ko-IPA}}", "moksori", "rr")
	def test_moksori_rrr(self):
		self.run_test("목소리", "{{ko-IPA}}", "mogsoli", "rrr")
	def test_moksori_mr(self):
		self.run_test("목소리", "{{ko-IPA}}", "moksori", "mr")
	def test_moksori_yr(self):
		self.run_test("목소리", "{{ko-IPA}}", "mok.soli", "yr")
	def test_moksori_ipa(self):
		self.run_test("목소리", "{{ko-IPA}}", "[mo̞ks͈o̞ɾi]", "ipa")

	def test_jeonhyeo_ph(self):
		self.run_test("전혀", "{{ko-IPA}}", "전혀", "ph")
	def test_jeonhyeo_rr(self):
		self.run_test("전혀", "{{ko-IPA}}", "jeonhyeo", "rr")
	def test_jeonhyeo_rrr(self):
		self.run_test("전혀", "{{ko-IPA}}", "jeonhyeo", "rrr")
	def test_jeonhyeo_mr(self):
		self.run_test("전혀", "{{ko-IPA}}", "chŏnhyŏ", "mr")
	def test_jeonhyeo_yr(self):
		self.run_test("전혀", "{{ko-IPA}}", "cen.hye", "yr")
	def test_jeonhyeo_ipa(self):
		self.run_test("전혀", "{{ko-IPA}}", "[t͡ɕʌ̹nʝʌ̹]", "ipa")

	def test_geudongan_ph(self):
		self.run_test("그동안", "{{ko-IPA}}", "그동안", "ph")
	def test_geudongan_rr(self):
		self.run_test("그동안", "{{ko-IPA}}", "geudong'an", "rr")
	def test_geudongan_rrr(self):
		self.run_test("그동안", "{{ko-IPA}}", "geudong'an", "rrr")
	def test_geudongan_mr(self):
		self.run_test("그동안", "{{ko-IPA}}", "kŭdongan", "mr")
	def test_geudongan_yr(self):
		self.run_test("그동안", "{{ko-IPA}}", "kutongan", "yr")
	def test_geudongan_ipa(self):
		self.run_test("그동안", "{{ko-IPA}}", "[kɯdo̞ŋa̠n]", "ipa")

	def test_nai_ph(self):
		self.run_test("나이", "{{ko-IPA}}", "나이", "ph")
	def test_nai_rr(self):
		self.run_test("나이", "{{ko-IPA}}", "nai", "rr")
	def test_nai_rrr(self):
		self.run_test("나이", "{{ko-IPA}}", "nai", "rrr")
	def test_nai_mr(self):
		self.run_test("나이", "{{ko-IPA}}", "nai", "mr")
	def test_nai_yr(self):
		self.run_test("나이", "{{ko-IPA}}", "nai", "yr")
	def test_nai_ipa(self):
		self.run_test("나이", "{{ko-IPA}}", "[na̠i]", "ipa")

	def test_naseoda_ph(self):
		self.run_test("나서다", "{{ko-IPA}}", "나서다", "ph")
	def test_naseoda_rr(self):
		self.run_test("나서다", "{{ko-IPA}}", "naseoda", "rr")
	def test_naseoda_rrr(self):
		self.run_test("나서다", "{{ko-IPA}}", "naseoda", "rrr")
	def test_naseoda_mr(self):
		self.run_test("나서다", "{{ko-IPA}}", "nasŏda", "mr")
	def test_naseoda_yr(self):
		self.run_test("나서다", "{{ko-IPA}}", "naseta", "yr")
	def test_naseoda_ipa(self):
		self.run_test("나서다", "{{ko-IPA}}", "[na̠sʰʌ̹da̠]", "ipa")

	def test_bunwigi_ph(self):
		self.run_test("분위기", "{{ko-IPA}}", "부뉘기", "ph")
	def test_bunwigi_rr(self):
		self.run_test("분위기", "{{ko-IPA}}", "bunwigi", "rr")
	def test_bunwigi_rrr(self):
		self.run_test("분위기", "{{ko-IPA}}", "bun'wigi", "rrr")
	def test_bunwigi_mr(self):
		self.run_test("분위기", "{{ko-IPA}}", "punwigi", "mr")
	def test_bunwigi_yr(self):
		self.run_test("분위기", "{{ko-IPA}}", "pun.wiki", "yr")
	def test_bunwigi_ipa(self):
		self.run_test("분위기", "{{ko-IPA}}", "[punɥiɡi] ~ [punyɡi]", "ipa")

	def test_manhada_ph(self):
		self.run_test("만하다", "{{ko-IPA}}", "만하다", "ph")
	def test_manhada_rr(self):
		self.run_test("만하다", "{{ko-IPA}}", "manhada", "rr")
	def test_manhada_rrr(self):
		self.run_test("만하다", "{{ko-IPA}}", "manhada", "rrr")
	def test_manhada_mr(self):
		self.run_test("만하다", "{{ko-IPA}}", "manhada", "mr")
	def test_manhada_yr(self):
		self.run_test("만하다", "{{ko-IPA}}", "man.hata", "yr")
	def test_manhada_ipa(self):
		self.run_test("만하다", "{{ko-IPA}}", "[ma̠nɦa̠da̠]", "ipa")

	def test_geureom_ph(self):
		self.run_test("그럼", "{{ko-IPA}}", "그럼", "ph")
	def test_geureom_rr(self):
		self.run_test("그럼", "{{ko-IPA}}", "geureom", "rr")
	def test_geureom_rrr(self):
		self.run_test("그럼", "{{ko-IPA}}", "geuleom", "rrr")
	def test_geureom_mr(self):
		self.run_test("그럼", "{{ko-IPA}}", "kŭrŏm", "mr")
	def test_geureom_yr(self):
		self.run_test("그럼", "{{ko-IPA}}", "kulem", "yr")
	def test_geureom_ipa(self):
		self.run_test("그럼", "{{ko-IPA}}", "[kɯɾʌ̹m]", "ipa")

	def test_hajiman_ph(self):
		self.run_test("하지만", "{{ko-IPA}}", "하지만", "ph")
	def test_hajiman_rr(self):
		self.run_test("하지만", "{{ko-IPA}}", "hajiman", "rr")
	def test_hajiman_rrr(self):
		self.run_test("하지만", "{{ko-IPA}}", "hajiman", "rrr")
	def test_hajiman_mr(self):
		self.run_test("하지만", "{{ko-IPA}}", "hajiman", "mr")
	def test_hajiman_yr(self):
		self.run_test("하지만", "{{ko-IPA}}", "haciman", "yr")
	def test_hajiman_ipa(self):
		self.run_test("하지만", "{{ko-IPA}}", "[ha̠d͡ʑima̠n]", "ipa")

	def test_datda_ph(self):
		self.run_test("닫다", "{{ko-IPA}}", "닫따", "ph")
	def test_datda_rr(self):
		self.run_test("닫다", "{{ko-IPA}}", "datda", "rr")
	def test_datda_rrr(self):
		self.run_test("닫다", "{{ko-IPA}}", "dadda", "rrr")
	def test_datda_mr(self):
		self.run_test("닫다", "{{ko-IPA}}", "tatta", "mr")
	def test_datda_yr(self):
		self.run_test("닫다", "{{ko-IPA}}", "tat.ta", "yr")
	def test_datda_ipa(self):
		self.run_test("닫다", "{{ko-IPA}}", "[ta̠t̚t͈a̠]", "ipa")

	def test_goeropda_ph(self):
		self.run_test("괴롭다", "{{ko-IPA}}", "궤롭따/괴롭따", "ph")
	def test_goeropda_rr(self):
		self.run_test("괴롭다", "{{ko-IPA}}", "goeropda", "rr")
	def test_goeropda_rrr(self):
		self.run_test("괴롭다", "{{ko-IPA}}", "goelobda", "rrr")
	def test_goeropda_mr(self):
		self.run_test("괴롭다", "{{ko-IPA}}", "koeropta", "mr")
	def test_goeropda_yr(self):
		self.run_test("괴롭다", "{{ko-IPA}}", "koylopta", "yr")
	def test_goeropda_ipa(self):
		self.run_test("괴롭다", "{{ko-IPA}}", "[kwe̞ɾo̞p̚t͈a̠] ~ [kø̞ɾo̞p̚t͈a̠]", "ipa")

	def test_gukda_ph(self):
		self.run_test("굵다", "{{ko-IPA|l=y}}", "국(ː)따", "ph")
	def test_gukda_rr(self):
		self.run_test("굵다", "{{ko-IPA|l=y}}", "gukda", "rr")
	def test_gukda_rrr(self):
		self.run_test("굵다", "{{ko-IPA|l=y}}", "gulgda", "rrr")
	def test_gukda_mr(self):
		self.run_test("굵다", "{{ko-IPA|l=y}}", "kukta", "mr")
	def test_gukda_yr(self):
		self.run_test("굵다", "{{ko-IPA|l=y}}", "kwūlkta", "yr")
	def test_gukda_ipa(self):
		self.run_test("굵다", "{{ko-IPA|l=y}}", "[ˈku(ː)k̚t͈a̠]", "ipa")

	def test_gwichanta_ph(self):
		self.run_test("귀찮다", "{{ko-IPA}}", "귀찬타", "ph")
	def test_gwichanta_rr(self):
		self.run_test("귀찮다", "{{ko-IPA}}", "gwichanta", "rr")
	def test_gwichanta_rrr(self):
		self.run_test("귀찮다", "{{ko-IPA}}", "gwichanhda", "rrr")
	def test_gwichanta_mr(self):
		self.run_test("귀찮다", "{{ko-IPA}}", "kwich'ant'a", "mr")
	def test_gwichanta_yr(self):
		self.run_test("귀찮다", "{{ko-IPA}}", "kwi.chanhta", "yr")
	def test_gwichanta_ipa(self):
		self.run_test("귀찮다", "{{ko-IPA}}", "[kɥit͡ɕʰa̠ntʰa̠] ~ [kyt͡ɕʰa̠ntʰa̠]", "ipa")

	def test_kaeda_ph(self):
		self.run_test("캐다", "{{ko-IPA|l=y}}", "캐(ː)다/케(ː)다", "ph")
	def test_kaeda_rr(self):
		self.run_test("캐다", "{{ko-IPA|l=y}}", "kaeda", "rr")
	def test_kaeda_rrr(self):
		self.run_test("캐다", "{{ko-IPA|l=y}}", "kaeda", "rrr")
	def test_kaeda_mr(self):
		self.run_test("캐다", "{{ko-IPA|l=y}}", "k'aeda", "mr")
	def test_kaeda_yr(self):
		self.run_test("캐다", "{{ko-IPA|l=y}}", "khāyta", "yr")
	def test_kaeda_ipa(self):
		self.run_test("캐다", "{{ko-IPA|l=y}}", "[ˈkʰɛ(ː)da̠] ~ [ˈkʰe̞(ː)da̠]", "ipa")

	def test_noyeopda_ph(self):
		self.run_test("노엽다", "{{ko-IPA|l=y}}", "노(ː)엽따", "ph")
	def test_noyeopda_rr(self):
		self.run_test("노엽다", "{{ko-IPA|l=y}}", "noyeopda", "rr")
	def test_noyeopda_rrr(self):
		self.run_test("노엽다", "{{ko-IPA|l=y}}", "noyeobda", "rrr")
	def test_noyeopda_mr(self):
		self.run_test("노엽다", "{{ko-IPA|l=y}}", "noyŏpta", "mr")
	def test_noyeopda_yr(self):
		self.run_test("노엽다", "{{ko-IPA|l=y}}", "nō.yepta", "yr")
	def test_noyeopda_ipa(self):
		self.run_test("노엽다", "{{ko-IPA|l=y}}", "[ˈno̞(ː)jʌ̹p̚t͈a̠]", "ipa")

	def test_sujun_ph(self):
		self.run_test("수준", "{{ko-IPA}}", "수준", "ph")
	def test_sujun_rr(self):
		self.run_test("수준", "{{ko-IPA}}", "sujun", "rr")
	def test_sujun_rrr(self):
		self.run_test("수준", "{{ko-IPA}}", "sujun", "rrr")
	def test_sujun_mr(self):
		self.run_test("수준", "{{ko-IPA}}", "sujun", "mr")
	def test_sujun_yr(self):
		self.run_test("수준", "{{ko-IPA}}", "swucwun", "yr")
	def test_sujun_ipa(self):
		self.run_test("수준", "{{ko-IPA}}", "[sʰud͡ʑun]", "ipa")

	def test_pyohyeon_ph(self):
		self.run_test("표현", "{{ko-IPA}}", "표현", "ph")
	def test_pyohyeon_rr(self):
		self.run_test("표현", "{{ko-IPA}}", "pyohyeon", "rr")
	def test_pyohyeon_rrr(self):
		self.run_test("표현", "{{ko-IPA}}", "pyohyeon", "rrr")
	def test_pyohyeon_mr(self):
		self.run_test("표현", "{{ko-IPA}}", "p'yohyŏn", "mr")
	def test_pyohyeon_yr(self):
		self.run_test("표현", "{{ko-IPA}}", "phyohyen", "yr")
	def test_pyohyeon_ipa(self):
		self.run_test("표현", "{{ko-IPA}}", "[pʰjoʝʌ̹n]", "ipa")

	def test_gibun_ph(self):
		self.run_test("기분", "{{ko-IPA}}", "기분", "ph")
	def test_gibun_rr(self):
		self.run_test("기분", "{{ko-IPA}}", "gibun", "rr")
	def test_gibun_rrr(self):
		self.run_test("기분", "{{ko-IPA}}", "gibun", "rrr")
	def test_gibun_mr(self):
		self.run_test("기분", "{{ko-IPA}}", "kibun", "mr")
	def test_gibun_yr(self):
		self.run_test("기분", "{{ko-IPA}}", "kipun", "yr")
	def test_gibun_ipa(self):
		self.run_test("기분", "{{ko-IPA}}", "[kibun]", "ipa")

	def test_dongsi_ph(self):
		self.run_test("동시", "{{ko-IPA}}", "동시", "ph")
	def test_dongsi_rr(self):
		self.run_test("동시", "{{ko-IPA}}", "dongsi", "rr")
	def test_dongsi_rrr(self):
		self.run_test("동시", "{{ko-IPA}}", "dongsi", "rrr")
	def test_dongsi_mr(self):
		self.run_test("동시", "{{ko-IPA}}", "tongsi", "mr")
	def test_dongsi_yr(self):
		self.run_test("동시", "{{ko-IPA}}", "tongsi", "yr")
	def test_dongsi_ipa(self):
		self.run_test("동시", "{{ko-IPA}}", "[to̞ŋɕʰi]", "ipa")

	def test_gineung_ph(self):
		self.run_test("기능", "{{ko-IPA}}", "기능", "ph")
	def test_gineung_rr(self):
		self.run_test("기능", "{{ko-IPA}}", "gineung", "rr")
	def test_gineung_rrr(self):
		self.run_test("기능", "{{ko-IPA}}", "gineung", "rrr")
	def test_gineung_mr(self):
		self.run_test("기능", "{{ko-IPA}}", "kinŭng", "mr")
	def test_gineung_yr(self):
		self.run_test("기능", "{{ko-IPA}}", "kinung", "yr")
	def test_gineung_ipa(self):
		self.run_test("기능", "{{ko-IPA}}", "[kinɯŋ]", "ipa")
	def test_gineung_ph_1(self):
		self.run_test("기능", "{{ko-IPA}}", "기능", "ph")
	def test_gineung_rr_1(self):
		self.run_test("기능", "{{ko-IPA}}", "gineung", "rr")
	def test_gineung_rrr_1(self):
		self.run_test("기능", "{{ko-IPA}}", "gineung", "rrr")
	def test_gineung_mr_1(self):
		self.run_test("기능", "{{ko-IPA}}", "kinŭng", "mr")
	def test_gineung_yr_1(self):
		self.run_test("기능", "{{ko-IPA}}", "kinung", "yr")
	def test_gineung_ipa_1(self):
		self.run_test("기능", "{{ko-IPA}}", "[kinɯŋ]", "ipa")

	def test_jeonjaeng_ph(self):
		self.run_test("전쟁", "{{ko-IPA|l=y}}", "전(ː)쟁/전(ː)젱", "ph")
	def test_jeonjaeng_rr(self):
		self.run_test("전쟁", "{{ko-IPA|l=y}}", "jeonjaeng", "rr")
	def test_jeonjaeng_rrr(self):
		self.run_test("전쟁", "{{ko-IPA|l=y}}", "jeonjaeng", "rrr")
	def test_jeonjaeng_mr(self):
		self.run_test("전쟁", "{{ko-IPA|l=y}}", "chŏnjaeng", "mr")
	def test_jeonjaeng_yr(self):
		self.run_test("전쟁", "{{ko-IPA|l=y}}", "cēn.cayng", "yr")
	def test_jeonjaeng_ipa(self):
		self.run_test("전쟁", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)ɲd͡ʑɛŋ] ~ [ˈt͡ɕɘ(ː)ɲd͡ʑe̞ŋ]", "ipa")

	def test_hoeui_ph(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "훼(ː)의/훼(ː)의/회(ː)의/회(ː)이", "ph")
	def test_hoeui_rr(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "hoe'ui", "rr")
	def test_hoeui_rrr(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "hoe'ui", "rrr")
	def test_hoeui_mr(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "hoeŭi", "mr")
	def test_hoeui_yr(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "hōy.uy", "yr")
	def test_hoeui_ipa(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "[ˈɸwe̞(ː)ɰi] ~ [ˈɸwe̞(ː)ɰi] ~ [ˈhø̞(ː)ɰi] ~ [ˈhø̞(ː)i]", "ipa")
	def test_hoeui_ph_1(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "훼(ː)의/훼(ː)의/회(ː)의/회(ː)이", "ph")
	def test_hoeui_rr_1(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "hoe'ui", "rr")
	def test_hoeui_rrr_1(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "hoe'ui", "rrr")
	def test_hoeui_mr_1(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "hoeŭi", "mr")
	def test_hoeui_yr_1(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "hōy.uy", "yr")
	def test_hoeui_ipa_1(self):
		self.run_test("회의", "{{ko-IPA|l=y|ui=2}}", "[ˈɸwe̞(ː)ɰi] ~ [ˈɸwe̞(ː)ɰi] ~ [ˈhø̞(ː)ɰi] ~ [ˈhø̞(ː)i]", "ipa")
	def test_hoeui_ph_2(self):
		self.run_test("회의", "{{ko-IPA|ui=2}}", "훼의/훼의/회의/회이", "ph")
	def test_hoeui_rr_2(self):
		self.run_test("회의", "{{ko-IPA|ui=2}}", "hoe'ui", "rr")
	def test_hoeui_rrr_2(self):
		self.run_test("회의", "{{ko-IPA|ui=2}}", "hoe'ui", "rrr")
	def test_hoeui_mr_2(self):
		self.run_test("회의", "{{ko-IPA|ui=2}}", "hoeŭi", "mr")
	def test_hoeui_yr_2(self):
		self.run_test("회의", "{{ko-IPA|ui=2}}", "hoy.uy", "yr")
	def test_hoeui_ipa_2(self):
		self.run_test("회의", "{{ko-IPA|ui=2}}", "[ɸwe̞ɰi] ~ [ɸwe̞ɰi] ~ [hø̞ɰi] ~ [hø̞i]", "ipa")

	def test_bangsong_ph(self):
		self.run_test("방송", "{{ko-IPA|l=y}}", "방(ː)송", "ph")
	def test_bangsong_rr(self):
		self.run_test("방송", "{{ko-IPA|l=y}}", "bangsong", "rr")
	def test_bangsong_rrr(self):
		self.run_test("방송", "{{ko-IPA|l=y}}", "bangsong", "rrr")
	def test_bangsong_mr(self):
		self.run_test("방송", "{{ko-IPA|l=y}}", "pangsong", "mr")
	def test_bangsong_yr(self):
		self.run_test("방송", "{{ko-IPA|l=y}}", "pāngsong", "yr")
	def test_bangsong_ipa(self):
		self.run_test("방송", "{{ko-IPA|l=y}}", "[ˈpa̠(ː)ŋsʰo̞ŋ]", "ipa")

	def test_iyagihada_ph(self):
		self.run_test("이야기하다", "{{ko-IPA}}", "이야기하다", "ph")
	def test_iyagihada_rr(self):
		self.run_test("이야기하다", "{{ko-IPA}}", "iyagihada", "rr")
	def test_iyagihada_rrr(self):
		self.run_test("이야기하다", "{{ko-IPA}}", "iyagihada", "rrr")
	def test_iyagihada_mr(self):
		self.run_test("이야기하다", "{{ko-IPA}}", "iyagihada", "mr")
	def test_iyagihada_yr(self):
		self.run_test("이야기하다", "{{ko-IPA}}", "iyakihata", "yr")
	def test_iyagihada_ipa(self):
		self.run_test("이야기하다", "{{ko-IPA}}", "[ija̠ɡiɦa̠da̠]", "ipa")

	def test_nodong_ph(self):
		self.run_test("노동", "{{ko-IPA}}", "노동", "ph")
	def test_nodong_rr(self):
		self.run_test("노동", "{{ko-IPA}}", "nodong", "rr")
	def test_nodong_rrr(self):
		self.run_test("노동", "{{ko-IPA}}", "nodong", "rrr")
	def test_nodong_mr(self):
		self.run_test("노동", "{{ko-IPA}}", "nodong", "mr")
	def test_nodong_yr(self):
		self.run_test("노동", "{{ko-IPA}}", "notong", "yr")
	def test_nodong_ipa(self):
		self.run_test("노동", "{{ko-IPA}}", "[no̞do̞ŋ]", "ipa")

	def test_gwageo_ph(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "과(ː)거", "ph")
	def test_gwageo_rr(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "gwageo", "rr")
	def test_gwageo_rrr(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "gwageo", "rrr")
	def test_gwageo_mr(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "kwagŏ", "mr")
	def test_gwageo_yr(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "kwāke", "yr")
	def test_gwageo_ipa(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "[ˈkwa̠(ː)ɡʌ̹]", "ipa")
	def test_gwageo_ph_1(self):
		self.run_test("과거", "{{ko-IPA}}", "과거", "ph")
	def test_gwageo_rr_1(self):
		self.run_test("과거", "{{ko-IPA}}", "gwageo", "rr")
	def test_gwageo_rrr_1(self):
		self.run_test("과거", "{{ko-IPA}}", "gwageo", "rrr")
	def test_gwageo_mr_1(self):
		self.run_test("과거", "{{ko-IPA}}", "kwagŏ", "mr")
	def test_gwageo_yr_1(self):
		self.run_test("과거", "{{ko-IPA}}", "kwake", "yr")
	def test_gwageo_ipa_1(self):
		self.run_test("과거", "{{ko-IPA}}", "[kwa̠ɡʌ̹]", "ipa")
	def test_gwageo_ph_2(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "과(ː)거", "ph")
	def test_gwageo_rr_2(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "gwageo", "rr")
	def test_gwageo_rrr_2(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "gwageo", "rrr")
	def test_gwageo_mr_2(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "kwagŏ", "mr")
	def test_gwageo_yr_2(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "kwāke", "yr")
	def test_gwageo_ipa_2(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "[ˈkwa̠(ː)ɡʌ̹]", "ipa")
	def test_gwageo_ph_3(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "과(ː)거", "ph")
	def test_gwageo_rr_3(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "gwageo", "rr")
	def test_gwageo_rrr_3(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "gwageo", "rrr")
	def test_gwageo_mr_3(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "kwagŏ", "mr")
	def test_gwageo_yr_3(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "kwāke", "yr")
	def test_gwageo_ipa_3(self):
		self.run_test("과거", "{{ko-IPA|l=y}}", "[ˈkwa̠(ː)ɡʌ̹]", "ipa")

	def test_gachi_ph(self):
		self.run_test("가치", "{{ko-IPA|a=y}}", "가치", "ph")
	def test_gachi_rr(self):
		self.run_test("가치", "{{ko-IPA|a=y}}", "gachi", "rr")
	def test_gachi_rrr(self):
		self.run_test("가치", "{{ko-IPA|a=y}}", "gachi", "rrr")
	def test_gachi_mr(self):
		self.run_test("가치", "{{ko-IPA|a=y}}", "kach'i", "mr")
	def test_gachi_yr(self):
		self.run_test("가치", "{{ko-IPA|a=y}}", "ka.chi", "yr")
	def test_gachi_ipa(self):
		self.run_test("가치", "{{ko-IPA|a=y}}", "[ka̠t͡ɕʰi]", "ipa")

	def test_sigan_ph(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "시간", "ph")
	def test_sigan_rr(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "sigan", "rr")
	def test_sigan_rrr(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "sigan", "rrr")
	def test_sigan_mr(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "sigan", "mr")
	def test_sigan_yr(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "sikan", "yr")
	def test_sigan_ipa(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "[ɕʰiɡa̠n]", "ipa")
	def test_sigan_ph_1(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "시간", "ph")
	def test_sigan_rr_1(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "sigan", "rr")
	def test_sigan_rrr_1(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "sigan", "rrr")
	def test_sigan_mr_1(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "sigan", "mr")
	def test_sigan_yr_1(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "sikan", "yr")
	def test_sigan_ipa_1(self):
		self.run_test("시간", "{{ko-IPA|a=y}}", "[ɕʰiɡa̠n]", "ipa")
	def test_sigan_ph_2(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "시(ː)간", "ph")
	def test_sigan_rr_2(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "sigan", "rr")
	def test_sigan_rrr_2(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "sigan", "rrr")
	def test_sigan_mr_2(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "sigan", "mr")
	def test_sigan_yr_2(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "sīkan", "yr")
	def test_sigan_ipa_2(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "[ˈɕʰi(ː)ɡa̠n]", "ipa")
	def test_sigan_ph_3(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "시(ː)간", "ph")
	def test_sigan_rr_3(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "sigan", "rr")
	def test_sigan_rrr_3(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "sigan", "rrr")
	def test_sigan_mr_3(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "sigan", "mr")
	def test_sigan_yr_3(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "sīkan", "yr")
	def test_sigan_ipa_3(self):
		self.run_test("시간", "{{ko-IPA|a=y|l=y}}", "[ˈɕʰi(ː)ɡa̠n]", "ipa")

	def test_nutda_ph(self):
		self.run_test("눋다", "{{ko-IPA|l=y}}", "눋(ː)따", "ph")
	def test_nutda_rr(self):
		self.run_test("눋다", "{{ko-IPA|l=y}}", "nutda", "rr")
	def test_nutda_rrr(self):
		self.run_test("눋다", "{{ko-IPA|l=y}}", "nudda", "rrr")
	def test_nutda_mr(self):
		self.run_test("눋다", "{{ko-IPA|l=y}}", "nutta", "mr")
	def test_nutda_yr(self):
		self.run_test("눋다", "{{ko-IPA|l=y}}", "nwūt.ta", "yr")
	def test_nutda_ipa(self):
		self.run_test("눋다", "{{ko-IPA|l=y}}", "[ˈnu(ː)t̚t͈a̠]", "ipa")

	def test_neutda_ph(self):
		self.run_test("늦다", "{{ko-IPA}}", "늗따", "ph")
	def test_neutda_rr(self):
		self.run_test("늦다", "{{ko-IPA}}", "neutda", "rr")
	def test_neutda_rrr(self):
		self.run_test("늦다", "{{ko-IPA}}", "neujda", "rrr")
	def test_neutda_mr(self):
		self.run_test("늦다", "{{ko-IPA}}", "nŭtta", "mr")
	def test_neutda_yr(self):
		self.run_test("늦다", "{{ko-IPA}}", "nucta", "yr")
	def test_neutda_ipa(self):
		self.run_test("늦다", "{{ko-IPA}}", "[nɯt̚t͈a̠]", "ipa")

	def test_neukda_ph(self):
		self.run_test("늙다", "{{ko-IPA}}", "늑따", "ph")
	def test_neukda_rr(self):
		self.run_test("늙다", "{{ko-IPA}}", "neukda", "rr")
	def test_neukda_rrr(self):
		self.run_test("늙다", "{{ko-IPA}}", "neulgda", "rrr")
	def test_neukda_mr(self):
		self.run_test("늙다", "{{ko-IPA}}", "nŭkta", "mr")
	def test_neukda_yr(self):
		self.run_test("늙다", "{{ko-IPA}}", "nulkta", "yr")
	def test_neukda_ipa(self):
		self.run_test("늙다", "{{ko-IPA}}", "[nɯk̚t͈a̠]", "ipa")

	def test_jipdan_ph(self):
		self.run_test("집단", "{{ko-IPA}}", "집딴", "ph")
	def test_jipdan_rr(self):
		self.run_test("집단", "{{ko-IPA}}", "jipdan", "rr")
	def test_jipdan_rrr(self):
		self.run_test("집단", "{{ko-IPA}}", "jibdan", "rrr")
	def test_jipdan_mr(self):
		self.run_test("집단", "{{ko-IPA}}", "chiptan", "mr")
	def test_jipdan_yr(self):
		self.run_test("집단", "{{ko-IPA}}", "ciptan", "yr")
	def test_jipdan_ipa(self):
		self.run_test("집단", "{{ko-IPA}}", "[t͡ɕip̚t͈a̠n]", "ipa")

	def test_janggwan_ph(self):
		self.run_test("장관", "{{ko-IPA|l=y}}", "장(ː)관", "ph")
	def test_janggwan_rr(self):
		self.run_test("장관", "{{ko-IPA|l=y}}", "janggwan", "rr")
	def test_janggwan_rrr(self):
		self.run_test("장관", "{{ko-IPA|l=y}}", "janggwan", "rrr")
	def test_janggwan_mr(self):
		self.run_test("장관", "{{ko-IPA|l=y}}", "changgwan", "mr")
	def test_janggwan_yr(self):
		self.run_test("장관", "{{ko-IPA|l=y}}", "cāngkwan", "yr")
	def test_janggwan_ipa(self):
		self.run_test("장관", "{{ko-IPA|l=y}}", "[ˈt͡ɕa̠(ː)ŋɡwa̠n]", "ipa")

	def test_sijeol_ph(self):
		self.run_test("시절", "{{ko-IPA}}", "시절", "ph")
	def test_sijeol_rr(self):
		self.run_test("시절", "{{ko-IPA}}", "sijeol", "rr")
	def test_sijeol_rrr(self):
		self.run_test("시절", "{{ko-IPA}}", "sijeol", "rrr")
	def test_sijeol_mr(self):
		self.run_test("시절", "{{ko-IPA}}", "sijŏl", "mr")
	def test_sijeol_yr(self):
		self.run_test("시절", "{{ko-IPA}}", "sicel", "yr")
	def test_sijeol_ipa(self):
		self.run_test("시절", "{{ko-IPA}}", "[ɕʰid͡ʑʌ̹ɭ]", "ipa")

	def test_mulgeon_ph(self):
		self.run_test("물건", "{{ko-IPA}}", "물건", "ph")
	def test_mulgeon_rr(self):
		self.run_test("물건", "{{ko-IPA}}", "mulgeon", "rr")
	def test_mulgeon_rrr(self):
		self.run_test("물건", "{{ko-IPA}}", "mulgeon", "rrr")
	def test_mulgeon_mr(self):
		self.run_test("물건", "{{ko-IPA}}", "mulgŏn", "mr")
	def test_mulgeon_yr(self):
		self.run_test("물건", "{{ko-IPA}}", "mul.ken", "yr")
	def test_mulgeon_ipa(self):
		self.run_test("물건", "{{ko-IPA}}", "[muɭɡʌ̹n]", "ipa")

	def test_gaein_ph(self):
		self.run_test("개인", "{{ko-IPA|l=y|a=y}}", "개(ː)인/게(ː)인", "ph")
	def test_gaein_rr(self):
		self.run_test("개인", "{{ko-IPA|l=y|a=y}}", "gaein", "rr")
	def test_gaein_rrr(self):
		self.run_test("개인", "{{ko-IPA|l=y|a=y}}", "gaein", "rrr")
	def test_gaein_mr(self):
		self.run_test("개인", "{{ko-IPA|l=y|a=y}}", "kaein", "mr")
	def test_gaein_yr(self):
		self.run_test("개인", "{{ko-IPA|l=y|a=y}}", "kāyin", "yr")
	def test_gaein_ipa(self):
		self.run_test("개인", "{{ko-IPA|l=y|a=y}}", "[ˈkɛ(ː)in] ~ [ˈke̞(ː)in]", "ipa")

	def test_jakga_ph(self):
		self.run_test("작가", "{{ko-IPA}}", "작까", "ph")
	def test_jakga_rr(self):
		self.run_test("작가", "{{ko-IPA}}", "jakga", "rr")
	def test_jakga_rrr(self):
		self.run_test("작가", "{{ko-IPA}}", "jagga", "rrr")
	def test_jakga_mr(self):
		self.run_test("작가", "{{ko-IPA}}", "chakka", "mr")
	def test_jakga_yr(self):
		self.run_test("작가", "{{ko-IPA}}", "cak.ka", "yr")
	def test_jakga_ipa(self):
		self.run_test("작가", "{{ko-IPA}}", "[t͡ɕa̠k̚k͈a̠]", "ipa")

	def test_dureuda_ph(self):
		self.run_test("두르다", "{{ko-IPA}}", "두르다", "ph")
	def test_dureuda_rr(self):
		self.run_test("두르다", "{{ko-IPA}}", "dureuda", "rr")
	def test_dureuda_rrr(self):
		self.run_test("두르다", "{{ko-IPA}}", "duleuda", "rrr")
	def test_dureuda_mr(self):
		self.run_test("두르다", "{{ko-IPA}}", "turŭda", "mr")
	def test_dureuda_yr(self):
		self.run_test("두르다", "{{ko-IPA}}", "twuluta", "yr")
	def test_dureuda_ipa(self):
		self.run_test("두르다", "{{ko-IPA}}", "[tuɾɯda̠]", "ipa")

	def test_butda_ph(self):
		self.run_test("붇다", "{{ko-IPA|l=y}}", "붇(ː)따", "ph")
	def test_butda_rr(self):
		self.run_test("붇다", "{{ko-IPA|l=y}}", "butda", "rr")
	def test_butda_rrr(self):
		self.run_test("붇다", "{{ko-IPA|l=y}}", "budda", "rrr")
	def test_butda_mr(self):
		self.run_test("붇다", "{{ko-IPA|l=y}}", "putta", "mr")
	def test_butda_yr(self):
		self.run_test("붇다", "{{ko-IPA|l=y}}", "pūt.ta", "yr")
	def test_butda_ipa(self):
		self.run_test("붇다", "{{ko-IPA|l=y}}", "[ˈpu(ː)t̚t͈a̠]", "ipa")

	def test_sinda_ph(self):
		self.run_test("신다", "{{ko-IPA|l=y|com=1}}", "신(ː)따", "ph")
	def test_sinda_rr(self):
		self.run_test("신다", "{{ko-IPA|l=y|com=1}}", "sinda", "rr")
	def test_sinda_rrr(self):
		self.run_test("신다", "{{ko-IPA|l=y|com=1}}", "sinda", "rrr")
	def test_sinda_mr(self):
		self.run_test("신다", "{{ko-IPA|l=y|com=1}}", "sinta", "mr")
	def test_sinda_yr(self):
		self.run_test("신다", "{{ko-IPA|l=y|com=1}}", "sīnqta", "yr")
	def test_sinda_ipa(self):
		self.run_test("신다", "{{ko-IPA|l=y|com=1}}", "[ˈɕʰi(ː)nt͈a̠]", "ipa")

	def test_siwonhada_ph(self):
		self.run_test("시원하다", "{{ko-IPA}}", "시원하다", "ph")
	def test_siwonhada_rr(self):
		self.run_test("시원하다", "{{ko-IPA}}", "siwonhada", "rr")
	def test_siwonhada_rrr(self):
		self.run_test("시원하다", "{{ko-IPA}}", "siwonhada", "rrr")
	def test_siwonhada_mr(self):
		self.run_test("시원하다", "{{ko-IPA}}", "siwŏnhada", "mr")
	def test_siwonhada_yr(self):
		self.run_test("시원하다", "{{ko-IPA}}", "siwen.hata", "yr")
	def test_siwonhada_ipa(self):
		self.run_test("시원하다", "{{ko-IPA}}", "[ɕʰiwʌ̹nɦa̠da̠]", "ipa")

	def test_kkeulta_ph(self):
		self.run_test("끓다", "{{ko-IPA}}", "끌타", "ph")
	def test_kkeulta_rr(self):
		self.run_test("끓다", "{{ko-IPA}}", "kkeulta", "rr")
	def test_kkeulta_rrr(self):
		self.run_test("끓다", "{{ko-IPA}}", "kkeulhda", "rrr")
	def test_kkeulta_mr(self):
		self.run_test("끓다", "{{ko-IPA}}", "kkŭlt'a", "mr")
	def test_kkeulta_yr(self):
		self.run_test("끓다", "{{ko-IPA}}", "kkulhta", "yr")
	def test_kkeulta_ipa(self):
		self.run_test("끓다", "{{ko-IPA}}", "[k͈ɯɭtʰa̠]", "ipa")

	def test_kkeureuda_ph(self):
		self.run_test("끄르다", "{{ko-IPA}}", "끄르다", "ph")
	def test_kkeureuda_rr(self):
		self.run_test("끄르다", "{{ko-IPA}}", "kkeureuda", "rr")
	def test_kkeureuda_rrr(self):
		self.run_test("끄르다", "{{ko-IPA}}", "kkeuleuda", "rrr")
	def test_kkeureuda_mr(self):
		self.run_test("끄르다", "{{ko-IPA}}", "kkŭrŭda", "mr")
	def test_kkeureuda_yr(self):
		self.run_test("끄르다", "{{ko-IPA}}", "kkuluta", "yr")
	def test_kkeureuda_ipa(self):
		self.run_test("끄르다", "{{ko-IPA}}", "[k͈ɯɾɯda̠]", "ipa")

	def test_kkeunta_ph(self):
		self.run_test("끊다", "{{ko-IPA}}", "끈타", "ph")
	def test_kkeunta_rr(self):
		self.run_test("끊다", "{{ko-IPA}}", "kkeunta", "rr")
	def test_kkeunta_rrr(self):
		self.run_test("끊다", "{{ko-IPA}}", "kkeunhda", "rrr")
	def test_kkeunta_mr(self):
		self.run_test("끊다", "{{ko-IPA}}", "kkŭnt'a", "mr")
	def test_kkeunta_yr(self):
		self.run_test("끊다", "{{ko-IPA}}", "kkunhta", "yr")
	def test_kkeunta_ipa(self):
		self.run_test("끊다", "{{ko-IPA}}", "[k͈ɯntʰa̠]", "ipa")

	def test_tteolda_ph(self):
		self.run_test("떫다", "{{ko-IPA|l=y}}", "떨(ː)따", "ph")
	def test_tteolda_rr(self):
		self.run_test("떫다", "{{ko-IPA|l=y}}", "tteolda", "rr")
	def test_tteolda_rrr(self):
		self.run_test("떫다", "{{ko-IPA|l=y}}", "tteolbda", "rrr")
	def test_tteolda_mr(self):
		self.run_test("떫다", "{{ko-IPA|l=y}}", "ttŏlta", "mr")
	def test_tteolda_yr(self):
		self.run_test("떫다", "{{ko-IPA|l=y}}", "ttēlpta", "yr")
	def test_tteolda_ipa(self):
		self.run_test("떫다", "{{ko-IPA|l=y}}", "[ˈt͈ɘ(ː)ɭt͈a̠]", "ipa")

	def test_ppata_ph(self):
		self.run_test("빻다", "{{ko-IPA|l=y}}", "빠(ː)타", "ph")
	def test_ppata_rr(self):
		self.run_test("빻다", "{{ko-IPA|l=y}}", "ppata", "rr")
	def test_ppata_rrr(self):
		self.run_test("빻다", "{{ko-IPA|l=y}}", "ppahda", "rrr")
	def test_ppata_mr(self):
		self.run_test("빻다", "{{ko-IPA|l=y}}", "ppat'a", "mr")
	def test_ppata_yr(self):
		self.run_test("빻다", "{{ko-IPA|l=y}}", "ppāhta", "yr")
	def test_ppata_ipa(self):
		self.run_test("빻다", "{{ko-IPA|l=y}}", "[ˈp͈a̠(ː)tʰa̠]", "ipa")

	def test_jinanhae_ph(self):
		self.run_test("지난해", "{{ko-IPA}}", "지난해/지난헤", "ph")
	def test_jinanhae_rr(self):
		self.run_test("지난해", "{{ko-IPA}}", "jinanhae", "rr")
	def test_jinanhae_rrr(self):
		self.run_test("지난해", "{{ko-IPA}}", "jinanhae", "rrr")
	def test_jinanhae_mr(self):
		self.run_test("지난해", "{{ko-IPA}}", "chinanhae", "mr")
	def test_jinanhae_yr(self):
		self.run_test("지난해", "{{ko-IPA}}", "cinan.hay", "yr")
	def test_jinanhae_ipa(self):
		self.run_test("지난해", "{{ko-IPA}}", "[t͡ɕina̠nɦɛ] ~ [t͡ɕina̠nɦe̞]", "ipa")

	def test_salpyeoboda_ph(self):
		self.run_test("살펴보다", "{{ko-IPA}}", "살펴보다", "ph")
	def test_salpyeoboda_rr(self):
		self.run_test("살펴보다", "{{ko-IPA}}", "salpyeoboda", "rr")
	def test_salpyeoboda_rrr(self):
		self.run_test("살펴보다", "{{ko-IPA}}", "salpyeoboda", "rrr")
	def test_salpyeoboda_mr(self):
		self.run_test("살펴보다", "{{ko-IPA}}", "salp'yŏboda", "mr")
	def test_salpyeoboda_yr(self):
		self.run_test("살펴보다", "{{ko-IPA}}", "sal.phyepota", "yr")
	def test_salpyeoboda_ipa(self):
		self.run_test("살펴보다", "{{ko-IPA}}", "[sʰa̠ɭpʰjʌ̹bo̞da̠]", "ipa")

	def test_jeomda_ph(self):
		self.run_test("젊다", "{{ko-IPA|l=y}}", "점(ː)따", "ph")
	def test_jeomda_rr(self):
		self.run_test("젊다", "{{ko-IPA|l=y}}", "jeomda", "rr")
	def test_jeomda_rrr(self):
		self.run_test("젊다", "{{ko-IPA|l=y}}", "jeolmda", "rrr")
	def test_jeomda_mr(self):
		self.run_test("젊다", "{{ko-IPA|l=y}}", "chŏmta", "mr")
	def test_jeomda_yr(self):
		self.run_test("젊다", "{{ko-IPA|l=y}}", "cēlmta", "yr")
	def test_jeomda_ipa(self):
		self.run_test("젊다", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)mt͈a̠]", "ipa")

	def test_hyogwa_ph(self):
		self.run_test("효과", "{{ko-IPA|l=y|com=1}}", "효(ː)꽈", "ph")
	def test_hyogwa_rr(self):
		self.run_test("효과", "{{ko-IPA|l=y|com=1}}", "hyogwa", "rr")
	def test_hyogwa_rrr(self):
		self.run_test("효과", "{{ko-IPA|l=y|com=1}}", "hyogwa", "rrr")
	def test_hyogwa_mr(self):
		self.run_test("효과", "{{ko-IPA|l=y|com=1}}", "hyokwa", "mr")
	def test_hyogwa_yr(self):
		self.run_test("효과", "{{ko-IPA|l=y|com=1}}", "hyōqkwa", "yr")
	def test_hyogwa_ipa(self):
		self.run_test("효과", "{{ko-IPA|l=y|com=1}}", "[ˈço(ː)k͈wa̠]", "ipa")

	def test_bulgyo_ph(self):
		self.run_test("불교", "{{ko-IPA}}", "불교", "ph")
	def test_bulgyo_rr(self):
		self.run_test("불교", "{{ko-IPA}}", "bulgyo", "rr")
	def test_bulgyo_rrr(self):
		self.run_test("불교", "{{ko-IPA}}", "bulgyo", "rrr")
	def test_bulgyo_mr(self):
		self.run_test("불교", "{{ko-IPA}}", "pulgyo", "mr")
	def test_bulgyo_yr(self):
		self.run_test("불교", "{{ko-IPA}}", "pul.kyo", "yr")
	def test_bulgyo_ipa(self):
		self.run_test("불교", "{{ko-IPA}}", "[puɭɡjo]", "ipa")

	def test_uju_ph(self):
		self.run_test("우주", "{{ko-IPA|l=y}}", "우(ː)주", "ph")
	def test_uju_rr(self):
		self.run_test("우주", "{{ko-IPA|l=y}}", "uju", "rr")
	def test_uju_rrr(self):
		self.run_test("우주", "{{ko-IPA|l=y}}", "uju", "rrr")
	def test_uju_mr(self):
		self.run_test("우주", "{{ko-IPA|l=y}}", "uju", "mr")
	def test_uju_yr(self):
		self.run_test("우주", "{{ko-IPA|l=y}}", "wūcwu", "yr")
	def test_uju_ipa(self):
		self.run_test("우주", "{{ko-IPA|l=y}}", "[ˈu(ː)d͡ʑu]", "ipa")

	def test_sigi_ph(self):
		self.run_test("시기", "{{ko-IPA}}", "시기", "ph")
	def test_sigi_rr(self):
		self.run_test("시기", "{{ko-IPA}}", "sigi", "rr")
	def test_sigi_rrr(self):
		self.run_test("시기", "{{ko-IPA}}", "sigi", "rrr")
	def test_sigi_mr(self):
		self.run_test("시기", "{{ko-IPA}}", "sigi", "mr")
	def test_sigi_yr(self):
		self.run_test("시기", "{{ko-IPA}}", "siki", "yr")
	def test_sigi_ipa(self):
		self.run_test("시기", "{{ko-IPA}}", "[ɕʰiɡi]", "ipa")
	def test_sigi_ph_1(self):
		self.run_test("시기", "{{ko-IPA}}", "시기", "ph")
	def test_sigi_rr_1(self):
		self.run_test("시기", "{{ko-IPA}}", "sigi", "rr")
	def test_sigi_rrr_1(self):
		self.run_test("시기", "{{ko-IPA}}", "sigi", "rrr")
	def test_sigi_mr_1(self):
		self.run_test("시기", "{{ko-IPA}}", "sigi", "mr")
	def test_sigi_yr_1(self):
		self.run_test("시기", "{{ko-IPA}}", "siki", "yr")
	def test_sigi_ipa_1(self):
		self.run_test("시기", "{{ko-IPA}}", "[ɕʰiɡi]", "ipa")
	def test_sigi_ph_2(self):
		self.run_test("시기", "{{ko-IPA}}", "시기", "ph")
	def test_sigi_rr_2(self):
		self.run_test("시기", "{{ko-IPA}}", "sigi", "rr")
	def test_sigi_rrr_2(self):
		self.run_test("시기", "{{ko-IPA}}", "sigi", "rrr")
	def test_sigi_mr_2(self):
		self.run_test("시기", "{{ko-IPA}}", "sigi", "mr")
	def test_sigi_yr_2(self):
		self.run_test("시기", "{{ko-IPA}}", "siki", "yr")
	def test_sigi_ipa_2(self):
		self.run_test("시기", "{{ko-IPA}}", "[ɕʰiɡi]", "ipa")
	def test_sigi_ph_3(self):
		self.run_test("시기", "{{ko-IPA|l=y}}", "시(ː)기", "ph")
	def test_sigi_rr_3(self):
		self.run_test("시기", "{{ko-IPA|l=y}}", "sigi", "rr")
	def test_sigi_rrr_3(self):
		self.run_test("시기", "{{ko-IPA|l=y}}", "sigi", "rrr")
	def test_sigi_mr_3(self):
		self.run_test("시기", "{{ko-IPA|l=y}}", "sigi", "mr")
	def test_sigi_yr_3(self):
		self.run_test("시기", "{{ko-IPA|l=y}}", "sīki", "yr")
	def test_sigi_ipa_3(self):
		self.run_test("시기", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)ɡi]", "ipa")

	def test_saengsan_ph(self):
		self.run_test("생산", "{{ko-IPA}}", "생산/셍산", "ph")
	def test_saengsan_rr(self):
		self.run_test("생산", "{{ko-IPA}}", "saengsan", "rr")
	def test_saengsan_rrr(self):
		self.run_test("생산", "{{ko-IPA}}", "saengsan", "rrr")
	def test_saengsan_mr(self):
		self.run_test("생산", "{{ko-IPA}}", "saengsan", "mr")
	def test_saengsan_yr(self):
		self.run_test("생산", "{{ko-IPA}}", "sayngsan", "yr")
	def test_saengsan_ipa(self):
		self.run_test("생산", "{{ko-IPA}}", "[sʰɛŋsʰa̠n] ~ [sʰe̞ŋsʰa̠n]", "ipa")

	def test_gyeongheom_ph(self):
		self.run_test("경험", "{{ko-IPA}}", "경험", "ph")
	def test_gyeongheom_rr(self):
		self.run_test("경험", "{{ko-IPA}}", "gyeongheom", "rr")
	def test_gyeongheom_rrr(self):
		self.run_test("경험", "{{ko-IPA}}", "gyeongheom", "rrr")
	def test_gyeongheom_mr(self):
		self.run_test("경험", "{{ko-IPA}}", "kyŏnghŏm", "mr")
	def test_gyeongheom_yr(self):
		self.run_test("경험", "{{ko-IPA}}", "kyenghem", "yr")
	def test_gyeongheom_ipa(self):
		self.run_test("경험", "{{ko-IPA}}", "[kjʌ̹ŋɦʌ̹m]", "ipa")

	def test_eumak_ph(self):
		self.run_test("음악", "{{ko-IPA}}", "으막", "ph")
	def test_eumak_rr(self):
		self.run_test("음악", "{{ko-IPA}}", "eumak", "rr")
	def test_eumak_rrr(self):
		self.run_test("음악", "{{ko-IPA}}", "eum'ag", "rrr")
	def test_eumak_mr(self):
		self.run_test("음악", "{{ko-IPA}}", "ŭmak", "mr")
	def test_eumak_yr(self):
		self.run_test("음악", "{{ko-IPA}}", "um.ak", "yr")
	def test_eumak_ipa(self):
		self.run_test("음악", "{{ko-IPA}}", "[ɯma̠k̚]", "ipa")

	def test_gohyang_ph(self):
		self.run_test("고향", "{{ko-IPA}}", "고향", "ph")
	def test_gohyang_rr(self):
		self.run_test("고향", "{{ko-IPA}}", "gohyang", "rr")
	def test_gohyang_rrr(self):
		self.run_test("고향", "{{ko-IPA}}", "gohyang", "rrr")
	def test_gohyang_mr(self):
		self.run_test("고향", "{{ko-IPA}}", "kohyang", "mr")
	def test_gohyang_yr(self):
		self.run_test("고향", "{{ko-IPA}}", "kohyang", "yr")
	def test_gohyang_ipa(self):
		self.run_test("고향", "{{ko-IPA}}", "[ko̞ʝa̠ŋ]", "ipa")

	def test_nongmin_ph(self):
		self.run_test("농민", "{{ko-IPA}}", "농민", "ph")
	def test_nongmin_rr(self):
		self.run_test("농민", "{{ko-IPA}}", "nongmin", "rr")
	def test_nongmin_rrr(self):
		self.run_test("농민", "{{ko-IPA}}", "nongmin", "rrr")
	def test_nongmin_mr(self):
		self.run_test("농민", "{{ko-IPA}}", "nongmin", "mr")
	def test_nongmin_yr(self):
		self.run_test("농민", "{{ko-IPA}}", "nongmin", "yr")
	def test_nongmin_ipa(self):
		self.run_test("농민", "{{ko-IPA}}", "[no̞ŋmin]", "ipa")

	def test_eunhaeng_ph(self):
		self.run_test("은행", "{{ko-IPA}}", "은행/은헹", "ph")
	def test_eunhaeng_rr(self):
		self.run_test("은행", "{{ko-IPA}}", "eunhaeng", "rr")
	def test_eunhaeng_rrr(self):
		self.run_test("은행", "{{ko-IPA}}", "eunhaeng", "rrr")
	def test_eunhaeng_mr(self):
		self.run_test("은행", "{{ko-IPA}}", "ŭnhaeng", "mr")
	def test_eunhaeng_yr(self):
		self.run_test("은행", "{{ko-IPA}}", "un.hayng", "yr")
	def test_eunhaeng_ipa(self):
		self.run_test("은행", "{{ko-IPA}}", "[ɯnɦɛŋ] ~ [ɯnɦe̞ŋ]", "ipa")

	def test_beop_ph(self):
		self.run_test("법", "{{ko-IPA}}", "법", "ph")
	def test_beop_rr(self):
		self.run_test("법", "{{ko-IPA}}", "beop", "rr")
	def test_beop_rrr(self):
		self.run_test("법", "{{ko-IPA}}", "beob", "rrr")
	def test_beop_mr(self):
		self.run_test("법", "{{ko-IPA}}", "pŏp", "mr")
	def test_beop_yr(self):
		self.run_test("법", "{{ko-IPA}}", "pep", "yr")
	def test_beop_ipa(self):
		self.run_test("법", "{{ko-IPA}}", "[pʌ̹p̚]", "ipa")

	def test_soseol_ph(self):
		self.run_test("소설", "{{ko-IPA|l=y}}", "소(ː)설", "ph")
	def test_soseol_rr(self):
		self.run_test("소설", "{{ko-IPA|l=y}}", "soseol", "rr")
	def test_soseol_rrr(self):
		self.run_test("소설", "{{ko-IPA|l=y}}", "soseol", "rrr")
	def test_soseol_mr(self):
		self.run_test("소설", "{{ko-IPA|l=y}}", "sosŏl", "mr")
	def test_soseol_yr(self):
		self.run_test("소설", "{{ko-IPA|l=y}}", "sōsel", "yr")
	def test_soseol_ipa(self):
		self.run_test("소설", "{{ko-IPA|l=y}}", "[ˈsʰo̞(ː)sʰʌ̹ɭ]", "ipa")

	def test_jilseo_ph(self):
		self.run_test("질서", "{{ko-IPA|com=1}}", "질써", "ph")
	def test_jilseo_rr(self):
		self.run_test("질서", "{{ko-IPA|com=1}}", "jilseo", "rr")
	def test_jilseo_rrr(self):
		self.run_test("질서", "{{ko-IPA|com=1}}", "jilseo", "rrr")
	def test_jilseo_mr(self):
		self.run_test("질서", "{{ko-IPA|com=1}}", "chilssŏ", "mr")
	def test_jilseo_yr(self):
		self.run_test("질서", "{{ko-IPA|com=1}}", "cilqse", "yr")
	def test_jilseo_ipa(self):
		self.run_test("질서", "{{ko-IPA|com=1}}", "[t͡ɕiɭs͈ʌ̹]", "ipa")

	def test_simin_ph(self):
		self.run_test("시민", "{{ko-IPA|l=y}}", "시(ː)민", "ph")
	def test_simin_rr(self):
		self.run_test("시민", "{{ko-IPA|l=y}}", "simin", "rr")
	def test_simin_rrr(self):
		self.run_test("시민", "{{ko-IPA|l=y}}", "simin", "rrr")
	def test_simin_mr(self):
		self.run_test("시민", "{{ko-IPA|l=y}}", "simin", "mr")
	def test_simin_yr(self):
		self.run_test("시민", "{{ko-IPA|l=y}}", "sīmin", "yr")
	def test_simin_ipa(self):
		self.run_test("시민", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)min]", "ipa")

	def test_hoejang_ph(self):
		self.run_test("회장", "{{ko-IPA|l=y}}", "훼(ː)장/회(ː)장", "ph")
	def test_hoejang_rr(self):
		self.run_test("회장", "{{ko-IPA|l=y}}", "hoejang", "rr")
	def test_hoejang_rrr(self):
		self.run_test("회장", "{{ko-IPA|l=y}}", "hoejang", "rrr")
	def test_hoejang_mr(self):
		self.run_test("회장", "{{ko-IPA|l=y}}", "hoejang", "mr")
	def test_hoejang_yr(self):
		self.run_test("회장", "{{ko-IPA|l=y}}", "hōycang", "yr")
	def test_hoejang_ipa(self):
		self.run_test("회장", "{{ko-IPA|l=y}}", "[ˈɸwe̞(ː)d͡ʑa̠ŋ] ~ [ˈhø̞(ː)d͡ʑa̠ŋ]", "ipa")

	def test_agi_ph(self):
		self.run_test("아기", "{{ko-IPA}}", "아기", "ph")
	def test_agi_rr(self):
		self.run_test("아기", "{{ko-IPA}}", "agi", "rr")
	def test_agi_rrr(self):
		self.run_test("아기", "{{ko-IPA}}", "agi", "rrr")
	def test_agi_mr(self):
		self.run_test("아기", "{{ko-IPA}}", "agi", "mr")
	def test_agi_yr(self):
		self.run_test("아기", "{{ko-IPA}}", "aki", "yr")
	def test_agi_ipa(self):
		self.run_test("아기", "{{ko-IPA}}", "[a̠ɡi]", "ipa")

	def test_moida_ph(self):
		self.run_test("모이다", "{{ko-IPA}}", "모이다", "ph")
	def test_moida_rr(self):
		self.run_test("모이다", "{{ko-IPA}}", "moida", "rr")
	def test_moida_rrr(self):
		self.run_test("모이다", "{{ko-IPA}}", "moida", "rrr")
	def test_moida_mr(self):
		self.run_test("모이다", "{{ko-IPA}}", "moida", "mr")
	def test_moida_yr(self):
		self.run_test("모이다", "{{ko-IPA}}", "moita", "yr")
	def test_moida_ipa(self):
		self.run_test("모이다", "{{ko-IPA}}", "[mo̞ida̠]", "ipa")

	def test_alta_ph(self):
		self.run_test("앓다", "{{ko-IPA}}", "알타", "ph")
	def test_alta_rr(self):
		self.run_test("앓다", "{{ko-IPA}}", "alta", "rr")
	def test_alta_rrr(self):
		self.run_test("앓다", "{{ko-IPA}}", "alhda", "rrr")
	def test_alta_mr(self):
		self.run_test("앓다", "{{ko-IPA}}", "alt'a", "mr")
	def test_alta_yr(self):
		self.run_test("앓다", "{{ko-IPA}}", "alhta", "yr")
	def test_alta_ipa(self):
		self.run_test("앓다", "{{ko-IPA}}", "[a̠ɭtʰa̠]", "ipa")

	def test_anda_ph(self):
		self.run_test("안다", "{{ko-IPA|l=y|com=1|a=Ko-안따.ogg}}", "안(ː)따", "ph")
	def test_anda_rr(self):
		self.run_test("안다", "{{ko-IPA|l=y|com=1|a=Ko-안따.ogg}}", "anda", "rr")
	def test_anda_rrr(self):
		self.run_test("안다", "{{ko-IPA|l=y|com=1|a=Ko-안따.ogg}}", "anda", "rrr")
	def test_anda_mr(self):
		self.run_test("안다", "{{ko-IPA|l=y|com=1|a=Ko-안따.ogg}}", "anta", "mr")
	def test_anda_yr(self):
		self.run_test("안다", "{{ko-IPA|l=y|com=1|a=Ko-안따.ogg}}", "ānqta", "yr")
	def test_anda_ipa(self):
		self.run_test("안다", "{{ko-IPA|l=y|com=1|a=Ko-안따.ogg}}", "[ˈa̠(ː)nt͈a̠]", "ipa")

	def test_aswipda_ph(self):
		self.run_test("아쉽다", "{{ko-IPA}}", "아쉽따", "ph")
	def test_aswipda_rr(self):
		self.run_test("아쉽다", "{{ko-IPA}}", "aswipda", "rr")
	def test_aswipda_rrr(self):
		self.run_test("아쉽다", "{{ko-IPA}}", "aswibda", "rrr")
	def test_aswipda_mr(self):
		self.run_test("아쉽다", "{{ko-IPA}}", "ashwipta", "mr")
	def test_aswipda_yr(self):
		self.run_test("아쉽다", "{{ko-IPA}}", "aswipta", "yr")
	def test_aswipda_ipa(self):
		self.run_test("아쉽다", "{{ko-IPA}}", "[a̠ʃʰɥip̚t͈a̠] ~ [a̠ʃʰyp̚t͈a̠]", "ipa")

	def test_itda_ph(self):
		self.run_test("잊다", "{{ko-IPA}}", "읻따", "ph")
	def test_itda_rr(self):
		self.run_test("잊다", "{{ko-IPA}}", "itda", "rr")
	def test_itda_rrr(self):
		self.run_test("잊다", "{{ko-IPA}}", "ijda", "rrr")
	def test_itda_mr(self):
		self.run_test("잊다", "{{ko-IPA}}", "itta", "mr")
	def test_itda_yr(self):
		self.run_test("잊다", "{{ko-IPA}}", "icta", "yr")
	def test_itda_ipa(self):
		self.run_test("잊다", "{{ko-IPA}}", "[it̚t͈a̠]", "ipa")

	def test_ilta_ph(self):
		self.run_test("잃다", "{{ko-IPA}}", "일타", "ph")
	def test_ilta_rr(self):
		self.run_test("잃다", "{{ko-IPA}}", "ilta", "rr")
	def test_ilta_rrr(self):
		self.run_test("잃다", "{{ko-IPA}}", "ilhda", "rrr")
	def test_ilta_mr(self):
		self.run_test("잃다", "{{ko-IPA}}", "ilt'a", "mr")
	def test_ilta_yr(self):
		self.run_test("잃다", "{{ko-IPA}}", "ilhta", "yr")
	def test_ilta_ipa(self):
		self.run_test("잃다", "{{ko-IPA}}", "[iɭtʰa̠]", "ipa")

	def test_eupda_ph(self):
		self.run_test("읊다", "{{ko-IPA}}", "읍따", "ph")
	def test_eupda_rr(self):
		self.run_test("읊다", "{{ko-IPA}}", "eupda", "rr")
	def test_eupda_rrr(self):
		self.run_test("읊다", "{{ko-IPA}}", "eulpda", "rrr")
	def test_eupda_mr(self):
		self.run_test("읊다", "{{ko-IPA}}", "ŭpta", "mr")
	def test_eupda_yr(self):
		self.run_test("읊다", "{{ko-IPA}}", "ulphta", "yr")
	def test_eupda_ipa(self):
		self.run_test("읊다", "{{ko-IPA}}", "[ɯp̚t͈a̠]", "ipa")

	def test_yalda_ph(self):
		self.run_test("얇다", "{{ko-IPA|l=y}}", "얄(ː)따", "ph")
	def test_yalda_rr(self):
		self.run_test("얇다", "{{ko-IPA|l=y}}", "yalda", "rr")
	def test_yalda_rrr(self):
		self.run_test("얇다", "{{ko-IPA|l=y}}", "yalbda", "rrr")
	def test_yalda_mr(self):
		self.run_test("얇다", "{{ko-IPA|l=y}}", "yalta", "mr")
	def test_yalda_yr(self):
		self.run_test("얇다", "{{ko-IPA|l=y}}", "yālpta", "yr")
	def test_yalda_ipa(self):
		self.run_test("얇다", "{{ko-IPA|l=y}}", "[ˈja̠(ː)ɭt͈a̠]", "ipa")

	def test_jeomjanta_ph(self):
		self.run_test("점잖다", "{{ko-IPA|l=y}}", "점(ː)잔타", "ph")
	def test_jeomjanta_rr(self):
		self.run_test("점잖다", "{{ko-IPA|l=y}}", "jeomjanta", "rr")
	def test_jeomjanta_rrr(self):
		self.run_test("점잖다", "{{ko-IPA|l=y}}", "jeomjanhda", "rrr")
	def test_jeomjanta_mr(self):
		self.run_test("점잖다", "{{ko-IPA|l=y}}", "chŏmjant'a", "mr")
	def test_jeomjanta_yr(self):
		self.run_test("점잖다", "{{ko-IPA|l=y}}", "cēmcanhta", "yr")
	def test_jeomjanta_ipa(self):
		self.run_test("점잖다", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)md͡ʑa̠ntʰa̠]", "ipa")

	def test_julda_ph(self):
		self.run_test("줄다", "{{ko-IPA|l=y}}", "줄(ː)다", "ph")
	def test_julda_rr(self):
		self.run_test("줄다", "{{ko-IPA|l=y}}", "julda", "rr")
	def test_julda_rrr(self):
		self.run_test("줄다", "{{ko-IPA|l=y}}", "julda", "rrr")
	def test_julda_mr(self):
		self.run_test("줄다", "{{ko-IPA|l=y}}", "chulda", "mr")
	def test_julda_yr(self):
		self.run_test("줄다", "{{ko-IPA|l=y}}", "cwūlta", "yr")
	def test_julda_ipa(self):
		self.run_test("줄다", "{{ko-IPA|l=y}}", "[ˈt͡ɕu(ː)ɭda̠]", "ipa")

	def test_charida_ph(self):
		self.run_test("차리다", "{{ko-IPA}}", "차리다", "ph")
	def test_charida_rr(self):
		self.run_test("차리다", "{{ko-IPA}}", "charida", "rr")
	def test_charida_rrr(self):
		self.run_test("차리다", "{{ko-IPA}}", "chalida", "rrr")
	def test_charida_mr(self):
		self.run_test("차리다", "{{ko-IPA}}", "ch'arida", "mr")
	def test_charida_yr(self):
		self.run_test("차리다", "{{ko-IPA}}", "chalita", "yr")
	def test_charida_ipa(self):
		self.run_test("차리다", "{{ko-IPA}}", "[t͡ɕʰa̠ɾida̠]", "ipa")

	def test_chamda_ph(self):
		self.run_test("참다", "{{ko-IPA|l=y|com=1}}", "참(ː)따", "ph")
	def test_chamda_rr(self):
		self.run_test("참다", "{{ko-IPA|l=y|com=1}}", "chamda", "rr")
	def test_chamda_rrr(self):
		self.run_test("참다", "{{ko-IPA|l=y|com=1}}", "chamda", "rrr")
	def test_chamda_mr(self):
		self.run_test("참다", "{{ko-IPA|l=y|com=1}}", "ch'amta", "mr")
	def test_chamda_yr(self):
		self.run_test("참다", "{{ko-IPA|l=y|com=1}}", "chāmqta", "yr")
	def test_chamda_ipa(self):
		self.run_test("참다", "{{ko-IPA|l=y|com=1}}", "[ˈt͡ɕʰa̠(ː)mt͈a̠]", "ipa")

	def test_chiuda_ph(self):
		self.run_test("치우다", "{{ko-IPA}}", "치우다", "ph")
	def test_chiuda_rr(self):
		self.run_test("치우다", "{{ko-IPA}}", "chiuda", "rr")
	def test_chiuda_rrr(self):
		self.run_test("치우다", "{{ko-IPA}}", "chiuda", "rrr")
	def test_chiuda_mr(self):
		self.run_test("치우다", "{{ko-IPA}}", "ch'iuda", "mr")
	def test_chiuda_yr(self):
		self.run_test("치우다", "{{ko-IPA}}", "chiwuta", "yr")
	def test_chiuda_ipa(self):
		self.run_test("치우다", "{{ko-IPA}}", "[t͡ɕʰiuda̠]", "ipa")

	def test_kiuda_ph(self):
		self.run_test("키우다", "{{ko-IPA}}", "키우다", "ph")
	def test_kiuda_rr(self):
		self.run_test("키우다", "{{ko-IPA}}", "kiuda", "rr")
	def test_kiuda_rrr(self):
		self.run_test("키우다", "{{ko-IPA}}", "kiuda", "rrr")
	def test_kiuda_mr(self):
		self.run_test("키우다", "{{ko-IPA}}", "k'iuda", "mr")
	def test_kiuda_yr(self):
		self.run_test("키우다", "{{ko-IPA}}", "khiwuta", "yr")
	def test_kiuda_ipa(self):
		self.run_test("키우다", "{{ko-IPA}}", "[cçiuda̠]", "ipa")

	def test_teojida_ph(self):
		self.run_test("터지다", "{{ko-IPA|l=y|a=Ko-터지다.oga}}", "터(ː)지다", "ph")
	def test_teojida_rr(self):
		self.run_test("터지다", "{{ko-IPA|l=y|a=Ko-터지다.oga}}", "teojida", "rr")
	def test_teojida_rrr(self):
		self.run_test("터지다", "{{ko-IPA|l=y|a=Ko-터지다.oga}}", "teojida", "rrr")
	def test_teojida_mr(self):
		self.run_test("터지다", "{{ko-IPA|l=y|a=Ko-터지다.oga}}", "t'ŏjida", "mr")
	def test_teojida_yr(self):
		self.run_test("터지다", "{{ko-IPA|l=y|a=Ko-터지다.oga}}", "thēcita", "yr")
	def test_teojida_ipa(self):
		self.run_test("터지다", "{{ko-IPA|l=y|a=Ko-터지다.oga}}", "[ˈtʰɘ(ː)d͡ʑida̠]", "ipa")

	def test_teotteurida_ph(self):
		self.run_test("터뜨리다", "{{ko-IPA|l=y}}", "터(ː)뜨리다", "ph")
	def test_teotteurida_rr(self):
		self.run_test("터뜨리다", "{{ko-IPA|l=y}}", "teotteurida", "rr")
	def test_teotteurida_rrr(self):
		self.run_test("터뜨리다", "{{ko-IPA|l=y}}", "teo'tteulida", "rrr")
	def test_teotteurida_mr(self):
		self.run_test("터뜨리다", "{{ko-IPA|l=y}}", "t'ŏttŭrida", "mr")
	def test_teotteurida_yr(self):
		self.run_test("터뜨리다", "{{ko-IPA|l=y}}", "thē.ttulita", "yr")
	def test_teotteurida_ipa(self):
		self.run_test("터뜨리다", "{{ko-IPA|l=y}}", "[ˈtʰɘ(ː)t͈ɯɾida̠]", "ipa")

	def test_teullida_ph(self):
		self.run_test("틀리다", "{{ko-IPA}}", "틀리다", "ph")
	def test_teullida_rr(self):
		self.run_test("틀리다", "{{ko-IPA}}", "teullida", "rr")
	def test_teullida_rrr(self):
		self.run_test("틀리다", "{{ko-IPA}}", "teullida", "rrr")
	def test_teullida_mr(self):
		self.run_test("틀리다", "{{ko-IPA}}", "t'ŭllida", "mr")
	def test_teullida_yr(self):
		self.run_test("틀리다", "{{ko-IPA}}", "thullita", "yr")
	def test_teullida_ipa(self):
		self.run_test("틀리다", "{{ko-IPA}}", "[tʰɯʎʎida̠]", "ipa")

	def test_twida_ph(self):
		self.run_test("튀다", "{{ko-IPA}}", "튀다", "ph")
	def test_twida_rr(self):
		self.run_test("튀다", "{{ko-IPA}}", "twida", "rr")
	def test_twida_rrr(self):
		self.run_test("튀다", "{{ko-IPA}}", "twida", "rrr")
	def test_twida_mr(self):
		self.run_test("튀다", "{{ko-IPA}}", "t'wida", "mr")
	def test_twida_yr(self):
		self.run_test("튀다", "{{ko-IPA}}", "thwita", "yr")
	def test_twida_ipa(self):
		self.run_test("튀다", "{{ko-IPA}}", "[tʰɥida̠] ~ [tʰyda̠]", "ipa")

	def test_paeda_ph(self):
		self.run_test("패다", "{{ko-IPA}}", "패다/페다", "ph")
	def test_paeda_rr(self):
		self.run_test("패다", "{{ko-IPA}}", "paeda", "rr")
	def test_paeda_rrr(self):
		self.run_test("패다", "{{ko-IPA}}", "paeda", "rrr")
	def test_paeda_mr(self):
		self.run_test("패다", "{{ko-IPA}}", "p'aeda", "mr")
	def test_paeda_yr(self):
		self.run_test("패다", "{{ko-IPA}}", "phayta", "yr")
	def test_paeda_ipa(self):
		self.run_test("패다", "{{ko-IPA}}", "[pʰɛda̠] ~ [pʰe̞da̠]", "ipa")

	def test_palda_ph(self):
		self.run_test("팔다", "{{ko-IPA}}", "팔다", "ph")
	def test_palda_rr(self):
		self.run_test("팔다", "{{ko-IPA}}", "palda", "rr")
	def test_palda_rrr(self):
		self.run_test("팔다", "{{ko-IPA}}", "palda", "rrr")
	def test_palda_mr(self):
		self.run_test("팔다", "{{ko-IPA}}", "p'alda", "mr")
	def test_palda_yr(self):
		self.run_test("팔다", "{{ko-IPA}}", "phalta", "yr")
	def test_palda_ipa(self):
		self.run_test("팔다", "{{ko-IPA}}", "[pʰa̠ɭda̠]", "ipa")

	def test_pida_ph(self):
		self.run_test("피다", "{{ko-IPA}}", "피다", "ph")
	def test_pida_rr(self):
		self.run_test("피다", "{{ko-IPA}}", "pida", "rr")
	def test_pida_rrr(self):
		self.run_test("피다", "{{ko-IPA}}", "pida", "rrr")
	def test_pida_mr(self):
		self.run_test("피다", "{{ko-IPA}}", "p'ida", "mr")
	def test_pida_yr(self):
		self.run_test("피다", "{{ko-IPA}}", "phita", "yr")
	def test_pida_ipa(self):
		self.run_test("피다", "{{ko-IPA}}", "[pʰida̠]", "ipa")

	def test_pulda_ph(self):
		self.run_test("풀다", "{{ko-IPA}}", "풀다", "ph")
	def test_pulda_rr(self):
		self.run_test("풀다", "{{ko-IPA}}", "pulda", "rr")
	def test_pulda_rrr(self):
		self.run_test("풀다", "{{ko-IPA}}", "pulda", "rrr")
	def test_pulda_mr(self):
		self.run_test("풀다", "{{ko-IPA}}", "p'ulda", "mr")
	def test_pulda_yr(self):
		self.run_test("풀다", "{{ko-IPA}}", "phulta", "yr")
	def test_pulda_ipa(self):
		self.run_test("풀다", "{{ko-IPA}}", "[pʰuɭda̠]", "ipa")

	def test_pumda_ph(self):
		self.run_test("품다", "{{ko-IPA|l=y|com=1}}", "품(ː)따", "ph")
	def test_pumda_rr(self):
		self.run_test("품다", "{{ko-IPA|l=y|com=1}}", "pumda", "rr")
	def test_pumda_rrr(self):
		self.run_test("품다", "{{ko-IPA|l=y|com=1}}", "pumda", "rrr")
	def test_pumda_mr(self):
		self.run_test("품다", "{{ko-IPA|l=y|com=1}}", "p'umta", "mr")
	def test_pumda_yr(self):
		self.run_test("품다", "{{ko-IPA|l=y|com=1}}", "phūmqta", "yr")
	def test_pumda_ipa(self):
		self.run_test("품다", "{{ko-IPA|l=y|com=1}}", "[ˈpʰu(ː)mt͈a̠]", "ipa")

	def test_punggida_ph(self):
		self.run_test("풍기다", "{{ko-IPA}}", "풍기다", "ph")
	def test_punggida_rr(self):
		self.run_test("풍기다", "{{ko-IPA}}", "punggida", "rr")
	def test_punggida_rrr(self):
		self.run_test("풍기다", "{{ko-IPA}}", "punggida", "rrr")
	def test_punggida_mr(self):
		self.run_test("풍기다", "{{ko-IPA}}", "p'unggida", "mr")
	def test_punggida_yr(self):
		self.run_test("풍기다", "{{ko-IPA}}", "phungkita", "yr")
	def test_punggida_ipa(self):
		self.run_test("풍기다", "{{ko-IPA}}", "[pʰuŋɡida̠]", "ipa")

	def test_halkwida_ph(self):
		self.run_test("할퀴다", "{{ko-IPA}}", "할퀴다", "ph")
	def test_halkwida_rr(self):
		self.run_test("할퀴다", "{{ko-IPA}}", "halkwida", "rr")
	def test_halkwida_rrr(self):
		self.run_test("할퀴다", "{{ko-IPA}}", "halkwida", "rrr")
	def test_halkwida_mr(self):
		self.run_test("할퀴다", "{{ko-IPA}}", "halk'wida", "mr")
	def test_halkwida_yr(self):
		self.run_test("할퀴다", "{{ko-IPA}}", "hal.khwita", "yr")
	def test_halkwida_ipa(self):
		self.run_test("할퀴다", "{{ko-IPA}}", "[ha̠ɭkʰɥida̠] ~ [ha̠ɭkʰyda̠]", "ipa")

	def test_halda_ph(self):
		self.run_test("핥다", "{{ko-IPA}}", "할따", "ph")
	def test_halda_rr(self):
		self.run_test("핥다", "{{ko-IPA}}", "halda", "rr")
	def test_halda_rrr(self):
		self.run_test("핥다", "{{ko-IPA}}", "haltda", "rrr")
	def test_halda_mr(self):
		self.run_test("핥다", "{{ko-IPA}}", "halta", "mr")
	def test_halda_yr(self):
		self.run_test("핥다", "{{ko-IPA}}", "halthta", "yr")
	def test_halda_ipa(self):
		self.run_test("핥다", "{{ko-IPA}}", "[ha̠ɭt͈a̠]", "ipa")

	def test_hemaeda_ph(self):
		self.run_test("헤매다", "{{ko-IPA}}", "헤매다/헤메다", "ph")
	def test_hemaeda_rr(self):
		self.run_test("헤매다", "{{ko-IPA}}", "hemaeda", "rr")
	def test_hemaeda_rrr(self):
		self.run_test("헤매다", "{{ko-IPA}}", "hemaeda", "rrr")
	def test_hemaeda_mr(self):
		self.run_test("헤매다", "{{ko-IPA}}", "hemaeda", "mr")
	def test_hemaeda_yr(self):
		self.run_test("헤매다", "{{ko-IPA}}", "heymayta", "yr")
	def test_hemaeda_ipa(self):
		self.run_test("헤매다", "{{ko-IPA}}", "[he̞mɛda̠] ~ [he̞me̞da̠]", "ipa")

	def test_hollida_ph(self):
		self.run_test("홀리다", "{{ko-IPA}}", "홀리다", "ph")
	def test_hollida_rr(self):
		self.run_test("홀리다", "{{ko-IPA}}", "hollida", "rr")
	def test_hollida_rrr(self):
		self.run_test("홀리다", "{{ko-IPA}}", "hollida", "rrr")
	def test_hollida_mr(self):
		self.run_test("홀리다", "{{ko-IPA}}", "hollida", "mr")
	def test_hollida_yr(self):
		self.run_test("홀리다", "{{ko-IPA}}", "hollita", "yr")
	def test_hollida_ipa(self):
		self.run_test("홀리다", "{{ko-IPA}}", "[ɸʷo̞ʎʎida̠]", "ipa")

	def test_heomulda_ph(self):
		self.run_test("허물다", "{{ko-IPA}}", "허물다", "ph")
	def test_heomulda_rr(self):
		self.run_test("허물다", "{{ko-IPA}}", "heomulda", "rr")
	def test_heomulda_rrr(self):
		self.run_test("허물다", "{{ko-IPA}}", "heomulda", "rrr")
	def test_heomulda_mr(self):
		self.run_test("허물다", "{{ko-IPA}}", "hŏmulda", "mr")
	def test_heomulda_yr(self):
		self.run_test("허물다", "{{ko-IPA}}", "hemulta", "yr")
	def test_heomulda_ipa(self):
		self.run_test("허물다", "{{ko-IPA}}", "[hʌ̹muɭda̠]", "ipa")

	def test_heolda_ph(self):
		self.run_test("헐다", "{{ko-IPA|l=y}}", "헐(ː)다", "ph")
	def test_heolda_rr(self):
		self.run_test("헐다", "{{ko-IPA|l=y}}", "heolda", "rr")
	def test_heolda_rrr(self):
		self.run_test("헐다", "{{ko-IPA|l=y}}", "heolda", "rrr")
	def test_heolda_mr(self):
		self.run_test("헐다", "{{ko-IPA|l=y}}", "hŏlda", "mr")
	def test_heolda_yr(self):
		self.run_test("헐다", "{{ko-IPA|l=y}}", "hēlta", "yr")
	def test_heolda_ipa(self):
		self.run_test("헐다", "{{ko-IPA|l=y}}", "[ˈhɘ(ː)ɭda̠]", "ipa")

	def test_hulda_ph(self):
		self.run_test("훑다", "{{ko-IPA}}", "훌따", "ph")
	def test_hulda_rr(self):
		self.run_test("훑다", "{{ko-IPA}}", "hulda", "rr")
	def test_hulda_rrr(self):
		self.run_test("훑다", "{{ko-IPA}}", "hultda", "rrr")
	def test_hulda_mr(self):
		self.run_test("훑다", "{{ko-IPA}}", "hulta", "mr")
	def test_hulda_yr(self):
		self.run_test("훑다", "{{ko-IPA}}", "hwulthta", "yr")
	def test_hulda_ipa(self):
		self.run_test("훑다", "{{ko-IPA}}", "[ɸʷuɭt͈a̠]", "ipa")

	def test_heundeulda_ph(self):
		self.run_test("흔들다", "{{ko-IPA}}", "흔들다", "ph")
	def test_heundeulda_rr(self):
		self.run_test("흔들다", "{{ko-IPA}}", "heundeulda", "rr")
	def test_heundeulda_rrr(self):
		self.run_test("흔들다", "{{ko-IPA}}", "heundeulda", "rrr")
	def test_heundeulda_mr(self):
		self.run_test("흔들다", "{{ko-IPA}}", "hŭndŭlda", "mr")
	def test_heundeulda_yr(self):
		self.run_test("흔들다", "{{ko-IPA}}", "huntulta", "yr")
	def test_heundeulda_ipa(self):
		self.run_test("흔들다", "{{ko-IPA}}", "[xɯndɯɭda̠]", "ipa")

	def test_machangaji_ph(self):
		self.run_test("마찬가지", "{{ko-IPA}}", "마찬가지", "ph")
	def test_machangaji_rr(self):
		self.run_test("마찬가지", "{{ko-IPA}}", "machan'gaji", "rr")
	def test_machangaji_rrr(self):
		self.run_test("마찬가지", "{{ko-IPA}}", "machangaji", "rrr")
	def test_machangaji_mr(self):
		self.run_test("마찬가지", "{{ko-IPA}}", "mach'an'gaji", "mr")
	def test_machangaji_yr(self):
		self.run_test("마찬가지", "{{ko-IPA}}", "ma.chankaci", "yr")
	def test_machangaji_ipa(self):
		self.run_test("마찬가지", "{{ko-IPA}}", "[ma̠t͡ɕʰa̠nɡa̠d͡ʑi]", "ipa")

	def test_ittae_ph(self):
		self.run_test("이때", "{{ko-IPA}}", "이때/이떼", "ph")
	def test_ittae_rr(self):
		self.run_test("이때", "{{ko-IPA}}", "ittae", "rr")
	def test_ittae_rrr(self):
		self.run_test("이때", "{{ko-IPA}}", "i'ttae", "rrr")
	def test_ittae_mr(self):
		self.run_test("이때", "{{ko-IPA}}", "ittae", "mr")
	def test_ittae_yr(self):
		self.run_test("이때", "{{ko-IPA}}", "i.ttay", "yr")
	def test_ittae_ipa(self):
		self.run_test("이때", "{{ko-IPA}}", "[it͈ɛ] ~ [it͈e̞]", "ipa")

	def test_geunde_ph(self):
		self.run_test("근데", "{{ko-IPA}}", "근데", "ph")
	def test_geunde_rr(self):
		self.run_test("근데", "{{ko-IPA}}", "geunde", "rr")
	def test_geunde_rrr(self):
		self.run_test("근데", "{{ko-IPA}}", "geunde", "rrr")
	def test_geunde_mr(self):
		self.run_test("근데", "{{ko-IPA}}", "kŭnde", "mr")
	def test_geunde_yr(self):
		self.run_test("근데", "{{ko-IPA}}", "kuntey", "yr")
	def test_geunde_ipa(self):
		self.run_test("근데", "{{ko-IPA}}", "[kɯnde̞]", "ipa")

	def test_kkeulda_ph(self):
		self.run_test("끌다", "{{ko-IPA|l=y}}", "끌(ː)다", "ph")
	def test_kkeulda_rr(self):
		self.run_test("끌다", "{{ko-IPA|l=y}}", "kkeulda", "rr")
	def test_kkeulda_rrr(self):
		self.run_test("끌다", "{{ko-IPA|l=y}}", "kkeulda", "rrr")
	def test_kkeulda_mr(self):
		self.run_test("끌다", "{{ko-IPA|l=y}}", "kkŭlda", "mr")
	def test_kkeulda_yr(self):
		self.run_test("끌다", "{{ko-IPA|l=y}}", "kkūlta", "yr")
	def test_kkeulda_ipa(self):
		self.run_test("끌다", "{{ko-IPA|l=y}}", "[ˈk͈ɯ(ː)ɭda̠]", "ipa")

	def test_hepeuda_ph(self):
		self.run_test("헤프다", "{{ko-IPA|l=y}}", "헤(ː)프다", "ph")
	def test_hepeuda_rr(self):
		self.run_test("헤프다", "{{ko-IPA|l=y}}", "hepeuda", "rr")
	def test_hepeuda_rrr(self):
		self.run_test("헤프다", "{{ko-IPA|l=y}}", "hepeuda", "rrr")
	def test_hepeuda_mr(self):
		self.run_test("헤프다", "{{ko-IPA|l=y}}", "hep'ŭda", "mr")
	def test_hepeuda_yr(self):
		self.run_test("헤프다", "{{ko-IPA|l=y}}", "hēy.phuta", "yr")
	def test_hepeuda_ipa(self):
		self.run_test("헤프다", "{{ko-IPA|l=y}}", "[ˈhe̞(ː)pʰɯda̠]", "ipa")

	def test_daero_ph(self):
		self.run_test("대로", "{{ko-IPA}}", "대로/데로", "ph")
	def test_daero_rr(self):
		self.run_test("대로", "{{ko-IPA}}", "daero", "rr")
	def test_daero_rrr(self):
		self.run_test("대로", "{{ko-IPA}}", "daelo", "rrr")
	def test_daero_mr(self):
		self.run_test("대로", "{{ko-IPA}}", "taero", "mr")
	def test_daero_yr(self):
		self.run_test("대로", "{{ko-IPA}}", "taylo", "yr")
	def test_daero_ipa(self):
		self.run_test("대로", "{{ko-IPA}}", "[tɛɾo̞] ~ [te̞ɾo̞]", "ipa")
	def test_daero_ph_1(self):
		self.run_test("대로", "{{ko-IPA|l=y}}", "대(ː)로/데(ː)로", "ph")
	def test_daero_rr_1(self):
		self.run_test("대로", "{{ko-IPA|l=y}}", "daero", "rr")
	def test_daero_rrr_1(self):
		self.run_test("대로", "{{ko-IPA|l=y}}", "daelo", "rrr")
	def test_daero_mr_1(self):
		self.run_test("대로", "{{ko-IPA|l=y}}", "taero", "mr")
	def test_daero_yr_1(self):
		self.run_test("대로", "{{ko-IPA|l=y}}", "tāylo", "yr")
	def test_daero_ipa_1(self):
		self.run_test("대로", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)ɾo̞] ~ [ˈte̞(ː)ɾo̞]", "ipa")

	def test_humchida_ph(self):
		self.run_test("훔치다", "{{ko-IPA}}", "훔치다", "ph")
	def test_humchida_rr(self):
		self.run_test("훔치다", "{{ko-IPA}}", "humchida", "rr")
	def test_humchida_rrr(self):
		self.run_test("훔치다", "{{ko-IPA}}", "humchida", "rrr")
	def test_humchida_mr(self):
		self.run_test("훔치다", "{{ko-IPA}}", "humch'ida", "mr")
	def test_humchida_yr(self):
		self.run_test("훔치다", "{{ko-IPA}}", "hwumchita", "yr")
	def test_humchida_ipa(self):
		self.run_test("훔치다", "{{ko-IPA}}", "[ɸʷumt͡ɕʰida̠]", "ipa")

	def test_sijakdoeda_ph(self):
		self.run_test("시작되다", "{{ko-IPA|l=y}}", "시(ː)작뛔다/시(ː)작뙤다", "ph")
	def test_sijakdoeda_rr(self):
		self.run_test("시작되다", "{{ko-IPA|l=y}}", "sijakdoeda", "rr")
	def test_sijakdoeda_rrr(self):
		self.run_test("시작되다", "{{ko-IPA|l=y}}", "sijagdoeda", "rrr")
	def test_sijakdoeda_mr(self):
		self.run_test("시작되다", "{{ko-IPA|l=y}}", "sijaktoeda", "mr")
	def test_sijakdoeda_yr(self):
		self.run_test("시작되다", "{{ko-IPA|l=y}}", "sīcaktoyta", "yr")
	def test_sijakdoeda_ipa(self):
		self.run_test("시작되다", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)d͡ʑa̠k̚t͈we̞da̠] ~ [ˈɕʰi(ː)d͡ʑa̠k̚t͈ø̞da̠]", "ipa")

	def test_machi_ph(self):
		self.run_test("마치", "{{ko-IPA}}", "마치", "ph")
	def test_machi_rr(self):
		self.run_test("마치", "{{ko-IPA}}", "machi", "rr")
	def test_machi_rrr(self):
		self.run_test("마치", "{{ko-IPA}}", "machi", "rrr")
	def test_machi_mr(self):
		self.run_test("마치", "{{ko-IPA}}", "mach'i", "mr")
	def test_machi_yr(self):
		self.run_test("마치", "{{ko-IPA}}", "ma.chi", "yr")
	def test_machi_ipa(self):
		self.run_test("마치", "{{ko-IPA}}", "[ma̠t͡ɕʰi]", "ipa")

	def test_ganghada_ph(self):
		self.run_test("강하다", "{{ko-IPA}}", "강하다", "ph")
	def test_ganghada_rr(self):
		self.run_test("강하다", "{{ko-IPA}}", "ganghada", "rr")
	def test_ganghada_rrr(self):
		self.run_test("강하다", "{{ko-IPA}}", "ganghada", "rrr")
	def test_ganghada_mr(self):
		self.run_test("강하다", "{{ko-IPA}}", "kanghada", "mr")
	def test_ganghada_yr(self):
		self.run_test("강하다", "{{ko-IPA}}", "kanghata", "yr")
	def test_ganghada_ipa(self):
		self.run_test("강하다", "{{ko-IPA}}", "[ka̠ŋɦa̠da̠]", "ipa")

	def test_natanaeda_ph(self):
		self.run_test("나타내다", "{{ko-IPA}}", "나타내다/나타네다", "ph")
	def test_natanaeda_rr(self):
		self.run_test("나타내다", "{{ko-IPA}}", "natanaeda", "rr")
	def test_natanaeda_rrr(self):
		self.run_test("나타내다", "{{ko-IPA}}", "natanaeda", "rrr")
	def test_natanaeda_mr(self):
		self.run_test("나타내다", "{{ko-IPA}}", "nat'anaeda", "mr")
	def test_natanaeda_yr(self):
		self.run_test("나타내다", "{{ko-IPA}}", "na.thanayta", "yr")
	def test_natanaeda_ipa(self):
		self.run_test("나타내다", "{{ko-IPA}}", "[na̠tʰa̠nɛda̠] ~ [na̠tʰa̠ne̞da̠]", "ipa")

	def test_dayanghada_ph(self):
		self.run_test("다양하다", "{{ko-IPA}}", "다양하다", "ph")
	def test_dayanghada_rr(self):
		self.run_test("다양하다", "{{ko-IPA}}", "dayanghada", "rr")
	def test_dayanghada_rrr(self):
		self.run_test("다양하다", "{{ko-IPA}}", "dayanghada", "rrr")
	def test_dayanghada_mr(self):
		self.run_test("다양하다", "{{ko-IPA}}", "tayanghada", "mr")
	def test_dayanghada_yr(self):
		self.run_test("다양하다", "{{ko-IPA}}", "ta.yanghata", "yr")
	def test_dayanghada_ipa(self):
		self.run_test("다양하다", "{{ko-IPA}}", "[ta̠ja̠ŋɦa̠da̠]", "ipa")

	def test_gyeolhon_ph(self):
		self.run_test("결혼", "{{ko-IPA}}", "결혼", "ph")
	def test_gyeolhon_rr(self):
		self.run_test("결혼", "{{ko-IPA}}", "gyeolhon", "rr")
	def test_gyeolhon_rrr(self):
		self.run_test("결혼", "{{ko-IPA}}", "gyeolhon", "rrr")
	def test_gyeolhon_mr(self):
		self.run_test("결혼", "{{ko-IPA}}", "kyŏrhon", "mr")
	def test_gyeolhon_yr(self):
		self.run_test("결혼", "{{ko-IPA}}", "kyel.hon", "yr")
	def test_gyeolhon_ipa(self):
		self.run_test("결혼", "{{ko-IPA}}", "[kjʌ̹ɾβo̞n]", "ipa")

	def test_seuseuro_ph(self):
		self.run_test("스스로", "{{ko-IPA}}", "스스로", "ph")
	def test_seuseuro_rr(self):
		self.run_test("스스로", "{{ko-IPA}}", "seuseuro", "rr")
	def test_seuseuro_rrr(self):
		self.run_test("스스로", "{{ko-IPA}}", "seuseulo", "rrr")
	def test_seuseuro_mr(self):
		self.run_test("스스로", "{{ko-IPA}}", "sŭsŭro", "mr")
	def test_seuseuro_yr(self):
		self.run_test("스스로", "{{ko-IPA}}", "susulo", "yr")
	def test_seuseuro_ipa(self):
		self.run_test("스스로", "{{ko-IPA}}", "[sʰɯsʰɯɾo̞]", "ipa")

	def test_yennal_ph(self):
		self.run_test("옛날", "{{ko-IPA|l=y}}", "옌(ː)날", "ph")
	def test_yennal_rr(self):
		self.run_test("옛날", "{{ko-IPA|l=y}}", "yennal", "rr")
	def test_yennal_rrr(self):
		self.run_test("옛날", "{{ko-IPA|l=y}}", "yesnal", "rrr")
	def test_yennal_mr(self):
		self.run_test("옛날", "{{ko-IPA|l=y}}", "yennal", "mr")
	def test_yennal_yr(self):
		self.run_test("옛날", "{{ko-IPA|l=y}}", "yēysnal", "yr")
	def test_yennal_ipa(self):
		self.run_test("옛날", "{{ko-IPA|l=y}}", "[ˈje̞(ː)nna̠ɭ]", "ipa")

	def test_inal_ph(self):
		self.run_test("이날", "{{ko-IPA}}", "이날", "ph")
	def test_inal_rr(self):
		self.run_test("이날", "{{ko-IPA}}", "inal", "rr")
	def test_inal_rrr(self):
		self.run_test("이날", "{{ko-IPA}}", "inal", "rrr")
	def test_inal_mr(self):
		self.run_test("이날", "{{ko-IPA}}", "inal", "mr")
	def test_inal_yr(self):
		self.run_test("이날", "{{ko-IPA}}", "inal", "yr")
	def test_inal_ipa(self):
		self.run_test("이날", "{{ko-IPA}}", "[ina̠ɭ]", "ipa")

	def test_chilhada_ph(self):
		self.run_test("칠하다", "{{ko-IPA}}", "칠하다", "ph")
	def test_chilhada_rr(self):
		self.run_test("칠하다", "{{ko-IPA}}", "chilhada", "rr")
	def test_chilhada_rrr(self):
		self.run_test("칠하다", "{{ko-IPA}}", "chilhada", "rrr")
	def test_chilhada_mr(self):
		self.run_test("칠하다", "{{ko-IPA}}", "ch'irhada", "mr")
	def test_chilhada_yr(self):
		self.run_test("칠하다", "{{ko-IPA}}", "chil.hata", "yr")
	def test_chilhada_ipa(self):
		self.run_test("칠하다", "{{ko-IPA}}", "[t͡ɕʰiɾɦa̠da̠]", "ipa")

	def test_chajihada_ph(self):
		self.run_test("차지하다", "{{ko-IPA}}", "차지하다", "ph")
	def test_chajihada_rr(self):
		self.run_test("차지하다", "{{ko-IPA}}", "chajihada", "rr")
	def test_chajihada_rrr(self):
		self.run_test("차지하다", "{{ko-IPA}}", "chajihada", "rrr")
	def test_chajihada_mr(self):
		self.run_test("차지하다", "{{ko-IPA}}", "ch'ajihada", "mr")
	def test_chajihada_yr(self):
		self.run_test("차지하다", "{{ko-IPA}}", "chacihata", "yr")
	def test_chajihada_ipa(self):
		self.run_test("차지하다", "{{ko-IPA}}", "[t͡ɕʰa̠d͡ʑiɦa̠da̠]", "ipa")

	def test_gabang_ph(self):
		self.run_test("가방", "{{ko-IPA}}", "가방", "ph")
	def test_gabang_rr(self):
		self.run_test("가방", "{{ko-IPA}}", "gabang", "rr")
	def test_gabang_rrr(self):
		self.run_test("가방", "{{ko-IPA}}", "gabang", "rrr")
	def test_gabang_mr(self):
		self.run_test("가방", "{{ko-IPA}}", "kabang", "mr")
	def test_gabang_yr(self):
		self.run_test("가방", "{{ko-IPA}}", "kapang", "yr")
	def test_gabang_ipa(self):
		self.run_test("가방", "{{ko-IPA}}", "[ka̠ba̠ŋ]", "ipa")

	def test_gasi_ph(self):
		self.run_test("가시", "{{ko-IPA}}", "가시", "ph")
	def test_gasi_rr(self):
		self.run_test("가시", "{{ko-IPA}}", "gasi", "rr")
	def test_gasi_rrr(self):
		self.run_test("가시", "{{ko-IPA}}", "gasi", "rrr")
	def test_gasi_mr(self):
		self.run_test("가시", "{{ko-IPA}}", "kasi", "mr")
	def test_gasi_yr(self):
		self.run_test("가시", "{{ko-IPA}}", "kasi", "yr")
	def test_gasi_ipa(self):
		self.run_test("가시", "{{ko-IPA}}", "[ka̠ɕʰi]", "ipa")
	def test_gasi_ph_1(self):
		self.run_test("가시", "{{ko-IPA}}", "가시", "ph")
	def test_gasi_rr_1(self):
		self.run_test("가시", "{{ko-IPA}}", "gasi", "rr")
	def test_gasi_rrr_1(self):
		self.run_test("가시", "{{ko-IPA}}", "gasi", "rrr")
	def test_gasi_mr_1(self):
		self.run_test("가시", "{{ko-IPA}}", "kasi", "mr")
	def test_gasi_yr_1(self):
		self.run_test("가시", "{{ko-IPA}}", "kasi", "yr")
	def test_gasi_ipa_1(self):
		self.run_test("가시", "{{ko-IPA}}", "[ka̠ɕʰi]", "ipa")
	def test_gasi_ph_2(self):
		self.run_test("가시", "{{ko-IPA}}", "가시", "ph")
	def test_gasi_rr_2(self):
		self.run_test("가시", "{{ko-IPA}}", "gasi", "rr")
	def test_gasi_rrr_2(self):
		self.run_test("가시", "{{ko-IPA}}", "gasi", "rrr")
	def test_gasi_mr_2(self):
		self.run_test("가시", "{{ko-IPA}}", "kasi", "mr")
	def test_gasi_yr_2(self):
		self.run_test("가시", "{{ko-IPA}}", "kasi", "yr")
	def test_gasi_ipa_2(self):
		self.run_test("가시", "{{ko-IPA}}", "[ka̠ɕʰi]", "ipa")








































	def test_geokjeong_ph(self):
		self.run_test("걱정", "{{ko-IPA}}", "걱쩡", "ph")
	def test_geokjeong_rr(self):
		self.run_test("걱정", "{{ko-IPA}}", "geokjeong", "rr")
	def test_geokjeong_rrr(self):
		self.run_test("걱정", "{{ko-IPA}}", "geogjeong", "rrr")
	def test_geokjeong_mr(self):
		self.run_test("걱정", "{{ko-IPA}}", "kŏkchŏng", "mr")
	def test_geokjeong_yr(self):
		self.run_test("걱정", "{{ko-IPA}}", "kekceng", "yr")
	def test_geokjeong_ipa(self):
		self.run_test("걱정", "{{ko-IPA}}", "[kʌ̹k̚t͡ɕ͈ʌ̹ŋ]", "ipa")

	def test_geonchuk_ph(self):
		self.run_test("건축", "{{ko-IPA|l=y}}", "건(ː)축", "ph")
	def test_geonchuk_rr(self):
		self.run_test("건축", "{{ko-IPA|l=y}}", "geonchuk", "rr")
	def test_geonchuk_rrr(self):
		self.run_test("건축", "{{ko-IPA|l=y}}", "geonchug", "rrr")
	def test_geonchuk_mr(self):
		self.run_test("건축", "{{ko-IPA|l=y}}", "kŏnch'uk", "mr")
	def test_geonchuk_yr(self):
		self.run_test("건축", "{{ko-IPA|l=y}}", "kēn.chwuk", "yr")
	def test_geonchuk_ipa(self):
		self.run_test("건축", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)ɲt͡ɕʰuk̚]", "ipa")

	def test_gyeolhonhada_ph(self):
		self.run_test("결혼하다", "{{ko-IPA}}", "결혼하다", "ph")
	def test_gyeolhonhada_rr(self):
		self.run_test("결혼하다", "{{ko-IPA}}", "gyeolhonhada", "rr")
	def test_gyeolhonhada_rrr(self):
		self.run_test("결혼하다", "{{ko-IPA}}", "gyeolhonhada", "rrr")
	def test_gyeolhonhada_mr(self):
		self.run_test("결혼하다", "{{ko-IPA}}", "kyŏrhonhada", "mr")
	def test_gyeolhonhada_yr(self):
		self.run_test("결혼하다", "{{ko-IPA}}", "kyel.hon.hata", "yr")
	def test_gyeolhonhada_ipa(self):
		self.run_test("결혼하다", "{{ko-IPA}}", "[kjʌ̹ɾβo̞nɦa̠da̠]", "ipa")

	def test_gyeomsonhada_ph(self):
		self.run_test("겸손하다", "{{ko-IPA}}", "겸손하다", "ph")
	def test_gyeomsonhada_rr(self):
		self.run_test("겸손하다", "{{ko-IPA}}", "gyeomsonhada", "rr")
	def test_gyeomsonhada_rrr(self):
		self.run_test("겸손하다", "{{ko-IPA}}", "gyeomsonhada", "rrr")
	def test_gyeomsonhada_mr(self):
		self.run_test("겸손하다", "{{ko-IPA}}", "kyŏmsonhada", "mr")
	def test_gyeomsonhada_yr(self):
		self.run_test("겸손하다", "{{ko-IPA}}", "kyemson.hata", "yr")
	def test_gyeomsonhada_ipa(self):
		self.run_test("겸손하다", "{{ko-IPA}}", "[kjʌ̹msʰo̞nɦa̠da̠]", "ipa")

	def test_gyeomson_ph(self):
		self.run_test("겸손", "{{ko-IPA}}", "겸손", "ph")
	def test_gyeomson_rr(self):
		self.run_test("겸손", "{{ko-IPA}}", "gyeomson", "rr")
	def test_gyeomson_rrr(self):
		self.run_test("겸손", "{{ko-IPA}}", "gyeomson", "rrr")
	def test_gyeomson_mr(self):
		self.run_test("겸손", "{{ko-IPA}}", "kyŏmson", "mr")
	def test_gyeomson_yr(self):
		self.run_test("겸손", "{{ko-IPA}}", "kyemson", "yr")
	def test_gyeomson_ipa(self):
		self.run_test("겸손", "{{ko-IPA}}", "[kjʌ̹msʰo̞n]", "ipa")

	def test_gyeongjehak_ph(self):
		self.run_test("경제학", "{{ko-IPA}}", "경제학", "ph")
	def test_gyeongjehak_rr(self):
		self.run_test("경제학", "{{ko-IPA}}", "gyeongjehak", "rr")
	def test_gyeongjehak_rrr(self):
		self.run_test("경제학", "{{ko-IPA}}", "gyeongjehag", "rrr")
	def test_gyeongjehak_mr(self):
		self.run_test("경제학", "{{ko-IPA}}", "kyŏngjehak", "mr")
	def test_gyeongjehak_yr(self):
		self.run_test("경제학", "{{ko-IPA}}", "kyengceyhak", "yr")
	def test_gyeongjehak_ipa(self):
		self.run_test("경제학", "{{ko-IPA}}", "[kjʌ̹ŋd͡ʑe̞ɦa̠k̚]", "ipa")

	def test_gyesan_ph(self):
		self.run_test("계산", "{{ko-IPA|l=y}}", "계(ː)산/게(ː)산", "ph")
	def test_gyesan_rr(self):
		self.run_test("계산", "{{ko-IPA|l=y}}", "gyesan", "rr")
	def test_gyesan_rrr(self):
		self.run_test("계산", "{{ko-IPA|l=y}}", "gyesan", "rrr")
	def test_gyesan_mr(self):
		self.run_test("계산", "{{ko-IPA|l=y}}", "kyesan", "mr")
	def test_gyesan_yr(self):
		self.run_test("계산", "{{ko-IPA|l=y}}", "kyēysan", "yr")
	def test_gyesan_ipa(self):
		self.run_test("계산", "{{ko-IPA|l=y}}", "[ˈkje̞(ː)sʰa̠n] ~ [ˈke̞(ː)sʰa̠n]", "ipa")

	def test_gyejeol_ph(self):
		self.run_test("계절", "{{ko-IPA|l=y}}", "계(ː)절/게(ː)절", "ph")
	def test_gyejeol_rr(self):
		self.run_test("계절", "{{ko-IPA|l=y}}", "gyejeol", "rr")
	def test_gyejeol_rrr(self):
		self.run_test("계절", "{{ko-IPA|l=y}}", "gyejeol", "rrr")
	def test_gyejeol_mr(self):
		self.run_test("계절", "{{ko-IPA|l=y}}", "kyejŏl", "mr")
	def test_gyejeol_yr(self):
		self.run_test("계절", "{{ko-IPA|l=y}}", "kyēycel", "yr")
	def test_gyejeol_ipa(self):
		self.run_test("계절", "{{ko-IPA|l=y}}", "[ˈkje̞(ː)d͡ʑʌ̹ɭ] ~ [ˈke̞(ː)d͡ʑʌ̹ɭ]", "ipa")

	def test_gongwon_ph(self):
		self.run_test("공원", "{{ko-IPA}}", "공원", "ph")
	def test_gongwon_rr(self):
		self.run_test("공원", "{{ko-IPA}}", "gong'won", "rr")
	def test_gongwon_rrr(self):
		self.run_test("공원", "{{ko-IPA}}", "gong'won", "rrr")
	def test_gongwon_mr(self):
		self.run_test("공원", "{{ko-IPA}}", "kongwŏn", "mr")
	def test_gongwon_yr(self):
		self.run_test("공원", "{{ko-IPA}}", "kongwen", "yr")
	def test_gongwon_ipa(self):
		self.run_test("공원", "{{ko-IPA}}", "[ko̞ŋwʌ̹n]", "ipa")

	def test_emelmujiro_ph(self):
		self.run_test("에멜무지로", "{{ko-IPA}}", "에멜무지로", "ph")
	def test_emelmujiro_rr(self):
		self.run_test("에멜무지로", "{{ko-IPA}}", "emelmujiro", "rr")
	def test_emelmujiro_rrr(self):
		self.run_test("에멜무지로", "{{ko-IPA}}", "emelmujilo", "rrr")
	def test_emelmujiro_mr(self):
		self.run_test("에멜무지로", "{{ko-IPA}}", "emelmujiro", "mr")
	def test_emelmujiro_yr(self):
		self.run_test("에멜무지로", "{{ko-IPA}}", "eymeyl.mucilo", "yr")
	def test_emelmujiro_ipa(self):
		self.run_test("에멜무지로", "{{ko-IPA}}", "[e̞me̞ɭmud͡ʑiɾo̞]", "ipa")

	def test_gongchaek_ph(self):
		self.run_test("공책", "{{ko-IPA}}", "공책/공첵", "ph")
	def test_gongchaek_rr(self):
		self.run_test("공책", "{{ko-IPA}}", "gongchaek", "rr")
	def test_gongchaek_rrr(self):
		self.run_test("공책", "{{ko-IPA}}", "gongchaeg", "rrr")
	def test_gongchaek_mr(self):
		self.run_test("공책", "{{ko-IPA}}", "kongch'aek", "mr")
	def test_gongchaek_yr(self):
		self.run_test("공책", "{{ko-IPA}}", "kongchayk", "yr")
	def test_gongchaek_ipa(self):
		self.run_test("공책", "{{ko-IPA}}", "[ko̞ŋt͡ɕʰɛk̚] ~ [ko̞ŋt͡ɕʰe̞k̚]", "ipa")


















	def test_gugyeong_ph(self):
		self.run_test("구경", "{{ko-IPA|l=y}}", "구(ː)경", "ph")
	def test_gugyeong_rr(self):
		self.run_test("구경", "{{ko-IPA|l=y}}", "gugyeong", "rr")
	def test_gugyeong_rrr(self):
		self.run_test("구경", "{{ko-IPA|l=y}}", "gugyeong", "rrr")
	def test_gugyeong_mr(self):
		self.run_test("구경", "{{ko-IPA|l=y}}", "kugyŏng", "mr")
	def test_gugyeong_yr(self):
		self.run_test("구경", "{{ko-IPA|l=y}}", "kwūkyeng", "yr")
	def test_gugyeong_ipa(self):
		self.run_test("구경", "{{ko-IPA|l=y}}", "[ˈku(ː)ɡjʌ̹ŋ]", "ipa")
	def test_gugyeong_ph_1(self):
		self.run_test("구경", "{{ko-IPA}}", "구경", "ph")
	def test_gugyeong_rr_1(self):
		self.run_test("구경", "{{ko-IPA}}", "gugyeong", "rr")
	def test_gugyeong_rrr_1(self):
		self.run_test("구경", "{{ko-IPA}}", "gugyeong", "rrr")
	def test_gugyeong_mr_1(self):
		self.run_test("구경", "{{ko-IPA}}", "kugyŏng", "mr")
	def test_gugyeong_yr_1(self):
		self.run_test("구경", "{{ko-IPA}}", "kwukyeng", "yr")
	def test_gugyeong_ipa_1(self):
		self.run_test("구경", "{{ko-IPA}}", "[kuɡjʌ̹ŋ]", "ipa")

	def test_gungmul_ph(self):
		self.run_test("국물", "{{ko-IPA}}", "궁물", "ph")
	def test_gungmul_rr(self):
		self.run_test("국물", "{{ko-IPA}}", "gungmul", "rr")
	def test_gungmul_rrr(self):
		self.run_test("국물", "{{ko-IPA}}", "gugmul", "rrr")
	def test_gungmul_mr(self):
		self.run_test("국물", "{{ko-IPA}}", "kungmul", "mr")
	def test_gungmul_yr(self):
		self.run_test("국물", "{{ko-IPA}}", "kwukmul", "yr")
	def test_gungmul_ipa(self):
		self.run_test("국물", "{{ko-IPA}}", "[kuŋmuɭ]", "ipa")

	def test_gugeohak_ph(self):
		self.run_test("국어학", "{{ko-IPA}}", "구거학", "ph")
	def test_gugeohak_rr(self):
		self.run_test("국어학", "{{ko-IPA}}", "gugeohak", "rr")
	def test_gugeohak_rrr(self):
		self.run_test("국어학", "{{ko-IPA}}", "gug'eohag", "rrr")
	def test_gugeohak_mr(self):
		self.run_test("국어학", "{{ko-IPA}}", "kugŏhak", "mr")
	def test_gugeohak_yr(self):
		self.run_test("국어학", "{{ko-IPA}}", "kwuk.ehak", "yr")
	def test_gugeohak_ipa(self):
		self.run_test("국어학", "{{ko-IPA}}", "[kuɡʌ̹ɦa̠k̚]", "ipa")

	def test_gyul_ph(self):
		self.run_test("귤", "{{ko-IPA}}", "귤", "ph")
	def test_gyul_rr(self):
		self.run_test("귤", "{{ko-IPA}}", "gyul", "rr")
	def test_gyul_rrr(self):
		self.run_test("귤", "{{ko-IPA}}", "gyul", "rrr")
	def test_gyul_mr(self):
		self.run_test("귤", "{{ko-IPA}}", "kyul", "mr")
	def test_gyul_yr(self):
		self.run_test("귤", "{{ko-IPA}}", "kyul", "yr")
	def test_gyul_ipa(self):
		self.run_test("귤", "{{ko-IPA}}", "[kjuɭ]", "ipa")

	def test_geureochiman_ph(self):
		self.run_test("그렇지만", "{{ko-IPA}}", "그러치만", "ph")
	def test_geureochiman_rr(self):
		self.run_test("그렇지만", "{{ko-IPA}}", "geureochiman", "rr")
	def test_geureochiman_rrr(self):
		self.run_test("그렇지만", "{{ko-IPA}}", "geuleohjiman", "rrr")
	def test_geureochiman_mr(self):
		self.run_test("그렇지만", "{{ko-IPA}}", "kŭrŏch'iman", "mr")
	def test_geureochiman_yr(self):
		self.run_test("그렇지만", "{{ko-IPA}}", "kulehciman", "yr")
	def test_geureochiman_ipa(self):
		self.run_test("그렇지만", "{{ko-IPA}}", "[kɯɾʌ̹t͡ɕʰima̠n]", "ipa")

	def test_geueulda_ph(self):
		self.run_test("그을다", "{{ko-IPA}}", "그을다", "ph")
	def test_geueulda_rr(self):
		self.run_test("그을다", "{{ko-IPA}}", "geueulda", "rr")
	def test_geueulda_rrr(self):
		self.run_test("그을다", "{{ko-IPA}}", "geueulda", "rrr")
	def test_geueulda_mr(self):
		self.run_test("그을다", "{{ko-IPA}}", "kŭŭlda", "mr")
	def test_geueulda_yr(self):
		self.run_test("그을다", "{{ko-IPA}}", "kuulta", "yr")
	def test_geueulda_ipa(self):
		self.run_test("그을다", "{{ko-IPA}}", "[kɯɯɭda̠]", "ipa")

	def test_geukjang_ph(self):
		self.run_test("극장", "{{ko-IPA}}", "극짱", "ph")
	def test_geukjang_rr(self):
		self.run_test("극장", "{{ko-IPA}}", "geukjang", "rr")
	def test_geukjang_rrr(self):
		self.run_test("극장", "{{ko-IPA}}", "geugjang", "rrr")
	def test_geukjang_mr(self):
		self.run_test("극장", "{{ko-IPA}}", "kŭkchang", "mr")
	def test_geukjang_yr(self):
		self.run_test("극장", "{{ko-IPA}}", "kukcang", "yr")
	def test_geukjang_ipa(self):
		self.run_test("극장", "{{ko-IPA}}", "[kɯk̚t͡ɕ͈a̠ŋ]", "ipa")

	def test_geuncheo_ph(self):
		self.run_test("근처", "{{ko-IPA|l=y}}", "근(ː)처", "ph")
	def test_geuncheo_rr(self):
		self.run_test("근처", "{{ko-IPA|l=y}}", "geuncheo", "rr")
	def test_geuncheo_rrr(self):
		self.run_test("근처", "{{ko-IPA|l=y}}", "geuncheo", "rrr")
	def test_geuncheo_mr(self):
		self.run_test("근처", "{{ko-IPA|l=y}}", "kŭnch'ŏ", "mr")
	def test_geuncheo_yr(self):
		self.run_test("근처", "{{ko-IPA|l=y}}", "kūn.che", "yr")
	def test_geuncheo_ipa(self):
		self.run_test("근처", "{{ko-IPA|l=y}}", "[ˈkɯ(ː)ɲt͡ɕʰʌ̹]", "ipa")

	def test_gidae_ph(self):
		self.run_test("기대", "{{ko-IPA}}", "기대/기데", "ph")
	def test_gidae_rr(self):
		self.run_test("기대", "{{ko-IPA}}", "gidae", "rr")
	def test_gidae_rrr(self):
		self.run_test("기대", "{{ko-IPA}}", "gidae", "rrr")
	def test_gidae_mr(self):
		self.run_test("기대", "{{ko-IPA}}", "kidae", "mr")
	def test_gidae_yr(self):
		self.run_test("기대", "{{ko-IPA}}", "kitay", "yr")
	def test_gidae_ipa(self):
		self.run_test("기대", "{{ko-IPA}}", "[kidɛ] ~ [kide̞]", "ipa")

	def test_gichim_ph(self):
		self.run_test("기침", "{{ko-IPA}}", "기침", "ph")
	def test_gichim_rr(self):
		self.run_test("기침", "{{ko-IPA}}", "gichim", "rr")
	def test_gichim_rrr(self):
		self.run_test("기침", "{{ko-IPA}}", "gichim", "rrr")
	def test_gichim_mr(self):
		self.run_test("기침", "{{ko-IPA}}", "kich'im", "mr")
	def test_gichim_yr(self):
		self.run_test("기침", "{{ko-IPA}}", "ki.chim", "yr")
	def test_gichim_ipa(self):
		self.run_test("기침", "{{ko-IPA}}", "[kit͡ɕʰim]", "ipa")

	def test_najung_ph(self):
		self.run_test("나중", "{{ko-IPA|l=y}}", "나(ː)중", "ph")
	def test_najung_rr(self):
		self.run_test("나중", "{{ko-IPA|l=y}}", "najung", "rr")
	def test_najung_rrr(self):
		self.run_test("나중", "{{ko-IPA|l=y}}", "najung", "rrr")
	def test_najung_mr(self):
		self.run_test("나중", "{{ko-IPA|l=y}}", "najung", "mr")
	def test_najung_yr(self):
		self.run_test("나중", "{{ko-IPA|l=y}}", "nācwung", "yr")
	def test_najung_ipa(self):
		self.run_test("나중", "{{ko-IPA|l=y}}", "[ˈna̠(ː)d͡ʑuŋ]", "ipa")

	def test_naheul_ph(self):
		self.run_test("나흘", "{{ko-IPA}}", "나흘", "ph")
	def test_naheul_rr(self):
		self.run_test("나흘", "{{ko-IPA}}", "naheul", "rr")
	def test_naheul_rrr(self):
		self.run_test("나흘", "{{ko-IPA}}", "naheul", "rrr")
	def test_naheul_mr(self):
		self.run_test("나흘", "{{ko-IPA}}", "nahŭl", "mr")
	def test_naheul_yr(self):
		self.run_test("나흘", "{{ko-IPA}}", "nahul", "yr")
	def test_naheul_ipa(self):
		self.run_test("나흘", "{{ko-IPA}}", "[na̠ɣɯɭ]", "ipa")

	def test_natseolda_ph(self):
		self.run_test("낯설다", "{{ko-IPA}}", "낟썰다", "ph")
	def test_natseolda_rr(self):
		self.run_test("낯설다", "{{ko-IPA}}", "natseolda", "rr")
	def test_natseolda_rrr(self):
		self.run_test("낯설다", "{{ko-IPA}}", "nachseolda", "rrr")
	def test_natseolda_mr(self):
		self.run_test("낯설다", "{{ko-IPA}}", "nassŏlda", "mr")
	def test_natseolda_yr(self):
		self.run_test("낯설다", "{{ko-IPA}}", "nachselta", "yr")
	def test_natseolda_ipa(self):
		self.run_test("낯설다", "{{ko-IPA}}", "[na̠ss͈ʌ̹ɭda̠]", "ipa")

	def test_naengmyeon_ph(self):
		self.run_test("냉면", "{{ko-IPA|l=y}}", "냉(ː)면/넹(ː)면", "ph")
	def test_naengmyeon_rr(self):
		self.run_test("냉면", "{{ko-IPA|l=y}}", "naengmyeon", "rr")
	def test_naengmyeon_rrr(self):
		self.run_test("냉면", "{{ko-IPA|l=y}}", "naengmyeon", "rrr")
	def test_naengmyeon_mr(self):
		self.run_test("냉면", "{{ko-IPA|l=y}}", "naengmyŏn", "mr")
	def test_naengmyeon_yr(self):
		self.run_test("냉면", "{{ko-IPA|l=y}}", "nāyngmyen", "yr")
	def test_naengmyeon_ipa(self):
		self.run_test("냉면", "{{ko-IPA|l=y}}", "[ˈnɛ(ː)ŋmjʌ̹n] ~ [ˈne̞(ː)ŋmjʌ̹n]", "ipa")

	def test_noseon_ph(self):
		self.run_test("노선", "{{ko-IPA|l=y}}", "노(ː)선", "ph")
	def test_noseon_rr(self):
		self.run_test("노선", "{{ko-IPA|l=y}}", "noseon", "rr")
	def test_noseon_rrr(self):
		self.run_test("노선", "{{ko-IPA|l=y}}", "noseon", "rrr")
	def test_noseon_mr(self):
		self.run_test("노선", "{{ko-IPA|l=y}}", "nosŏn", "mr")
	def test_noseon_yr(self):
		self.run_test("노선", "{{ko-IPA|l=y}}", "nōsen", "yr")
	def test_noseon_ipa(self):
		self.run_test("노선", "{{ko-IPA|l=y}}", "[ˈno̞(ː)sʰʌ̹n]", "ipa")

	def test_dojang_ph(self):
		self.run_test("도장", "{{ko-IPA}}", "도장", "ph")
	def test_dojang_rr(self):
		self.run_test("도장", "{{ko-IPA}}", "dojang", "rr")
	def test_dojang_rrr(self):
		self.run_test("도장", "{{ko-IPA}}", "dojang", "rrr")
	def test_dojang_mr(self):
		self.run_test("도장", "{{ko-IPA}}", "tojang", "mr")
	def test_dojang_yr(self):
		self.run_test("도장", "{{ko-IPA}}", "tocang", "yr")
	def test_dojang_ipa(self):
		self.run_test("도장", "{{ko-IPA}}", "[to̞d͡ʑa̠ŋ]", "ipa")
	def test_dojang_ph_1(self):
		self.run_test("도장", "{{ko-IPA|l=y}}", "도(ː)장", "ph")
	def test_dojang_rr_1(self):
		self.run_test("도장", "{{ko-IPA|l=y}}", "dojang", "rr")
	def test_dojang_rrr_1(self):
		self.run_test("도장", "{{ko-IPA|l=y}}", "dojang", "rrr")
	def test_dojang_mr_1(self):
		self.run_test("도장", "{{ko-IPA|l=y}}", "tojang", "mr")
	def test_dojang_yr_1(self):
		self.run_test("도장", "{{ko-IPA|l=y}}", "tōcang", "yr")
	def test_dojang_ipa_1(self):
		self.run_test("도장", "{{ko-IPA|l=y}}", "[ˈto̞(ː)d͡ʑa̠ŋ]", "ipa")

	def test_sseuregi_ph(self):
		self.run_test("쓰레기", "{{ko-IPA}}", "쓰레기", "ph")
	def test_sseuregi_rr(self):
		self.run_test("쓰레기", "{{ko-IPA}}", "sseuregi", "rr")
	def test_sseuregi_rrr(self):
		self.run_test("쓰레기", "{{ko-IPA}}", "sseulegi", "rrr")
	def test_sseuregi_mr(self):
		self.run_test("쓰레기", "{{ko-IPA}}", "ssŭregi", "mr")
	def test_sseuregi_yr(self):
		self.run_test("쓰레기", "{{ko-IPA}}", "ssuleyki", "yr")
	def test_sseuregi_ipa(self):
		self.run_test("쓰레기", "{{ko-IPA}}", "[s͈ɯɾe̞ɡi]", "ipa")

	def test_sup_ph(self):
		self.run_test("숲", "{{ko-IPA}}", "숩", "ph")
	def test_sup_rr(self):
		self.run_test("숲", "{{ko-IPA}}", "sup", "rr")
	def test_sup_rrr(self):
		self.run_test("숲", "{{ko-IPA}}", "sup", "rrr")
	def test_sup_mr(self):
		self.run_test("숲", "{{ko-IPA}}", "sup", "mr")
	def test_sup_yr(self):
		self.run_test("숲", "{{ko-IPA}}", "swuph", "yr")
	def test_sup_ipa(self):
		self.run_test("숲", "{{ko-IPA}}", "[sʰup̚]", "ipa")

	def test_bakkat_ph(self):
		self.run_test("바깥", "{{ko-IPA}}", "바깓", "ph")
	def test_bakkat_rr(self):
		self.run_test("바깥", "{{ko-IPA}}", "bakkat", "rr")
	def test_bakkat_rrr(self):
		self.run_test("바깥", "{{ko-IPA}}", "ba'kkat", "rrr")
	def test_bakkat_mr(self):
		self.run_test("바깥", "{{ko-IPA}}", "pakkat", "mr")
	def test_bakkat_yr(self):
		self.run_test("바깥", "{{ko-IPA}}", "pa.kkath", "yr")
	def test_bakkat_ipa(self):
		self.run_test("바깥", "{{ko-IPA}}", "[pa̠k͈a̠t̚]", "ipa")

	def test_banghak_ph(self):
		self.run_test("방학", "{{ko-IPA}}", "방학", "ph")
	def test_banghak_rr(self):
		self.run_test("방학", "{{ko-IPA}}", "banghak", "rr")
	def test_banghak_rrr(self):
		self.run_test("방학", "{{ko-IPA}}", "banghag", "rrr")
	def test_banghak_mr(self):
		self.run_test("방학", "{{ko-IPA}}", "panghak", "mr")
	def test_banghak_yr(self):
		self.run_test("방학", "{{ko-IPA}}", "panghak", "yr")
	def test_banghak_ipa(self):
		self.run_test("방학", "{{ko-IPA}}", "[pa̠ŋɦa̠k̚]", "ipa")

	def test_baekhap_ph(self):
		self.run_test("백합", "{{ko-IPA}}", "배캅/베캅", "ph")
	def test_baekhap_rr(self):
		self.run_test("백합", "{{ko-IPA}}", "baekhap", "rr")
	def test_baekhap_rrr(self):
		self.run_test("백합", "{{ko-IPA}}", "baeghab", "rrr")
	def test_baekhap_mr(self):
		self.run_test("백합", "{{ko-IPA}}", "paekhap", "mr")
	def test_baekhap_yr(self):
		self.run_test("백합", "{{ko-IPA}}", "payk.hap", "yr")
	def test_baekhap_ipa(self):
		self.run_test("백합", "{{ko-IPA}}", "[pɛkʰa̠p̚] ~ [pe̞kʰa̠p̚]", "ipa")

	def test_byeollo_ph(self):
		self.run_test("별로", "{{ko-IPA}}", "별로", "ph")
	def test_byeollo_rr(self):
		self.run_test("별로", "{{ko-IPA}}", "byeollo", "rr")
	def test_byeollo_rrr(self):
		self.run_test("별로", "{{ko-IPA}}", "byeollo", "rrr")
	def test_byeollo_mr(self):
		self.run_test("별로", "{{ko-IPA}}", "pyŏllo", "mr")
	def test_byeollo_yr(self):
		self.run_test("별로", "{{ko-IPA}}", "pyello", "yr")
	def test_byeollo_ipa(self):
		self.run_test("별로", "{{ko-IPA}}", "[pjʌ̹ɭɭo̞]", "ipa")

	def test_jopda_ph(self):
		self.run_test("좁다", "{{ko-IPA}}", "좁따", "ph")
	def test_jopda_rr(self):
		self.run_test("좁다", "{{ko-IPA}}", "jopda", "rr")
	def test_jopda_rrr(self):
		self.run_test("좁다", "{{ko-IPA}}", "jobda", "rrr")
	def test_jopda_mr(self):
		self.run_test("좁다", "{{ko-IPA}}", "chopta", "mr")
	def test_jopda_yr(self):
		self.run_test("좁다", "{{ko-IPA}}", "copta", "yr")
	def test_jopda_ipa(self):
		self.run_test("좁다", "{{ko-IPA}}", "[t͡ɕo̞p̚t͈a̠]", "ipa")

	def test_butak_ph(self):
		self.run_test("부탁", "{{ko-IPA|l=y}}", "부(ː)탁", "ph")
	def test_butak_rr(self):
		self.run_test("부탁", "{{ko-IPA|l=y}}", "butak", "rr")
	def test_butak_rrr(self):
		self.run_test("부탁", "{{ko-IPA|l=y}}", "butag", "rrr")
	def test_butak_mr(self):
		self.run_test("부탁", "{{ko-IPA|l=y}}", "put'ak", "mr")
	def test_butak_yr(self):
		self.run_test("부탁", "{{ko-IPA|l=y}}", "pū.thak", "yr")
	def test_butak_ipa(self):
		self.run_test("부탁", "{{ko-IPA|l=y}}", "[ˈpu(ː)tʰa̠k̚]", "ipa")

	def test_bunpil_ph(self):
		self.run_test("분필", "{{ko-IPA}}", "분필", "ph")
	def test_bunpil_rr(self):
		self.run_test("분필", "{{ko-IPA}}", "bunpil", "rr")
	def test_bunpil_rrr(self):
		self.run_test("분필", "{{ko-IPA}}", "bunpil", "rrr")
	def test_bunpil_mr(self):
		self.run_test("분필", "{{ko-IPA}}", "punp'il", "mr")
	def test_bunpil_yr(self):
		self.run_test("분필", "{{ko-IPA}}", "punphil", "yr")
	def test_bunpil_ipa(self):
		self.run_test("분필", "{{ko-IPA}}", "[punpʰiɭ]", "ipa")

	def test_bulgogi_ph(self):
		self.run_test("불고기", "{{ko-IPA}}", "불고기", "ph")
	def test_bulgogi_rr(self):
		self.run_test("불고기", "{{ko-IPA}}", "bulgogi", "rr")
	def test_bulgogi_rrr(self):
		self.run_test("불고기", "{{ko-IPA}}", "bulgogi", "rrr")
	def test_bulgogi_mr(self):
		self.run_test("불고기", "{{ko-IPA}}", "pulgogi", "mr")
	def test_bulgogi_yr(self):
		self.run_test("불고기", "{{ko-IPA}}", "pul.koki", "yr")
	def test_bulgogi_ipa(self):
		self.run_test("불고기", "{{ko-IPA}}", "[puɭɡo̞ɡi]", "ipa")

	def test_bulpyeonhada_ph(self):
		self.run_test("불편하다", "{{ko-IPA}}", "불편하다", "ph")
	def test_bulpyeonhada_rr(self):
		self.run_test("불편하다", "{{ko-IPA}}", "bulpyeonhada", "rr")
	def test_bulpyeonhada_rrr(self):
		self.run_test("불편하다", "{{ko-IPA}}", "bulpyeonhada", "rrr")
	def test_bulpyeonhada_mr(self):
		self.run_test("불편하다", "{{ko-IPA}}", "pulp'yŏnhada", "mr")
	def test_bulpyeonhada_yr(self):
		self.run_test("불편하다", "{{ko-IPA}}", "pul.phyen.hata", "yr")
	def test_bulpyeonhada_ipa(self):
		self.run_test("불편하다", "{{ko-IPA}}", "[puɭpʰjʌ̹nɦa̠da̠]", "ipa")

	def test_bulpyeon_ph(self):
		self.run_test("불편", "{{ko-IPA}}", "불편", "ph")
	def test_bulpyeon_rr(self):
		self.run_test("불편", "{{ko-IPA}}", "bulpyeon", "rr")
	def test_bulpyeon_rrr(self):
		self.run_test("불편", "{{ko-IPA}}", "bulpyeon", "rrr")
	def test_bulpyeon_mr(self):
		self.run_test("불편", "{{ko-IPA}}", "pulp'yŏn", "mr")
	def test_bulpyeon_yr(self):
		self.run_test("불편", "{{ko-IPA}}", "pul.phyen", "yr")
	def test_bulpyeon_ipa(self):
		self.run_test("불편", "{{ko-IPA}}", "[puɭpʰjʌ̹n]", "ipa")

	def test_butda_ph(self):
		self.run_test("붙다", "{{ko-IPA}}", "붇따", "ph")
	def test_butda_rr(self):
		self.run_test("붙다", "{{ko-IPA}}", "butda", "rr")
	def test_butda_rrr(self):
		self.run_test("붙다", "{{ko-IPA}}", "butda", "rrr")
	def test_butda_mr(self):
		self.run_test("붙다", "{{ko-IPA}}", "putta", "mr")
	def test_butda_yr(self):
		self.run_test("붙다", "{{ko-IPA}}", "puthta", "yr")
	def test_butda_ipa(self):
		self.run_test("붙다", "{{ko-IPA}}", "[put̚t͈a̠]", "ipa")

	def test_naeryeogada_ph(self):
		self.run_test("내려가다", "{{ko-IPA}}", "내려가다/네려가다", "ph")
	def test_naeryeogada_rr(self):
		self.run_test("내려가다", "{{ko-IPA}}", "naeryeogada", "rr")
	def test_naeryeogada_rrr(self):
		self.run_test("내려가다", "{{ko-IPA}}", "naelyeogada", "rrr")
	def test_naeryeogada_mr(self):
		self.run_test("내려가다", "{{ko-IPA}}", "naeryŏgada", "mr")
	def test_naeryeogada_yr(self):
		self.run_test("내려가다", "{{ko-IPA}}", "naylyekata", "yr")
	def test_naeryeogada_ipa(self):
		self.run_test("내려가다", "{{ko-IPA}}", "[nɛɾjʌ̹ɡa̠da̠] ~ [ne̞ɾjʌ̹ɡa̠da̠]", "ipa")

	def test_bakkwida_ph(self):
		self.run_test("바뀌다", "{{ko-IPA}}", "바뀌다", "ph")
	def test_bakkwida_rr(self):
		self.run_test("바뀌다", "{{ko-IPA}}", "bakkwida", "rr")
	def test_bakkwida_rrr(self):
		self.run_test("바뀌다", "{{ko-IPA}}", "ba'kkwida", "rrr")
	def test_bakkwida_mr(self):
		self.run_test("바뀌다", "{{ko-IPA}}", "pakkwida", "mr")
	def test_bakkwida_yr(self):
		self.run_test("바뀌다", "{{ko-IPA}}", "pa.kkwita", "yr")
	def test_bakkwida_ipa(self):
		self.run_test("바뀌다", "{{ko-IPA}}", "[pa̠k͈ɥida̠] ~ [pa̠k͈yda̠]", "ipa")

	def test_sarangseureopda_ph(self):
		self.run_test("사랑스럽다", "{{ko-IPA}}", "사랑스럽따", "ph")
	def test_sarangseureopda_rr(self):
		self.run_test("사랑스럽다", "{{ko-IPA}}", "sarangseureopda", "rr")
	def test_sarangseureopda_rrr(self):
		self.run_test("사랑스럽다", "{{ko-IPA}}", "salangseuleobda", "rrr")
	def test_sarangseureopda_mr(self):
		self.run_test("사랑스럽다", "{{ko-IPA}}", "sarangsŭrŏpta", "mr")
	def test_sarangseureopda_yr(self):
		self.run_test("사랑스럽다", "{{ko-IPA}}", "salangsulepta", "yr")
	def test_sarangseureopda_ipa(self):
		self.run_test("사랑스럽다", "{{ko-IPA}}", "[sʰa̠ɾa̠ŋsʰɯɾʌ̹p̚t͈a̠]", "ipa")

	def test_sahoehak_ph(self):
		self.run_test("사회학", "{{ko-IPA}}", "사훼학/사회학", "ph")
	def test_sahoehak_rr(self):
		self.run_test("사회학", "{{ko-IPA}}", "sahoehak", "rr")
	def test_sahoehak_rrr(self):
		self.run_test("사회학", "{{ko-IPA}}", "sahoehag", "rrr")
	def test_sahoehak_mr(self):
		self.run_test("사회학", "{{ko-IPA}}", "sahoehak", "mr")
	def test_sahoehak_yr(self):
		self.run_test("사회학", "{{ko-IPA}}", "sahoyhak", "yr")
	def test_sahoehak_ipa(self):
		self.run_test("사회학", "{{ko-IPA}}", "[sʰa̠βwe̞ɦa̠k̚] ~ [sʰa̠ɦø̞ɦa̠k̚]", "ipa")

	def test_gangjohada_ph(self):
		self.run_test("강조하다", "{{ko-IPA}}", "강조하다", "ph")
	def test_gangjohada_rr(self):
		self.run_test("강조하다", "{{ko-IPA}}", "gangjohada", "rr")
	def test_gangjohada_rrr(self):
		self.run_test("강조하다", "{{ko-IPA}}", "gangjohada", "rrr")
	def test_gangjohada_mr(self):
		self.run_test("강조하다", "{{ko-IPA}}", "kangjohada", "mr")
	def test_gangjohada_yr(self):
		self.run_test("강조하다", "{{ko-IPA}}", "kangcohata", "yr")
	def test_gangjohada_ipa(self):
		self.run_test("강조하다", "{{ko-IPA}}", "[ka̠ŋd͡ʑo̞ɦa̠da̠]", "ipa")

	def test_salgat_ph(self):
		self.run_test("살갗", "{{ko-ipa}}", "살갇", "ph")
	def test_salgat_rr(self):
		self.run_test("살갗", "{{ko-ipa}}", "salgat", "rr")
	def test_salgat_rrr(self):
		self.run_test("살갗", "{{ko-ipa}}", "salgach", "rrr")
	def test_salgat_mr(self):
		self.run_test("살갗", "{{ko-ipa}}", "salgat", "mr")
	def test_salgat_yr(self):
		self.run_test("살갗", "{{ko-ipa}}", "sal.kach", "yr")
	def test_salgat_ipa(self):
		self.run_test("살갗", "{{ko-ipa}}", "[sʰa̠ɭɡa̠t̚]", "ipa")

	def test_yoguhada_ph(self):
		self.run_test("요구하다", "{{ko-IPA}}", "요구하다", "ph")
	def test_yoguhada_rr(self):
		self.run_test("요구하다", "{{ko-IPA}}", "yoguhada", "rr")
	def test_yoguhada_rrr(self):
		self.run_test("요구하다", "{{ko-IPA}}", "yoguhada", "rrr")
	def test_yoguhada_mr(self):
		self.run_test("요구하다", "{{ko-IPA}}", "yoguhada", "mr")
	def test_yoguhada_yr(self):
		self.run_test("요구하다", "{{ko-IPA}}", "yokwuhata", "yr")
	def test_yoguhada_ipa(self):
		self.run_test("요구하다", "{{ko-IPA}}", "[joɡuɦa̠da̠]", "ipa")

	def test_gyeoljeonghada_ph(self):
		self.run_test("결정하다", "{{ko-IPA|com=1}}", "결쩡하다", "ph")
	def test_gyeoljeonghada_rr(self):
		self.run_test("결정하다", "{{ko-IPA|com=1}}", "gyeoljeonghada", "rr")
	def test_gyeoljeonghada_rrr(self):
		self.run_test("결정하다", "{{ko-IPA|com=1}}", "gyeoljeonghada", "rrr")
	def test_gyeoljeonghada_mr(self):
		self.run_test("결정하다", "{{ko-IPA|com=1}}", "kyŏlchŏnghada", "mr")
	def test_gyeoljeonghada_yr(self):
		self.run_test("결정하다", "{{ko-IPA|com=1}}", "kyelqcenghata", "yr")
	def test_gyeoljeonghada_ipa(self):
		self.run_test("결정하다", "{{ko-IPA|com=1}}", "[kjʌ̹ʎt͡ɕ͈ʌ̹ŋɦa̠da̠]", "ipa")

	def test_balsaenghada_ph(self):
		self.run_test("발생하다", "{{ko-IPA}}", "발생하다/발셍하다", "ph")
	def test_balsaenghada_rr(self):
		self.run_test("발생하다", "{{ko-IPA}}", "balsaenghada", "rr")
	def test_balsaenghada_rrr(self):
		self.run_test("발생하다", "{{ko-IPA}}", "balsaenghada", "rrr")
	def test_balsaenghada_mr(self):
		self.run_test("발생하다", "{{ko-IPA}}", "palsaenghada", "mr")
	def test_balsaenghada_yr(self):
		self.run_test("발생하다", "{{ko-IPA}}", "pal.saynghata", "yr")
	def test_balsaenghada_ipa(self):
		self.run_test("발생하다", "{{ko-IPA}}", "[pa̠ɭsʰɛŋɦa̠da̠] ~ [pa̠ɭsʰe̞ŋɦa̠da̠]", "ipa")

	def test_seolma_ph(self):
		self.run_test("설마", "{{ko-IPA}}", "설마", "ph")
	def test_seolma_rr(self):
		self.run_test("설마", "{{ko-IPA}}", "seolma", "rr")
	def test_seolma_rrr(self):
		self.run_test("설마", "{{ko-IPA}}", "seolma", "rrr")
	def test_seolma_mr(self):
		self.run_test("설마", "{{ko-IPA}}", "sŏlma", "mr")
	def test_seolma_yr(self):
		self.run_test("설마", "{{ko-IPA}}", "sel.ma", "yr")
	def test_seolma_ipa(self):
		self.run_test("설마", "{{ko-IPA}}", "[sʰʌ̹ɭma̠]", "ipa")

	def test_sseolmae_ph(self):
		self.run_test("썰매", "{{ko-IPA}}", "썰매/썰메", "ph")
	def test_sseolmae_rr(self):
		self.run_test("썰매", "{{ko-IPA}}", "sseolmae", "rr")
	def test_sseolmae_rrr(self):
		self.run_test("썰매", "{{ko-IPA}}", "sseolmae", "rrr")
	def test_sseolmae_mr(self):
		self.run_test("썰매", "{{ko-IPA}}", "ssŏlmae", "mr")
	def test_sseolmae_yr(self):
		self.run_test("썰매", "{{ko-IPA}}", "ssel.may", "yr")
	def test_sseolmae_ipa(self):
		self.run_test("썰매", "{{ko-IPA}}", "[s͈ʌ̹ɭmɛ] ~ [s͈ʌ̹ɭme̞]", "ipa")

	def test_sewol_ph(self):
		self.run_test("세월", "{{ko-ipa|l=y}}", "세(ː)월", "ph")
	def test_sewol_rr(self):
		self.run_test("세월", "{{ko-ipa|l=y}}", "sewol", "rr")
	def test_sewol_rrr(self):
		self.run_test("세월", "{{ko-ipa|l=y}}", "sewol", "rrr")
	def test_sewol_mr(self):
		self.run_test("세월", "{{ko-ipa|l=y}}", "sewŏl", "mr")
	def test_sewol_yr(self):
		self.run_test("세월", "{{ko-ipa|l=y}}", "sēywel", "yr")
	def test_sewol_ipa(self):
		self.run_test("세월", "{{ko-ipa|l=y}}", "[ˈsʰe̞(ː)wʌ̹ɭ]", "ipa")

	def test_gyeongchal_ph(self):
		self.run_test("경찰", "{{ko-IPA|l=y}}", "경(ː)찰", "ph")
	def test_gyeongchal_rr(self):
		self.run_test("경찰", "{{ko-IPA|l=y}}", "gyeongchal", "rr")
	def test_gyeongchal_rrr(self):
		self.run_test("경찰", "{{ko-IPA|l=y}}", "gyeongchal", "rrr")
	def test_gyeongchal_mr(self):
		self.run_test("경찰", "{{ko-IPA|l=y}}", "kyŏngch'al", "mr")
	def test_gyeongchal_yr(self):
		self.run_test("경찰", "{{ko-IPA|l=y}}", "kyēngchal", "yr")
	def test_gyeongchal_ipa(self):
		self.run_test("경찰", "{{ko-IPA|l=y}}", "[ˈkjɘ(ː)ŋt͡ɕʰa̠ɭ]", "ipa")

	def test_hanpyeon_ph(self):
		self.run_test("한편", "{{ko-IPA}}", "한편", "ph")
	def test_hanpyeon_rr(self):
		self.run_test("한편", "{{ko-IPA}}", "hanpyeon", "rr")
	def test_hanpyeon_rrr(self):
		self.run_test("한편", "{{ko-IPA}}", "hanpyeon", "rrr")
	def test_hanpyeon_mr(self):
		self.run_test("한편", "{{ko-IPA}}", "hanp'yŏn", "mr")
	def test_hanpyeon_yr(self):
		self.run_test("한편", "{{ko-IPA}}", "hanphyen", "yr")
	def test_hanpyeon_ipa(self):
		self.run_test("한편", "{{ko-IPA}}", "[ha̠npʰjʌ̹n]", "ipa")

	def test_gija_ph(self):
		self.run_test("기자", "{{ko-IPA}}", "기자", "ph")
	def test_gija_rr(self):
		self.run_test("기자", "{{ko-IPA}}", "gija", "rr")
	def test_gija_rrr(self):
		self.run_test("기자", "{{ko-IPA}}", "gija", "rrr")
	def test_gija_mr(self):
		self.run_test("기자", "{{ko-IPA}}", "kija", "mr")
	def test_gija_yr(self):
		self.run_test("기자", "{{ko-IPA}}", "kica", "yr")
	def test_gija_ipa(self):
		self.run_test("기자", "{{ko-IPA}}", "[kid͡ʑa̠]", "ipa")

	def test_siheom_ph(self):
		self.run_test("시험", "{{ko-IPA}}", "시험", "ph")
	def test_siheom_rr(self):
		self.run_test("시험", "{{ko-IPA}}", "siheom", "rr")
	def test_siheom_rrr(self):
		self.run_test("시험", "{{ko-IPA}}", "siheom", "rrr")
	def test_siheom_mr(self):
		self.run_test("시험", "{{ko-IPA}}", "sihŏm", "mr")
	def test_siheom_yr(self):
		self.run_test("시험", "{{ko-IPA}}", "sihem", "yr")
	def test_siheom_ipa(self):
		self.run_test("시험", "{{ko-IPA}}", "[ɕʰiɦʌ̹m]", "ipa")

	def test_tongil_ph(self):
		self.run_test("통일", "{{ko-IPA|l=y}}", "통(ː)일", "ph")
	def test_tongil_rr(self):
		self.run_test("통일", "{{ko-IPA|l=y}}", "tong'il", "rr")
	def test_tongil_rrr(self):
		self.run_test("통일", "{{ko-IPA|l=y}}", "tong'il", "rrr")
	def test_tongil_mr(self):
		self.run_test("통일", "{{ko-IPA|l=y}}", "t'ongil", "mr")
	def test_tongil_yr(self):
		self.run_test("통일", "{{ko-IPA|l=y}}", "thōngil", "yr")
	def test_tongil_ipa(self):
		self.run_test("통일", "{{ko-IPA|l=y}}", "[ˈtʰo̞(ː)ŋiɭ]", "ipa")

	def test_siseol_ph(self):
		self.run_test("시설", "{{ko-IPA|l=y}}", "시(ː)설", "ph")
	def test_siseol_rr(self):
		self.run_test("시설", "{{ko-IPA|l=y}}", "siseol", "rr")
	def test_siseol_rrr(self):
		self.run_test("시설", "{{ko-IPA|l=y}}", "siseol", "rrr")
	def test_siseol_mr(self):
		self.run_test("시설", "{{ko-IPA|l=y}}", "sisŏl", "mr")
	def test_siseol_yr(self):
		self.run_test("시설", "{{ko-IPA|l=y}}", "sīsel", "yr")
	def test_siseol_ipa(self):
		self.run_test("시설", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)sʰʌ̹ɭ]", "ipa")

	def test_jubyeon_ph(self):
		self.run_test("주변", "{{ko-IPA}}", "주변", "ph")
	def test_jubyeon_rr(self):
		self.run_test("주변", "{{ko-IPA}}", "jubyeon", "rr")
	def test_jubyeon_rrr(self):
		self.run_test("주변", "{{ko-IPA}}", "jubyeon", "rrr")
	def test_jubyeon_mr(self):
		self.run_test("주변", "{{ko-IPA}}", "chubyŏn", "mr")
	def test_jubyeon_yr(self):
		self.run_test("주변", "{{ko-IPA}}", "cwupyen", "yr")
	def test_jubyeon_ipa(self):
		self.run_test("주변", "{{ko-IPA}}", "[t͡ɕubjʌ̹n]", "ipa")

	def test_jamsi_ph(self):
		self.run_test("잠시", "{{ko-IPA|l=y}}", "잠(ː)시", "ph")
	def test_jamsi_rr(self):
		self.run_test("잠시", "{{ko-IPA|l=y}}", "jamsi", "rr")
	def test_jamsi_rrr(self):
		self.run_test("잠시", "{{ko-IPA|l=y}}", "jamsi", "rrr")
	def test_jamsi_mr(self):
		self.run_test("잠시", "{{ko-IPA|l=y}}", "chamsi", "mr")
	def test_jamsi_yr(self):
		self.run_test("잠시", "{{ko-IPA|l=y}}", "cāmsi", "yr")
	def test_jamsi_ipa(self):
		self.run_test("잠시", "{{ko-IPA|l=y}}", "[ˈt͡ɕa̠(ː)mɕʰi]", "ipa")

	def test_gajeong_ph(self):
		self.run_test("가정", "{{ko-IPA}}", "가정", "ph")
	def test_gajeong_rr(self):
		self.run_test("가정", "{{ko-IPA}}", "gajeong", "rr")
	def test_gajeong_rrr(self):
		self.run_test("가정", "{{ko-IPA}}", "gajeong", "rrr")
	def test_gajeong_mr(self):
		self.run_test("가정", "{{ko-IPA}}", "kajŏng", "mr")
	def test_gajeong_yr(self):
		self.run_test("가정", "{{ko-IPA}}", "kaceng", "yr")
	def test_gajeong_ipa(self):
		self.run_test("가정", "{{ko-IPA}}", "[ka̠d͡ʑʌ̹ŋ]", "ipa")
	def test_gajeong_ph_1(self):
		self.run_test("가정", "{{ko-IPA|l=y}}", "가(ː)정", "ph")
	def test_gajeong_rr_1(self):
		self.run_test("가정", "{{ko-IPA|l=y}}", "gajeong", "rr")
	def test_gajeong_rrr_1(self):
		self.run_test("가정", "{{ko-IPA|l=y}}", "gajeong", "rrr")
	def test_gajeong_mr_1(self):
		self.run_test("가정", "{{ko-IPA|l=y}}", "kajŏng", "mr")
	def test_gajeong_yr_1(self):
		self.run_test("가정", "{{ko-IPA|l=y}}", "kāceng", "yr")
	def test_gajeong_ipa_1(self):
		self.run_test("가정", "{{ko-IPA|l=y}}", "[ˈka̠(ː)d͡ʑʌ̹ŋ]", "ipa")

	def test_inmul_ph(self):
		self.run_test("인물", "{{ko-IPA}}", "인물", "ph")
	def test_inmul_rr(self):
		self.run_test("인물", "{{ko-IPA}}", "inmul", "rr")
	def test_inmul_rrr(self):
		self.run_test("인물", "{{ko-IPA}}", "inmul", "rrr")
	def test_inmul_mr(self):
		self.run_test("인물", "{{ko-IPA}}", "inmul", "mr")
	def test_inmul_yr(self):
		self.run_test("인물", "{{ko-IPA}}", "inmul", "yr")
	def test_inmul_ipa(self):
		self.run_test("인물", "{{ko-IPA}}", "[inmuɭ]", "ipa")

	def test_saero_ph(self):
		self.run_test("새로", "{{ko-IPA}}", "새로/세로", "ph")
	def test_saero_rr(self):
		self.run_test("새로", "{{ko-IPA}}", "saero", "rr")
	def test_saero_rrr(self):
		self.run_test("새로", "{{ko-IPA}}", "saelo", "rrr")
	def test_saero_mr(self):
		self.run_test("새로", "{{ko-IPA}}", "saero", "mr")
	def test_saero_yr(self):
		self.run_test("새로", "{{ko-IPA}}", "saylo", "yr")
	def test_saero_ipa(self):
		self.run_test("새로", "{{ko-IPA}}", "[sʰɛɾo̞] ~ [sʰe̞ɾo̞]", "ipa")

	def test_eowon_ph(self):
		self.run_test("어원", "{{ko-IPA|l=y}}", "어(ː)원", "ph")
	def test_eowon_rr(self):
		self.run_test("어원", "{{ko-IPA|l=y}}", "eowon", "rr")
	def test_eowon_rrr(self):
		self.run_test("어원", "{{ko-IPA|l=y}}", "eowon", "rrr")
	def test_eowon_mr(self):
		self.run_test("어원", "{{ko-IPA|l=y}}", "ŏwŏn", "mr")
	def test_eowon_yr(self):
		self.run_test("어원", "{{ko-IPA|l=y}}", "ēwen", "yr")
	def test_eowon_ipa(self):
		self.run_test("어원", "{{ko-IPA|l=y}}", "[ˈɘ(ː)wʌ̹n]", "ipa")

	def test_pyogi_ph(self):
		self.run_test("표기", "{{ko-IPA}}", "표기", "ph")
	def test_pyogi_rr(self):
		self.run_test("표기", "{{ko-IPA}}", "pyogi", "rr")
	def test_pyogi_rrr(self):
		self.run_test("표기", "{{ko-IPA}}", "pyogi", "rrr")
	def test_pyogi_mr(self):
		self.run_test("표기", "{{ko-IPA}}", "p'yogi", "mr")
	def test_pyogi_yr(self):
		self.run_test("표기", "{{ko-IPA}}", "phyoki", "yr")
	def test_pyogi_ipa(self):
		self.run_test("표기", "{{ko-IPA}}", "[pʰjoɡi]", "ipa")

	def test_jeommisa_ph(self):
		self.run_test("접미사", "{{ko-IPA}}", "점미사", "ph")
	def test_jeommisa_rr(self):
		self.run_test("접미사", "{{ko-IPA}}", "jeommisa", "rr")
	def test_jeommisa_rrr(self):
		self.run_test("접미사", "{{ko-IPA}}", "jeobmisa", "rrr")
	def test_jeommisa_mr(self):
		self.run_test("접미사", "{{ko-IPA}}", "chŏmmisa", "mr")
	def test_jeommisa_yr(self):
		self.run_test("접미사", "{{ko-IPA}}", "cepmisa", "yr")
	def test_jeommisa_ipa(self):
		self.run_test("접미사", "{{ko-IPA}}", "[t͡ɕʌ̹mmisʰa̠]", "ipa")

	def test_jeommieo_ph(self):
		self.run_test("접미어", "{{ko-IPA}}", "점미어", "ph")
	def test_jeommieo_rr(self):
		self.run_test("접미어", "{{ko-IPA}}", "jeommieo", "rr")
	def test_jeommieo_rrr(self):
		self.run_test("접미어", "{{ko-IPA}}", "jeobmieo", "rrr")
	def test_jeommieo_mr(self):
		self.run_test("접미어", "{{ko-IPA}}", "chŏmmiŏ", "mr")
	def test_jeommieo_yr(self):
		self.run_test("접미어", "{{ko-IPA}}", "cepmie", "yr")
	def test_jeommieo_ipa(self):
		self.run_test("접미어", "{{ko-IPA}}", "[t͡ɕʌ̹mmiʌ̹]", "ipa")

	def test_sogae_ph(self):
		self.run_test("소개", "{{ko-IPA}}", "소개/소게", "ph")
	def test_sogae_rr(self):
		self.run_test("소개", "{{ko-IPA}}", "sogae", "rr")
	def test_sogae_rrr(self):
		self.run_test("소개", "{{ko-IPA}}", "sogae", "rrr")
	def test_sogae_mr(self):
		self.run_test("소개", "{{ko-IPA}}", "sogae", "mr")
	def test_sogae_yr(self):
		self.run_test("소개", "{{ko-IPA}}", "sokay", "yr")
	def test_sogae_ipa(self):
		self.run_test("소개", "{{ko-IPA}}", "[sʰo̞ɡɛ] ~ [sʰo̞ɡe̞]", "ipa")

	def test_sonyeon_ph(self):
		self.run_test("소년", "{{ko-IPA|l=y}}", "소(ː)년", "ph")
	def test_sonyeon_rr(self):
		self.run_test("소년", "{{ko-IPA|l=y}}", "sonyeon", "rr")
	def test_sonyeon_rrr(self):
		self.run_test("소년", "{{ko-IPA|l=y}}", "sonyeon", "rrr")
	def test_sonyeon_mr(self):
		self.run_test("소년", "{{ko-IPA|l=y}}", "sonyŏn", "mr")
	def test_sonyeon_yr(self):
		self.run_test("소년", "{{ko-IPA|l=y}}", "sōnyen", "yr")
	def test_sonyeon_ipa(self):
		self.run_test("소년", "{{ko-IPA|l=y}}", "[ˈsʰo̞(ː)ɲʌ̹n]", "ipa")

	def test_soseolchaek_ph(self):
		self.run_test("소설책", "{{ko-IPA|l=y}}", "소(ː)설책/소(ː)설첵", "ph")
	def test_soseolchaek_rr(self):
		self.run_test("소설책", "{{ko-IPA|l=y}}", "soseolchaek", "rr")
	def test_soseolchaek_rrr(self):
		self.run_test("소설책", "{{ko-IPA|l=y}}", "soseolchaeg", "rrr")
	def test_soseolchaek_mr(self):
		self.run_test("소설책", "{{ko-IPA|l=y}}", "sosŏlch'aek", "mr")
	def test_soseolchaek_yr(self):
		self.run_test("소설책", "{{ko-IPA|l=y}}", "sōselchayk", "yr")
	def test_soseolchaek_ipa(self):
		self.run_test("소설책", "{{ko-IPA|l=y}}", "[ˈsʰo̞(ː)sʰʌ̹ʎt͡ɕʰɛk̚] ~ [ˈsʰo̞(ː)sʰʌ̹ʎt͡ɕʰe̞k̚]", "ipa")

	def test_wonin_ph(self):
		self.run_test("원인", "{{ko-IPA}}", "워닌", "ph")
	def test_wonin_rr(self):
		self.run_test("원인", "{{ko-IPA}}", "wonin", "rr")
	def test_wonin_rrr(self):
		self.run_test("원인", "{{ko-IPA}}", "won'in", "rrr")
	def test_wonin_mr(self):
		self.run_test("원인", "{{ko-IPA}}", "wŏnin", "mr")
	def test_wonin_yr(self):
		self.run_test("원인", "{{ko-IPA}}", "wen.in", "yr")
	def test_wonin_ipa(self):
		self.run_test("원인", "{{ko-IPA}}", "[wʌ̹nin]", "ipa")

	def test_somssi_ph(self):
		self.run_test("솜씨", "{{ko-IPA}}", "솜씨", "ph")
	def test_somssi_rr(self):
		self.run_test("솜씨", "{{ko-IPA}}", "somssi", "rr")
	def test_somssi_rrr(self):
		self.run_test("솜씨", "{{ko-IPA}}", "somssi", "rrr")
	def test_somssi_mr(self):
		self.run_test("솜씨", "{{ko-IPA}}", "somssi", "mr")
	def test_somssi_yr(self):
		self.run_test("솜씨", "{{ko-IPA}}", "somssi", "yr")
	def test_somssi_ipa(self):
		self.run_test("솜씨", "{{ko-IPA}}", "[sʰo̞mɕ͈i]", "ipa")

	def test_suhak_ph(self):
		self.run_test("수학", "{{ko-IPA|l=y}}", "수(ː)학", "ph")
	def test_suhak_rr(self):
		self.run_test("수학", "{{ko-IPA|l=y}}", "suhak", "rr")
	def test_suhak_rrr(self):
		self.run_test("수학", "{{ko-IPA|l=y}}", "suhag", "rrr")
	def test_suhak_mr(self):
		self.run_test("수학", "{{ko-IPA|l=y}}", "suhak", "mr")
	def test_suhak_yr(self):
		self.run_test("수학", "{{ko-IPA|l=y}}", "swūhak", "yr")
	def test_suhak_ipa(self):
		self.run_test("수학", "{{ko-IPA|l=y}}", "[ˈsʰu(ː)ɦa̠k̚]", "ipa")
	def test_suhak_ph_1(self):
		self.run_test("수학", "{{ko-IPA}}", "수학", "ph")
	def test_suhak_rr_1(self):
		self.run_test("수학", "{{ko-IPA}}", "suhak", "rr")
	def test_suhak_rrr_1(self):
		self.run_test("수학", "{{ko-IPA}}", "suhag", "rrr")
	def test_suhak_mr_1(self):
		self.run_test("수학", "{{ko-IPA}}", "suhak", "mr")
	def test_suhak_yr_1(self):
		self.run_test("수학", "{{ko-IPA}}", "swuhak", "yr")
	def test_suhak_ipa_1(self):
		self.run_test("수학", "{{ko-IPA}}", "[sʰuɦa̠k̚]", "ipa")

	def test_patso_ph(self):
		self.run_test("팥소", "{{ko-IPA}}", "팓쏘", "ph")
	def test_patso_rr(self):
		self.run_test("팥소", "{{ko-IPA}}", "patso", "rr")
	def test_patso_rrr(self):
		self.run_test("팥소", "{{ko-IPA}}", "patso", "rrr")
	def test_patso_mr(self):
		self.run_test("팥소", "{{ko-IPA}}", "p'asso", "mr")
	def test_patso_yr(self):
		self.run_test("팥소", "{{ko-IPA}}", "phathso", "yr")
	def test_patso_ipa(self):
		self.run_test("팥소", "{{ko-IPA}}", "[pʰa̠ss͈o̞]", "ipa")

	def test_pat_ph(self):
		self.run_test("팥", "{{ko-IPA}}", "팓", "ph")
	def test_pat_rr(self):
		self.run_test("팥", "{{ko-IPA}}", "pat", "rr")
	def test_pat_rrr(self):
		self.run_test("팥", "{{ko-IPA}}", "pat", "rrr")
	def test_pat_mr(self):
		self.run_test("팥", "{{ko-IPA}}", "p'at", "mr")
	def test_pat_yr(self):
		self.run_test("팥", "{{ko-IPA}}", "phath", "yr")
	def test_pat_ipa(self):
		self.run_test("팥", "{{ko-IPA}}", "[pʰa̠t̚]", "ipa")

	def test_eunhye_ph(self):
		self.run_test("은혜", "{{ko-IPA}}", "은혜/은헤", "ph")
	def test_eunhye_rr(self):
		self.run_test("은혜", "{{ko-IPA}}", "eunhye", "rr")
	def test_eunhye_rrr(self):
		self.run_test("은혜", "{{ko-IPA}}", "eunhye", "rrr")
	def test_eunhye_mr(self):
		self.run_test("은혜", "{{ko-IPA}}", "ŭnhye", "mr")
	def test_eunhye_yr(self):
		self.run_test("은혜", "{{ko-IPA}}", "un.hyey", "yr")
	def test_eunhye_ipa(self):
		self.run_test("은혜", "{{ko-IPA}}", "[ɯnʝe̞] ~ [ɯnɦe̞]", "ipa")

	def test_tongiran_ph(self):
		self.run_test("통일안", "{{ko-IPA|l=y}}", "통(ː)이란", "ph")
	def test_tongiran_rr(self):
		self.run_test("통일안", "{{ko-IPA|l=y}}", "tong'iran", "rr")
	def test_tongiran_rrr(self):
		self.run_test("통일안", "{{ko-IPA|l=y}}", "tong'il'an", "rrr")
	def test_tongiran_mr(self):
		self.run_test("통일안", "{{ko-IPA|l=y}}", "t'ongiran", "mr")
	def test_tongiran_yr(self):
		self.run_test("통일안", "{{ko-IPA|l=y}}", "thōngil.an", "yr")
	def test_tongiran_ipa(self):
		self.run_test("통일안", "{{ko-IPA|l=y}}", "[ˈtʰo̞(ː)ŋiɾa̠n]", "ipa")

	def test_matchumbeop_ph(self):
		self.run_test("맞춤법", "{{ko-IPA|com=2}}", "맏춤뻡", "ph")
	def test_matchumbeop_rr(self):
		self.run_test("맞춤법", "{{ko-IPA|com=2}}", "matchumbeop", "rr")
	def test_matchumbeop_rrr(self):
		self.run_test("맞춤법", "{{ko-IPA|com=2}}", "majchumbeob", "rrr")
	def test_matchumbeop_mr(self):
		self.run_test("맞춤법", "{{ko-IPA|com=2}}", "match'umpŏp", "mr")
	def test_matchumbeop_yr(self):
		self.run_test("맞춤법", "{{ko-IPA|com=2}}", "macchwumqpep", "yr")
	def test_matchumbeop_ipa(self):
		self.run_test("맞춤법", "{{ko-IPA|com=2}}", "[ma̠t̚t͡ɕʰump͈ʌ̹p̚]", "ipa")

	def test_Hunmongjahoe_ph(self):
		self.run_test("훈몽자회", "{{ko-IPA|l=y|cap=y}}", "훈(ː)몽자훼/훈(ː)몽자회", "ph")
	def test_Hunmongjahoe_rr(self):
		self.run_test("훈몽자회", "{{ko-IPA|l=y|cap=y}}", "Hunmongjahoe", "rr")
	def test_Hunmongjahoe_rrr(self):
		self.run_test("훈몽자회", "{{ko-IPA|l=y|cap=y}}", "Hunmongjahoe", "rrr")
	def test_Hunmongjahoe_mr(self):
		self.run_test("훈몽자회", "{{ko-IPA|l=y|cap=y}}", "Hunmongjahoe", "mr")
	def test_Hunmongjahoe_yr(self):
		self.run_test("훈몽자회", "{{ko-IPA|l=y|cap=y}}", "hwūnmongcahoy", "yr")
	def test_Hunmongjahoe_ipa(self):
		self.run_test("훈몽자회", "{{ko-IPA|l=y|cap=y}}", "[ˈɸʷu(ː)nmo̞ŋd͡ʑa̠βwe̞] ~ [ˈɸʷu(ː)nmo̞ŋd͡ʑa̠ɦø̞]", "ipa")

	def test_sigye_ph(self):
		self.run_test("시계", "{{ko-IPA}}", "시계/시게", "ph")
	def test_sigye_rr(self):
		self.run_test("시계", "{{ko-IPA}}", "sigye", "rr")
	def test_sigye_rrr(self):
		self.run_test("시계", "{{ko-IPA}}", "sigye", "rrr")
	def test_sigye_mr(self):
		self.run_test("시계", "{{ko-IPA}}", "sigye", "mr")
	def test_sigye_yr(self):
		self.run_test("시계", "{{ko-IPA}}", "sikyey", "yr")
	def test_sigye_ipa(self):
		self.run_test("시계", "{{ko-IPA}}", "[ɕʰiɡje̞] ~ [ɕʰiɡe̞]", "ipa")

	def test_sigol_ph(self):
		self.run_test("시골", "{{ko-IPA}}", "시골", "ph")
	def test_sigol_rr(self):
		self.run_test("시골", "{{ko-IPA}}", "sigol", "rr")
	def test_sigol_rrr(self):
		self.run_test("시골", "{{ko-IPA}}", "sigol", "rrr")
	def test_sigol_mr(self):
		self.run_test("시골", "{{ko-IPA}}", "sigol", "mr")
	def test_sigol_yr(self):
		self.run_test("시골", "{{ko-IPA}}", "sikol", "yr")
	def test_sigol_ipa(self):
		self.run_test("시골", "{{ko-IPA}}", "[ɕʰiɡo̞ɭ]", "ipa")

	def test_sicheong_ph(self):
		self.run_test("시청", "{{ko-IPA|l=y}}", "시(ː)청", "ph")
	def test_sicheong_rr(self):
		self.run_test("시청", "{{ko-IPA|l=y}}", "sicheong", "rr")
	def test_sicheong_rrr(self):
		self.run_test("시청", "{{ko-IPA|l=y}}", "sicheong", "rrr")
	def test_sicheong_mr(self):
		self.run_test("시청", "{{ko-IPA|l=y}}", "sich'ŏng", "mr")
	def test_sicheong_yr(self):
		self.run_test("시청", "{{ko-IPA|l=y}}", "sī.cheng", "yr")
	def test_sicheong_ipa(self):
		self.run_test("시청", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)t͡ɕʰʌ̹ŋ]", "ipa")

	def test_sikgu_ph(self):
		self.run_test("식구", "{{ko-IPA}}", "식꾸", "ph")
	def test_sikgu_rr(self):
		self.run_test("식구", "{{ko-IPA}}", "sikgu", "rr")
	def test_sikgu_rrr(self):
		self.run_test("식구", "{{ko-IPA}}", "siggu", "rrr")
	def test_sikgu_mr(self):
		self.run_test("식구", "{{ko-IPA}}", "sikku", "mr")
	def test_sikgu_yr(self):
		self.run_test("식구", "{{ko-IPA}}", "sik.kwu", "yr")
	def test_sikgu_ipa(self):
		self.run_test("식구", "{{ko-IPA}}", "[ɕʰik̚k͈u]", "ipa")

	def test_sincheongseo_ph(self):
		self.run_test("신청서", "{{ko-IPA}}", "신청서", "ph")
	def test_sincheongseo_rr(self):
		self.run_test("신청서", "{{ko-IPA}}", "sincheongseo", "rr")
	def test_sincheongseo_rrr(self):
		self.run_test("신청서", "{{ko-IPA}}", "sincheongseo", "rrr")
	def test_sincheongseo_mr(self):
		self.run_test("신청서", "{{ko-IPA}}", "sinch'ŏngsŏ", "mr")
	def test_sincheongseo_yr(self):
		self.run_test("신청서", "{{ko-IPA}}", "sin.chengse", "yr")
	def test_sincheongseo_ipa(self):
		self.run_test("신청서", "{{ko-IPA}}", "[ɕʰiɲt͡ɕʰʌ̹ŋsʰʌ̹]", "ipa")

	def test_silsu_ph(self):
		self.run_test("실수", "{{ko-IPA|com=1}}", "실쑤", "ph")
	def test_silsu_rr(self):
		self.run_test("실수", "{{ko-IPA|com=1}}", "silsu", "rr")
	def test_silsu_rrr(self):
		self.run_test("실수", "{{ko-IPA|com=1}}", "silsu", "rrr")
	def test_silsu_mr(self):
		self.run_test("실수", "{{ko-IPA|com=1}}", "silssu", "mr")
	def test_silsu_yr(self):
		self.run_test("실수", "{{ko-IPA|com=1}}", "silqswu", "yr")
	def test_silsu_ipa(self):
		self.run_test("실수", "{{ko-IPA|com=1}}", "[ɕʰiɭs͈u]", "ipa")

	def test_simbureum_ph(self):
		self.run_test("심부름", "{{ko-IPA|l=y}}", "심(ː)부름", "ph")
	def test_simbureum_rr(self):
		self.run_test("심부름", "{{ko-IPA|l=y}}", "simbureum", "rr")
	def test_simbureum_rrr(self):
		self.run_test("심부름", "{{ko-IPA|l=y}}", "simbuleum", "rrr")
	def test_simbureum_mr(self):
		self.run_test("심부름", "{{ko-IPA|l=y}}", "simburŭm", "mr")
	def test_simbureum_yr(self):
		self.run_test("심부름", "{{ko-IPA|l=y}}", "sīmpulum", "yr")
	def test_simbureum_ipa(self):
		self.run_test("심부름", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)mbuɾɯm]", "ipa")

	def test_junbi_ph(self):
		self.run_test("준비", "{{ko-IPA|l=y}}", "준(ː)비", "ph")
	def test_junbi_rr(self):
		self.run_test("준비", "{{ko-IPA|l=y}}", "junbi", "rr")
	def test_junbi_rrr(self):
		self.run_test("준비", "{{ko-IPA|l=y}}", "junbi", "rrr")
	def test_junbi_mr(self):
		self.run_test("준비", "{{ko-IPA|l=y}}", "chunbi", "mr")
	def test_junbi_yr(self):
		self.run_test("준비", "{{ko-IPA|l=y}}", "cwūnpi", "yr")
	def test_junbi_ipa(self):
		self.run_test("준비", "{{ko-IPA|l=y}}", "[ˈt͡ɕu(ː)nbi]", "ipa")

	def test_ajik_ph(self):
		self.run_test("아직", "{{ko-IPA|a=y}}", "아직", "ph")
	def test_ajik_rr(self):
		self.run_test("아직", "{{ko-IPA|a=y}}", "ajik", "rr")
	def test_ajik_rrr(self):
		self.run_test("아직", "{{ko-IPA|a=y}}", "ajig", "rrr")
	def test_ajik_mr(self):
		self.run_test("아직", "{{ko-IPA|a=y}}", "ajik", "mr")
	def test_ajik_yr(self):
		self.run_test("아직", "{{ko-IPA|a=y}}", "acik", "yr")
	def test_ajik_ipa(self):
		self.run_test("아직", "{{ko-IPA|a=y}}", "[a̠d͡ʑik̚]", "ipa")

	def test_yak_ph(self):
		self.run_test("약", "{{ko-ipa}}", "약", "ph")
	def test_yak_rr(self):
		self.run_test("약", "{{ko-ipa}}", "yak", "rr")
	def test_yak_rrr(self):
		self.run_test("약", "{{ko-ipa}}", "yag", "rrr")
	def test_yak_mr(self):
		self.run_test("약", "{{ko-ipa}}", "yak", "mr")
	def test_yak_yr(self):
		self.run_test("약", "{{ko-ipa}}", "yak", "yr")
	def test_yak_ipa(self):
		self.run_test("약", "{{ko-ipa}}", "[ja̠k̚]", "ipa")

	def test_yaksok_ph(self):
		self.run_test("약속", "{{ko-IPA}}", "약쏙", "ph")
	def test_yaksok_rr(self):
		self.run_test("약속", "{{ko-IPA}}", "yaksok", "rr")
	def test_yaksok_rrr(self):
		self.run_test("약속", "{{ko-IPA}}", "yagsog", "rrr")
	def test_yaksok_mr(self):
		self.run_test("약속", "{{ko-IPA}}", "yaksok", "mr")
	def test_yaksok_yr(self):
		self.run_test("약속", "{{ko-IPA}}", "yak.sok", "yr")
	def test_yaksok_ipa(self):
		self.run_test("약속", "{{ko-IPA}}", "[ja̠ks͈o̞k̚]", "ipa")

	def test_yangmal_ph(self):
		self.run_test("양말", "{{ko-IPA}}", "양말", "ph")
	def test_yangmal_rr(self):
		self.run_test("양말", "{{ko-IPA}}", "yangmal", "rr")
	def test_yangmal_rrr(self):
		self.run_test("양말", "{{ko-IPA}}", "yangmal", "rrr")
	def test_yangmal_mr(self):
		self.run_test("양말", "{{ko-IPA}}", "yangmal", "mr")
	def test_yangmal_yr(self):
		self.run_test("양말", "{{ko-IPA}}", "yangmal", "yr")
	def test_yangmal_ipa(self):
		self.run_test("양말", "{{ko-IPA}}", "[ja̠ŋma̠ɭ]", "ipa")

	def test_eoje_ph(self):
		self.run_test("어제", "{{ko-IPA}}", "어제", "ph")
	def test_eoje_rr(self):
		self.run_test("어제", "{{ko-IPA}}", "eoje", "rr")
	def test_eoje_rrr(self):
		self.run_test("어제", "{{ko-IPA}}", "eoje", "rrr")
	def test_eoje_mr(self):
		self.run_test("어제", "{{ko-IPA}}", "ŏje", "mr")
	def test_eoje_yr(self):
		self.run_test("어제", "{{ko-IPA}}", "ecey", "yr")
	def test_eoje_ipa(self):
		self.run_test("어제", "{{ko-IPA}}", "[ʌ̹d͡ʑe̞]", "ipa")

	def test_yeolheul_ph(self):
		self.run_test("열흘", "{{ko-IPA}}", "열흘", "ph")
	def test_yeolheul_rr(self):
		self.run_test("열흘", "{{ko-IPA}}", "yeolheul", "rr")
	def test_yeolheul_rrr(self):
		self.run_test("열흘", "{{ko-IPA}}", "yeolheul", "rrr")
	def test_yeolheul_mr(self):
		self.run_test("열흘", "{{ko-IPA}}", "yŏrhŭl", "mr")
	def test_yeolheul_yr(self):
		self.run_test("열흘", "{{ko-IPA}}", "yel.hul", "yr")
	def test_yeolheul_ipa(self):
		self.run_test("열흘", "{{ko-IPA}}", "[jʌ̹ɾɣɯɭ]", "ipa")

	def test_yegeum_ph(self):
		self.run_test("예금", "{{ko-IPA|l=y}}", "예(ː)금", "ph")
	def test_yegeum_rr(self):
		self.run_test("예금", "{{ko-IPA|l=y}}", "yegeum", "rr")
	def test_yegeum_rrr(self):
		self.run_test("예금", "{{ko-IPA|l=y}}", "yegeum", "rrr")
	def test_yegeum_mr(self):
		self.run_test("예금", "{{ko-IPA|l=y}}", "yegŭm", "mr")
	def test_yegeum_yr(self):
		self.run_test("예금", "{{ko-IPA|l=y}}", "yēykum", "yr")
	def test_yegeum_ipa(self):
		self.run_test("예금", "{{ko-IPA|l=y}}", "[ˈje̞(ː)ɡɯm]", "ipa")

	def test_yesulpum_ph(self):
		self.run_test("예술품", "{{ko-IPA}}", "예술품", "ph")
	def test_yesulpum_rr(self):
		self.run_test("예술품", "{{ko-IPA}}", "yesulpum", "rr")
	def test_yesulpum_rrr(self):
		self.run_test("예술품", "{{ko-IPA}}", "yesulpum", "rrr")
	def test_yesulpum_mr(self):
		self.run_test("예술품", "{{ko-IPA}}", "yesulp'um", "mr")
	def test_yesulpum_yr(self):
		self.run_test("예술품", "{{ko-IPA}}", "yeyswul.phum", "yr")
	def test_yesulpum_ipa(self):
		self.run_test("예술품", "{{ko-IPA}}", "[je̞sʰuɭpʰum]", "ipa")

	def test_oenjjok_ph(self):
		self.run_test("왼쪽", "{{ko-IPA|l=y}}", "웬(ː)쪽/왼(ː)쪽", "ph")
	def test_oenjjok_rr(self):
		self.run_test("왼쪽", "{{ko-IPA|l=y}}", "oenjjok", "rr")
	def test_oenjjok_rrr(self):
		self.run_test("왼쪽", "{{ko-IPA|l=y}}", "oen'jjog", "rrr")
	def test_oenjjok_mr(self):
		self.run_test("왼쪽", "{{ko-IPA|l=y}}", "oentchok", "mr")
	def test_oenjjok_yr(self):
		self.run_test("왼쪽", "{{ko-IPA|l=y}}", "ōyn.ccok", "yr")
	def test_oenjjok_ipa(self):
		self.run_test("왼쪽", "{{ko-IPA|l=y}}", "[ˈwe̞(ː)ɲt͡ɕ͈o̞k̚] ~ [ˈø̞(ː)ɲt͡ɕ͈o̞k̚]", "ipa")

	def test_wolgeup_ph(self):
		self.run_test("월급", "{{ko-IPA}}", "월급", "ph")
	def test_wolgeup_rr(self):
		self.run_test("월급", "{{ko-IPA}}", "wolgeup", "rr")
	def test_wolgeup_rrr(self):
		self.run_test("월급", "{{ko-IPA}}", "wolgeub", "rrr")
	def test_wolgeup_mr(self):
		self.run_test("월급", "{{ko-IPA}}", "wŏlgŭp", "mr")
	def test_wolgeup_yr(self):
		self.run_test("월급", "{{ko-IPA}}", "wel.kup", "yr")
	def test_wolgeup_ipa(self):
		self.run_test("월급", "{{ko-IPA}}", "[wʌ̹ɭɡɯp̚]", "ipa")


	def test_uihak_ph(self):
		self.run_test("의학", "{{ko-IPA}}", "의학", "ph")
	def test_uihak_rr(self):
		self.run_test("의학", "{{ko-IPA}}", "uihak", "rr")
	def test_uihak_rrr(self):
		self.run_test("의학", "{{ko-IPA}}", "uihag", "rrr")
	def test_uihak_mr(self):
		self.run_test("의학", "{{ko-IPA}}", "ŭihak", "mr")
	def test_uihak_yr(self):
		self.run_test("의학", "{{ko-IPA}}", "uyhak", "yr")
	def test_uihak_ipa(self):
		self.run_test("의학", "{{ko-IPA}}", "[ɰiɦa̠k̚]", "ipa")

	def test_insamcha_ph(self):
		self.run_test("인삼차", "{{ko-ipa}}", "인삼차", "ph")
	def test_insamcha_rr(self):
		self.run_test("인삼차", "{{ko-ipa}}", "insamcha", "rr")
	def test_insamcha_rrr(self):
		self.run_test("인삼차", "{{ko-ipa}}", "insamcha", "rrr")
	def test_insamcha_mr(self):
		self.run_test("인삼차", "{{ko-ipa}}", "insamch'a", "mr")
	def test_insamcha_yr(self):
		self.run_test("인삼차", "{{ko-ipa}}", "insamcha", "yr")
	def test_insamcha_ipa(self):
		self.run_test("인삼차", "{{ko-ipa}}", "[insʰa̠mt͡ɕʰa̠]", "ipa")

	def test_ildeung_ph(self):
		self.run_test("일등", "{{ko-IPA|com=1}}", "일뜽", "ph")
	def test_ildeung_rr(self):
		self.run_test("일등", "{{ko-IPA|com=1}}", "ildeung", "rr")
	def test_ildeung_rrr(self):
		self.run_test("일등", "{{ko-IPA|com=1}}", "ildeung", "rrr")
	def test_ildeung_mr(self):
		self.run_test("일등", "{{ko-IPA|com=1}}", "iltŭng", "mr")
	def test_ildeung_yr(self):
		self.run_test("일등", "{{ko-IPA|com=1}}", "ilqtung", "yr")
	def test_ildeung_ipa(self):
		self.run_test("일등", "{{ko-IPA|com=1}}", "[iɭt͈ɯŋ]", "ipa")

	def test_iljjik_ph(self):
		self.run_test("일찍", "{{ko-IPA}}", "일찍", "ph")
	def test_iljjik_rr(self):
		self.run_test("일찍", "{{ko-IPA}}", "iljjik", "rr")
	def test_iljjik_rrr(self):
		self.run_test("일찍", "{{ko-IPA}}", "iljjig", "rrr")
	def test_iljjik_mr(self):
		self.run_test("일찍", "{{ko-IPA}}", "iltchik", "mr")
	def test_iljjik_yr(self):
		self.run_test("일찍", "{{ko-IPA}}", "ilccik", "yr")
	def test_iljjik_ipa(self):
		self.run_test("일찍", "{{ko-IPA}}", "[iʎt͡ɕ͈ik̚]", "ipa")

	def test_iljjigi_ph(self):
		self.run_test("일찍이", "{{ko-ipa}}", "일찌기", "ph")
	def test_iljjigi_rr(self):
		self.run_test("일찍이", "{{ko-ipa}}", "iljjigi", "rr")
	def test_iljjigi_rrr(self):
		self.run_test("일찍이", "{{ko-ipa}}", "iljjig'i", "rrr")
	def test_iljjigi_mr(self):
		self.run_test("일찍이", "{{ko-ipa}}", "iltchigi", "mr")
	def test_iljjigi_yr(self):
		self.run_test("일찍이", "{{ko-ipa}}", "ilccik.i", "yr")
	def test_iljjigi_ipa(self):
		self.run_test("일찍이", "{{ko-ipa}}", "[iʎt͡ɕ͈iɡi]", "ipa")

	def test_jaranghada_ph(self):
		self.run_test("자랑하다", "{{ko-IPA}}", "자랑하다", "ph")
	def test_jaranghada_rr(self):
		self.run_test("자랑하다", "{{ko-IPA}}", "jaranghada", "rr")
	def test_jaranghada_rrr(self):
		self.run_test("자랑하다", "{{ko-IPA}}", "jalanghada", "rrr")
	def test_jaranghada_mr(self):
		self.run_test("자랑하다", "{{ko-IPA}}", "charanghada", "mr")
	def test_jaranghada_yr(self):
		self.run_test("자랑하다", "{{ko-IPA}}", "calanghata", "yr")
	def test_jaranghada_ipa(self):
		self.run_test("자랑하다", "{{ko-IPA}}", "[t͡ɕa̠ɾa̠ŋɦa̠da̠]", "ipa")

	def test_jasehi_ph(self):
		self.run_test("자세히", "{{ko-IPA}}", "자세히", "ph")
	def test_jasehi_rr(self):
		self.run_test("자세히", "{{ko-IPA}}", "jasehi", "rr")
	def test_jasehi_rrr(self):
		self.run_test("자세히", "{{ko-IPA}}", "jasehi", "rrr")
	def test_jasehi_mr(self):
		self.run_test("자세히", "{{ko-IPA}}", "chasehi", "mr")
	def test_jasehi_yr(self):
		self.run_test("자세히", "{{ko-IPA}}", "caseyhi", "yr")
	def test_jasehi_ipa(self):
		self.run_test("자세히", "{{ko-IPA}}", "[t͡ɕa̠sʰe̞ʝi]", "ipa")

	def test_jam_ph(self):
		self.run_test("잠", "{{ko-IPA}}", "잠", "ph")
	def test_jam_rr(self):
		self.run_test("잠", "{{ko-IPA}}", "jam", "rr")
	def test_jam_rrr(self):
		self.run_test("잠", "{{ko-IPA}}", "jam", "rrr")
	def test_jam_mr(self):
		self.run_test("잠", "{{ko-IPA}}", "cham", "mr")
	def test_jam_yr(self):
		self.run_test("잠", "{{ko-IPA}}", "cam", "yr")
	def test_jam_ipa(self):
		self.run_test("잠", "{{ko-IPA}}", "[t͡ɕa̠m]", "ipa")

	def test_jangma_ph(self):
		self.run_test("장마", "{{ko-IPA}}", "장마", "ph")
	def test_jangma_rr(self):
		self.run_test("장마", "{{ko-IPA}}", "jangma", "rr")
	def test_jangma_rrr(self):
		self.run_test("장마", "{{ko-IPA}}", "jangma", "rrr")
	def test_jangma_mr(self):
		self.run_test("장마", "{{ko-IPA}}", "changma", "mr")
	def test_jangma_yr(self):
		self.run_test("장마", "{{ko-IPA}}", "cangma", "yr")
	def test_jangma_ipa(self):
		self.run_test("장마", "{{ko-IPA}}", "[t͡ɕa̠ŋma̠]", "ipa")

	def test_jaemiitda_ph(self):
		self.run_test("재미있다", "{{ko-IPA}}", "재미읻따/제미읻따", "ph")
	def test_jaemiitda_rr(self):
		self.run_test("재미있다", "{{ko-IPA}}", "jaemiitda", "rr")
	def test_jaemiitda_rrr(self):
		self.run_test("재미있다", "{{ko-IPA}}", "jaemiissda", "rrr")
	def test_jaemiitda_mr(self):
		self.run_test("재미있다", "{{ko-IPA}}", "chaemiitta", "mr")
	def test_jaemiitda_yr(self):
		self.run_test("재미있다", "{{ko-IPA}}", "caymiissta", "yr")
	def test_jaemiitda_ipa(self):
		self.run_test("재미있다", "{{ko-IPA}}", "[t͡ɕɛmiit̚t͈a̠] ~ [t͡ɕe̞miit̚t͈a̠]", "ipa")

	def test_jeongong_ph(self):
		self.run_test("전공", "{{ko-IPA}}", "전공", "ph")
	def test_jeongong_rr(self):
		self.run_test("전공", "{{ko-IPA}}", "jeon'gong", "rr")
	def test_jeongong_rrr(self):
		self.run_test("전공", "{{ko-IPA}}", "jeongong", "rrr")
	def test_jeongong_mr(self):
		self.run_test("전공", "{{ko-IPA}}", "chŏn'gong", "mr")
	def test_jeongong_yr(self):
		self.run_test("전공", "{{ko-IPA}}", "cenkong", "yr")
	def test_jeongong_ipa(self):
		self.run_test("전공", "{{ko-IPA}}", "[t͡ɕʌ̹nɡo̞ŋ]", "ipa")

	def test_jeongnyu_ph(self):
		self.run_test("정류", "{{ko-IPA}}", "정뉴", "ph")
	def test_jeongnyu_rr(self):
		self.run_test("정류", "{{ko-IPA}}", "jeongnyu", "rr")
	def test_jeongnyu_rrr(self):
		self.run_test("정류", "{{ko-IPA}}", "jeonglyu", "rrr")
	def test_jeongnyu_mr(self):
		self.run_test("정류", "{{ko-IPA}}", "chŏngnyu", "mr")
	def test_jeongnyu_yr(self):
		self.run_test("정류", "{{ko-IPA}}", "cenglyu", "yr")
	def test_jeongnyu_ipa(self):
		self.run_test("정류", "{{ko-IPA}}", "[t͡ɕʌ̹ŋɲu]", "ipa")

	def test_jebal_ph(self):
		self.run_test("제발", "{{ko-IPA|l=y}}", "제(ː)발", "ph")
	def test_jebal_rr(self):
		self.run_test("제발", "{{ko-IPA|l=y}}", "jebal", "rr")
	def test_jebal_rrr(self):
		self.run_test("제발", "{{ko-IPA|l=y}}", "jebal", "rrr")
	def test_jebal_mr(self):
		self.run_test("제발", "{{ko-IPA|l=y}}", "chebal", "mr")
	def test_jebal_yr(self):
		self.run_test("제발", "{{ko-IPA|l=y}}", "cēypal", "yr")
	def test_jebal_ipa(self):
		self.run_test("제발", "{{ko-IPA|l=y}}", "[ˈt͡ɕe̞(ː)ba̠ɭ]", "ipa")

	def test_joguk_ph(self):
		self.run_test("조국", "{{ko-IPA}}", "조국", "ph")
	def test_joguk_rr(self):
		self.run_test("조국", "{{ko-IPA}}", "joguk", "rr")
	def test_joguk_rrr(self):
		self.run_test("조국", "{{ko-IPA}}", "jogug", "rrr")
	def test_joguk_mr(self):
		self.run_test("조국", "{{ko-IPA}}", "choguk", "mr")
	def test_joguk_yr(self):
		self.run_test("조국", "{{ko-IPA}}", "cokwuk", "yr")
	def test_joguk_ipa(self):
		self.run_test("조국", "{{ko-IPA}}", "[t͡ɕo̞ɡuk̚]", "ipa")

	def test_jumal_ph(self):
		self.run_test("주말", "{{ko-IPA}}", "주말", "ph")
	def test_jumal_rr(self):
		self.run_test("주말", "{{ko-IPA}}", "jumal", "rr")
	def test_jumal_rrr(self):
		self.run_test("주말", "{{ko-IPA}}", "jumal", "rrr")
	def test_jumal_mr(self):
		self.run_test("주말", "{{ko-IPA}}", "chumal", "mr")
	def test_jumal_yr(self):
		self.run_test("주말", "{{ko-IPA}}", "cwumal", "yr")
	def test_jumal_ipa(self):
		self.run_test("주말", "{{ko-IPA}}", "[t͡ɕuma̠ɭ]", "ipa")

	def test_chakhada_ph(self):
		self.run_test("착하다", "{{ko-IPA}}", "차카다", "ph")
	def test_chakhada_rr(self):
		self.run_test("착하다", "{{ko-IPA}}", "chakhada", "rr")
	def test_chakhada_rrr(self):
		self.run_test("착하다", "{{ko-IPA}}", "chaghada", "rrr")
	def test_chakhada_mr(self):
		self.run_test("착하다", "{{ko-IPA}}", "ch'akhada", "mr")
	def test_chakhada_yr(self):
		self.run_test("착하다", "{{ko-IPA}}", "chak.hata", "yr")
	def test_chakhada_ipa(self):
		self.run_test("착하다", "{{ko-IPA}}", "[t͡ɕʰa̠kʰa̠da̠]", "ipa")

	def test_cheotjjae_ph(self):
		self.run_test("첫째", "{{ko-IPA}}", "첟째/첟쩨", "ph")
	def test_cheotjjae_rr(self):
		self.run_test("첫째", "{{ko-IPA}}", "cheotjjae", "rr")
	def test_cheotjjae_rrr(self):
		self.run_test("첫째", "{{ko-IPA}}", "cheosjjae", "rrr")
	def test_cheotjjae_mr(self):
		self.run_test("첫째", "{{ko-IPA}}", "ch'ŏtchae", "mr")
	def test_cheotjjae_yr(self):
		self.run_test("첫째", "{{ko-IPA}}", "chesccay", "yr")
	def test_cheotjjae_ipa(self):
		self.run_test("첫째", "{{ko-IPA}}", "[t͡ɕʰʌ̹t̚t͡ɕ͈ɛ] ~ [t͡ɕʰʌ̹t̚t͡ɕ͈e̞]", "ipa")

	def test_chungbunhi_ph(self):
		self.run_test("충분히", "{{ko-IPA}}", "충분히", "ph")
	def test_chungbunhi_rr(self):
		self.run_test("충분히", "{{ko-IPA}}", "chungbunhi", "rr")
	def test_chungbunhi_rrr(self):
		self.run_test("충분히", "{{ko-IPA}}", "chungbunhi", "rrr")
	def test_chungbunhi_mr(self):
		self.run_test("충분히", "{{ko-IPA}}", "ch'ungbunhi", "mr")
	def test_chungbunhi_yr(self):
		self.run_test("충분히", "{{ko-IPA}}", "chwungpun.hi", "yr")
	def test_chungbunhi_ipa(self):
		self.run_test("충분히", "{{ko-IPA}}", "[t͡ɕʰuŋbunʝi]", "ipa")

	def test_teukgi_ph(self):
		self.run_test("특기", "{{ko-IPA}}", "특끼", "ph")
	def test_teukgi_rr(self):
		self.run_test("특기", "{{ko-IPA}}", "teukgi", "rr")
	def test_teukgi_rrr(self):
		self.run_test("특기", "{{ko-IPA}}", "teuggi", "rrr")
	def test_teukgi_mr(self):
		self.run_test("특기", "{{ko-IPA}}", "t'ŭkki", "mr")
	def test_teukgi_yr(self):
		self.run_test("특기", "{{ko-IPA}}", "thuk.ki", "yr")
	def test_teukgi_ipa(self):
		self.run_test("특기", "{{ko-IPA}}", "[tʰɯk̚k͈i]", "ipa")

	def test_pyeonji_ph(self):
		self.run_test("편지", "{{ko-IPA|l=y}}", "편(ː)지", "ph")
	def test_pyeonji_rr(self):
		self.run_test("편지", "{{ko-IPA|l=y}}", "pyeonji", "rr")
	def test_pyeonji_rrr(self):
		self.run_test("편지", "{{ko-IPA|l=y}}", "pyeonji", "rrr")
	def test_pyeonji_mr(self):
		self.run_test("편지", "{{ko-IPA|l=y}}", "p'yŏnji", "mr")
	def test_pyeonji_yr(self):
		self.run_test("편지", "{{ko-IPA|l=y}}", "phyēn.ci", "yr")
	def test_pyeonji_ipa(self):
		self.run_test("편지", "{{ko-IPA|l=y}}", "[ˈpʰjɘ(ː)ɲd͡ʑi]", "ipa")

	def test_puk_ph(self):
		self.run_test("푹", "{{ko-IPA}}", "푹", "ph")
	def test_puk_rr(self):
		self.run_test("푹", "{{ko-IPA}}", "puk", "rr")
	def test_puk_rrr(self):
		self.run_test("푹", "{{ko-IPA}}", "pug", "rrr")
	def test_puk_mr(self):
		self.run_test("푹", "{{ko-IPA}}", "p'uk", "mr")
	def test_puk_yr(self):
		self.run_test("푹", "{{ko-IPA}}", "phuk", "yr")
	def test_puk_ipa(self):
		self.run_test("푹", "{{ko-IPA}}", "[pʰuk̚]", "ipa")

	def test_pigonhada_ph(self):
		self.run_test("피곤하다", "{{ko-IPA}}", "피곤하다", "ph")
	def test_pigonhada_rr(self):
		self.run_test("피곤하다", "{{ko-IPA}}", "pigonhada", "rr")
	def test_pigonhada_rrr(self):
		self.run_test("피곤하다", "{{ko-IPA}}", "pigonhada", "rrr")
	def test_pigonhada_mr(self):
		self.run_test("피곤하다", "{{ko-IPA}}", "p'igonhada", "mr")
	def test_pigonhada_yr(self):
		self.run_test("피곤하다", "{{ko-IPA}}", "phikon.hata", "yr")
	def test_pigonhada_ipa(self):
		self.run_test("피곤하다", "{{ko-IPA}}", "[pʰiɡo̞nɦa̠da̠]", "ipa")

	def test_hakgeup_ph(self):
		self.run_test("학급", "{{ko-IPA}}", "학끕", "ph")
	def test_hakgeup_rr(self):
		self.run_test("학급", "{{ko-IPA}}", "hakgeup", "rr")
	def test_hakgeup_rrr(self):
		self.run_test("학급", "{{ko-IPA}}", "haggeub", "rrr")
	def test_hakgeup_mr(self):
		self.run_test("학급", "{{ko-IPA}}", "hakkŭp", "mr")
	def test_hakgeup_yr(self):
		self.run_test("학급", "{{ko-IPA}}", "hak.kup", "yr")
	def test_hakgeup_ipa(self):
		self.run_test("학급", "{{ko-IPA}}", "[ha̠k̚k͈ɯp̚]", "ipa")

	def test_hyanggi_ph(self):
		self.run_test("향기", "{{ko-IPA}}", "향기", "ph")
	def test_hyanggi_rr(self):
		self.run_test("향기", "{{ko-IPA}}", "hyanggi", "rr")
	def test_hyanggi_rrr(self):
		self.run_test("향기", "{{ko-IPA}}", "hyanggi", "rrr")
	def test_hyanggi_mr(self):
		self.run_test("향기", "{{ko-IPA}}", "hyanggi", "mr")
	def test_hyanggi_yr(self):
		self.run_test("향기", "{{ko-IPA}}", "hyangki", "yr")
	def test_hyanggi_ipa(self):
		self.run_test("향기", "{{ko-IPA}}", "[ça̠ŋɡi]", "ipa")

	def test_hoksi_ph(self):
		self.run_test("혹시", "{{ko-IPA}}", "혹씨", "ph")
	def test_hoksi_rr(self):
		self.run_test("혹시", "{{ko-IPA}}", "hoksi", "rr")
	def test_hoksi_rrr(self):
		self.run_test("혹시", "{{ko-IPA}}", "hogsi", "rrr")
	def test_hoksi_mr(self):
		self.run_test("혹시", "{{ko-IPA}}", "hoksi", "mr")
	def test_hoksi_yr(self):
		self.run_test("혹시", "{{ko-IPA}}", "hok.si", "yr")
	def test_hoksi_ipa(self):
		self.run_test("혹시", "{{ko-IPA}}", "[ɸʷo̞kɕ͈i]", "ipa")

	def test_hoehwa_ph(self):
		self.run_test("회화", "{{ko-IPA|l=y}}", "훼(ː)화/회(ː)화", "ph")
	def test_hoehwa_rr(self):
		self.run_test("회화", "{{ko-IPA|l=y}}", "hoehwa", "rr")
	def test_hoehwa_rrr(self):
		self.run_test("회화", "{{ko-IPA|l=y}}", "hoehwa", "rrr")
	def test_hoehwa_mr(self):
		self.run_test("회화", "{{ko-IPA|l=y}}", "hoehwa", "mr")
	def test_hoehwa_yr(self):
		self.run_test("회화", "{{ko-IPA|l=y}}", "hōyhwa", "yr")
	def test_hoehwa_ipa(self):
		self.run_test("회화", "{{ko-IPA|l=y}}", "[ˈɸwe̞(ː)βwa̠] ~ [ˈhø̞(ː)βwa̠]", "ipa")

	def test_himdeulda_ph(self):
		self.run_test("힘들다", "{{ko-IPA}}", "힘들다", "ph")
	def test_himdeulda_rr(self):
		self.run_test("힘들다", "{{ko-IPA}}", "himdeulda", "rr")
	def test_himdeulda_rrr(self):
		self.run_test("힘들다", "{{ko-IPA}}", "himdeulda", "rrr")
	def test_himdeulda_mr(self):
		self.run_test("힘들다", "{{ko-IPA}}", "himdŭlda", "mr")
	def test_himdeulda_yr(self):
		self.run_test("힘들다", "{{ko-IPA}}", "himtulta", "yr")
	def test_himdeulda_ipa(self):
		self.run_test("힘들다", "{{ko-IPA}}", "[çimdɯɭda̠]", "ipa")

	def test_suaekbaek_ph(self):
		self.run_test("수액백", "{{ko-IPA}}", "수액빽/수엑뻭", "ph")
	def test_suaekbaek_rr(self):
		self.run_test("수액백", "{{ko-IPA}}", "suaekbaek", "rr")
	def test_suaekbaek_rrr(self):
		self.run_test("수액백", "{{ko-IPA}}", "suaegbaeg", "rrr")
	def test_suaekbaek_mr(self):
		self.run_test("수액백", "{{ko-IPA}}", "suaekpaek", "mr")
	def test_suaekbaek_yr(self):
		self.run_test("수액백", "{{ko-IPA}}", "swuaykpayk", "yr")
	def test_suaekbaek_ipa(self):
		self.run_test("수액백", "{{ko-IPA}}", "[sʰuɛk̚p͈ɛk̚] ~ [sʰue̞k̚p͈e̞k̚]", "ipa")

	def test_baek_ph(self):
		self.run_test("백", "{{ko-IPA}}", "백/벡", "ph")
	def test_baek_rr(self):
		self.run_test("백", "{{ko-IPA}}", "baek", "rr")
	def test_baek_rrr(self):
		self.run_test("백", "{{ko-IPA}}", "baeg", "rrr")
	def test_baek_mr(self):
		self.run_test("백", "{{ko-IPA}}", "paek", "mr")
	def test_baek_yr(self):
		self.run_test("백", "{{ko-IPA}}", "payk", "yr")
	def test_baek_ipa(self):
		self.run_test("백", "{{ko-IPA}}", "[pɛk̚] ~ [pe̞k̚]", "ipa")
	def test_baek_ph_1(self):
		self.run_test("백", "{{ko-IPA|com=0}}", "빽/뻭", "ph")
	def test_baek_rr_1(self):
		self.run_test("백", "{{ko-IPA|com=0}}", "baek", "rr")
	def test_baek_rrr_1(self):
		self.run_test("백", "{{ko-IPA|com=0}}", "baeg", "rrr")
	def test_baek_mr_1(self):
		self.run_test("백", "{{ko-IPA|com=0}}", "paek", "mr")
	def test_baek_yr_1(self):
		self.run_test("백", "{{ko-IPA|com=0}}", "qpayk", "yr")
	def test_baek_ipa_1(self):
		self.run_test("백", "{{ko-IPA|com=0}}", "[p͈ɛk̚] ~ [p͈e̞k̚]", "ipa")

	def test_chokollet_ph(self):
		self.run_test("초콜렛", "{{ko-IPA}}", "초콜렏", "ph")
	def test_chokollet_rr(self):
		self.run_test("초콜렛", "{{ko-IPA}}", "chokollet", "rr")
	def test_chokollet_rrr(self):
		self.run_test("초콜렛", "{{ko-IPA}}", "chokolles", "rrr")
	def test_chokollet_mr(self):
		self.run_test("초콜렛", "{{ko-IPA}}", "ch'ok'ollet", "mr")
	def test_chokollet_yr(self):
		self.run_test("초콜렛", "{{ko-IPA}}", "cho.kholleys", "yr")
	def test_chokollet_ipa(self):
		self.run_test("초콜렛", "{{ko-IPA}}", "[t͡ɕʰo̞kʰo̞ɭɭe̞t̚]", "ipa")

	def test_geujeokke_ph(self):
		self.run_test("그저께", "{{ko-IPA}}", "그저께", "ph")
	def test_geujeokke_rr(self):
		self.run_test("그저께", "{{ko-IPA}}", "geujeokke", "rr")
	def test_geujeokke_rrr(self):
		self.run_test("그저께", "{{ko-IPA}}", "geujeo'kke", "rrr")
	def test_geujeokke_mr(self):
		self.run_test("그저께", "{{ko-IPA}}", "kŭjŏkke", "mr")
	def test_geujeokke_yr(self):
		self.run_test("그저께", "{{ko-IPA}}", "kuce.kkey", "yr")
	def test_geujeokke_ipa(self):
		self.run_test("그저께", "{{ko-IPA}}", "[kɯd͡ʑʌ̹k͈e̞]", "ipa")

	def test_yeohaeng_ph(self):
		self.run_test("여행", "{{ko-IPA}}", "여행/여헹", "ph")
	def test_yeohaeng_rr(self):
		self.run_test("여행", "{{ko-IPA}}", "yeohaeng", "rr")
	def test_yeohaeng_rrr(self):
		self.run_test("여행", "{{ko-IPA}}", "yeohaeng", "rrr")
	def test_yeohaeng_mr(self):
		self.run_test("여행", "{{ko-IPA}}", "yŏhaeng", "mr")
	def test_yeohaeng_yr(self):
		self.run_test("여행", "{{ko-IPA}}", "yehayng", "yr")
	def test_yeohaeng_ipa(self):
		self.run_test("여행", "{{ko-IPA}}", "[jʌ̹ɦɛŋ] ~ [jʌ̹ɦe̞ŋ]", "ipa")

	def test_maekju_ph(self):
		self.run_test("맥주", "{{ko-IPA}}", "맥쭈/멕쭈", "ph")
	def test_maekju_rr(self):
		self.run_test("맥주", "{{ko-IPA}}", "maekju", "rr")
	def test_maekju_rrr(self):
		self.run_test("맥주", "{{ko-IPA}}", "maegju", "rrr")
	def test_maekju_mr(self):
		self.run_test("맥주", "{{ko-IPA}}", "maekchu", "mr")
	def test_maekju_yr(self):
		self.run_test("맥주", "{{ko-IPA}}", "maykcwu", "yr")
	def test_maekju_ipa(self):
		self.run_test("맥주", "{{ko-IPA}}", "[mɛk̚t͡ɕ͈u] ~ [me̞k̚t͡ɕ͈u]", "ipa")

	def test_gawi_ph(self):
		self.run_test("가위", "{{ko-IPA}}", "가위", "ph")
	def test_gawi_rr(self):
		self.run_test("가위", "{{ko-IPA}}", "gawi", "rr")
	def test_gawi_rrr(self):
		self.run_test("가위", "{{ko-IPA}}", "gawi", "rrr")
	def test_gawi_mr(self):
		self.run_test("가위", "{{ko-IPA}}", "kawi", "mr")
	def test_gawi_yr(self):
		self.run_test("가위", "{{ko-IPA}}", "kawi", "yr")
	def test_gawi_ipa(self):
		self.run_test("가위", "{{ko-IPA}}", "[ka̠ɥi] ~ [ka̠y]", "ipa")
	def test_gawi_ph_1(self):
		self.run_test("가위", "{{ko-IPA}}", "가위", "ph")
	def test_gawi_rr_1(self):
		self.run_test("가위", "{{ko-IPA}}", "gawi", "rr")
	def test_gawi_rrr_1(self):
		self.run_test("가위", "{{ko-IPA}}", "gawi", "rrr")
	def test_gawi_mr_1(self):
		self.run_test("가위", "{{ko-IPA}}", "kawi", "mr")
	def test_gawi_yr_1(self):
		self.run_test("가위", "{{ko-IPA}}", "kawi", "yr")
	def test_gawi_ipa_1(self):
		self.run_test("가위", "{{ko-IPA}}", "[ka̠ɥi] ~ [ka̠y]", "ipa")
	def test_gawi_ph_2(self):
		self.run_test("가위", "{{ko-IPA}}", "가위", "ph")
	def test_gawi_rr_2(self):
		self.run_test("가위", "{{ko-IPA}}", "gawi", "rr")
	def test_gawi_rrr_2(self):
		self.run_test("가위", "{{ko-IPA}}", "gawi", "rrr")
	def test_gawi_mr_2(self):
		self.run_test("가위", "{{ko-IPA}}", "kawi", "mr")
	def test_gawi_yr_2(self):
		self.run_test("가위", "{{ko-IPA}}", "kawi", "yr")
	def test_gawi_ipa_2(self):
		self.run_test("가위", "{{ko-IPA}}", "[ka̠ɥi] ~ [ka̠y]", "ipa")
	def test_gawi_ph_3(self):
		self.run_test("가위", "{{ko-IPA|l=y}}", "가(ː)위", "ph")
	def test_gawi_rr_3(self):
		self.run_test("가위", "{{ko-IPA|l=y}}", "gawi", "rr")
	def test_gawi_rrr_3(self):
		self.run_test("가위", "{{ko-IPA|l=y}}", "gawi", "rrr")
	def test_gawi_mr_3(self):
		self.run_test("가위", "{{ko-IPA|l=y}}", "kawi", "mr")
	def test_gawi_yr_3(self):
		self.run_test("가위", "{{ko-IPA|l=y}}", "kāwi", "yr")
	def test_gawi_ipa_3(self):
		self.run_test("가위", "{{ko-IPA|l=y}}", "[ˈka̠(ː)ɥi] ~ [ˈka̠(ː)y]", "ipa")

	def test_geulpi_ph(self):
		self.run_test("글피", "{{ko-IPA}}", "글피", "ph")
	def test_geulpi_rr(self):
		self.run_test("글피", "{{ko-IPA}}", "geulpi", "rr")
	def test_geulpi_rrr(self):
		self.run_test("글피", "{{ko-IPA}}", "geulpi", "rrr")
	def test_geulpi_mr(self):
		self.run_test("글피", "{{ko-IPA}}", "kŭlp'i", "mr")
	def test_geulpi_yr(self):
		self.run_test("글피", "{{ko-IPA}}", "kul.phi", "yr")
	def test_geulpi_ipa(self):
		self.run_test("글피", "{{ko-IPA}}", "[kɯɭpʰi]", "ipa")

	def test_mari_ph(self):
		self.run_test("마리", "{{ko-IPA}}", "마리", "ph")
	def test_mari_rr(self):
		self.run_test("마리", "{{ko-IPA}}", "mari", "rr")
	def test_mari_rrr(self):
		self.run_test("마리", "{{ko-IPA}}", "mali", "rrr")
	def test_mari_mr(self):
		self.run_test("마리", "{{ko-IPA}}", "mari", "mr")
	def test_mari_yr(self):
		self.run_test("마리", "{{ko-IPA}}", "mali", "yr")
	def test_mari_ipa(self):
		self.run_test("마리", "{{ko-IPA}}", "[ma̠ɾi]", "ipa")

	def test_myeon_ph(self):
		self.run_test("면", "{{ko-ipa}}", "면", "ph")
	def test_myeon_rr(self):
		self.run_test("면", "{{ko-ipa}}", "myeon", "rr")
	def test_myeon_rrr(self):
		self.run_test("면", "{{ko-ipa}}", "myeon", "rrr")
	def test_myeon_mr(self):
		self.run_test("면", "{{ko-ipa}}", "myŏn", "mr")
	def test_myeon_yr(self):
		self.run_test("면", "{{ko-ipa}}", "myen", "yr")
	def test_myeon_ipa(self):
		self.run_test("면", "{{ko-ipa}}", "[mjʌ̹n]", "ipa")
	def test_myeon_ph_1(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "면(ː)", "ph")
	def test_myeon_rr_1(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "myeon", "rr")
	def test_myeon_rrr_1(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "myeon", "rrr")
	def test_myeon_mr_1(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "myŏn", "mr")
	def test_myeon_yr_1(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "myēn", "yr")
	def test_myeon_ipa_1(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "[mjɘ(ː)n]", "ipa")
	def test_myeon_ph_2(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "면(ː)", "ph")
	def test_myeon_rr_2(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "myeon", "rr")
	def test_myeon_rrr_2(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "myeon", "rrr")
	def test_myeon_mr_2(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "myŏn", "mr")
	def test_myeon_yr_2(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "myēn", "yr")
	def test_myeon_ipa_2(self):
		self.run_test("면", "{{ko-ipa|l=y}}", "[mjɘ(ː)n]", "ipa")

	def test_jjeum_ph(self):
		self.run_test("-쯤", "{{ko-IPA}}", "쯤", "ph")
	def test_jjeum_rr(self):
		self.run_test("-쯤", "{{ko-IPA}}", "jjeum", "rr")
	def test_jjeum_rrr(self):
		self.run_test("-쯤", "{{ko-IPA}}", "jjeum", "rrr")
	def test_jjeum_mr(self):
		self.run_test("-쯤", "{{ko-IPA}}", "tchŭm", "mr")
	def test_jjeum_yr(self):
		self.run_test("-쯤", "{{ko-IPA}}", "ccum", "yr")
	def test_jjeum_ipa(self):
		self.run_test("-쯤", "{{ko-IPA}}", "[t͡ɕ͈ɯm]", "ipa")


	def test_jeil_ph(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "제(ː)일", "ph")
	def test_jeil_rr(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "jeil", "rr")
	def test_jeil_rrr(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "jeil", "rrr")
	def test_jeil_mr(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "cheil", "mr")
	def test_jeil_yr(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "cēyil", "yr")
	def test_jeil_ipa(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "[ˈt͡ɕe̞(ː)iɭ]", "ipa")
	def test_jeil_ph_1(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "제(ː)일", "ph")
	def test_jeil_rr_1(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "jeil", "rr")
	def test_jeil_rrr_1(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "jeil", "rrr")
	def test_jeil_mr_1(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "cheil", "mr")
	def test_jeil_yr_1(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "cēyil", "yr")
	def test_jeil_ipa_1(self):
		self.run_test("제일", "{{ko-IPA|l=y}}", "[ˈt͡ɕe̞(ː)iɭ]", "ipa")
	def test_jeil_ph_2(self):
		self.run_test("제일", "{{ko-IPA}}", "제일", "ph")
	def test_jeil_rr_2(self):
		self.run_test("제일", "{{ko-IPA}}", "jeil", "rr")
	def test_jeil_rrr_2(self):
		self.run_test("제일", "{{ko-IPA}}", "jeil", "rrr")
	def test_jeil_mr_2(self):
		self.run_test("제일", "{{ko-IPA}}", "cheil", "mr")
	def test_jeil_yr_2(self):
		self.run_test("제일", "{{ko-IPA}}", "ceyil", "yr")
	def test_jeil_ipa_2(self):
		self.run_test("제일", "{{ko-IPA}}", "[t͡ɕe̞iɭ]", "ipa")


	def test_pihae_ph(self):
		self.run_test("피해", "{{ko-IPA|l=y}}", "피(ː)해/피(ː)헤", "ph")
	def test_pihae_rr(self):
		self.run_test("피해", "{{ko-IPA|l=y}}", "pihae", "rr")
	def test_pihae_rrr(self):
		self.run_test("피해", "{{ko-IPA|l=y}}", "pihae", "rrr")
	def test_pihae_mr(self):
		self.run_test("피해", "{{ko-IPA|l=y}}", "p'ihae", "mr")
	def test_pihae_yr(self):
		self.run_test("피해", "{{ko-IPA|l=y}}", "phīhay", "yr")
	def test_pihae_ipa(self):
		self.run_test("피해", "{{ko-IPA|l=y}}", "[ˈpʰi(ː)ɦɛ] ~ [ˈpʰi(ː)ɦe̞]", "ipa")

	def test_imgeum_ph(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "임(ː)금", "ph")
	def test_imgeum_rr(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "imgeum", "rr")
	def test_imgeum_rrr(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "imgeum", "rrr")
	def test_imgeum_mr(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "imgŭm", "mr")
	def test_imgeum_yr(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "īmkum", "yr")
	def test_imgeum_ipa(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "[ˈi(ː)mɡɯm]", "ipa")
	def test_imgeum_ph_1(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "임(ː)금", "ph")
	def test_imgeum_rr_1(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "imgeum", "rr")
	def test_imgeum_rrr_1(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "imgeum", "rrr")
	def test_imgeum_mr_1(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "imgŭm", "mr")
	def test_imgeum_yr_1(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "īmkum", "yr")
	def test_imgeum_ipa_1(self):
		self.run_test("임금", "{{ko-IPA|l=y}}", "[ˈi(ː)mɡɯm]", "ipa")
	def test_imgeum_ph_2(self):
		self.run_test("임금", "{{ko-IPA|l=n}}", "임금", "ph")
	def test_imgeum_rr_2(self):
		self.run_test("임금", "{{ko-IPA|l=n}}", "imgeum", "rr")
	def test_imgeum_rrr_2(self):
		self.run_test("임금", "{{ko-IPA|l=n}}", "imgeum", "rrr")
	def test_imgeum_mr_2(self):
		self.run_test("임금", "{{ko-IPA|l=n}}", "imgŭm", "mr")
	def test_imgeum_yr_2(self):
		self.run_test("임금", "{{ko-IPA|l=n}}", "imkum", "yr")
	def test_imgeum_ipa_2(self):
		self.run_test("임금", "{{ko-IPA|l=n}}", "[imɡɯm]", "ipa")

	def test_eoseo_ph(self):
		self.run_test("어서", "{{ko-IPA}}", "어서", "ph")
	def test_eoseo_rr(self):
		self.run_test("어서", "{{ko-IPA}}", "eoseo", "rr")
	def test_eoseo_rrr(self):
		self.run_test("어서", "{{ko-IPA}}", "eoseo", "rrr")
	def test_eoseo_mr(self):
		self.run_test("어서", "{{ko-IPA}}", "ŏsŏ", "mr")
	def test_eoseo_yr(self):
		self.run_test("어서", "{{ko-IPA}}", "ese", "yr")
	def test_eoseo_ipa(self):
		self.run_test("어서", "{{ko-IPA}}", "[ʌ̹sʰʌ̹]", "ipa")

	def test_hwanyeong_ph(self):
		self.run_test("환영", "{{ko-IPA}}", "화녕", "ph")
	def test_hwanyeong_rr(self):
		self.run_test("환영", "{{ko-IPA}}", "hwanyeong", "rr")
	def test_hwanyeong_rrr(self):
		self.run_test("환영", "{{ko-IPA}}", "hwan'yeong", "rrr")
	def test_hwanyeong_mr(self):
		self.run_test("환영", "{{ko-IPA}}", "hwanyŏng", "mr")
	def test_hwanyeong_yr(self):
		self.run_test("환영", "{{ko-IPA}}", "hwan.yeng", "yr")
	def test_hwanyeong_ipa(self):
		self.run_test("환영", "{{ko-IPA}}", "[ɸwa̠ɲʌ̹ŋ]", "ipa")
	def test_hwanyeong_ph_1(self):
		self.run_test("환영", "{{ko-ipa|l=y}}", "화(ː)녕", "ph")
	def test_hwanyeong_rr_1(self):
		self.run_test("환영", "{{ko-ipa|l=y}}", "hwanyeong", "rr")
	def test_hwanyeong_rrr_1(self):
		self.run_test("환영", "{{ko-ipa|l=y}}", "hwan'yeong", "rrr")
	def test_hwanyeong_mr_1(self):
		self.run_test("환영", "{{ko-ipa|l=y}}", "hwanyŏng", "mr")
	def test_hwanyeong_yr_1(self):
		self.run_test("환영", "{{ko-ipa|l=y}}", "hwān.yeng", "yr")
	def test_hwanyeong_ipa_1(self):
		self.run_test("환영", "{{ko-ipa|l=y}}", "[ˈɸwa̠(ː)ɲʌ̹ŋ]", "ipa")

	def test_poteol_ph(self):
		self.run_test("포털", "{{ko-IPA}}", "포털", "ph")
	def test_poteol_rr(self):
		self.run_test("포털", "{{ko-IPA}}", "poteol", "rr")
	def test_poteol_rrr(self):
		self.run_test("포털", "{{ko-IPA}}", "poteol", "rrr")
	def test_poteol_mr(self):
		self.run_test("포털", "{{ko-IPA}}", "p'ot'ŏl", "mr")
	def test_poteol_yr(self):
		self.run_test("포털", "{{ko-IPA}}", "pho.thel", "yr")
	def test_poteol_ipa(self):
		self.run_test("포털", "{{ko-IPA}}", "[pʰo̞tʰʌ̹ɭ]", "ipa")

	def test_podoju_ph(self):
		self.run_test("포도주", "{{ko-IPA}}", "포도주", "ph")
	def test_podoju_rr(self):
		self.run_test("포도주", "{{ko-IPA}}", "podoju", "rr")
	def test_podoju_rrr(self):
		self.run_test("포도주", "{{ko-IPA}}", "podoju", "rrr")
	def test_podoju_mr(self):
		self.run_test("포도주", "{{ko-IPA}}", "p'odoju", "mr")
	def test_podoju_yr(self):
		self.run_test("포도주", "{{ko-IPA}}", "photocwu", "yr")
	def test_podoju_ipa(self):
		self.run_test("포도주", "{{ko-IPA}}", "[pʰo̞do̞d͡ʑu]", "ipa")

	def test_daechaek_ph(self):
		self.run_test("대책", "{{ko-IPA|l=y}}", "대(ː)책/데(ː)첵", "ph")
	def test_daechaek_rr(self):
		self.run_test("대책", "{{ko-IPA|l=y}}", "daechaek", "rr")
	def test_daechaek_rrr(self):
		self.run_test("대책", "{{ko-IPA|l=y}}", "daechaeg", "rrr")
	def test_daechaek_mr(self):
		self.run_test("대책", "{{ko-IPA|l=y}}", "taech'aek", "mr")
	def test_daechaek_yr(self):
		self.run_test("대책", "{{ko-IPA|l=y}}", "tāy.chayk", "yr")
	def test_daechaek_ipa(self):
		self.run_test("대책", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)t͡ɕʰɛk̚] ~ [ˈte̞(ː)t͡ɕʰe̞k̚]", "ipa")

	def test_geureomyeon_ph(self):
		self.run_test("그러면", "{{ko-IPA}}", "그러면", "ph")
	def test_geureomyeon_rr(self):
		self.run_test("그러면", "{{ko-IPA}}", "geureomyeon", "rr")
	def test_geureomyeon_rrr(self):
		self.run_test("그러면", "{{ko-IPA}}", "geuleomyeon", "rrr")
	def test_geureomyeon_mr(self):
		self.run_test("그러면", "{{ko-IPA}}", "kŭrŏmyŏn", "mr")
	def test_geureomyeon_yr(self):
		self.run_test("그러면", "{{ko-IPA}}", "kulemyen", "yr")
	def test_geureomyeon_ipa(self):
		self.run_test("그러면", "{{ko-IPA}}", "[kɯɾʌ̹mjʌ̹n]", "ipa")

	def test_geunjeop_ph(self):
		self.run_test("근접", "{{ko-ipa|l=y}}", "근(ː)접", "ph")
	def test_geunjeop_rr(self):
		self.run_test("근접", "{{ko-ipa|l=y}}", "geunjeop", "rr")
	def test_geunjeop_rrr(self):
		self.run_test("근접", "{{ko-ipa|l=y}}", "geunjeob", "rrr")
	def test_geunjeop_mr(self):
		self.run_test("근접", "{{ko-ipa|l=y}}", "kŭnjŏp", "mr")
	def test_geunjeop_yr(self):
		self.run_test("근접", "{{ko-ipa|l=y}}", "kūn.cep", "yr")
	def test_geunjeop_ipa(self):
		self.run_test("근접", "{{ko-ipa|l=y}}", "[ˈkɯ(ː)ɲd͡ʑʌ̹p̚]", "ipa")

	def test_mongmareuda_ph(self):
		self.run_test("목마르다", "{{ko-IPA}}", "몽마르다", "ph")
	def test_mongmareuda_rr(self):
		self.run_test("목마르다", "{{ko-IPA}}", "mongmareuda", "rr")
	def test_mongmareuda_rrr(self):
		self.run_test("목마르다", "{{ko-IPA}}", "mogmaleuda", "rrr")
	def test_mongmareuda_mr(self):
		self.run_test("목마르다", "{{ko-IPA}}", "mongmarŭda", "mr")
	def test_mongmareuda_yr(self):
		self.run_test("목마르다", "{{ko-IPA}}", "mokmaluta", "yr")
	def test_mongmareuda_ipa(self):
		self.run_test("목마르다", "{{ko-IPA}}", "[mo̞ŋma̠ɾɯda̠]", "ipa")

	def test_tteooreuda_ph(self):
		self.run_test("떠오르다", "{{ko-IPA}}", "떠오르다", "ph")
	def test_tteooreuda_rr(self):
		self.run_test("떠오르다", "{{ko-IPA}}", "tteooreuda", "rr")
	def test_tteooreuda_rrr(self):
		self.run_test("떠오르다", "{{ko-IPA}}", "tteooleuda", "rrr")
	def test_tteooreuda_mr(self):
		self.run_test("떠오르다", "{{ko-IPA}}", "ttŏorŭda", "mr")
	def test_tteooreuda_yr(self):
		self.run_test("떠오르다", "{{ko-IPA}}", "tteoluta", "yr")
	def test_tteooreuda_ipa(self):
		self.run_test("떠오르다", "{{ko-IPA}}", "[t͈ʌ̹o̞ɾɯda̠]", "ipa")

	def test_bepulda_ph(self):
		self.run_test("베풀다", "{{ko-IPA}}", "베풀다", "ph")
	def test_bepulda_rr(self):
		self.run_test("베풀다", "{{ko-IPA}}", "bepulda", "rr")
	def test_bepulda_rrr(self):
		self.run_test("베풀다", "{{ko-IPA}}", "bepulda", "rrr")
	def test_bepulda_mr(self):
		self.run_test("베풀다", "{{ko-IPA}}", "pep'ulda", "mr")
	def test_bepulda_yr(self):
		self.run_test("베풀다", "{{ko-IPA}}", "pey.phulta", "yr")
	def test_bepulda_ipa(self):
		self.run_test("베풀다", "{{ko-IPA}}", "[pe̞pʰuɭda̠]", "ipa")

	def test_naemolda_ph(self):
		self.run_test("내몰다", "{{ko-IPA|l=y}}", "내(ː)몰다/네(ː)몰다", "ph")
	def test_naemolda_rr(self):
		self.run_test("내몰다", "{{ko-IPA|l=y}}", "naemolda", "rr")
	def test_naemolda_rrr(self):
		self.run_test("내몰다", "{{ko-IPA|l=y}}", "naemolda", "rrr")
	def test_naemolda_mr(self):
		self.run_test("내몰다", "{{ko-IPA|l=y}}", "naemolda", "mr")
	def test_naemolda_yr(self):
		self.run_test("내몰다", "{{ko-IPA|l=y}}", "nāymolta", "yr")
	def test_naemolda_ipa(self):
		self.run_test("내몰다", "{{ko-IPA|l=y}}", "[ˈnɛ(ː)mo̞ɭda̠] ~ [ˈne̞(ː)mo̞ɭda̠]", "ipa")

	def test_siryeon_ph(self):
		self.run_test("시련", "{{ko-IPA|l=y}}", "시(ː)련", "ph")
	def test_siryeon_rr(self):
		self.run_test("시련", "{{ko-IPA|l=y}}", "siryeon", "rr")
	def test_siryeon_rrr(self):
		self.run_test("시련", "{{ko-IPA|l=y}}", "silyeon", "rrr")
	def test_siryeon_mr(self):
		self.run_test("시련", "{{ko-IPA|l=y}}", "siryŏn", "mr")
	def test_siryeon_yr(self):
		self.run_test("시련", "{{ko-IPA|l=y}}", "sīlyen", "yr")
	def test_siryeon_ipa(self):
		self.run_test("시련", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)ɾjʌ̹n]", "ipa")

	def test_isseo_ph(self):
		self.run_test("있어", "{{ko-IPA}}", "이써", "ph")
	def test_isseo_rr(self):
		self.run_test("있어", "{{ko-IPA}}", "isseo", "rr")
	def test_isseo_rrr(self):
		self.run_test("있어", "{{ko-IPA}}", "iss'eo", "rrr")
	def test_isseo_mr(self):
		self.run_test("있어", "{{ko-IPA}}", "issŏ", "mr")
	def test_isseo_yr(self):
		self.run_test("있어", "{{ko-IPA}}", "iss.e", "yr")
	def test_isseo_ipa(self):
		self.run_test("있어", "{{ko-IPA}}", "[is͈ʌ̹]", "ipa")

	def test_silpae_ph(self):
		self.run_test("실패", "{{ko-IPA}}", "실패/실페", "ph")
	def test_silpae_rr(self):
		self.run_test("실패", "{{ko-IPA}}", "silpae", "rr")
	def test_silpae_rrr(self):
		self.run_test("실패", "{{ko-IPA}}", "silpae", "rrr")
	def test_silpae_mr(self):
		self.run_test("실패", "{{ko-IPA}}", "silp'ae", "mr")
	def test_silpae_yr(self):
		self.run_test("실패", "{{ko-IPA}}", "sil.phay", "yr")
	def test_silpae_ipa(self):
		self.run_test("실패", "{{ko-IPA}}", "[ɕʰiɭpʰɛ] ~ [ɕʰiɭpʰe̞]", "ipa")
	def test_silpae_ph_1(self):
		self.run_test("실패", "{{ko-IPA|l=y}}", "실(ː)패/실(ː)페", "ph")
	def test_silpae_rr_1(self):
		self.run_test("실패", "{{ko-IPA|l=y}}", "silpae", "rr")
	def test_silpae_rrr_1(self):
		self.run_test("실패", "{{ko-IPA|l=y}}", "silpae", "rrr")
	def test_silpae_mr_1(self):
		self.run_test("실패", "{{ko-IPA|l=y}}", "silp'ae", "mr")
	def test_silpae_yr_1(self):
		self.run_test("실패", "{{ko-IPA|l=y}}", "sīl.phay", "yr")
	def test_silpae_ipa_1(self):
		self.run_test("실패", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)ɭpʰɛ] ~ [ˈɕʰi(ː)ɭpʰe̞]", "ipa")

	def test_gijeok_ph(self):
		self.run_test("기적", "{{ko-IPA}}", "기적", "ph")
	def test_gijeok_rr(self):
		self.run_test("기적", "{{ko-IPA}}", "gijeok", "rr")
	def test_gijeok_rrr(self):
		self.run_test("기적", "{{ko-IPA}}", "gijeog", "rrr")
	def test_gijeok_mr(self):
		self.run_test("기적", "{{ko-IPA}}", "kijŏk", "mr")
	def test_gijeok_yr(self):
		self.run_test("기적", "{{ko-IPA}}", "kicek", "yr")
	def test_gijeok_ipa(self):
		self.run_test("기적", "{{ko-IPA}}", "[kid͡ʑʌ̹k̚]", "ipa")

	def test_yeolsoe_ph(self):
		self.run_test("열쇠", "{{ko-IPA|l=y|com=1}}", "열(ː)쒜/열(ː)쐬", "ph")
	def test_yeolsoe_rr(self):
		self.run_test("열쇠", "{{ko-IPA|l=y|com=1}}", "yeolsoe", "rr")
	def test_yeolsoe_rrr(self):
		self.run_test("열쇠", "{{ko-IPA|l=y|com=1}}", "yeolsoe", "rrr")
	def test_yeolsoe_mr(self):
		self.run_test("열쇠", "{{ko-IPA|l=y|com=1}}", "yŏlssoe", "mr")
	def test_yeolsoe_yr(self):
		self.run_test("열쇠", "{{ko-IPA|l=y|com=1}}", "yēlqsoy", "yr")
	def test_yeolsoe_ipa(self):
		self.run_test("열쇠", "{{ko-IPA|l=y|com=1}}", "[ˈjɘ(ː)ɭs͈we̞] ~ [ˈjɘ(ː)ɭs͈ø̞]", "ipa")

	def test_sinnyeom_ph(self):
		self.run_test("신념", "{{ko-IPA|l=y}}", "신(ː)념", "ph")
	def test_sinnyeom_rr(self):
		self.run_test("신념", "{{ko-IPA|l=y}}", "sinnyeom", "rr")
	def test_sinnyeom_rrr(self):
		self.run_test("신념", "{{ko-IPA|l=y}}", "sinnyeom", "rrr")
	def test_sinnyeom_mr(self):
		self.run_test("신념", "{{ko-IPA|l=y}}", "sinnyŏm", "mr")
	def test_sinnyeom_yr(self):
		self.run_test("신념", "{{ko-IPA|l=y}}", "sīnnyem", "yr")
	def test_sinnyeom_ipa(self):
		self.run_test("신념", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)nɲʌ̹m]", "ipa")

	def test_bulgul_ph(self):
		self.run_test("불굴", "{{ko-IPA}}", "불굴", "ph")
	def test_bulgul_rr(self):
		self.run_test("불굴", "{{ko-IPA}}", "bulgul", "rr")
	def test_bulgul_rrr(self):
		self.run_test("불굴", "{{ko-IPA}}", "bulgul", "rrr")
	def test_bulgul_mr(self):
		self.run_test("불굴", "{{ko-IPA}}", "pulgul", "mr")
	def test_bulgul_yr(self):
		self.run_test("불굴", "{{ko-IPA}}", "pul.kwul", "yr")
	def test_bulgul_ipa(self):
		self.run_test("불굴", "{{ko-IPA}}", "[puɭɡuɭ]", "ipa")

	def test_dalpil_ph(self):
		self.run_test("달필", "{{ko-IPA}}", "달필", "ph")
	def test_dalpil_rr(self):
		self.run_test("달필", "{{ko-IPA}}", "dalpil", "rr")
	def test_dalpil_rrr(self):
		self.run_test("달필", "{{ko-IPA}}", "dalpil", "rrr")
	def test_dalpil_mr(self):
		self.run_test("달필", "{{ko-IPA}}", "talp'il", "mr")
	def test_dalpil_yr(self):
		self.run_test("달필", "{{ko-IPA}}", "tal.phil", "yr")
	def test_dalpil_ipa(self):
		self.run_test("달필", "{{ko-IPA}}", "[ta̠ɭpʰiɭ]", "ipa")

	def test_jeongsin_ph(self):
		self.run_test("정신", "{{ko-IPA|a=y}}", "정신", "ph")
	def test_jeongsin_rr(self):
		self.run_test("정신", "{{ko-IPA|a=y}}", "jeongsin", "rr")
	def test_jeongsin_rrr(self):
		self.run_test("정신", "{{ko-IPA|a=y}}", "jeongsin", "rrr")
	def test_jeongsin_mr(self):
		self.run_test("정신", "{{ko-IPA|a=y}}", "chŏngsin", "mr")
	def test_jeongsin_yr(self):
		self.run_test("정신", "{{ko-IPA|a=y}}", "cengsin", "yr")
	def test_jeongsin_ipa(self):
		self.run_test("정신", "{{ko-IPA|a=y}}", "[t͡ɕʌ̹ŋɕʰin]", "ipa")

	def test_balhaengin_ph(self):
		self.run_test("발행인", "{{ko-IPA}}", "발행인/발헹인", "ph")
	def test_balhaengin_rr(self):
		self.run_test("발행인", "{{ko-IPA}}", "balhaeng'in", "rr")
	def test_balhaengin_rrr(self):
		self.run_test("발행인", "{{ko-IPA}}", "balhaeng'in", "rrr")
	def test_balhaengin_mr(self):
		self.run_test("발행인", "{{ko-IPA}}", "parhaengin", "mr")
	def test_balhaengin_yr(self):
		self.run_test("발행인", "{{ko-IPA}}", "pal.hayngin", "yr")
	def test_balhaengin_ipa(self):
		self.run_test("발행인", "{{ko-IPA}}", "[pa̠ɾɦɛŋin] ~ [pa̠ɾɦe̞ŋin]", "ipa")

	def test_balhaengso_ph(self):
		self.run_test("발행소", "{{ko-IPA}}", "발행소/발헹소", "ph")
	def test_balhaengso_rr(self):
		self.run_test("발행소", "{{ko-IPA}}", "balhaengso", "rr")
	def test_balhaengso_rrr(self):
		self.run_test("발행소", "{{ko-IPA}}", "balhaengso", "rrr")
	def test_balhaengso_mr(self):
		self.run_test("발행소", "{{ko-IPA}}", "parhaengso", "mr")
	def test_balhaengso_yr(self):
		self.run_test("발행소", "{{ko-IPA}}", "pal.hayngso", "yr")
	def test_balhaengso_ipa(self):
		self.run_test("발행소", "{{ko-IPA}}", "[pa̠ɾɦɛŋsʰo̞] ~ [pa̠ɾɦe̞ŋsʰo̞]", "ipa")

	def test_jinchwi_ph(self):
		self.run_test("진취", "{{ko-IPA|l=y}}", "진(ː)취", "ph")
	def test_jinchwi_rr(self):
		self.run_test("진취", "{{ko-IPA|l=y}}", "jinchwi", "rr")
	def test_jinchwi_rrr(self):
		self.run_test("진취", "{{ko-IPA|l=y}}", "jinchwi", "rrr")
	def test_jinchwi_mr(self):
		self.run_test("진취", "{{ko-IPA|l=y}}", "chinch'wi", "mr")
	def test_jinchwi_yr(self):
		self.run_test("진취", "{{ko-IPA|l=y}}", "cīn.chwi", "yr")
	def test_jinchwi_ipa(self):
		self.run_test("진취", "{{ko-IPA|l=y}}", "[ˈt͡ɕi(ː)ɲt͡ɕʰɥi] ~ [ˈt͡ɕi(ː)ɲt͡ɕʰy]", "ipa")

	def test_gaecheok_ph(self):
		self.run_test("개척", "{{ko-IPA}}", "개척/게척", "ph")
	def test_gaecheok_rr(self):
		self.run_test("개척", "{{ko-IPA}}", "gaecheok", "rr")
	def test_gaecheok_rrr(self):
		self.run_test("개척", "{{ko-IPA}}", "gaecheog", "rrr")
	def test_gaecheok_mr(self):
		self.run_test("개척", "{{ko-IPA}}", "kaech'ŏk", "mr")
	def test_gaecheok_yr(self):
		self.run_test("개척", "{{ko-IPA}}", "kay.chek", "yr")
	def test_gaecheok_ipa(self):
		self.run_test("개척", "{{ko-IPA}}", "[kɛt͡ɕʰʌ̹k̚] ~ [ke̞t͡ɕʰʌ̹k̚]", "ipa")

	def test_yeoljeong_ph(self):
		self.run_test("열정", "{{ko-IPA|com=1}}", "열쩡", "ph")
	def test_yeoljeong_rr(self):
		self.run_test("열정", "{{ko-IPA|com=1}}", "yeoljeong", "rr")
	def test_yeoljeong_rrr(self):
		self.run_test("열정", "{{ko-IPA|com=1}}", "yeoljeong", "rrr")
	def test_yeoljeong_mr(self):
		self.run_test("열정", "{{ko-IPA|com=1}}", "yŏlchŏng", "mr")
	def test_yeoljeong_yr(self):
		self.run_test("열정", "{{ko-IPA|com=1}}", "yelqceng", "yr")
	def test_yeoljeong_ipa(self):
		self.run_test("열정", "{{ko-IPA|com=1}}", "[jʌ̹ʎt͡ɕ͈ʌ̹ŋ]", "ipa")

	def test_ssotda_ph(self):
		self.run_test("쏟다", "{{ko-IPA}}", "쏟따", "ph")
	def test_ssotda_rr(self):
		self.run_test("쏟다", "{{ko-IPA}}", "ssotda", "rr")
	def test_ssotda_rrr(self):
		self.run_test("쏟다", "{{ko-IPA}}", "ssodda", "rrr")
	def test_ssotda_mr(self):
		self.run_test("쏟다", "{{ko-IPA}}", "ssotta", "mr")
	def test_ssotda_yr(self):
		self.run_test("쏟다", "{{ko-IPA}}", "ssot.ta", "yr")
	def test_ssotda_ipa(self):
		self.run_test("쏟다", "{{ko-IPA}}", "[s͈o̞t̚t͈a̠]", "ipa")

	def test_haksul_ph(self):
		self.run_test("학술", "{{ko-IPA}}", "학쑬", "ph")
	def test_haksul_rr(self):
		self.run_test("학술", "{{ko-IPA}}", "haksul", "rr")
	def test_haksul_rrr(self):
		self.run_test("학술", "{{ko-IPA}}", "hagsul", "rrr")
	def test_haksul_mr(self):
		self.run_test("학술", "{{ko-IPA}}", "haksul", "mr")
	def test_haksul_yr(self):
		self.run_test("학술", "{{ko-IPA}}", "hak.swul", "yr")
	def test_haksul_ipa(self):
		self.run_test("학술", "{{ko-IPA}}", "[ha̠ks͈uɭ]", "ipa")

	def test_changje_ph(self):
		self.run_test("창제", "{{ko-ipa|l=y}}", "창(ː)제", "ph")
	def test_changje_rr(self):
		self.run_test("창제", "{{ko-ipa|l=y}}", "changje", "rr")
	def test_changje_rrr(self):
		self.run_test("창제", "{{ko-ipa|l=y}}", "changje", "rrr")
	def test_changje_mr(self):
		self.run_test("창제", "{{ko-ipa|l=y}}", "ch'angje", "mr")
	def test_changje_yr(self):
		self.run_test("창제", "{{ko-ipa|l=y}}", "chāngcey", "yr")
	def test_changje_ipa(self):
		self.run_test("창제", "{{ko-ipa|l=y}}", "[ˈt͡ɕʰa̠(ː)ŋd͡ʑe̞]", "ipa")

	def test_munja_ph(self):
		self.run_test("문자", "{{ko-IPA|com=1}}", "문짜", "ph")
	def test_munja_rr(self):
		self.run_test("문자", "{{ko-IPA|com=1}}", "munja", "rr")
	def test_munja_rrr(self):
		self.run_test("문자", "{{ko-IPA|com=1}}", "munja", "rrr")
	def test_munja_mr(self):
		self.run_test("문자", "{{ko-IPA|com=1}}", "muncha", "mr")
	def test_munja_yr(self):
		self.run_test("문자", "{{ko-IPA|com=1}}", "munqca", "yr")
	def test_munja_ipa(self):
		self.run_test("문자", "{{ko-IPA|com=1}}", "[muɲt͡ɕ͈a̠]", "ipa")

	def test_baljeon_ph(self):
		self.run_test("발전", "{{ko-IPA|com=1}}", "발쩐", "ph")
	def test_baljeon_rr(self):
		self.run_test("발전", "{{ko-IPA|com=1}}", "baljeon", "rr")
	def test_baljeon_rrr(self):
		self.run_test("발전", "{{ko-IPA|com=1}}", "baljeon", "rrr")
	def test_baljeon_mr(self):
		self.run_test("발전", "{{ko-IPA|com=1}}", "palchŏn", "mr")
	def test_baljeon_yr(self):
		self.run_test("발전", "{{ko-IPA|com=1}}", "palqcen", "yr")
	def test_baljeon_ipa(self):
		self.run_test("발전", "{{ko-IPA|com=1}}", "[pa̠ʎt͡ɕ͈ʌ̹n]", "ipa")

	def test_juro_ph(self):
		self.run_test("주로", "{{ko-IPA}}", "주로", "ph")
	def test_juro_rr(self):
		self.run_test("주로", "{{ko-IPA}}", "juro", "rr")
	def test_juro_rrr(self):
		self.run_test("주로", "{{ko-IPA}}", "julo", "rrr")
	def test_juro_mr(self):
		self.run_test("주로", "{{ko-IPA}}", "churo", "mr")
	def test_juro_yr(self):
		self.run_test("주로", "{{ko-IPA}}", "cwulo", "yr")
	def test_juro_ipa(self):
		self.run_test("주로", "{{ko-IPA}}", "[t͡ɕuɾo̞]", "ipa")

	def test_hwolssin_ph(self):
		self.run_test("훨씬", "{{ko-IPA}}", "훨씬", "ph")
	def test_hwolssin_rr(self):
		self.run_test("훨씬", "{{ko-IPA}}", "hwolssin", "rr")
	def test_hwolssin_rrr(self):
		self.run_test("훨씬", "{{ko-IPA}}", "hwol'ssin", "rrr")
	def test_hwolssin_mr(self):
		self.run_test("훨씬", "{{ko-IPA}}", "hwŏlssin", "mr")
	def test_hwolssin_yr(self):
		self.run_test("훨씬", "{{ko-IPA}}", "hwel.ssin", "yr")
	def test_hwolssin_ipa(self):
		self.run_test("훨씬", "{{ko-IPA}}", "[ɸwʌ̹ɭɕ͈in]", "ipa")

	def test_deureoseoda_ph(self):
		self.run_test("들어서다", "{{ko-IPA}}", "드러서다", "ph")
	def test_deureoseoda_rr(self):
		self.run_test("들어서다", "{{ko-IPA}}", "deureoseoda", "rr")
	def test_deureoseoda_rrr(self):
		self.run_test("들어서다", "{{ko-IPA}}", "deul'eoseoda", "rrr")
	def test_deureoseoda_mr(self):
		self.run_test("들어서다", "{{ko-IPA}}", "tŭrŏsŏda", "mr")
	def test_deureoseoda_yr(self):
		self.run_test("들어서다", "{{ko-IPA}}", "tul.eseta", "yr")
	def test_deureoseoda_ipa(self):
		self.run_test("들어서다", "{{ko-IPA}}", "[tɯɾʌ̹sʰʌ̹da̠]", "ipa")

	def test_charye_ph(self):
		self.run_test("차례", "{{ko-IPA}}", "차례", "ph")
	def test_charye_rr(self):
		self.run_test("차례", "{{ko-IPA}}", "charye", "rr")
	def test_charye_rrr(self):
		self.run_test("차례", "{{ko-IPA}}", "chalye", "rrr")
	def test_charye_mr(self):
		self.run_test("차례", "{{ko-IPA}}", "ch'arye", "mr")
	def test_charye_yr(self):
		self.run_test("차례", "{{ko-IPA}}", "chalyey", "yr")
	def test_charye_ipa(self):
		self.run_test("차례", "{{ko-IPA}}", "[t͡ɕʰa̠ɾje̞]", "ipa")

	def test_geum_ph(self):
		self.run_test("금", "{{ko-IPA}}", "금", "ph")
	def test_geum_rr(self):
		self.run_test("금", "{{ko-IPA}}", "geum", "rr")
	def test_geum_rrr(self):
		self.run_test("금", "{{ko-IPA}}", "geum", "rrr")
	def test_geum_mr(self):
		self.run_test("금", "{{ko-IPA}}", "kŭm", "mr")
	def test_geum_yr(self):
		self.run_test("금", "{{ko-IPA}}", "kum", "yr")
	def test_geum_ipa(self):
		self.run_test("금", "{{ko-IPA}}", "[kɯm]", "ipa")
	def test_geum_ph_1(self):
		self.run_test("금", "{{ko-IPA}}", "금", "ph")
	def test_geum_rr_1(self):
		self.run_test("금", "{{ko-IPA}}", "geum", "rr")
	def test_geum_rrr_1(self):
		self.run_test("금", "{{ko-IPA}}", "geum", "rrr")
	def test_geum_mr_1(self):
		self.run_test("금", "{{ko-IPA}}", "kŭm", "mr")
	def test_geum_yr_1(self):
		self.run_test("금", "{{ko-IPA}}", "kum", "yr")
	def test_geum_ipa_1(self):
		self.run_test("금", "{{ko-IPA}}", "[kɯm]", "ipa")

	def test_gun_ph(self):
		self.run_test("군", "{{ko-IPA}}", "군", "ph")
	def test_gun_rr(self):
		self.run_test("군", "{{ko-IPA}}", "gun", "rr")
	def test_gun_rrr(self):
		self.run_test("군", "{{ko-IPA}}", "gun", "rrr")
	def test_gun_mr(self):
		self.run_test("군", "{{ko-IPA}}", "kun", "mr")
	def test_gun_yr(self):
		self.run_test("군", "{{ko-IPA}}", "kwun", "yr")
	def test_gun_ipa(self):
		self.run_test("군", "{{ko-IPA}}", "[kun]", "ipa")
	def test_gun_ph_1(self):
		self.run_test("군", "{{ko-IPA}}", "군", "ph")
	def test_gun_rr_1(self):
		self.run_test("군", "{{ko-IPA}}", "gun", "rr")
	def test_gun_rrr_1(self):
		self.run_test("군", "{{ko-IPA}}", "gun", "rrr")
	def test_gun_mr_1(self):
		self.run_test("군", "{{ko-IPA}}", "kun", "mr")
	def test_gun_yr_1(self):
		self.run_test("군", "{{ko-IPA}}", "kwun", "yr")
	def test_gun_ipa_1(self):
		self.run_test("군", "{{ko-IPA}}", "[kun]", "ipa")
	def test_gun_ph_2(self):
		self.run_test("군", "{{ko-IPA|l=y}}", "군(ː)", "ph")
	def test_gun_rr_2(self):
		self.run_test("군", "{{ko-IPA|l=y}}", "gun", "rr")
	def test_gun_rrr_2(self):
		self.run_test("군", "{{ko-IPA|l=y}}", "gun", "rrr")
	def test_gun_mr_2(self):
		self.run_test("군", "{{ko-IPA|l=y}}", "kun", "mr")
	def test_gun_yr_2(self):
		self.run_test("군", "{{ko-IPA|l=y}}", "kwūn", "yr")
	def test_gun_ipa_2(self):
		self.run_test("군", "{{ko-IPA|l=y}}", "[ku(ː)n]", "ipa")

	def test_yeolsimhi_ph(self):
		self.run_test("열심히", "{{ko-IPA|com=1}}", "열씸히", "ph")
	def test_yeolsimhi_rr(self):
		self.run_test("열심히", "{{ko-IPA|com=1}}", "yeolsimhi", "rr")
	def test_yeolsimhi_rrr(self):
		self.run_test("열심히", "{{ko-IPA|com=1}}", "yeolsimhi", "rrr")
	def test_yeolsimhi_mr(self):
		self.run_test("열심히", "{{ko-IPA|com=1}}", "yŏlssimhi", "mr")
	def test_yeolsimhi_yr(self):
		self.run_test("열심히", "{{ko-IPA|com=1}}", "yelqsimhi", "yr")
	def test_yeolsimhi_ipa(self):
		self.run_test("열심히", "{{ko-IPA|com=1}}", "[jʌ̹ɭɕ͈imʝi]", "ipa")

	def test_sayong_ph(self):
		self.run_test("사용", "{{ko-IPA|l=y}}", "사(ː)용", "ph")
	def test_sayong_rr(self):
		self.run_test("사용", "{{ko-IPA|l=y}}", "sayong", "rr")
	def test_sayong_rrr(self):
		self.run_test("사용", "{{ko-IPA|l=y}}", "sayong", "rrr")
	def test_sayong_mr(self):
		self.run_test("사용", "{{ko-IPA|l=y}}", "sayong", "mr")
	def test_sayong_yr(self):
		self.run_test("사용", "{{ko-IPA|l=y}}", "sā.yong", "yr")
	def test_sayong_ipa(self):
		self.run_test("사용", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)joŋ]", "ipa")

	def test_uitaeeo_ph(self):
		self.run_test("의태어", "{{ko-IPA}}", "의태어/의테어", "ph")
	def test_uitaeeo_rr(self):
		self.run_test("의태어", "{{ko-IPA}}", "uitaeeo", "rr")
	def test_uitaeeo_rrr(self):
		self.run_test("의태어", "{{ko-IPA}}", "uitaeeo", "rrr")
	def test_uitaeeo_mr(self):
		self.run_test("의태어", "{{ko-IPA}}", "ŭit'aeŏ", "mr")
	def test_uitaeeo_yr(self):
		self.run_test("의태어", "{{ko-IPA}}", "uy.thay.e", "yr")
	def test_uitaeeo_ipa(self):
		self.run_test("의태어", "{{ko-IPA}}", "[ɰitʰɛʌ̹] ~ [ɰitʰe̞ʌ̹]", "ipa")

	def test_jaesan_ph(self):
		self.run_test("재산", "{{ko-IPA}}", "재산/제산", "ph")
	def test_jaesan_rr(self):
		self.run_test("재산", "{{ko-IPA}}", "jaesan", "rr")
	def test_jaesan_rrr(self):
		self.run_test("재산", "{{ko-IPA}}", "jaesan", "rrr")
	def test_jaesan_mr(self):
		self.run_test("재산", "{{ko-IPA}}", "chaesan", "mr")
	def test_jaesan_yr(self):
		self.run_test("재산", "{{ko-IPA}}", "caysan", "yr")
	def test_jaesan_ipa(self):
		self.run_test("재산", "{{ko-IPA}}", "[t͡ɕɛsʰa̠n] ~ [t͡ɕe̞sʰa̠n]", "ipa")

	def test_tim_ph(self):
		self.run_test("팀", "{{ko-IPA}}", "팀", "ph")
	def test_tim_rr(self):
		self.run_test("팀", "{{ko-IPA}}", "tim", "rr")
	def test_tim_rrr(self):
		self.run_test("팀", "{{ko-IPA}}", "tim", "rrr")
	def test_tim_mr(self):
		self.run_test("팀", "{{ko-IPA}}", "t'im", "mr")
	def test_tim_yr(self):
		self.run_test("팀", "{{ko-IPA}}", "thim", "yr")
	def test_tim_ipa(self):
		self.run_test("팀", "{{ko-IPA}}", "[tʰim]", "ipa")

	def test_yakgan_ph(self):
		self.run_test("약간", "{{ko-IPA}}", "약깐", "ph")
	def test_yakgan_rr(self):
		self.run_test("약간", "{{ko-IPA}}", "yakgan", "rr")
	def test_yakgan_rrr(self):
		self.run_test("약간", "{{ko-IPA}}", "yaggan", "rrr")
	def test_yakgan_mr(self):
		self.run_test("약간", "{{ko-IPA}}", "yakkan", "mr")
	def test_yakgan_yr(self):
		self.run_test("약간", "{{ko-IPA}}", "yak.kan", "yr")
	def test_yakgan_ipa(self):
		self.run_test("약간", "{{ko-IPA}}", "[ja̠k̚k͈a̠n]", "ipa")

	def test_jeongwol_ph(self):
		self.run_test("정월", "{{ko-ipa}}", "정월", "ph")
	def test_jeongwol_rr(self):
		self.run_test("정월", "{{ko-ipa}}", "jeong'wol", "rr")
	def test_jeongwol_rrr(self):
		self.run_test("정월", "{{ko-ipa}}", "jeong'wol", "rrr")
	def test_jeongwol_mr(self):
		self.run_test("정월", "{{ko-ipa}}", "chŏngwŏl", "mr")
	def test_jeongwol_yr(self):
		self.run_test("정월", "{{ko-ipa}}", "cengwel", "yr")
	def test_jeongwol_ipa(self):
		self.run_test("정월", "{{ko-ipa}}", "[t͡ɕʌ̹ŋwʌ̹ɭ]", "ipa")

	def test_irwol_ph(self):
		self.run_test("1월", "{{ko-IPA|일월}}", "이뤌", "ph")
	def test_irwol_rr(self):
		self.run_test("1월", "{{ko-IPA|일월}}", "irwol", "rr")
	def test_irwol_rrr(self):
		self.run_test("1월", "{{ko-IPA|일월}}", "il'wol", "rrr")
	def test_irwol_mr(self):
		self.run_test("1월", "{{ko-IPA|일월}}", "irwŏl", "mr")
	def test_irwol_yr(self):
		self.run_test("1월", "{{ko-IPA|일월}}", "il.wel", "yr")
	def test_irwol_ipa(self):
		self.run_test("1월", "{{ko-IPA|일월}}", "[iɾwʌ̹ɭ]", "ipa")

	def test_samwol_ph(self):
		self.run_test("3월", "{{ko-IPA|삼월}}", "사뭘", "ph")
	def test_samwol_rr(self):
		self.run_test("3월", "{{ko-IPA|삼월}}", "samwol", "rr")
	def test_samwol_rrr(self):
		self.run_test("3월", "{{ko-IPA|삼월}}", "sam'wol", "rrr")
	def test_samwol_mr(self):
		self.run_test("3월", "{{ko-IPA|삼월}}", "samwŏl", "mr")
	def test_samwol_yr(self):
		self.run_test("3월", "{{ko-IPA|삼월}}", "sam.wel", "yr")
	def test_samwol_ipa(self):
		self.run_test("3월", "{{ko-IPA|삼월}}", "[sʰa̠mwʌ̹ɭ]", "ipa")

	def test_sawol_ph(self):
		self.run_test("4월", "{{ko-IPA|사월|l=y}}", "사(ː)월", "ph")
	def test_sawol_rr(self):
		self.run_test("4월", "{{ko-IPA|사월|l=y}}", "sawol", "rr")
	def test_sawol_rrr(self):
		self.run_test("4월", "{{ko-IPA|사월|l=y}}", "sawol", "rrr")
	def test_sawol_mr(self):
		self.run_test("4월", "{{ko-IPA|사월|l=y}}", "sawŏl", "mr")
	def test_sawol_yr(self):
		self.run_test("4월", "{{ko-IPA|사월|l=y}}", "sāwel", "yr")
	def test_sawol_ipa(self):
		self.run_test("4월", "{{ko-IPA|사월|l=y}}", "[ˈsʰa̠(ː)wʌ̹ɭ]", "ipa")

	def test_owol_ph(self):
		self.run_test("5월", "{{ko-IPA|오월|l=y}}", "오(ː)월", "ph")
	def test_owol_rr(self):
		self.run_test("5월", "{{ko-IPA|오월|l=y}}", "owol", "rr")
	def test_owol_rrr(self):
		self.run_test("5월", "{{ko-IPA|오월|l=y}}", "owol", "rrr")
	def test_owol_mr(self):
		self.run_test("5월", "{{ko-IPA|오월|l=y}}", "owŏl", "mr")
	def test_owol_yr(self):
		self.run_test("5월", "{{ko-IPA|오월|l=y}}", "ōwel", "yr")
	def test_owol_ipa(self):
		self.run_test("5월", "{{ko-IPA|오월|l=y}}", "[ˈo̞(ː)wʌ̹ɭ]", "ipa")

	def test_yuwol_ph(self):
		self.run_test("6월", "{{ko-IPA|유월}}", "유월", "ph")
	def test_yuwol_rr(self):
		self.run_test("6월", "{{ko-IPA|유월}}", "yuwol", "rr")
	def test_yuwol_rrr(self):
		self.run_test("6월", "{{ko-IPA|유월}}", "yuwol", "rrr")
	def test_yuwol_mr(self):
		self.run_test("6월", "{{ko-IPA|유월}}", "yuwŏl", "mr")
	def test_yuwol_yr(self):
		self.run_test("6월", "{{ko-IPA|유월}}", "yuwel", "yr")
	def test_yuwol_ipa(self):
		self.run_test("6월", "{{ko-IPA|유월}}", "[juwʌ̹ɭ]", "ipa")
	def test_ryuwol_ph_1(self):
		self.run_test("6월", "{{ko-IPA|류월}}", "류월", "ph")
	def test_ryuwol_rr_1(self):
		self.run_test("6월", "{{ko-IPA|류월}}", "ryuwol", "rr")
	def test_ryuwol_rrr_1(self):
		self.run_test("6월", "{{ko-IPA|류월}}", "lyuwol", "rrr")
	def test_ryuwol_mr_1(self):
		self.run_test("6월", "{{ko-IPA|류월}}", "ryuwŏl", "mr")
	def test_ryuwol_yr_1(self):
		self.run_test("6월", "{{ko-IPA|류월}}", "lyuwel", "yr")
	def test_ryuwol_ipa_1(self):
		self.run_test("6월", "{{ko-IPA|류월}}", "[ɾjuwʌ̹ɭ]", "ipa")

	def test_parwol_ph(self):
		self.run_test("8월", "{{ko-IPA|팔월}}", "파뤌", "ph")
	def test_parwol_rr(self):
		self.run_test("8월", "{{ko-IPA|팔월}}", "parwol", "rr")
	def test_parwol_rrr(self):
		self.run_test("8월", "{{ko-IPA|팔월}}", "pal'wol", "rrr")
	def test_parwol_mr(self):
		self.run_test("8월", "{{ko-IPA|팔월}}", "p'arwŏl", "mr")
	def test_parwol_yr(self):
		self.run_test("8월", "{{ko-IPA|팔월}}", "phal.wel", "yr")
	def test_parwol_ipa(self):
		self.run_test("8월", "{{ko-IPA|팔월}}", "[pʰa̠ɾwʌ̹ɭ]", "ipa")

	def test_guwol_ph(self):
		self.run_test("9월", "{{ko-IPA|구월}}", "구월", "ph")
	def test_guwol_rr(self):
		self.run_test("9월", "{{ko-IPA|구월}}", "guwol", "rr")
	def test_guwol_rrr(self):
		self.run_test("9월", "{{ko-IPA|구월}}", "guwol", "rrr")
	def test_guwol_mr(self):
		self.run_test("9월", "{{ko-IPA|구월}}", "kuwŏl", "mr")
	def test_guwol_yr(self):
		self.run_test("9월", "{{ko-IPA|구월}}", "kwuwel", "yr")
	def test_guwol_ipa(self):
		self.run_test("9월", "{{ko-IPA|구월}}", "[kuwʌ̹ɭ]", "ipa")

	def test_siwol_ph(self):
		self.run_test("10월", "{{ko-IPA|시월}}", "시월", "ph")
	def test_siwol_rr(self):
		self.run_test("10월", "{{ko-IPA|시월}}", "siwol", "rr")
	def test_siwol_rrr(self):
		self.run_test("10월", "{{ko-IPA|시월}}", "siwol", "rrr")
	def test_siwol_mr(self):
		self.run_test("10월", "{{ko-IPA|시월}}", "siwŏl", "mr")
	def test_siwol_yr(self):
		self.run_test("10월", "{{ko-IPA|시월}}", "siwel", "yr")
	def test_siwol_ipa(self):
		self.run_test("10월", "{{ko-IPA|시월}}", "[ɕʰiwʌ̹ɭ]", "ipa")

	def test_sibirwol_ph(self):
		self.run_test("11월", "{{ko-IPA|십일월}}", "시비뤌", "ph")
	def test_sibirwol_rr(self):
		self.run_test("11월", "{{ko-IPA|십일월}}", "sibirwol", "rr")
	def test_sibirwol_rrr(self):
		self.run_test("11월", "{{ko-IPA|십일월}}", "sib'il'wol", "rrr")
	def test_sibirwol_mr(self):
		self.run_test("11월", "{{ko-IPA|십일월}}", "sibirwŏl", "mr")
	def test_sibirwol_yr(self):
		self.run_test("11월", "{{ko-IPA|십일월}}", "sip.il.wel", "yr")
	def test_sibirwol_ipa(self):
		self.run_test("11월", "{{ko-IPA|십일월}}", "[ɕʰibiɾwʌ̹ɭ]", "ipa")

	def test_hyum_ph(self):
		self.run_test("흄", "{{ko-IPA}}", "흄", "ph")
	def test_hyum_rr(self):
		self.run_test("흄", "{{ko-IPA}}", "hyum", "rr")
	def test_hyum_rrr(self):
		self.run_test("흄", "{{ko-IPA}}", "hyum", "rrr")
	def test_hyum_mr(self):
		self.run_test("흄", "{{ko-IPA}}", "hyum", "mr")
	def test_hyum_yr(self):
		self.run_test("흄", "{{ko-IPA}}", "hyum", "yr")
	def test_hyum_ipa(self):
		self.run_test("흄", "{{ko-IPA}}", "[çum]", "ipa")

	def test_seoljeong_ph(self):
		self.run_test("설정", "{{ko-IPA|com=1}}", "설쩡", "ph")
	def test_seoljeong_rr(self):
		self.run_test("설정", "{{ko-IPA|com=1}}", "seoljeong", "rr")
	def test_seoljeong_rrr(self):
		self.run_test("설정", "{{ko-IPA|com=1}}", "seoljeong", "rrr")
	def test_seoljeong_mr(self):
		self.run_test("설정", "{{ko-IPA|com=1}}", "sŏlchŏng", "mr")
	def test_seoljeong_yr(self):
		self.run_test("설정", "{{ko-IPA|com=1}}", "selqceng", "yr")
	def test_seoljeong_ipa(self):
		self.run_test("설정", "{{ko-IPA|com=1}}", "[sʰʌ̹ʎt͡ɕ͈ʌ̹ŋ]", "ipa")

	def test_jeojang_ph(self):
		self.run_test("저장", "{{ko-IPA|l=y}}", "저(ː)장", "ph")
	def test_jeojang_rr(self):
		self.run_test("저장", "{{ko-IPA|l=y}}", "jeojang", "rr")
	def test_jeojang_rrr(self):
		self.run_test("저장", "{{ko-IPA|l=y}}", "jeojang", "rrr")
	def test_jeojang_mr(self):
		self.run_test("저장", "{{ko-IPA|l=y}}", "chŏjang", "mr")
	def test_jeojang_yr(self):
		self.run_test("저장", "{{ko-IPA|l=y}}", "cēcang", "yr")
	def test_jeojang_ipa(self):
		self.run_test("저장", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)d͡ʑa̠ŋ]", "ipa")
	def test_Jeojang_ph_1(self):
		self.run_test("저장", "{{ko-IPA|cap=y}}", "저장", "ph")
	def test_Jeojang_rr_1(self):
		self.run_test("저장", "{{ko-IPA|cap=y}}", "Jeojang", "rr")
	def test_Jeojang_rrr_1(self):
		self.run_test("저장", "{{ko-IPA|cap=y}}", "Jeojang", "rrr")
	def test_Jeojang_mr_1(self):
		self.run_test("저장", "{{ko-IPA|cap=y}}", "Chŏjang", "mr")
	def test_Jeojang_yr_1(self):
		self.run_test("저장", "{{ko-IPA|cap=y}}", "cecang", "yr")
	def test_Jeojang_ipa_1(self):
		self.run_test("저장", "{{ko-IPA|cap=y}}", "[t͡ɕʌ̹d͡ʑa̠ŋ]", "ipa")

	def test_jeojanghada_ph(self):
		self.run_test("저장하다", "{{ko-IPA|l=y}}", "저(ː)장하다", "ph")
	def test_jeojanghada_rr(self):
		self.run_test("저장하다", "{{ko-IPA|l=y}}", "jeojanghada", "rr")
	def test_jeojanghada_rrr(self):
		self.run_test("저장하다", "{{ko-IPA|l=y}}", "jeojanghada", "rrr")
	def test_jeojanghada_mr(self):
		self.run_test("저장하다", "{{ko-IPA|l=y}}", "chŏjanghada", "mr")
	def test_jeojanghada_yr(self):
		self.run_test("저장하다", "{{ko-IPA|l=y}}", "cēcanghata", "yr")
	def test_jeojanghada_ipa(self):
		self.run_test("저장하다", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)d͡ʑa̠ŋɦa̠da̠]", "ipa")

	def test_imeil_ph(self):
		self.run_test("이메일", "{{ko-IPA}}", "이메일", "ph")
	def test_imeil_rr(self):
		self.run_test("이메일", "{{ko-IPA}}", "imeil", "rr")
	def test_imeil_rrr(self):
		self.run_test("이메일", "{{ko-IPA}}", "imeil", "rrr")
	def test_imeil_mr(self):
		self.run_test("이메일", "{{ko-IPA}}", "imeil", "mr")
	def test_imeil_yr(self):
		self.run_test("이메일", "{{ko-IPA}}", "imeyil", "yr")
	def test_imeil_ipa(self):
		self.run_test("이메일", "{{ko-IPA}}", "[ime̞iɭ]", "ipa")

	def test_seontaek_ph(self):
		self.run_test("선택", "{{ko-IPA|l=y}}", "선(ː)택/선(ː)텍", "ph")
	def test_seontaek_rr(self):
		self.run_test("선택", "{{ko-IPA|l=y}}", "seontaek", "rr")
	def test_seontaek_rrr(self):
		self.run_test("선택", "{{ko-IPA|l=y}}", "seontaeg", "rrr")
	def test_seontaek_mr(self):
		self.run_test("선택", "{{ko-IPA|l=y}}", "sŏnt'aek", "mr")
	def test_seontaek_yr(self):
		self.run_test("선택", "{{ko-IPA|l=y}}", "sēnthayk", "yr")
	def test_seontaek_ipa(self):
		self.run_test("선택", "{{ko-IPA|l=y}}", "[ˈsʰɘ(ː)ntʰɛk̚] ~ [ˈsʰɘ(ː)ntʰe̞k̚]", "ipa")

	def test_ningneim_ph(self):
		self.run_test("닉네임", "{{ko-IPA}}", "닝네임", "ph")
	def test_ningneim_rr(self):
		self.run_test("닉네임", "{{ko-IPA}}", "ningneim", "rr")
	def test_ningneim_rrr(self):
		self.run_test("닉네임", "{{ko-IPA}}", "nigneim", "rrr")
	def test_ningneim_mr(self):
		self.run_test("닉네임", "{{ko-IPA}}", "ningneim", "mr")
	def test_ningneim_yr(self):
		self.run_test("닉네임", "{{ko-IPA}}", "nikneyim", "yr")
	def test_ningneim_ipa(self):
		self.run_test("닉네임", "{{ko-IPA}}", "[niŋne̞im]", "ipa")

	def test_hyeonjae_ph(self):
		self.run_test("현재", "{{ko-IPA|l=y}}", "현(ː)재/현(ː)제", "ph")
	def test_hyeonjae_rr(self):
		self.run_test("현재", "{{ko-IPA|l=y}}", "hyeonjae", "rr")
	def test_hyeonjae_rrr(self):
		self.run_test("현재", "{{ko-IPA|l=y}}", "hyeonjae", "rrr")
	def test_hyeonjae_mr(self):
		self.run_test("현재", "{{ko-IPA|l=y}}", "hyŏnjae", "mr")
	def test_hyeonjae_yr(self):
		self.run_test("현재", "{{ko-IPA|l=y}}", "hyēn.cay", "yr")
	def test_hyeonjae_ipa(self):
		self.run_test("현재", "{{ko-IPA|l=y}}", "[ˈçɘ(ː)ɲd͡ʑɛ] ~ [ˈçɘ(ː)ɲd͡ʑe̞]", "ipa")

	def test_hwagin_ph(self):
		self.run_test("확인", "{{ko-IPA}}", "화긴", "ph")
	def test_hwagin_rr(self):
		self.run_test("확인", "{{ko-IPA}}", "hwagin", "rr")
	def test_hwagin_rrr(self):
		self.run_test("확인", "{{ko-IPA}}", "hwag'in", "rrr")
	def test_hwagin_mr(self):
		self.run_test("확인", "{{ko-IPA}}", "hwagin", "mr")
	def test_hwagin_yr(self):
		self.run_test("확인", "{{ko-IPA}}", "hwak.in", "yr")
	def test_hwagin_ipa(self):
		self.run_test("확인", "{{ko-IPA}}", "[ɸwa̠ɡin]", "ipa")

	def test_orenji_juseu_ph(self):
		self.run_test("오렌지 주스", "{{ko-IPA}}", "오렌지 주스", "ph")
	def test_orenji_juseu_rr(self):
		self.run_test("오렌지 주스", "{{ko-IPA}}", "orenji juseu", "rr")
	def test_orenji_juseu_rrr(self):
		self.run_test("오렌지 주스", "{{ko-IPA}}", "olenji juseu", "rrr")
	def test_orenji_juseu_mr(self):
		self.run_test("오렌지 주스", "{{ko-IPA}}", "orenji chusŭ", "mr")
	def test_orenji_juseu_yr(self):
		self.run_test("오렌지 주스", "{{ko-IPA}}", "oleyn.ci cwusu", "yr")
	def test_orenji_juseu_ipa(self):
		self.run_test("오렌지 주스", "{{ko-IPA}}", "[o̞ɾe̞ɲd͡ʑi t͡ɕusʰɯ]", "ipa")

	def test_yeong_ph(self):
		self.run_test("영", "{{ko-IPA}}", "영", "ph")
	def test_yeong_rr(self):
		self.run_test("영", "{{ko-IPA}}", "yeong", "rr")
	def test_yeong_rrr(self):
		self.run_test("영", "{{ko-IPA}}", "yeong", "rrr")
	def test_yeong_mr(self):
		self.run_test("영", "{{ko-IPA}}", "yŏng", "mr")
	def test_yeong_yr(self):
		self.run_test("영", "{{ko-IPA}}", "yeng", "yr")
	def test_yeong_ipa(self):
		self.run_test("영", "{{ko-IPA}}", "[jʌ̹ŋ]", "ipa")
	def test_yeong_ph_1(self):
		self.run_test("영", "{{ko-IPA}}", "영", "ph")
	def test_yeong_rr_1(self):
		self.run_test("영", "{{ko-IPA}}", "yeong", "rr")
	def test_yeong_rrr_1(self):
		self.run_test("영", "{{ko-IPA}}", "yeong", "rrr")
	def test_yeong_mr_1(self):
		self.run_test("영", "{{ko-IPA}}", "yŏng", "mr")
	def test_yeong_yr_1(self):
		self.run_test("영", "{{ko-IPA}}", "yeng", "yr")
	def test_yeong_ipa_1(self):
		self.run_test("영", "{{ko-IPA}}", "[jʌ̹ŋ]", "ipa")
	def test_Yeong_ph_2(self):
		self.run_test("영", "{{ko-IPA|cap=y}}", "영", "ph")
	def test_Yeong_rr_2(self):
		self.run_test("영", "{{ko-IPA|cap=y}}", "Yeong", "rr")
	def test_Yeong_rrr_2(self):
		self.run_test("영", "{{ko-IPA|cap=y}}", "Yeong", "rrr")
	def test_Yeong_mr_2(self):
		self.run_test("영", "{{ko-IPA|cap=y}}", "Yŏng", "mr")
	def test_Yeong_yr_2(self):
		self.run_test("영", "{{ko-IPA|cap=y}}", "yeng", "yr")
	def test_Yeong_ipa_2(self):
		self.run_test("영", "{{ko-IPA|cap=y}}", "[jʌ̹ŋ]", "ipa")
	def test_yeong_ph_3(self):
		self.run_test("영", "{{ko-IPA}}", "영", "ph")
	def test_yeong_rr_3(self):
		self.run_test("영", "{{ko-IPA}}", "yeong", "rr")
	def test_yeong_rrr_3(self):
		self.run_test("영", "{{ko-IPA}}", "yeong", "rrr")
	def test_yeong_mr_3(self):
		self.run_test("영", "{{ko-IPA}}", "yŏng", "mr")
	def test_yeong_yr_3(self):
		self.run_test("영", "{{ko-IPA}}", "yeng", "yr")
	def test_yeong_ipa_3(self):
		self.run_test("영", "{{ko-IPA}}", "[jʌ̹ŋ]", "ipa")
	def test_yeong_ph_4(self):
		self.run_test("영", "{{ko-IPA|l=y}}", "영(ː)", "ph")
	def test_yeong_rr_4(self):
		self.run_test("영", "{{ko-IPA|l=y}}", "yeong", "rr")
	def test_yeong_rrr_4(self):
		self.run_test("영", "{{ko-IPA|l=y}}", "yeong", "rrr")
	def test_yeong_mr_4(self):
		self.run_test("영", "{{ko-IPA|l=y}}", "yŏng", "mr")
	def test_yeong_yr_4(self):
		self.run_test("영", "{{ko-IPA|l=y}}", "yēng", "yr")
	def test_yeong_ipa_4(self):
		self.run_test("영", "{{ko-IPA|l=y}}", "[jɘ(ː)ŋ]", "ipa")

	def test_po_ph(self):
		self.run_test("포", "{{ko-ipa}}", "포", "ph")
	def test_po_rr(self):
		self.run_test("포", "{{ko-ipa}}", "po", "rr")
	def test_po_rrr(self):
		self.run_test("포", "{{ko-ipa}}", "po", "rrr")
	def test_po_mr(self):
		self.run_test("포", "{{ko-ipa}}", "p'o", "mr")
	def test_po_yr(self):
		self.run_test("포", "{{ko-ipa}}", "pho", "yr")
	def test_po_ipa(self):
		self.run_test("포", "{{ko-ipa}}", "[pʰo̞]", "ipa")


	def test_jeopsa_ph(self):
		self.run_test("접사", "{{ko-IPA}}", "접싸", "ph")
	def test_jeopsa_rr(self):
		self.run_test("접사", "{{ko-IPA}}", "jeopsa", "rr")
	def test_jeopsa_rrr(self):
		self.run_test("접사", "{{ko-IPA}}", "jeobsa", "rrr")
	def test_jeopsa_mr(self):
		self.run_test("접사", "{{ko-IPA}}", "chŏpsa", "mr")
	def test_jeopsa_yr(self):
		self.run_test("접사", "{{ko-IPA}}", "cep.sa", "yr")
	def test_jeopsa_ipa(self):
		self.run_test("접사", "{{ko-IPA}}", "[t͡ɕʌ̹ps͈a̠]", "ipa")

	def test_daechu_ph(self):
		self.run_test("대추", "{{ko-IPA|l=y}}", "대(ː)추/데(ː)추", "ph")
	def test_daechu_rr(self):
		self.run_test("대추", "{{ko-IPA|l=y}}", "daechu", "rr")
	def test_daechu_rrr(self):
		self.run_test("대추", "{{ko-IPA|l=y}}", "daechu", "rrr")
	def test_daechu_mr(self):
		self.run_test("대추", "{{ko-IPA|l=y}}", "taech'u", "mr")
	def test_daechu_yr(self):
		self.run_test("대추", "{{ko-IPA|l=y}}", "tāy.chwu", "yr")
	def test_daechu_ipa(self):
		self.run_test("대추", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)t͡ɕʰu] ~ [ˈte̞(ː)t͡ɕʰu]", "ipa")

	def test_yeongji_ph(self):
		self.run_test("영지", "{{ko-IPA}}", "영지", "ph")
	def test_yeongji_rr(self):
		self.run_test("영지", "{{ko-IPA}}", "yeongji", "rr")
	def test_yeongji_rrr(self):
		self.run_test("영지", "{{ko-IPA}}", "yeongji", "rrr")
	def test_yeongji_mr(self):
		self.run_test("영지", "{{ko-IPA}}", "yŏngji", "mr")
	def test_yeongji_yr(self):
		self.run_test("영지", "{{ko-IPA}}", "yengci", "yr")
	def test_yeongji_ipa(self):
		self.run_test("영지", "{{ko-IPA}}", "[jʌ̹ŋd͡ʑi]", "ipa")

	def test_cheonmaneyo_ph(self):
		self.run_test("천만에요", "{{ko-IPA|a=천만에요.oga}}", "천마네요", "ph")
	def test_cheonmaneyo_rr(self):
		self.run_test("천만에요", "{{ko-IPA|a=천만에요.oga}}", "cheonmaneyo", "rr")
	def test_cheonmaneyo_rrr(self):
		self.run_test("천만에요", "{{ko-IPA|a=천만에요.oga}}", "cheonman'eyo", "rrr")
	def test_cheonmaneyo_mr(self):
		self.run_test("천만에요", "{{ko-IPA|a=천만에요.oga}}", "ch'ŏnmaneyo", "mr")
	def test_cheonmaneyo_yr(self):
		self.run_test("천만에요", "{{ko-IPA|a=천만에요.oga}}", "chenman.eyyo", "yr")
	def test_cheonmaneyo_ipa(self):
		self.run_test("천만에요", "{{ko-IPA|a=천만에요.oga}}", "[t͡ɕʰʌ̹nma̠ne̞jo]", "ipa")

	def test_samda_ph(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "삼(ː)따", "ph")
	def test_samda_rr(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "samda", "rr")
	def test_samda_rrr(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "samda", "rrr")
	def test_samda_mr(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "samta", "mr")
	def test_samda_yr(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "sāmqta", "yr")
	def test_samda_ipa(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "[ˈsʰa̠(ː)mt͈a̠]", "ipa")
	def test_samda_ph_1(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "삼(ː)따", "ph")
	def test_samda_rr_1(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "samda", "rr")
	def test_samda_rrr_1(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "samda", "rrr")
	def test_samda_mr_1(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "samta", "mr")
	def test_samda_yr_1(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "sāmqta", "yr")
	def test_samda_ipa_1(self):
		self.run_test("삼다", "{{ko-IPA|l=y|com=1}}", "[ˈsʰa̠(ː)mt͈a̠]", "ipa")
	def test_samda_ph_2(self):
		self.run_test("삼다", "{{ko-IPA}}", "삼다", "ph")
	def test_samda_rr_2(self):
		self.run_test("삼다", "{{ko-IPA}}", "samda", "rr")
	def test_samda_rrr_2(self):
		self.run_test("삼다", "{{ko-IPA}}", "samda", "rrr")
	def test_samda_mr_2(self):
		self.run_test("삼다", "{{ko-IPA}}", "samda", "mr")
	def test_samda_yr_2(self):
		self.run_test("삼다", "{{ko-IPA}}", "samta", "yr")
	def test_samda_ipa_2(self):
		self.run_test("삼다", "{{ko-IPA}}", "[sʰa̠mda̠]", "ipa")

	def test_ollagada_ph(self):
		self.run_test("올라가다", "{{ko-IPA}}", "올라가다", "ph")
	def test_ollagada_rr(self):
		self.run_test("올라가다", "{{ko-IPA}}", "ollagada", "rr")
	def test_ollagada_rrr(self):
		self.run_test("올라가다", "{{ko-IPA}}", "ollagada", "rrr")
	def test_ollagada_mr(self):
		self.run_test("올라가다", "{{ko-IPA}}", "ollagada", "mr")
	def test_ollagada_yr(self):
		self.run_test("올라가다", "{{ko-IPA}}", "ollakata", "yr")
	def test_ollagada_ipa(self):
		self.run_test("올라가다", "{{ko-IPA}}", "[o̞ɭɭa̠ɡa̠da̠]", "ipa")

	def test_sasil_ph(self):
		self.run_test("사실", "{{ko-IPA|l=y|a=y}}", "사(ː)실", "ph")
	def test_sasil_rr(self):
		self.run_test("사실", "{{ko-IPA|l=y|a=y}}", "sasil", "rr")
	def test_sasil_rrr(self):
		self.run_test("사실", "{{ko-IPA|l=y|a=y}}", "sasil", "rrr")
	def test_sasil_mr(self):
		self.run_test("사실", "{{ko-IPA|l=y|a=y}}", "sasil", "mr")
	def test_sasil_yr(self):
		self.run_test("사실", "{{ko-IPA|l=y|a=y}}", "sāsil", "yr")
	def test_sasil_ipa(self):
		self.run_test("사실", "{{ko-IPA|l=y|a=y}}", "[ˈsʰa̠(ː)ɕʰiɭ]", "ipa")

	def test_chamoe_ph(self):
		self.run_test("참외", "{{ko-IPA}}", "차뭬/차뫼", "ph")
	def test_chamoe_rr(self):
		self.run_test("참외", "{{ko-IPA}}", "chamoe", "rr")
	def test_chamoe_rrr(self):
		self.run_test("참외", "{{ko-IPA}}", "cham'oe", "rrr")
	def test_chamoe_mr(self):
		self.run_test("참외", "{{ko-IPA}}", "ch'amoe", "mr")
	def test_chamoe_yr(self):
		self.run_test("참외", "{{ko-IPA}}", "cham.oy", "yr")
	def test_chamoe_ipa(self):
		self.run_test("참외", "{{ko-IPA}}", "[t͡ɕʰa̠mwe̞] ~ [t͡ɕʰa̠mø̞]", "ipa")

	def test_geunal_ph(self):
		self.run_test("그날", "{{ko-IPA}}", "그날", "ph")
	def test_geunal_rr(self):
		self.run_test("그날", "{{ko-IPA}}", "geunal", "rr")
	def test_geunal_rrr(self):
		self.run_test("그날", "{{ko-IPA}}", "geunal", "rrr")
	def test_geunal_mr(self):
		self.run_test("그날", "{{ko-IPA}}", "kŭnal", "mr")
	def test_geunal_yr(self):
		self.run_test("그날", "{{ko-IPA}}", "kunal", "yr")
	def test_geunal_ipa(self):
		self.run_test("그날", "{{ko-IPA}}", "[kɯna̠ɭ]", "ipa")

	def test_danghada_ph(self):
		self.run_test("당하다", "{{ko-IPA}}", "당하다", "ph")
	def test_danghada_rr(self):
		self.run_test("당하다", "{{ko-IPA}}", "danghada", "rr")
	def test_danghada_rrr(self):
		self.run_test("당하다", "{{ko-IPA}}", "danghada", "rrr")
	def test_danghada_mr(self):
		self.run_test("당하다", "{{ko-IPA}}", "tanghada", "mr")
	def test_danghada_yr(self):
		self.run_test("당하다", "{{ko-IPA}}", "tanghata", "yr")
	def test_danghada_ipa(self):
		self.run_test("당하다", "{{ko-IPA}}", "[ta̠ŋɦa̠da̠]", "ipa")

	def test_gigan_ph(self):
		self.run_test("기간", "{{ko-IPA}}", "기간", "ph")
	def test_gigan_rr(self):
		self.run_test("기간", "{{ko-IPA}}", "gigan", "rr")
	def test_gigan_rrr(self):
		self.run_test("기간", "{{ko-IPA}}", "gigan", "rrr")
	def test_gigan_mr(self):
		self.run_test("기간", "{{ko-IPA}}", "kigan", "mr")
	def test_gigan_yr(self):
		self.run_test("기간", "{{ko-IPA}}", "kikan", "yr")
	def test_gigan_ipa(self):
		self.run_test("기간", "{{ko-IPA}}", "[kiɡa̠n]", "ipa")

	def test_dambae_ph(self):
		self.run_test("담배", "{{ko-IPA|l=y}}", "담(ː)배/담(ː)베", "ph")
	def test_dambae_rr(self):
		self.run_test("담배", "{{ko-IPA|l=y}}", "dambae", "rr")
	def test_dambae_rrr(self):
		self.run_test("담배", "{{ko-IPA|l=y}}", "dambae", "rrr")
	def test_dambae_mr(self):
		self.run_test("담배", "{{ko-IPA|l=y}}", "tambae", "mr")
	def test_dambae_yr(self):
		self.run_test("담배", "{{ko-IPA|l=y}}", "tāmpay", "yr")
	def test_dambae_ipa(self):
		self.run_test("담배", "{{ko-IPA|l=y}}", "[ˈta̠(ː)mbɛ] ~ [ˈta̠(ː)mbe̞]", "ipa")

	def test_ireukida_ph(self):
		self.run_test("일으키다", "{{ko-IPA}}", "이르키다", "ph")
	def test_ireukida_rr(self):
		self.run_test("일으키다", "{{ko-IPA}}", "ireukida", "rr")
	def test_ireukida_rrr(self):
		self.run_test("일으키다", "{{ko-IPA}}", "il'eukida", "rrr")
	def test_ireukida_mr(self):
		self.run_test("일으키다", "{{ko-IPA}}", "irŭk'ida", "mr")
	def test_ireukida_yr(self):
		self.run_test("일으키다", "{{ko-IPA}}", "il.u.khita", "yr")
	def test_ireukida_ipa(self):
		self.run_test("일으키다", "{{ko-IPA}}", "[iɾɯcçida̠]", "ipa")

	def test_jojik_ph(self):
		self.run_test("조직", "{{ko-IPA}}", "조직", "ph")
	def test_jojik_rr(self):
		self.run_test("조직", "{{ko-IPA}}", "jojik", "rr")
	def test_jojik_rrr(self):
		self.run_test("조직", "{{ko-IPA}}", "jojig", "rrr")
	def test_jojik_mr(self):
		self.run_test("조직", "{{ko-IPA}}", "chojik", "mr")
	def test_jojik_yr(self):
		self.run_test("조직", "{{ko-IPA}}", "cocik", "yr")
	def test_jojik_ipa(self):
		self.run_test("조직", "{{ko-IPA}}", "[t͡ɕo̞d͡ʑik̚]", "ipa")

	def test_gongjang_ph(self):
		self.run_test("공장", "{{ko-IPA}}", "공장", "ph")
	def test_gongjang_rr(self):
		self.run_test("공장", "{{ko-IPA}}", "gongjang", "rr")
	def test_gongjang_rrr(self):
		self.run_test("공장", "{{ko-IPA}}", "gongjang", "rrr")
	def test_gongjang_mr(self):
		self.run_test("공장", "{{ko-IPA}}", "kongjang", "mr")
	def test_gongjang_yr(self):
		self.run_test("공장", "{{ko-IPA}}", "kongcang", "yr")
	def test_gongjang_ipa(self):
		self.run_test("공장", "{{ko-IPA}}", "[ko̞ŋd͡ʑa̠ŋ]", "ipa")
	def test_gongjang_ph_1(self):
		self.run_test("공장", "{{ko-IPA}}", "공장", "ph")
	def test_gongjang_rr_1(self):
		self.run_test("공장", "{{ko-IPA}}", "gongjang", "rr")
	def test_gongjang_rrr_1(self):
		self.run_test("공장", "{{ko-IPA}}", "gongjang", "rrr")
	def test_gongjang_mr_1(self):
		self.run_test("공장", "{{ko-IPA}}", "kongjang", "mr")
	def test_gongjang_yr_1(self):
		self.run_test("공장", "{{ko-IPA}}", "kongcang", "yr")
	def test_gongjang_ipa_1(self):
		self.run_test("공장", "{{ko-IPA}}", "[ko̞ŋd͡ʑa̠ŋ]", "ipa")

	def test_beolsseo_ph(self):
		self.run_test("벌써", "{{ko-IPA}}", "벌써", "ph")
	def test_beolsseo_rr(self):
		self.run_test("벌써", "{{ko-IPA}}", "beolsseo", "rr")
	def test_beolsseo_rrr(self):
		self.run_test("벌써", "{{ko-IPA}}", "beol'sseo", "rrr")
	def test_beolsseo_mr(self):
		self.run_test("벌써", "{{ko-IPA}}", "pŏlssŏ", "mr")
	def test_beolsseo_yr(self):
		self.run_test("벌써", "{{ko-IPA}}", "pel.sse", "yr")
	def test_beolsseo_ipa(self):
		self.run_test("벌써", "{{ko-IPA}}", "[pʌ̹ɭs͈ʌ̹]", "ipa")

	def test_jeulgida_ph(self):
		self.run_test("즐기다", "{{ko-IPA}}", "즐기다", "ph")
	def test_jeulgida_rr(self):
		self.run_test("즐기다", "{{ko-IPA}}", "jeulgida", "rr")
	def test_jeulgida_rrr(self):
		self.run_test("즐기다", "{{ko-IPA}}", "jeulgida", "rrr")
	def test_jeulgida_mr(self):
		self.run_test("즐기다", "{{ko-IPA}}", "chŭlgida", "mr")
	def test_jeulgida_yr(self):
		self.run_test("즐기다", "{{ko-IPA}}", "cul.kita", "yr")
	def test_jeulgida_ipa(self):
		self.run_test("즐기다", "{{ko-IPA}}", "[t͡ɕɯɭɡida̠]", "ipa")

	def test_meolda_ph(self):
		self.run_test("멀다", "{{ko-IPA|l=y}}", "멀(ː)다", "ph")
	def test_meolda_rr(self):
		self.run_test("멀다", "{{ko-IPA|l=y}}", "meolda", "rr")
	def test_meolda_rrr(self):
		self.run_test("멀다", "{{ko-IPA|l=y}}", "meolda", "rrr")
	def test_meolda_mr(self):
		self.run_test("멀다", "{{ko-IPA|l=y}}", "mŏlda", "mr")
	def test_meolda_yr(self):
		self.run_test("멀다", "{{ko-IPA|l=y}}", "mēlta", "yr")
	def test_meolda_ipa(self):
		self.run_test("멀다", "{{ko-IPA|l=y}}", "[ˈmɘ(ː)ɭda̠]", "ipa")

	def test_ilban_ph(self):
		self.run_test("일반", "{{ko-IPA}}", "일반", "ph")
	def test_ilban_rr(self):
		self.run_test("일반", "{{ko-IPA}}", "ilban", "rr")
	def test_ilban_rrr(self):
		self.run_test("일반", "{{ko-IPA}}", "ilban", "rrr")
	def test_ilban_mr(self):
		self.run_test("일반", "{{ko-IPA}}", "ilban", "mr")
	def test_ilban_yr(self):
		self.run_test("일반", "{{ko-IPA}}", "il.pan", "yr")
	def test_ilban_ipa(self):
		self.run_test("일반", "{{ko-IPA}}", "[iɭba̠n]", "ipa")

	def test_daehwa_ph(self):
		self.run_test("대화", "{{ko-IPA|l=y}}", "대(ː)화/데(ː)화", "ph")
	def test_daehwa_rr(self):
		self.run_test("대화", "{{ko-IPA|l=y}}", "daehwa", "rr")
	def test_daehwa_rrr(self):
		self.run_test("대화", "{{ko-IPA|l=y}}", "daehwa", "rrr")
	def test_daehwa_mr(self):
		self.run_test("대화", "{{ko-IPA|l=y}}", "taehwa", "mr")
	def test_daehwa_yr(self):
		self.run_test("대화", "{{ko-IPA|l=y}}", "tāyhwa", "yr")
	def test_daehwa_ipa(self):
		self.run_test("대화", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)βwa̠] ~ [ˈte̞(ː)βwa̠]", "ipa")

	def test_dalli_ph(self):
		self.run_test("달리", "{{ko-IPA}}", "달리", "ph")
	def test_dalli_rr(self):
		self.run_test("달리", "{{ko-IPA}}", "dalli", "rr")
	def test_dalli_rrr(self):
		self.run_test("달리", "{{ko-IPA}}", "dalli", "rrr")
	def test_dalli_mr(self):
		self.run_test("달리", "{{ko-IPA}}", "talli", "mr")
	def test_dalli_yr(self):
		self.run_test("달리", "{{ko-IPA}}", "talli", "yr")
	def test_dalli_ipa(self):
		self.run_test("달리", "{{ko-IPA}}", "[ta̠ʎʎi]", "ipa")

	def test_buchida_ph(self):
		self.run_test("붙이다", "{{ko-IPA}}", "부치다", "ph")
	def test_buchida_rr(self):
		self.run_test("붙이다", "{{ko-IPA}}", "buchida", "rr")
	def test_buchida_rrr(self):
		self.run_test("붙이다", "{{ko-IPA}}", "but'ida", "rrr")
	def test_buchida_mr(self):
		self.run_test("붙이다", "{{ko-IPA}}", "puch'ida", "mr")
	def test_buchida_yr(self):
		self.run_test("붙이다", "{{ko-IPA}}", "puth.ita", "yr")
	def test_buchida_ipa(self):
		self.run_test("붙이다", "{{ko-IPA}}", "[put͡ɕʰida̠]", "ipa")

	def test_neul_ph(self):
		self.run_test("늘", "{{ko-IPA}}", "늘", "ph")
	def test_neul_rr(self):
		self.run_test("늘", "{{ko-IPA}}", "neul", "rr")
	def test_neul_rrr(self):
		self.run_test("늘", "{{ko-IPA}}", "neul", "rrr")
	def test_neul_mr(self):
		self.run_test("늘", "{{ko-IPA}}", "nŭl", "mr")
	def test_neul_yr(self):
		self.run_test("늘", "{{ko-IPA}}", "nul", "yr")
	def test_neul_ipa(self):
		self.run_test("늘", "{{ko-IPA}}", "[nɯɭ]", "ipa")

	def test_machida_ph(self):
		self.run_test("마치다", "{{ko-IPA}}", "마치다", "ph")
	def test_machida_rr(self):
		self.run_test("마치다", "{{ko-IPA}}", "machida", "rr")
	def test_machida_rrr(self):
		self.run_test("마치다", "{{ko-IPA}}", "machida", "rrr")
	def test_machida_mr(self):
		self.run_test("마치다", "{{ko-IPA}}", "mach'ida", "mr")
	def test_machida_yr(self):
		self.run_test("마치다", "{{ko-IPA}}", "ma.chita", "yr")
	def test_machida_ipa(self):
		self.run_test("마치다", "{{ko-IPA}}", "[ma̠t͡ɕʰida̠]", "ipa")

	def test_hwanja_ph(self):
		self.run_test("환자", "{{ko-IPA|l=y}}", "환(ː)자", "ph")
	def test_hwanja_rr(self):
		self.run_test("환자", "{{ko-IPA|l=y}}", "hwanja", "rr")
	def test_hwanja_rrr(self):
		self.run_test("환자", "{{ko-IPA|l=y}}", "hwanja", "rrr")
	def test_hwanja_mr(self):
		self.run_test("환자", "{{ko-IPA|l=y}}", "hwanja", "mr")
	def test_hwanja_yr(self):
		self.run_test("환자", "{{ko-IPA|l=y}}", "hwān.ca", "yr")
	def test_hwanja_ipa(self):
		self.run_test("환자", "{{ko-IPA|l=y}}", "[ˈɸwa̠(ː)ɲd͡ʑa̠]", "ipa")

	def test_byeonhada_ph(self):
		self.run_test("변하다", "{{ko-IPA|l=y}}", "변(ː)하다", "ph")
	def test_byeonhada_rr(self):
		self.run_test("변하다", "{{ko-IPA|l=y}}", "byeonhada", "rr")
	def test_byeonhada_rrr(self):
		self.run_test("변하다", "{{ko-IPA|l=y}}", "byeonhada", "rrr")
	def test_byeonhada_mr(self):
		self.run_test("변하다", "{{ko-IPA|l=y}}", "pyŏnhada", "mr")
	def test_byeonhada_yr(self):
		self.run_test("변하다", "{{ko-IPA|l=y}}", "pyēn.hata", "yr")
	def test_byeonhada_ipa(self):
		self.run_test("변하다", "{{ko-IPA|l=y}}", "[ˈpjɘ(ː)nɦa̠da̠]", "ipa")

	def test_amuri_ph(self):
		self.run_test("아무리", "{{ko-IPA|l=y}}", "아(ː)무리", "ph")
	def test_amuri_rr(self):
		self.run_test("아무리", "{{ko-IPA|l=y}}", "amuri", "rr")
	def test_amuri_rrr(self):
		self.run_test("아무리", "{{ko-IPA|l=y}}", "amuli", "rrr")
	def test_amuri_mr(self):
		self.run_test("아무리", "{{ko-IPA|l=y}}", "amuri", "mr")
	def test_amuri_yr(self):
		self.run_test("아무리", "{{ko-IPA|l=y}}", "āmuli", "yr")
	def test_amuri_ipa(self):
		self.run_test("아무리", "{{ko-IPA|l=y}}", "[ˈa̠(ː)muɾi]", "ipa")

	def test_daman_ph(self):
		self.run_test("다만", "{{ko-IPA|l=y}}", "다(ː)만", "ph")
	def test_daman_rr(self):
		self.run_test("다만", "{{ko-IPA|l=y}}", "daman", "rr")
	def test_daman_rrr(self):
		self.run_test("다만", "{{ko-IPA|l=y}}", "daman", "rrr")
	def test_daman_mr(self):
		self.run_test("다만", "{{ko-IPA|l=y}}", "taman", "mr")
	def test_daman_yr(self):
		self.run_test("다만", "{{ko-IPA|l=y}}", "tāman", "yr")
	def test_daman_ipa(self):
		self.run_test("다만", "{{ko-IPA|l=y}}", "[ˈta̠(ː)ma̠n]", "ipa")

	def test_doum_ph(self):
		self.run_test("도움", "{{ko-IPA}}", "도움", "ph")
	def test_doum_rr(self):
		self.run_test("도움", "{{ko-IPA}}", "doum", "rr")
	def test_doum_rrr(self):
		self.run_test("도움", "{{ko-IPA}}", "doum", "rrr")
	def test_doum_mr(self):
		self.run_test("도움", "{{ko-IPA}}", "toum", "mr")
	def test_doum_yr(self):
		self.run_test("도움", "{{ko-IPA}}", "towum", "yr")
	def test_doum_ipa(self):
		self.run_test("도움", "{{ko-IPA}}", "[to̞um]", "ipa")

	def test_ppajida_ph(self):
		self.run_test("빠지다", "{{ko-IPA|l=y}}", "빠(ː)지다", "ph")
	def test_ppajida_rr(self):
		self.run_test("빠지다", "{{ko-IPA|l=y}}", "ppajida", "rr")
	def test_ppajida_rrr(self):
		self.run_test("빠지다", "{{ko-IPA|l=y}}", "ppajida", "rrr")
	def test_ppajida_mr(self):
		self.run_test("빠지다", "{{ko-IPA|l=y}}", "ppajida", "mr")
	def test_ppajida_yr(self):
		self.run_test("빠지다", "{{ko-IPA|l=y}}", "ppācita", "yr")
	def test_ppajida_ipa(self):
		self.run_test("빠지다", "{{ko-IPA|l=y}}", "[ˈp͈a̠(ː)d͡ʑida̠]", "ipa")

	def test_oneullal_ph(self):
		self.run_test("오늘날", "{{ko-IPA}}", "오늘랄", "ph")
	def test_oneullal_rr(self):
		self.run_test("오늘날", "{{ko-IPA}}", "oneullal", "rr")
	def test_oneullal_rrr(self):
		self.run_test("오늘날", "{{ko-IPA}}", "oneulnal", "rrr")
	def test_oneullal_mr(self):
		self.run_test("오늘날", "{{ko-IPA}}", "onŭllal", "mr")
	def test_oneullal_yr(self):
		self.run_test("오늘날", "{{ko-IPA}}", "onulnal", "yr")
	def test_oneullal_ipa(self):
		self.run_test("오늘날", "{{ko-IPA}}", "[o̞nɯɭɭa̠ɭ]", "ipa")

	def test_yaegihada_ph(self):
		self.run_test("얘기하다", "{{ko-IPA|l=y}}", "얘(ː)기하다/예(ː)기하다", "ph")
	def test_yaegihada_rr(self):
		self.run_test("얘기하다", "{{ko-IPA|l=y}}", "yaegihada", "rr")
	def test_yaegihada_rrr(self):
		self.run_test("얘기하다", "{{ko-IPA|l=y}}", "yaegihada", "rrr")
	def test_yaegihada_mr(self):
		self.run_test("얘기하다", "{{ko-IPA|l=y}}", "yaegihada", "mr")
	def test_yaegihada_yr(self):
		self.run_test("얘기하다", "{{ko-IPA|l=y}}", "yāykihata", "yr")
	def test_yaegihada_ipa(self):
		self.run_test("얘기하다", "{{ko-IPA|l=y}}", "[ˈjɛ(ː)ɡiɦa̠da̠] ~ [ˈje̞(ː)ɡiɦa̠da̠]", "ipa")

	def test_gyeonggi_ph(self):
		self.run_test("경기", "{{ko-IPA|l=y}}", "경(ː)기", "ph")
	def test_gyeonggi_rr(self):
		self.run_test("경기", "{{ko-IPA|l=y}}", "gyeonggi", "rr")
	def test_gyeonggi_rrr(self):
		self.run_test("경기", "{{ko-IPA|l=y}}", "gyeonggi", "rrr")
	def test_gyeonggi_mr(self):
		self.run_test("경기", "{{ko-IPA|l=y}}", "kyŏnggi", "mr")
	def test_gyeonggi_yr(self):
		self.run_test("경기", "{{ko-IPA|l=y}}", "kyēngki", "yr")
	def test_gyeonggi_ipa(self):
		self.run_test("경기", "{{ko-IPA|l=y}}", "[ˈkjɘ(ː)ŋɡi]", "ipa")
	def test_gyeonggi_ph_1(self):
		self.run_test("경기", "{{ko-IPA}}", "경기", "ph")
	def test_gyeonggi_rr_1(self):
		self.run_test("경기", "{{ko-IPA}}", "gyeonggi", "rr")
	def test_gyeonggi_rrr_1(self):
		self.run_test("경기", "{{ko-IPA}}", "gyeonggi", "rrr")
	def test_gyeonggi_mr_1(self):
		self.run_test("경기", "{{ko-IPA}}", "kyŏnggi", "mr")
	def test_gyeonggi_yr_1(self):
		self.run_test("경기", "{{ko-IPA}}", "kyengki", "yr")
	def test_gyeonggi_ipa_1(self):
		self.run_test("경기", "{{ko-IPA}}", "[kjʌ̹ŋɡi]", "ipa")

	def test_mokjeok_ph(self):
		self.run_test("목적", "{{ko-ipa}}", "목쩍", "ph")
	def test_mokjeok_rr(self):
		self.run_test("목적", "{{ko-ipa}}", "mokjeok", "rr")
	def test_mokjeok_rrr(self):
		self.run_test("목적", "{{ko-ipa}}", "mogjeog", "rrr")
	def test_mokjeok_mr(self):
		self.run_test("목적", "{{ko-ipa}}", "mokchŏk", "mr")
	def test_mokjeok_yr(self):
		self.run_test("목적", "{{ko-ipa}}", "mokcek", "yr")
	def test_mokjeok_ipa(self):
		self.run_test("목적", "{{ko-ipa}}", "[mo̞k̚t͡ɕ͈ʌ̹k̚]", "ipa")
	def test_mokjeok_ph_1(self):
		self.run_test("목적", "{{ko-ipa}}", "목쩍", "ph")
	def test_mokjeok_rr_1(self):
		self.run_test("목적", "{{ko-ipa}}", "mokjeok", "rr")
	def test_mokjeok_rrr_1(self):
		self.run_test("목적", "{{ko-ipa}}", "mogjeog", "rrr")
	def test_mokjeok_mr_1(self):
		self.run_test("목적", "{{ko-ipa}}", "mokchŏk", "mr")
	def test_mokjeok_yr_1(self):
		self.run_test("목적", "{{ko-ipa}}", "mokcek", "yr")
	def test_mokjeok_ipa_1(self):
		self.run_test("목적", "{{ko-ipa}}", "[mo̞k̚t͡ɕ͈ʌ̹k̚]", "ipa")

	def test_eojjeoda_ph(self):
		self.run_test("어쩌다", "{{ko-IPA}}", "어쩌다", "ph")
	def test_eojjeoda_rr(self):
		self.run_test("어쩌다", "{{ko-IPA}}", "eojjeoda", "rr")
	def test_eojjeoda_rrr(self):
		self.run_test("어쩌다", "{{ko-IPA}}", "eo'jjeoda", "rrr")
	def test_eojjeoda_mr(self):
		self.run_test("어쩌다", "{{ko-IPA}}", "ŏtchŏda", "mr")
	def test_eojjeoda_yr(self):
		self.run_test("어쩌다", "{{ko-IPA}}", "e.cceta", "yr")
	def test_eojjeoda_ipa(self):
		self.run_test("어쩌다", "{{ko-IPA}}", "[ʌ̹t͡ɕ͈ʌ̹da̠]", "ipa")

	def test_namseong_ph(self):
		self.run_test("남성", "{{ko-IPA}}", "남성", "ph")
	def test_namseong_rr(self):
		self.run_test("남성", "{{ko-IPA}}", "namseong", "rr")
	def test_namseong_rrr(self):
		self.run_test("남성", "{{ko-IPA}}", "namseong", "rrr")
	def test_namseong_mr(self):
		self.run_test("남성", "{{ko-IPA}}", "namsŏng", "mr")
	def test_namseong_yr(self):
		self.run_test("남성", "{{ko-IPA}}", "namseng", "yr")
	def test_namseong_ipa(self):
		self.run_test("남성", "{{ko-IPA}}", "[na̠msʰʌ̹ŋ]", "ipa")

	def test_geuman_ph(self):
		self.run_test("그만", "{{ko-IPA}}", "그만", "ph")
	def test_geuman_rr(self):
		self.run_test("그만", "{{ko-IPA}}", "geuman", "rr")
	def test_geuman_rrr(self):
		self.run_test("그만", "{{ko-IPA}}", "geuman", "rrr")
	def test_geuman_mr(self):
		self.run_test("그만", "{{ko-IPA}}", "kŭman", "mr")
	def test_geuman_yr(self):
		self.run_test("그만", "{{ko-IPA}}", "kuman", "yr")
	def test_geuman_ipa(self):
		self.run_test("그만", "{{ko-IPA}}", "[kɯma̠n]", "ipa")

	def test_balgi_ph(self):
		self.run_test("발기", "{{ko-IPA}}", "발기", "ph")
	def test_balgi_rr(self):
		self.run_test("발기", "{{ko-IPA}}", "balgi", "rr")
	def test_balgi_rrr(self):
		self.run_test("발기", "{{ko-IPA}}", "balgi", "rrr")
	def test_balgi_mr(self):
		self.run_test("발기", "{{ko-IPA}}", "palgi", "mr")
	def test_balgi_yr(self):
		self.run_test("발기", "{{ko-IPA}}", "pal.ki", "yr")
	def test_balgi_ipa(self):
		self.run_test("발기", "{{ko-IPA}}", "[pa̠ɭɡi]", "ipa")

	def test_gihoe_ph(self):
		self.run_test("기회", "{{ko-IPA}}", "기훼/기회", "ph")
	def test_gihoe_rr(self):
		self.run_test("기회", "{{ko-IPA}}", "gihoe", "rr")
	def test_gihoe_rrr(self):
		self.run_test("기회", "{{ko-IPA}}", "gihoe", "rrr")
	def test_gihoe_mr(self):
		self.run_test("기회", "{{ko-IPA}}", "kihoe", "mr")
	def test_gihoe_yr(self):
		self.run_test("기회", "{{ko-IPA}}", "kihoy", "yr")
	def test_gihoe_ipa(self):
		self.run_test("기회", "{{ko-IPA}}", "[kiβwe̞] ~ [kiɦø̞]", "ipa")

	def test_guchejeok_ph(self):
		self.run_test("구체적", "{{ko-IPA}}", "구체적", "ph")
	def test_guchejeok_rr(self):
		self.run_test("구체적", "{{ko-IPA}}", "guchejeok", "rr")
	def test_guchejeok_rrr(self):
		self.run_test("구체적", "{{ko-IPA}}", "guchejeog", "rrr")
	def test_guchejeok_mr(self):
		self.run_test("구체적", "{{ko-IPA}}", "kuch'ejŏk", "mr")
	def test_guchejeok_yr(self):
		self.run_test("구체적", "{{ko-IPA}}", "kwu.cheycek", "yr")
	def test_guchejeok_ipa(self):
		self.run_test("구체적", "{{ko-IPA}}", "[kut͡ɕʰe̞d͡ʑʌ̹k̚]", "ipa")

	def test_gyeongjaeng_ph(self):
		self.run_test("경쟁", "{{ko-IPA|l=y|a=y}}", "경(ː)쟁/경(ː)젱", "ph")
	def test_gyeongjaeng_rr(self):
		self.run_test("경쟁", "{{ko-IPA|l=y|a=y}}", "gyeongjaeng", "rr")
	def test_gyeongjaeng_rrr(self):
		self.run_test("경쟁", "{{ko-IPA|l=y|a=y}}", "gyeongjaeng", "rrr")
	def test_gyeongjaeng_mr(self):
		self.run_test("경쟁", "{{ko-IPA|l=y|a=y}}", "kyŏngjaeng", "mr")
	def test_gyeongjaeng_yr(self):
		self.run_test("경쟁", "{{ko-IPA|l=y|a=y}}", "kyēngcayng", "yr")
	def test_gyeongjaeng_ipa(self):
		self.run_test("경쟁", "{{ko-IPA|l=y|a=y}}", "[ˈkjɘ(ː)ŋd͡ʑɛŋ] ~ [ˈkjɘ(ː)ŋd͡ʑe̞ŋ]", "ipa")

	def test_jaeryo_ph(self):
		self.run_test("재료", "{{ko-IPA}}", "재료/제료", "ph")
	def test_jaeryo_rr(self):
		self.run_test("재료", "{{ko-IPA}}", "jaeryo", "rr")
	def test_jaeryo_rrr(self):
		self.run_test("재료", "{{ko-IPA}}", "jaelyo", "rrr")
	def test_jaeryo_mr(self):
		self.run_test("재료", "{{ko-IPA}}", "chaeryo", "mr")
	def test_jaeryo_yr(self):
		self.run_test("재료", "{{ko-IPA}}", "caylyo", "yr")
	def test_jaeryo_ipa(self):
		self.run_test("재료", "{{ko-IPA}}", "[t͡ɕɛɾjo] ~ [t͡ɕe̞ɾjo]", "ipa")

	def test_gakgak_ph(self):
		self.run_test("각각", "{{ko-IPA|a=y}}", "각깍", "ph")
	def test_gakgak_rr(self):
		self.run_test("각각", "{{ko-IPA|a=y}}", "gakgak", "rr")
	def test_gakgak_rrr(self):
		self.run_test("각각", "{{ko-IPA|a=y}}", "gaggag", "rrr")
	def test_gakgak_mr(self):
		self.run_test("각각", "{{ko-IPA|a=y}}", "kakkak", "mr")
	def test_gakgak_yr(self):
		self.run_test("각각", "{{ko-IPA|a=y}}", "kak.kak", "yr")
	def test_gakgak_ipa(self):
		self.run_test("각각", "{{ko-IPA|a=y}}", "[ka̠k̚k͈a̠k̚]", "ipa")

	def test_simhada_ph(self):
		self.run_test("심하다", "{{ko-IPA|l=y}}", "심(ː)하다", "ph")
	def test_simhada_rr(self):
		self.run_test("심하다", "{{ko-IPA|l=y}}", "simhada", "rr")
	def test_simhada_rrr(self):
		self.run_test("심하다", "{{ko-IPA|l=y}}", "simhada", "rrr")
	def test_simhada_mr(self):
		self.run_test("심하다", "{{ko-IPA|l=y}}", "simhada", "mr")
	def test_simhada_yr(self):
		self.run_test("심하다", "{{ko-IPA|l=y}}", "sīmhata", "yr")
	def test_simhada_ipa(self):
		self.run_test("심하다", "{{ko-IPA|l=y}}", "[ˈɕʰi(ː)mɦa̠da̠]", "ipa")

	def test_biseuthada_ph(self):
		self.run_test("비슷하다", "{{ko-IPA}}", "비스타다", "ph")
	def test_biseuthada_rr(self):
		self.run_test("비슷하다", "{{ko-IPA}}", "biseuthada", "rr")
	def test_biseuthada_rrr(self):
		self.run_test("비슷하다", "{{ko-IPA}}", "biseushada", "rrr")
	def test_biseuthada_mr(self):
		self.run_test("비슷하다", "{{ko-IPA}}", "pisŭthada", "mr")
	def test_biseuthada_yr(self):
		self.run_test("비슷하다", "{{ko-IPA}}", "pisushata", "yr")
	def test_biseuthada_ipa(self):
		self.run_test("비슷하다", "{{ko-IPA}}", "[pisʰɯtʰa̠da̠]", "ipa")

	def test_chaegim_ph(self):
		self.run_test("책임", "{{ko-IPA}}", "채김/체김", "ph")
	def test_chaegim_rr(self):
		self.run_test("책임", "{{ko-IPA}}", "chaegim", "rr")
	def test_chaegim_rrr(self):
		self.run_test("책임", "{{ko-IPA}}", "chaeg'im", "rrr")
	def test_chaegim_mr(self):
		self.run_test("책임", "{{ko-IPA}}", "ch'aegim", "mr")
	def test_chaegim_yr(self):
		self.run_test("책임", "{{ko-IPA}}", "chayk.im", "yr")
	def test_chaegim_ipa(self):
		self.run_test("책임", "{{ko-IPA}}", "[t͡ɕʰɛɡim] ~ [t͡ɕʰe̞ɡim]", "ipa")

	def test_jayu_ph(self):
		self.run_test("자유", "{{ko-IPA}}", "자유", "ph")
	def test_jayu_rr(self):
		self.run_test("자유", "{{ko-IPA}}", "jayu", "rr")
	def test_jayu_rrr(self):
		self.run_test("자유", "{{ko-IPA}}", "jayu", "rrr")
	def test_jayu_mr(self):
		self.run_test("자유", "{{ko-IPA}}", "chayu", "mr")
	def test_jayu_yr(self):
		self.run_test("자유", "{{ko-IPA}}", "ca.yu", "yr")
	def test_jayu_ipa(self):
		self.run_test("자유", "{{ko-IPA}}", "[t͡ɕa̠ju]", "ipa")

	def test_gyeolko_ph(self):
		self.run_test("결코", "{{ko-IPA}}", "결코", "ph")
	def test_gyeolko_rr(self):
		self.run_test("결코", "{{ko-IPA}}", "gyeolko", "rr")
	def test_gyeolko_rrr(self):
		self.run_test("결코", "{{ko-IPA}}", "gyeolko", "rrr")
	def test_gyeolko_mr(self):
		self.run_test("결코", "{{ko-IPA}}", "kyŏlk'o", "mr")
	def test_gyeolko_yr(self):
		self.run_test("결코", "{{ko-IPA}}", "kyel.kho", "yr")
	def test_gyeolko_ipa(self):
		self.run_test("결코", "{{ko-IPA}}", "[kjʌ̹ɭkʰo̞]", "ipa")

	def test_sobija_ph(self):
		self.run_test("소비자", "{{ko-IPA}}", "소비자", "ph")
	def test_sobija_rr(self):
		self.run_test("소비자", "{{ko-IPA}}", "sobija", "rr")
	def test_sobija_rrr(self):
		self.run_test("소비자", "{{ko-IPA}}", "sobija", "rrr")
	def test_sobija_mr(self):
		self.run_test("소비자", "{{ko-IPA}}", "sobija", "mr")
	def test_sobija_yr(self):
		self.run_test("소비자", "{{ko-IPA}}", "sopica", "yr")
	def test_sobija_ipa(self):
		self.run_test("소비자", "{{ko-IPA}}", "[sʰo̞bid͡ʑa̠]", "ipa")

	def test_gyumo_ph(self):
		self.run_test("규모", "{{ko-IPA}}", "규모", "ph")
	def test_gyumo_rr(self):
		self.run_test("규모", "{{ko-IPA}}", "gyumo", "rr")
	def test_gyumo_rrr(self):
		self.run_test("규모", "{{ko-IPA}}", "gyumo", "rrr")
	def test_gyumo_mr(self):
		self.run_test("규모", "{{ko-IPA}}", "kyumo", "mr")
	def test_gyumo_yr(self):
		self.run_test("규모", "{{ko-IPA}}", "kyumo", "yr")
	def test_gyumo_ipa(self):
		self.run_test("규모", "{{ko-IPA}}", "[kjumo̞]", "ipa")

	def test_jigu_ph(self):
		self.run_test("지구", "{{ko-IPA}}", "지구", "ph")
	def test_jigu_rr(self):
		self.run_test("지구", "{{ko-IPA}}", "jigu", "rr")
	def test_jigu_rrr(self):
		self.run_test("지구", "{{ko-IPA}}", "jigu", "rrr")
	def test_jigu_mr(self):
		self.run_test("지구", "{{ko-IPA}}", "chigu", "mr")
	def test_jigu_yr(self):
		self.run_test("지구", "{{ko-IPA}}", "cikwu", "yr")
	def test_jigu_ipa(self):
		self.run_test("지구", "{{ko-IPA}}", "[t͡ɕiɡu]", "ipa")

	def test_silsihada_ph(self):
		self.run_test("실시하다", "{{ko-IPA}}", "실시하다", "ph")
	def test_silsihada_rr(self):
		self.run_test("실시하다", "{{ko-IPA}}", "silsihada", "rr")
	def test_silsihada_rrr(self):
		self.run_test("실시하다", "{{ko-IPA}}", "silsihada", "rrr")
	def test_silsihada_mr(self):
		self.run_test("실시하다", "{{ko-IPA}}", "silsihada", "mr")
	def test_silsihada_yr(self):
		self.run_test("실시하다", "{{ko-IPA}}", "sil.sihata", "yr")
	def test_silsihada_ipa(self):
		self.run_test("실시하다", "{{ko-IPA}}", "[ɕʰiɭɕʰiɦa̠da̠]", "ipa")

	def test_gijun_ph(self):
		self.run_test("기준", "{{ko-IPA}}", "기준", "ph")
	def test_gijun_rr(self):
		self.run_test("기준", "{{ko-IPA}}", "gijun", "rr")
	def test_gijun_rrr(self):
		self.run_test("기준", "{{ko-IPA}}", "gijun", "rrr")
	def test_gijun_mr(self):
		self.run_test("기준", "{{ko-IPA}}", "kijun", "mr")
	def test_gijun_yr(self):
		self.run_test("기준", "{{ko-IPA}}", "kicwun", "yr")
	def test_gijun_ipa(self):
		self.run_test("기준", "{{ko-IPA}}", "[kid͡ʑun]", "ipa")

	def test_eonjena_ph(self):
		self.run_test("언제나", "{{ko-IPA|l=y}}", "언(ː)제나", "ph")
	def test_eonjena_rr(self):
		self.run_test("언제나", "{{ko-IPA|l=y}}", "eonjena", "rr")
	def test_eonjena_rrr(self):
		self.run_test("언제나", "{{ko-IPA|l=y}}", "eonjena", "rrr")
	def test_eonjena_mr(self):
		self.run_test("언제나", "{{ko-IPA|l=y}}", "ŏnjena", "mr")
	def test_eonjena_yr(self):
		self.run_test("언제나", "{{ko-IPA|l=y}}", "ēn.ceyna", "yr")
	def test_eonjena_ipa(self):
		self.run_test("언제나", "{{ko-IPA|l=y}}", "[ˈɘ(ː)ɲd͡ʑe̞na̠]", "ipa")

	def test_dongne_ph(self):
		self.run_test("동네", "{{ko-IPA|l=y}}", "동(ː)네", "ph")
	def test_dongne_rr(self):
		self.run_test("동네", "{{ko-IPA|l=y}}", "dongne", "rr")
	def test_dongne_rrr(self):
		self.run_test("동네", "{{ko-IPA|l=y}}", "dongne", "rrr")
	def test_dongne_mr(self):
		self.run_test("동네", "{{ko-IPA|l=y}}", "tongne", "mr")
	def test_dongne_yr(self):
		self.run_test("동네", "{{ko-IPA|l=y}}", "tōngney", "yr")
	def test_dongne_ipa(self):
		self.run_test("동네", "{{ko-IPA|l=y}}", "[ˈto̞(ː)ŋne̞]", "ipa")

	def test_balgyeonhada_ph(self):
		self.run_test("발견하다", "{{ko-IPA}}", "발견하다", "ph")
	def test_balgyeonhada_rr(self):
		self.run_test("발견하다", "{{ko-IPA}}", "balgyeonhada", "rr")
	def test_balgyeonhada_rrr(self):
		self.run_test("발견하다", "{{ko-IPA}}", "balgyeonhada", "rrr")
	def test_balgyeonhada_mr(self):
		self.run_test("발견하다", "{{ko-IPA}}", "palgyŏnhada", "mr")
	def test_balgyeonhada_yr(self):
		self.run_test("발견하다", "{{ko-IPA}}", "pal.kyen.hata", "yr")
	def test_balgyeonhada_ipa(self):
		self.run_test("발견하다", "{{ko-IPA}}", "[pa̠ɭɡjʌ̹nɦa̠da̠]", "ipa")

	def test_jonjaehada_ph(self):
		self.run_test("존재하다", "{{ko-IPA}}", "존재하다/존제하다", "ph")
	def test_jonjaehada_rr(self):
		self.run_test("존재하다", "{{ko-IPA}}", "jonjaehada", "rr")
	def test_jonjaehada_rrr(self):
		self.run_test("존재하다", "{{ko-IPA}}", "jonjaehada", "rrr")
	def test_jonjaehada_mr(self):
		self.run_test("존재하다", "{{ko-IPA}}", "chonjaehada", "mr")
	def test_jonjaehada_yr(self):
		self.run_test("존재하다", "{{ko-IPA}}", "con.cayhata", "yr")
	def test_jonjaehada_ipa(self):
		self.run_test("존재하다", "{{ko-IPA}}", "[t͡ɕo̞ɲd͡ʑɛɦa̠da̠] ~ [t͡ɕo̞ɲd͡ʑe̞ɦa̠da̠]", "ipa")

	def test_nodongja_ph(self):
		self.run_test("노동자", "{{ko-IPA}}", "노동자", "ph")
	def test_nodongja_rr(self):
		self.run_test("노동자", "{{ko-IPA}}", "nodongja", "rr")
	def test_nodongja_rrr(self):
		self.run_test("노동자", "{{ko-IPA}}", "nodongja", "rrr")
	def test_nodongja_mr(self):
		self.run_test("노동자", "{{ko-IPA}}", "nodongja", "mr")
	def test_nodongja_yr(self):
		self.run_test("노동자", "{{ko-IPA}}", "notongca", "yr")
	def test_nodongja_ipa(self):
		self.run_test("노동자", "{{ko-IPA}}", "[no̞do̞ŋd͡ʑa̠]", "ipa")

	def test_geonseol_ph(self):
		self.run_test("건설", "{{ko-IPA|l=y}}", "건(ː)설", "ph")
	def test_geonseol_rr(self):
		self.run_test("건설", "{{ko-IPA|l=y}}", "geonseol", "rr")
	def test_geonseol_rrr(self):
		self.run_test("건설", "{{ko-IPA|l=y}}", "geonseol", "rrr")
	def test_geonseol_mr(self):
		self.run_test("건설", "{{ko-IPA|l=y}}", "kŏnsŏl", "mr")
	def test_geonseol_yr(self):
		self.run_test("건설", "{{ko-IPA|l=y}}", "kēnsel", "yr")
	def test_geonseol_ipa(self):
		self.run_test("건설", "{{ko-IPA|l=y}}", "[ˈkɘ(ː)nsʰʌ̹ɭ]", "ipa")

	def test_hyeonjang_ph(self):
		self.run_test("현장", "{{ko-IPA|l=y}}", "현(ː)장", "ph")
	def test_hyeonjang_rr(self):
		self.run_test("현장", "{{ko-IPA|l=y}}", "hyeonjang", "rr")
	def test_hyeonjang_rrr(self):
		self.run_test("현장", "{{ko-IPA|l=y}}", "hyeonjang", "rrr")
	def test_hyeonjang_mr(self):
		self.run_test("현장", "{{ko-IPA|l=y}}", "hyŏnjang", "mr")
	def test_hyeonjang_yr(self):
		self.run_test("현장", "{{ko-IPA|l=y}}", "hyēn.cang", "yr")
	def test_hyeonjang_ipa(self):
		self.run_test("현장", "{{ko-IPA|l=y}}", "[ˈçɘ(ː)ɲd͡ʑa̠ŋ]", "ipa")

	def test_geureonikka_ph(self):
		self.run_test("그러니까", "{{ko-IPA}}", "그러니까", "ph")
	def test_geureonikka_rr(self):
		self.run_test("그러니까", "{{ko-IPA}}", "geureonikka", "rr")
	def test_geureonikka_rrr(self):
		self.run_test("그러니까", "{{ko-IPA}}", "geuleoni'kka", "rrr")
	def test_geureonikka_mr(self):
		self.run_test("그러니까", "{{ko-IPA}}", "kŭrŏnikka", "mr")
	def test_geureonikka_yr(self):
		self.run_test("그러니까", "{{ko-IPA}}", "kuleni.kka", "yr")
	def test_geureonikka_ipa(self):
		self.run_test("그러니까", "{{ko-IPA}}", "[kɯɾʌ̹nik͈a̠]", "ipa")

	def test_gatchuda_ph(self):
		self.run_test("갖추다", "{{ko-IPA}}", "갇추다", "ph")
	def test_gatchuda_rr(self):
		self.run_test("갖추다", "{{ko-IPA}}", "gatchuda", "rr")
	def test_gatchuda_rrr(self):
		self.run_test("갖추다", "{{ko-IPA}}", "gajchuda", "rrr")
	def test_gatchuda_mr(self):
		self.run_test("갖추다", "{{ko-IPA}}", "katch'uda", "mr")
	def test_gatchuda_yr(self):
		self.run_test("갖추다", "{{ko-IPA}}", "kacchwuta", "yr")
	def test_gatchuda_ipa(self):
		self.run_test("갖추다", "{{ko-IPA}}", "[ka̠t̚t͡ɕʰuda̠]", "ipa")

	def test_sem_ph(self):
		self.run_test("셈", "{{ko-IPA|l=y}}", "셈(ː)", "ph")
	def test_sem_rr(self):
		self.run_test("셈", "{{ko-IPA|l=y}}", "sem", "rr")
	def test_sem_rrr(self):
		self.run_test("셈", "{{ko-IPA|l=y}}", "sem", "rrr")
	def test_sem_mr(self):
		self.run_test("셈", "{{ko-IPA|l=y}}", "sem", "mr")
	def test_sem_yr(self):
		self.run_test("셈", "{{ko-IPA|l=y}}", "sēym", "yr")
	def test_sem_ipa(self):
		self.run_test("셈", "{{ko-IPA|l=y}}", "[sʰe̞(ː)m]", "ipa")

	def test_bandeusi_ph(self):
		self.run_test("반드시", "{{ko-IPA}}", "반드시", "ph")
	def test_bandeusi_rr(self):
		self.run_test("반드시", "{{ko-IPA}}", "bandeusi", "rr")
	def test_bandeusi_rrr(self):
		self.run_test("반드시", "{{ko-IPA}}", "bandeusi", "rrr")
	def test_bandeusi_mr(self):
		self.run_test("반드시", "{{ko-IPA}}", "pandŭsi", "mr")
	def test_bandeusi_yr(self):
		self.run_test("반드시", "{{ko-IPA}}", "pantusi", "yr")
	def test_bandeusi_ipa(self):
		self.run_test("반드시", "{{ko-IPA}}", "[pa̠ndɯɕʰi]", "ipa")

	def test_eolleun_ph(self):
		self.run_test("얼른", "{{ko-IPA}}", "얼른", "ph")
	def test_eolleun_rr(self):
		self.run_test("얼른", "{{ko-IPA}}", "eolleun", "rr")
	def test_eolleun_rrr(self):
		self.run_test("얼른", "{{ko-IPA}}", "eolleun", "rrr")
	def test_eolleun_mr(self):
		self.run_test("얼른", "{{ko-IPA}}", "ŏllŭn", "mr")
	def test_eolleun_yr(self):
		self.run_test("얼른", "{{ko-IPA}}", "ellun", "yr")
	def test_eolleun_ipa(self):
		self.run_test("얼른", "{{ko-IPA}}", "[ʌ̹ɭɭɯn]", "ipa")

	def test_wanjeonhi_ph(self):
		self.run_test("완전히", "{{ko-IPA}}", "완전히", "ph")
	def test_wanjeonhi_rr(self):
		self.run_test("완전히", "{{ko-IPA}}", "wanjeonhi", "rr")
	def test_wanjeonhi_rrr(self):
		self.run_test("완전히", "{{ko-IPA}}", "wanjeonhi", "rrr")
	def test_wanjeonhi_mr(self):
		self.run_test("완전히", "{{ko-IPA}}", "wanjŏnhi", "mr")
	def test_wanjeonhi_yr(self):
		self.run_test("완전히", "{{ko-IPA}}", "wan.cen.hi", "yr")
	def test_wanjeonhi_ipa(self):
		self.run_test("완전히", "{{ko-IPA}}", "[wa̠ɲd͡ʑʌ̹nʝi]", "ipa")

	def test_gaewol_ph(self):
		self.run_test("개월", "{{ko-IPA}}", "개월/게월", "ph")
	def test_gaewol_rr(self):
		self.run_test("개월", "{{ko-IPA}}", "gaewol", "rr")
	def test_gaewol_rrr(self):
		self.run_test("개월", "{{ko-IPA}}", "gaewol", "rrr")
	def test_gaewol_mr(self):
		self.run_test("개월", "{{ko-IPA}}", "kaewŏl", "mr")
	def test_gaewol_yr(self):
		self.run_test("개월", "{{ko-IPA}}", "kaywel", "yr")
	def test_gaewol_ipa(self):
		self.run_test("개월", "{{ko-IPA}}", "[kɛwʌ̹ɭ] ~ [ke̞wʌ̹ɭ]", "ipa")

	def test_eorini_ph(self):
		self.run_test("어린이", "{{ko-IPA}}", "어리니", "ph")
	def test_eorini_rr(self):
		self.run_test("어린이", "{{ko-IPA}}", "eorini", "rr")
	def test_eorini_rrr(self):
		self.run_test("어린이", "{{ko-IPA}}", "eolin'i", "rrr")
	def test_eorini_mr(self):
		self.run_test("어린이", "{{ko-IPA}}", "ŏrini", "mr")
	def test_eorini_yr(self):
		self.run_test("어린이", "{{ko-IPA}}", "elin.i", "yr")
	def test_eorini_ipa(self):
		self.run_test("어린이", "{{ko-IPA}}", "[ʌ̹ɾini]", "ipa")

	def test_yujihada_ph(self):
		self.run_test("유지하다", "{{ko-IPA}}", "유지하다", "ph")
	def test_yujihada_rr(self):
		self.run_test("유지하다", "{{ko-IPA}}", "yujihada", "rr")
	def test_yujihada_rrr(self):
		self.run_test("유지하다", "{{ko-IPA}}", "yujihada", "rrr")
	def test_yujihada_mr(self):
		self.run_test("유지하다", "{{ko-IPA}}", "yujihada", "mr")
	def test_yujihada_yr(self):
		self.run_test("유지하다", "{{ko-IPA}}", "yucihata", "yr")
	def test_yujihada_ipa(self):
		self.run_test("유지하다", "{{ko-IPA}}", "[jud͡ʑiɦa̠da̠]", "ipa")

	def test_jeonghada_ph(self):
		self.run_test("정하다", "{{ko-IPA|l=y}}", "정(ː)하다", "ph")
	def test_jeonghada_rr(self):
		self.run_test("정하다", "{{ko-IPA|l=y}}", "jeonghada", "rr")
	def test_jeonghada_rrr(self):
		self.run_test("정하다", "{{ko-IPA|l=y}}", "jeonghada", "rrr")
	def test_jeonghada_mr(self):
		self.run_test("정하다", "{{ko-IPA|l=y}}", "chŏnghada", "mr")
	def test_jeonghada_yr(self):
		self.run_test("정하다", "{{ko-IPA|l=y}}", "cēnghata", "yr")
	def test_jeonghada_ipa(self):
		self.run_test("정하다", "{{ko-IPA|l=y}}", "[ˈt͡ɕɘ(ː)ŋɦa̠da̠]", "ipa")
	def test_jeonghada_ph_1(self):
		self.run_test("정하다", "{{ko-IPA}}", "정하다", "ph")
	def test_jeonghada_rr_1(self):
		self.run_test("정하다", "{{ko-IPA}}", "jeonghada", "rr")
	def test_jeonghada_rrr_1(self):
		self.run_test("정하다", "{{ko-IPA}}", "jeonghada", "rrr")
	def test_jeonghada_mr_1(self):
		self.run_test("정하다", "{{ko-IPA}}", "chŏnghada", "mr")
	def test_jeonghada_yr_1(self):
		self.run_test("정하다", "{{ko-IPA}}", "cenghata", "yr")
	def test_jeonghada_ipa_1(self):
		self.run_test("정하다", "{{ko-IPA}}", "[t͡ɕʌ̹ŋɦa̠da̠]", "ipa")
	def test_jeonghada_ph_2(self):
		self.run_test("정하다", "{{ko-IPA}}", "정하다", "ph")
	def test_jeonghada_rr_2(self):
		self.run_test("정하다", "{{ko-IPA}}", "jeonghada", "rr")
	def test_jeonghada_rrr_2(self):
		self.run_test("정하다", "{{ko-IPA}}", "jeonghada", "rrr")
	def test_jeonghada_mr_2(self):
		self.run_test("정하다", "{{ko-IPA}}", "chŏnghada", "mr")
	def test_jeonghada_yr_2(self):
		self.run_test("정하다", "{{ko-IPA}}", "cenghata", "yr")
	def test_jeonghada_ipa_2(self):
		self.run_test("정하다", "{{ko-IPA}}", "[t͡ɕʌ̹ŋɦa̠da̠]", "ipa")

	def test_hanmadi_ph(self):
		self.run_test("한마디", "{{ko-IPA}}", "한마디", "ph")
	def test_hanmadi_rr(self):
		self.run_test("한마디", "{{ko-IPA}}", "hanmadi", "rr")
	def test_hanmadi_rrr(self):
		self.run_test("한마디", "{{ko-IPA}}", "hanmadi", "rrr")
	def test_hanmadi_mr(self):
		self.run_test("한마디", "{{ko-IPA}}", "hanmadi", "mr")
	def test_hanmadi_yr(self):
		self.run_test("한마디", "{{ko-IPA}}", "hanmati", "yr")
	def test_hanmadi_ipa(self):
		self.run_test("한마디", "{{ko-IPA}}", "[ha̠nma̠di]", "ipa")

	def test_ideollogi_ph(self):
		self.run_test("이데올로기", "{{ko-IPA}}", "이데올로기", "ph")
	def test_ideollogi_rr(self):
		self.run_test("이데올로기", "{{ko-IPA}}", "ide'ollogi", "rr")
	def test_ideollogi_rrr(self):
		self.run_test("이데올로기", "{{ko-IPA}}", "ide'ollogi", "rrr")
	def test_ideollogi_mr(self):
		self.run_test("이데올로기", "{{ko-IPA}}", "ideollogi", "mr")
	def test_ideollogi_yr(self):
		self.run_test("이데올로기", "{{ko-IPA}}", "itey.olloki", "yr")
	def test_ideollogi_ipa(self):
		self.run_test("이데올로기", "{{ko-IPA}}", "[ide̞o̞ɭɭo̞ɡi]", "ipa")

	def test_daejung_ph(self):
		self.run_test("대중", "{{ko-IPA|l=y}}", "대(ː)중/데(ː)중", "ph")
	def test_daejung_rr(self):
		self.run_test("대중", "{{ko-IPA|l=y}}", "daejung", "rr")
	def test_daejung_rrr(self):
		self.run_test("대중", "{{ko-IPA|l=y}}", "daejung", "rrr")
	def test_daejung_mr(self):
		self.run_test("대중", "{{ko-IPA|l=y}}", "taejung", "mr")
	def test_daejung_yr(self):
		self.run_test("대중", "{{ko-IPA|l=y}}", "tāycwung", "yr")
	def test_daejung_ipa(self):
		self.run_test("대중", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)d͡ʑuŋ] ~ [ˈte̞(ː)d͡ʑuŋ]", "ipa")

	def test_neureonada_ph(self):
		self.run_test("늘어나다", "{{ko-IPA}}", "느러나다", "ph")
	def test_neureonada_rr(self):
		self.run_test("늘어나다", "{{ko-IPA}}", "neureonada", "rr")
	def test_neureonada_rrr(self):
		self.run_test("늘어나다", "{{ko-IPA}}", "neul'eonada", "rrr")
	def test_neureonada_mr(self):
		self.run_test("늘어나다", "{{ko-IPA}}", "nŭrŏnada", "mr")
	def test_neureonada_yr(self):
		self.run_test("늘어나다", "{{ko-IPA}}", "nul.enata", "yr")
	def test_neureonada_ipa(self):
		self.run_test("늘어나다", "{{ko-IPA}}", "[nɯɾʌ̹na̠da̠]", "ipa")

	def test_malsseum_ph(self):
		self.run_test("말씀", "{{ko-IPA|l=y}}", "말(ː)씀", "ph")
	def test_malsseum_rr(self):
		self.run_test("말씀", "{{ko-IPA|l=y}}", "malsseum", "rr")
	def test_malsseum_rrr(self):
		self.run_test("말씀", "{{ko-IPA|l=y}}", "mal'sseum", "rrr")
	def test_malsseum_mr(self):
		self.run_test("말씀", "{{ko-IPA|l=y}}", "malssŭm", "mr")
	def test_malsseum_yr(self):
		self.run_test("말씀", "{{ko-IPA|l=y}}", "māl.ssum", "yr")
	def test_malsseum_ipa(self):
		self.run_test("말씀", "{{ko-IPA|l=y}}", "[ˈma̠(ː)ɭs͈ɯm]", "ipa")

	def test_gwaenchanta_ph(self):
		self.run_test("괜찮다", "{{ko-IPA}}", "괜찬타/궨찬타", "ph")
	def test_gwaenchanta_rr(self):
		self.run_test("괜찮다", "{{ko-IPA}}", "gwaenchanta", "rr")
	def test_gwaenchanta_rrr(self):
		self.run_test("괜찮다", "{{ko-IPA}}", "gwaenchanhda", "rrr")
	def test_gwaenchanta_mr(self):
		self.run_test("괜찮다", "{{ko-IPA}}", "kwaench'ant'a", "mr")
	def test_gwaenchanta_yr(self):
		self.run_test("괜찮다", "{{ko-IPA}}", "kwayn.chanhta", "yr")
	def test_gwaenchanta_ipa(self):
		self.run_test("괜찮다", "{{ko-IPA}}", "[kwɛɲt͡ɕʰa̠ntʰa̠] ~ [kwe̞ɲt͡ɕʰa̠ntʰa̠]", "ipa")

	def test_nunmul_ph(self):
		self.run_test("눈물", "{{ko-IPA}}", "눈물", "ph")
	def test_nunmul_rr(self):
		self.run_test("눈물", "{{ko-IPA}}", "nunmul", "rr")
	def test_nunmul_rrr(self):
		self.run_test("눈물", "{{ko-IPA}}", "nunmul", "rrr")
	def test_nunmul_mr(self):
		self.run_test("눈물", "{{ko-IPA}}", "nunmul", "mr")
	def test_nunmul_yr(self):
		self.run_test("눈물", "{{ko-IPA}}", "nwunmul", "yr")
	def test_nunmul_ipa(self):
		self.run_test("눈물", "{{ko-IPA}}", "[nunmuɭ]", "ipa")

	def test_seullabeu_ph(self):
		self.run_test("슬라브", "{{ko-IPA}}", "슬라브", "ph")
	def test_seullabeu_rr(self):
		self.run_test("슬라브", "{{ko-IPA}}", "seullabeu", "rr")
	def test_seullabeu_rrr(self):
		self.run_test("슬라브", "{{ko-IPA}}", "seullabeu", "rrr")
	def test_seullabeu_mr(self):
		self.run_test("슬라브", "{{ko-IPA}}", "sŭllabŭ", "mr")
	def test_seullabeu_yr(self):
		self.run_test("슬라브", "{{ko-IPA}}", "sullapu", "yr")
	def test_seullabeu_ipa(self):
		self.run_test("슬라브", "{{ko-IPA}}", "[sʰɯɭɭa̠bɯ]", "ipa")

	def test_ya_ph(self):
		self.run_test("야", "{{ko-ipa|l=y}}", "야(ː)", "ph")
	def test_ya_rr(self):
		self.run_test("야", "{{ko-ipa|l=y}}", "ya", "rr")
	def test_ya_rrr(self):
		self.run_test("야", "{{ko-ipa|l=y}}", "ya", "rrr")
	def test_ya_mr(self):
		self.run_test("야", "{{ko-ipa|l=y}}", "ya", "mr")
	def test_ya_yr(self):
		self.run_test("야", "{{ko-ipa|l=y}}", "yā", "yr")
	def test_ya_ipa(self):
		self.run_test("야", "{{ko-ipa|l=y}}", "[ja̠(ː)]", "ipa")

	def test_yeojeonhi_ph(self):
		self.run_test("여전히", "{{ko-IPA}}", "여전히", "ph")
	def test_yeojeonhi_rr(self):
		self.run_test("여전히", "{{ko-IPA}}", "yeojeonhi", "rr")
	def test_yeojeonhi_rrr(self):
		self.run_test("여전히", "{{ko-IPA}}", "yeojeonhi", "rrr")
	def test_yeojeonhi_mr(self):
		self.run_test("여전히", "{{ko-IPA}}", "yŏjŏnhi", "mr")
	def test_yeojeonhi_yr(self):
		self.run_test("여전히", "{{ko-IPA}}", "yecen.hi", "yr")
	def test_yeojeonhi_ipa(self):
		self.run_test("여전히", "{{ko-IPA}}", "[jʌ̹d͡ʑʌ̹nʝi]", "ipa")

	def test_pihada_ph(self):
		self.run_test("피하다", "{{ko-IPA|l=y}}", "피(ː)하다", "ph")
	def test_pihada_rr(self):
		self.run_test("피하다", "{{ko-IPA|l=y}}", "pihada", "rr")
	def test_pihada_rrr(self):
		self.run_test("피하다", "{{ko-IPA|l=y}}", "pihada", "rrr")
	def test_pihada_mr(self):
		self.run_test("피하다", "{{ko-IPA|l=y}}", "p'ihada", "mr")
	def test_pihada_yr(self):
		self.run_test("피하다", "{{ko-IPA|l=y}}", "phīhata", "yr")
	def test_pihada_ipa(self):
		self.run_test("피하다", "{{ko-IPA|l=y}}", "[ˈpʰi(ː)ɦa̠da̠]", "ipa")

	def test_juin_ph(self):
		self.run_test("주인", "{{ko-IPA}}", "주인", "ph")
	def test_juin_rr(self):
		self.run_test("주인", "{{ko-IPA}}", "ju'in", "rr")
	def test_juin_rrr(self):
		self.run_test("주인", "{{ko-IPA}}", "ju'in", "rrr")
	def test_juin_mr(self):
		self.run_test("주인", "{{ko-IPA}}", "chuin", "mr")
	def test_juin_yr(self):
		self.run_test("주인", "{{ko-IPA}}", "cwuin", "yr")
	def test_juin_ipa(self):
		self.run_test("주인", "{{ko-IPA}}", "[t͡ɕuin]", "ipa")

	def test_geochida_ph(self):
		self.run_test("거치다", "{{ko-IPA}}", "거치다", "ph")
	def test_geochida_rr(self):
		self.run_test("거치다", "{{ko-IPA}}", "geochida", "rr")
	def test_geochida_rrr(self):
		self.run_test("거치다", "{{ko-IPA}}", "geochida", "rrr")
	def test_geochida_mr(self):
		self.run_test("거치다", "{{ko-IPA}}", "kŏch'ida", "mr")
	def test_geochida_yr(self):
		self.run_test("거치다", "{{ko-IPA}}", "ke.chita", "yr")
	def test_geochida_ipa(self):
		self.run_test("거치다", "{{ko-IPA}}", "[kʌ̹t͡ɕʰida̠]", "ipa")

	def test_naagada_ph(self):
		self.run_test("나아가다", "{{ko-IPA}}", "나아가다", "ph")
	def test_naagada_rr(self):
		self.run_test("나아가다", "{{ko-IPA}}", "naagada", "rr")
	def test_naagada_rrr(self):
		self.run_test("나아가다", "{{ko-IPA}}", "naagada", "rrr")
	def test_naagada_mr(self):
		self.run_test("나아가다", "{{ko-IPA}}", "naagada", "mr")
	def test_naagada_yr(self):
		self.run_test("나아가다", "{{ko-IPA}}", "naakata", "yr")
	def test_naagada_ipa(self):
		self.run_test("나아가다", "{{ko-IPA}}", "[na̠a̠ɡa̠da̠]", "ipa")

	def test_gakjong_ph(self):
		self.run_test("각종", "{{ko-IPA}}", "각쫑", "ph")
	def test_gakjong_rr(self):
		self.run_test("각종", "{{ko-IPA}}", "gakjong", "rr")
	def test_gakjong_rrr(self):
		self.run_test("각종", "{{ko-IPA}}", "gagjong", "rrr")
	def test_gakjong_mr(self):
		self.run_test("각종", "{{ko-IPA}}", "kakchong", "mr")
	def test_gakjong_yr(self):
		self.run_test("각종", "{{ko-IPA}}", "kakcong", "yr")
	def test_gakjong_ipa(self):
		self.run_test("각종", "{{ko-IPA}}", "[ka̠k̚t͡ɕ͈o̞ŋ]", "ipa")

	def test_geureoda_ph(self):
		self.run_test("그러다", "{{ko-IPA|a=Ko-그러다.oga}}", "그러다", "ph")
	def test_geureoda_rr(self):
		self.run_test("그러다", "{{ko-IPA|a=Ko-그러다.oga}}", "geureoda", "rr")
	def test_geureoda_rrr(self):
		self.run_test("그러다", "{{ko-IPA|a=Ko-그러다.oga}}", "geuleoda", "rrr")
	def test_geureoda_mr(self):
		self.run_test("그러다", "{{ko-IPA|a=Ko-그러다.oga}}", "kŭrŏda", "mr")
	def test_geureoda_yr(self):
		self.run_test("그러다", "{{ko-IPA|a=Ko-그러다.oga}}", "kuleta", "yr")
	def test_geureoda_ipa(self):
		self.run_test("그러다", "{{ko-IPA|a=Ko-그러다.oga}}", "[kɯɾʌ̹da̠]", "ipa")

	def test_ingan_ph(self):
		self.run_test("인간", "{{ko-IPA|a=y}}", "인간", "ph")
	def test_ingan_rr(self):
		self.run_test("인간", "{{ko-IPA|a=y}}", "in'gan", "rr")
	def test_ingan_rrr(self):
		self.run_test("인간", "{{ko-IPA|a=y}}", "ingan", "rrr")
	def test_ingan_mr(self):
		self.run_test("인간", "{{ko-IPA|a=y}}", "in'gan", "mr")
	def test_ingan_yr(self):
		self.run_test("인간", "{{ko-IPA|a=y}}", "inkan", "yr")
	def test_ingan_ipa(self):
		self.run_test("인간", "{{ko-IPA|a=y}}", "[inɡa̠n]", "ipa")

	def test_gaji_ph(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "가지", "ph")
	def test_gaji_rr(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "gaji", "rr")
	def test_gaji_rrr(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "gaji", "rrr")
	def test_gaji_mr(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "kaji", "mr")
	def test_gaji_yr(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "kaci", "yr")
	def test_gaji_ipa(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "[ka̠d͡ʑi]", "ipa")
	def test_gaji_ph_1(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "가지", "ph")
	def test_gaji_rr_1(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "gaji", "rr")
	def test_gaji_rrr_1(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "gaji", "rrr")
	def test_gaji_mr_1(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "kaji", "mr")
	def test_gaji_yr_1(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "kaci", "yr")
	def test_gaji_ipa_1(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "[ka̠d͡ʑi]", "ipa")
	def test_gaji_ph_2(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "가지", "ph")
	def test_gaji_rr_2(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "gaji", "rr")
	def test_gaji_rrr_2(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "gaji", "rrr")
	def test_gaji_mr_2(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "kaji", "mr")
	def test_gaji_yr_2(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "kaci", "yr")
	def test_gaji_ipa_2(self):
		self.run_test("가지", "{{ko-IPA|a=y}}", "[ka̠d͡ʑi]", "ipa")
	def test_gaji_ph_3(self):
		self.run_test("가지", "{{ko-IPA|a=y|l=y}}", "가(ː)지", "ph")
	def test_gaji_rr_3(self):
		self.run_test("가지", "{{ko-IPA|a=y|l=y}}", "gaji", "rr")
	def test_gaji_rrr_3(self):
		self.run_test("가지", "{{ko-IPA|a=y|l=y}}", "gaji", "rrr")
	def test_gaji_mr_3(self):
		self.run_test("가지", "{{ko-IPA|a=y|l=y}}", "kaji", "mr")
	def test_gaji_yr_3(self):
		self.run_test("가지", "{{ko-IPA|a=y|l=y}}", "kāci", "yr")
	def test_gaji_ipa_3(self):
		self.run_test("가지", "{{ko-IPA|a=y|l=y}}", "[ˈka̠(ː)d͡ʑi]", "ipa")

	def test_geugeo_ph(self):
		self.run_test("그거", "{{ko-IPA|a=y}}", "그거", "ph")
	def test_geugeo_rr(self):
		self.run_test("그거", "{{ko-IPA|a=y}}", "geugeo", "rr")
	def test_geugeo_rrr(self):
		self.run_test("그거", "{{ko-IPA|a=y}}", "geugeo", "rrr")
	def test_geugeo_mr(self):
		self.run_test("그거", "{{ko-IPA|a=y}}", "kŭgŏ", "mr")
	def test_geugeo_yr(self):
		self.run_test("그거", "{{ko-IPA|a=y}}", "kuke", "yr")
	def test_geugeo_ipa(self):
		self.run_test("그거", "{{ko-IPA|a=y}}", "[kɯɡʌ̹]", "ipa")

	def test_tteoreojida_ph(self):
		self.run_test("떨어지다", "{{ko-IPA|a=y}}", "떠러지다", "ph")
	def test_tteoreojida_rr(self):
		self.run_test("떨어지다", "{{ko-IPA|a=y}}", "tteoreojida", "rr")
	def test_tteoreojida_rrr(self):
		self.run_test("떨어지다", "{{ko-IPA|a=y}}", "tteol'eojida", "rrr")
	def test_tteoreojida_mr(self):
		self.run_test("떨어지다", "{{ko-IPA|a=y}}", "ttŏrŏjida", "mr")
	def test_tteoreojida_yr(self):
		self.run_test("떨어지다", "{{ko-IPA|a=y}}", "ttel.ecita", "yr")
	def test_tteoreojida_ipa(self):
		self.run_test("떨어지다", "{{ko-IPA|a=y}}", "[t͈ʌ̹ɾʌ̹d͡ʑida̠]", "ipa")

	def test_sangtae_ph(self):
		self.run_test("상태", "{{ko-IPA|a=y}}", "상태/상테", "ph")
	def test_sangtae_rr(self):
		self.run_test("상태", "{{ko-IPA|a=y}}", "sangtae", "rr")
	def test_sangtae_rrr(self):
		self.run_test("상태", "{{ko-IPA|a=y}}", "sangtae", "rrr")
	def test_sangtae_mr(self):
		self.run_test("상태", "{{ko-IPA|a=y}}", "sangt'ae", "mr")
	def test_sangtae_yr(self):
		self.run_test("상태", "{{ko-IPA|a=y}}", "sangthay", "yr")
	def test_sangtae_ipa(self):
		self.run_test("상태", "{{ko-IPA|a=y}}", "[sʰa̠ŋtʰɛ] ~ [sʰa̠ŋtʰe̞]", "ipa")

	def test_iyu_ph(self):
		self.run_test("이유", "{{ko-IPA|l=y|a=y}}", "이(ː)유", "ph")
	def test_iyu_rr(self):
		self.run_test("이유", "{{ko-IPA|l=y|a=y}}", "iyu", "rr")
	def test_iyu_rrr(self):
		self.run_test("이유", "{{ko-IPA|l=y|a=y}}", "iyu", "rrr")
	def test_iyu_mr(self):
		self.run_test("이유", "{{ko-IPA|l=y|a=y}}", "iyu", "mr")
	def test_iyu_yr(self):
		self.run_test("이유", "{{ko-IPA|l=y|a=y}}", "ī.yu", "yr")
	def test_iyu_ipa(self):
		self.run_test("이유", "{{ko-IPA|l=y|a=y}}", "[ˈi(ː)ju]", "ipa")

	def test_yeongu_ph(self):
		self.run_test("연구", "{{ko-IPA|l=y|a=y}}", "연(ː)구", "ph")
	def test_yeongu_rr(self):
		self.run_test("연구", "{{ko-IPA|l=y|a=y}}", "yeon'gu", "rr")
	def test_yeongu_rrr(self):
		self.run_test("연구", "{{ko-IPA|l=y|a=y}}", "yeongu", "rrr")
	def test_yeongu_mr(self):
		self.run_test("연구", "{{ko-IPA|l=y|a=y}}", "yŏn'gu", "mr")
	def test_yeongu_yr(self):
		self.run_test("연구", "{{ko-IPA|l=y|a=y}}", "yēnkwu", "yr")
	def test_yeongu_ipa(self):
		self.run_test("연구", "{{ko-IPA|l=y|a=y}}", "[ˈjɘ(ː)nɡu]", "ipa")

	def test_jari_ph(self):
		self.run_test("자리", "{{ko-IPA|a=y}}", "자리", "ph")
	def test_jari_rr(self):
		self.run_test("자리", "{{ko-IPA|a=y}}", "jari", "rr")
	def test_jari_rrr(self):
		self.run_test("자리", "{{ko-IPA|a=y}}", "jali", "rrr")
	def test_jari_mr(self):
		self.run_test("자리", "{{ko-IPA|a=y}}", "chari", "mr")
	def test_jari_yr(self):
		self.run_test("자리", "{{ko-IPA|a=y}}", "cali", "yr")
	def test_jari_ipa(self):
		self.run_test("자리", "{{ko-IPA|a=y}}", "[t͡ɕa̠ɾi]", "ipa")

	def test_yesul_ph(self):
		self.run_test("예술", "{{ko-IPA|l=y|a=y}}", "예(ː)술", "ph")
	def test_yesul_rr(self):
		self.run_test("예술", "{{ko-IPA|l=y|a=y}}", "yesul", "rr")
	def test_yesul_rrr(self):
		self.run_test("예술", "{{ko-IPA|l=y|a=y}}", "yesul", "rrr")
	def test_yesul_mr(self):
		self.run_test("예술", "{{ko-IPA|l=y|a=y}}", "yesul", "mr")
	def test_yesul_yr(self):
		self.run_test("예술", "{{ko-IPA|l=y|a=y}}", "yēyswul", "yr")
	def test_yesul_ipa(self):
		self.run_test("예술", "{{ko-IPA|l=y|a=y}}", "[ˈje̞(ː)sʰuɭ]", "ipa")

	def test_seonsaengnim_ph(self):
		self.run_test("선생님", "{{ko-IPA|a=y}}", "선생님/선셍님", "ph")
	def test_seonsaengnim_rr(self):
		self.run_test("선생님", "{{ko-IPA|a=y}}", "seonsaengnim", "rr")
	def test_seonsaengnim_rrr(self):
		self.run_test("선생님", "{{ko-IPA|a=y}}", "seonsaengnim", "rrr")
	def test_seonsaengnim_mr(self):
		self.run_test("선생님", "{{ko-IPA|a=y}}", "sŏnsaengnim", "mr")
	def test_seonsaengnim_yr(self):
		self.run_test("선생님", "{{ko-IPA|a=y}}", "sensayngnim", "yr")
	def test_seonsaengnim_ipa(self):
		self.run_test("선생님", "{{ko-IPA|a=y}}", "[sʰʌ̹nsʰɛŋnim] ~ [sʰʌ̹nsʰe̞ŋnim]", "ipa")

	def test_gyeongje_ph(self):
		self.run_test("경제", "{{ko-ipa|a=y}}", "경제", "ph")
	def test_gyeongje_rr(self):
		self.run_test("경제", "{{ko-ipa|a=y}}", "gyeongje", "rr")
	def test_gyeongje_rrr(self):
		self.run_test("경제", "{{ko-ipa|a=y}}", "gyeongje", "rrr")
	def test_gyeongje_mr(self):
		self.run_test("경제", "{{ko-ipa|a=y}}", "kyŏngje", "mr")
	def test_gyeongje_yr(self):
		self.run_test("경제", "{{ko-ipa|a=y}}", "kyengcey", "yr")
	def test_gyeongje_ipa(self):
		self.run_test("경제", "{{ko-ipa|a=y}}", "[kjʌ̹ŋd͡ʑe̞]", "ipa")

	def test_bangbeop_ph(self):
		self.run_test("방법", "{{ko-IPA|a=y}}", "방법", "ph")
	def test_bangbeop_rr(self):
		self.run_test("방법", "{{ko-IPA|a=y}}", "bangbeop", "rr")
	def test_bangbeop_rrr(self):
		self.run_test("방법", "{{ko-IPA|a=y}}", "bangbeob", "rrr")
	def test_bangbeop_mr(self):
		self.run_test("방법", "{{ko-IPA|a=y}}", "pangbŏp", "mr")
	def test_bangbeop_yr(self):
		self.run_test("방법", "{{ko-IPA|a=y}}", "pangpep", "yr")
	def test_bangbeop_ipa(self):
		self.run_test("방법", "{{ko-IPA|a=y}}", "[pa̠ŋbʌ̹p̚]", "ipa")

	def test_jeom_ph(self):
		self.run_test("점", "{{ko-ipa}}", "점", "ph")
	def test_jeom_rr(self):
		self.run_test("점", "{{ko-ipa}}", "jeom", "rr")
	def test_jeom_rrr(self):
		self.run_test("점", "{{ko-ipa}}", "jeom", "rrr")
	def test_jeom_mr(self):
		self.run_test("점", "{{ko-ipa}}", "chŏm", "mr")
	def test_jeom_yr(self):
		self.run_test("점", "{{ko-ipa}}", "cem", "yr")
	def test_jeom_ipa(self):
		self.run_test("점", "{{ko-ipa}}", "[t͡ɕʌ̹m]", "ipa")

	def test_gogae_ph(self):
		self.run_test("고개", "{{ko-IPA}}", "고개/고게", "ph")
	def test_gogae_rr(self):
		self.run_test("고개", "{{ko-IPA}}", "gogae", "rr")
	def test_gogae_rrr(self):
		self.run_test("고개", "{{ko-IPA}}", "gogae", "rrr")
	def test_gogae_mr(self):
		self.run_test("고개", "{{ko-IPA}}", "kogae", "mr")
	def test_gogae_yr(self):
		self.run_test("고개", "{{ko-IPA}}", "kokay", "yr")
	def test_gogae_ipa(self):
		self.run_test("고개", "{{ko-IPA}}", "[ko̞ɡɛ] ~ [ko̞ɡe̞]", "ipa")

	def test_haru_ph(self):
		self.run_test("하루", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-하루.wav}}", "하루", "ph")
	def test_haru_rr(self):
		self.run_test("하루", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-하루.wav}}", "haru", "rr")
	def test_haru_rrr(self):
		self.run_test("하루", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-하루.wav}}", "halu", "rrr")
	def test_haru_mr(self):
		self.run_test("하루", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-하루.wav}}", "haru", "mr")
	def test_haru_yr(self):
		self.run_test("하루", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-하루.wav}}", "halwu", "yr")
	def test_haru_ipa(self):
		self.run_test("하루", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-하루.wav}}", "[ha̠ɾu]", "ipa")

	def test_hanbeon_ph(self):
		self.run_test("한번", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-한번.wav}}", "한번", "ph")
	def test_hanbeon_rr(self):
		self.run_test("한번", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-한번.wav}}", "hanbeon", "rr")
	def test_hanbeon_rrr(self):
		self.run_test("한번", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-한번.wav}}", "hanbeon", "rrr")
	def test_hanbeon_mr(self):
		self.run_test("한번", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-한번.wav}}", "hanbŏn", "mr")
	def test_hanbeon_yr(self):
		self.run_test("한번", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-한번.wav}}", "hanpen", "yr")
	def test_hanbeon_ipa(self):
		self.run_test("한번", "{{ko-IPA|a=LL-Q9176 (kor)-HappyMidnight-한번.wav}}", "[ha̠nbʌ̹n]", "ipa")

	def test_seongeo_ph(self):
		self.run_test("선거", "{{ko-IPA|l=y|a=y}}", "선(ː)거", "ph")
	def test_seongeo_rr(self):
		self.run_test("선거", "{{ko-IPA|l=y|a=y}}", "seon'geo", "rr")
	def test_seongeo_rrr(self):
		self.run_test("선거", "{{ko-IPA|l=y|a=y}}", "seongeo", "rrr")
	def test_seongeo_mr(self):
		self.run_test("선거", "{{ko-IPA|l=y|a=y}}", "sŏn'gŏ", "mr")
	def test_seongeo_yr(self):
		self.run_test("선거", "{{ko-IPA|l=y|a=y}}", "sēnke", "yr")
	def test_seongeo_ipa(self):
		self.run_test("선거", "{{ko-IPA|l=y|a=y}}", "[ˈsʰɘ(ː)nɡʌ̹]", "ipa")

	def test_gwanhada_ph(self):
		self.run_test("관하다", "{{ko-IPA|a=y}}", "관하다", "ph")
	def test_gwanhada_rr(self):
		self.run_test("관하다", "{{ko-IPA|a=y}}", "gwanhada", "rr")
	def test_gwanhada_rrr(self):
		self.run_test("관하다", "{{ko-IPA|a=y}}", "gwanhada", "rrr")
	def test_gwanhada_mr(self):
		self.run_test("관하다", "{{ko-IPA|a=y}}", "kwanhada", "mr")
	def test_gwanhada_yr(self):
		self.run_test("관하다", "{{ko-IPA|a=y}}", "kwan.hata", "yr")
	def test_gwanhada_ipa(self):
		self.run_test("관하다", "{{ko-IPA|a=y}}", "[kwa̠nɦa̠da̠]", "ipa")

	def test_iyonghada_ph(self):
		self.run_test("이용하다", "{{ko-IPA|l=y|a=y}}", "이(ː)용하다", "ph")
	def test_iyonghada_rr(self):
		self.run_test("이용하다", "{{ko-IPA|l=y|a=y}}", "iyonghada", "rr")
	def test_iyonghada_rrr(self):
		self.run_test("이용하다", "{{ko-IPA|l=y|a=y}}", "iyonghada", "rrr")
	def test_iyonghada_mr(self):
		self.run_test("이용하다", "{{ko-IPA|l=y|a=y}}", "iyonghada", "mr")
	def test_iyonghada_yr(self):
		self.run_test("이용하다", "{{ko-IPA|l=y|a=y}}", "ī.yonghata", "yr")
	def test_iyonghada_ipa(self):
		self.run_test("이용하다", "{{ko-IPA|l=y|a=y}}", "[ˈi(ː)joŋɦa̠da̠]", "ipa")

	def test_jungsim_ph(self):
		self.run_test("중심", "{{ko-IPA|a=y}}", "중심", "ph")
	def test_jungsim_rr(self):
		self.run_test("중심", "{{ko-IPA|a=y}}", "jungsim", "rr")
	def test_jungsim_rrr(self):
		self.run_test("중심", "{{ko-IPA|a=y}}", "jungsim", "rrr")
	def test_jungsim_mr(self):
		self.run_test("중심", "{{ko-IPA|a=y}}", "chungsim", "mr")
	def test_jungsim_yr(self):
		self.run_test("중심", "{{ko-IPA|a=y}}", "cwungsim", "yr")
	def test_jungsim_ipa(self):
		self.run_test("중심", "{{ko-IPA|a=y}}", "[t͡ɕuŋɕʰim]", "ipa")

	def test_hwaldong_ph(self):
		self.run_test("활동", "{{ko-IPA|com=1|a=y}}", "활똥", "ph")
	def test_hwaldong_rr(self):
		self.run_test("활동", "{{ko-IPA|com=1|a=y}}", "hwaldong", "rr")
	def test_hwaldong_rrr(self):
		self.run_test("활동", "{{ko-IPA|com=1|a=y}}", "hwaldong", "rrr")
	def test_hwaldong_mr(self):
		self.run_test("활동", "{{ko-IPA|com=1|a=y}}", "hwaltong", "mr")
	def test_hwaldong_yr(self):
		self.run_test("활동", "{{ko-IPA|com=1|a=y}}", "hwalqtong", "yr")
	def test_hwaldong_ipa(self):
		self.run_test("활동", "{{ko-IPA|com=1|a=y}}", "[ɸwa̠ɭt͈o̞ŋ]", "ipa")

	def test_jeonche_ph(self):
		self.run_test("전체", "{{ko-IPA|a=y}}", "전체", "ph")
	def test_jeonche_rr(self):
		self.run_test("전체", "{{ko-IPA|a=y}}", "jeonche", "rr")
	def test_jeonche_rrr(self):
		self.run_test("전체", "{{ko-IPA|a=y}}", "jeonche", "rrr")
	def test_jeonche_mr(self):
		self.run_test("전체", "{{ko-IPA|a=y}}", "chŏnch'e", "mr")
	def test_jeonche_yr(self):
		self.run_test("전체", "{{ko-IPA|a=y}}", "cen.chey", "yr")
	def test_jeonche_ipa(self):
		self.run_test("전체", "{{ko-IPA|a=y}}", "[t͡ɕʌ̹ɲt͡ɕʰe̞]", "ipa")

	def test_jeongmal_ph(self):
		self.run_test("정말", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-정말.wav}}", "정(ː)말", "ph")
	def test_jeongmal_rr(self):
		self.run_test("정말", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-정말.wav}}", "jeongmal", "rr")
	def test_jeongmal_rrr(self):
		self.run_test("정말", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-정말.wav}}", "jeongmal", "rrr")
	def test_jeongmal_mr(self):
		self.run_test("정말", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-정말.wav}}", "chŏngmal", "mr")
	def test_jeongmal_yr(self):
		self.run_test("정말", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-정말.wav}}", "cēngmal", "yr")
	def test_jeongmal_ipa(self):
		self.run_test("정말", "{{ko-IPA|l=y|a=LL-Q9176 (kor)-HappyMidnight-정말.wav}}", "[ˈt͡ɕɘ(ː)ŋma̠ɭ]", "ipa")

	def test_jonjae_ph(self):
		self.run_test("존재", "{{ko-IPA|a=y}}", "존재/존제", "ph")
	def test_jonjae_rr(self):
		self.run_test("존재", "{{ko-IPA|a=y}}", "jonjae", "rr")
	def test_jonjae_rrr(self):
		self.run_test("존재", "{{ko-IPA|a=y}}", "jonjae", "rrr")
	def test_jonjae_mr(self):
		self.run_test("존재", "{{ko-IPA|a=y}}", "chonjae", "mr")
	def test_jonjae_yr(self):
		self.run_test("존재", "{{ko-IPA|a=y}}", "con.cay", "yr")
	def test_jonjae_ipa(self):
		self.run_test("존재", "{{ko-IPA|a=y}}", "[t͡ɕo̞ɲd͡ʑɛ] ~ [t͡ɕo̞ɲd͡ʑe̞]", "ipa")

	def test_allyeojida_ph(self):
		self.run_test("알려지다", "{{ko-IPA|a=y}}", "알려지다", "ph")
	def test_allyeojida_rr(self):
		self.run_test("알려지다", "{{ko-IPA|a=y}}", "allyeojida", "rr")
	def test_allyeojida_rrr(self):
		self.run_test("알려지다", "{{ko-IPA|a=y}}", "allyeojida", "rrr")
	def test_allyeojida_mr(self):
		self.run_test("알려지다", "{{ko-IPA|a=y}}", "allyŏjida", "mr")
	def test_allyeojida_yr(self):
		self.run_test("알려지다", "{{ko-IPA|a=y}}", "allyecita", "yr")
	def test_allyeojida_ipa(self):
		self.run_test("알려지다", "{{ko-IPA|a=y}}", "[a̠ʎʎʌ̹d͡ʑida̠]", "ipa")

	def test_jalhada_ph(self):
		self.run_test("잘하다", "{{ko-IPA}}", "잘하다", "ph")
	def test_jalhada_rr(self):
		self.run_test("잘하다", "{{ko-IPA}}", "jalhada", "rr")
	def test_jalhada_rrr(self):
		self.run_test("잘하다", "{{ko-IPA}}", "jalhada", "rrr")
	def test_jalhada_mr(self):
		self.run_test("잘하다", "{{ko-IPA}}", "charhada", "mr")
	def test_jalhada_yr(self):
		self.run_test("잘하다", "{{ko-IPA}}", "cal.hata", "yr")
	def test_jalhada_ipa(self):
		self.run_test("잘하다", "{{ko-IPA}}", "[t͡ɕa̠ɾɦa̠da̠]", "ipa")

	def test_bihada_ph(self):
		self.run_test("비하다", "{{ko-IPA|l=y}}", "비(ː)하다", "ph")
	def test_bihada_rr(self):
		self.run_test("비하다", "{{ko-IPA|l=y}}", "bihada", "rr")
	def test_bihada_rrr(self):
		self.run_test("비하다", "{{ko-IPA|l=y}}", "bihada", "rrr")
	def test_bihada_mr(self):
		self.run_test("비하다", "{{ko-IPA|l=y}}", "pihada", "mr")
	def test_bihada_yr(self):
		self.run_test("비하다", "{{ko-IPA|l=y}}", "pīhata", "yr")
	def test_bihada_ipa(self):
		self.run_test("비하다", "{{ko-IPA|l=y}}", "[ˈpi(ː)ɦa̠da̠]", "ipa")

	def test_geureohada_ph(self):
		self.run_test("그러하다", "{{ko-IPA}}", "그러하다", "ph")
	def test_geureohada_rr(self):
		self.run_test("그러하다", "{{ko-IPA}}", "geureohada", "rr")
	def test_geureohada_rrr(self):
		self.run_test("그러하다", "{{ko-IPA}}", "geuleohada", "rrr")
	def test_geureohada_mr(self):
		self.run_test("그러하다", "{{ko-IPA}}", "kŭrŏhada", "mr")
	def test_geureohada_yr(self):
		self.run_test("그러하다", "{{ko-IPA}}", "kulehata", "yr")
	def test_geureohada_ipa(self):
		self.run_test("그러하다", "{{ko-IPA}}", "[kɯɾʌ̹ɦa̠da̠]", "ipa")

	def test_haedong_ph(self):
		self.run_test("해동", "{{ko-IPA|l=y}}", "해(ː)동/헤(ː)동", "ph")
	def test_haedong_rr(self):
		self.run_test("해동", "{{ko-IPA|l=y}}", "haedong", "rr")
	def test_haedong_rrr(self):
		self.run_test("해동", "{{ko-IPA|l=y}}", "haedong", "rrr")
	def test_haedong_mr(self):
		self.run_test("해동", "{{ko-IPA|l=y}}", "haedong", "mr")
	def test_haedong_yr(self):
		self.run_test("해동", "{{ko-IPA|l=y}}", "hāytong", "yr")
	def test_haedong_ipa(self):
		self.run_test("해동", "{{ko-IPA|l=y}}", "[ˈhɛ(ː)do̞ŋ] ~ [ˈhe̞(ː)do̞ŋ]", "ipa")

	def test_seuda_ph(self):
		self.run_test("세우다", "{{ko-IPA}}", "세우다", "ph")
	def test_seuda_rr(self):
		self.run_test("세우다", "{{ko-IPA}}", "se'uda", "rr")
	def test_seuda_rrr(self):
		self.run_test("세우다", "{{ko-IPA}}", "se'uda", "rrr")
	def test_seuda_mr(self):
		self.run_test("세우다", "{{ko-IPA}}", "seuda", "mr")
	def test_seuda_yr(self):
		self.run_test("세우다", "{{ko-IPA}}", "seywuta", "yr")
	def test_seuda_ipa(self):
		self.run_test("세우다", "{{ko-IPA}}", "[sʰe̞uda̠]", "ipa")

	def test_segi_ph(self):
		self.run_test("세기", "{{ko-ipa|l=y}}", "세(ː)기", "ph")
	def test_segi_rr(self):
		self.run_test("세기", "{{ko-ipa|l=y}}", "segi", "rr")
	def test_segi_rrr(self):
		self.run_test("세기", "{{ko-ipa|l=y}}", "segi", "rrr")
	def test_segi_mr(self):
		self.run_test("세기", "{{ko-ipa|l=y}}", "segi", "mr")
	def test_segi_yr(self):
		self.run_test("세기", "{{ko-ipa|l=y}}", "sēyki", "yr")
	def test_segi_ipa(self):
		self.run_test("세기", "{{ko-ipa|l=y}}", "[ˈsʰe̞(ː)ɡi]", "ipa")

	def test_gyesok_ph(self):
		self.run_test("계속", "{{ko-IPA|l=y}}", "계(ː)속/게(ː)속", "ph")
	def test_gyesok_rr(self):
		self.run_test("계속", "{{ko-IPA|l=y}}", "gyesok", "rr")
	def test_gyesok_rrr(self):
		self.run_test("계속", "{{ko-IPA|l=y}}", "gyesog", "rrr")
	def test_gyesok_mr(self):
		self.run_test("계속", "{{ko-IPA|l=y}}", "kyesok", "mr")
	def test_gyesok_yr(self):
		self.run_test("계속", "{{ko-IPA|l=y}}", "kyēysok", "yr")
	def test_gyesok_ipa(self):
		self.run_test("계속", "{{ko-IPA|l=y}}", "[ˈkje̞(ː)sʰo̞k̚] ~ [ˈke̞(ː)sʰo̞k̚]", "ipa")

	def test_seonggyeok_ph(self):
		self.run_test("성격", "{{ko-IPA|l=y|com=1}}", "성(ː)껵", "ph")
	def test_seonggyeok_rr(self):
		self.run_test("성격", "{{ko-IPA|l=y|com=1}}", "seonggyeok", "rr")
	def test_seonggyeok_rrr(self):
		self.run_test("성격", "{{ko-IPA|l=y|com=1}}", "seonggyeog", "rrr")
	def test_seonggyeok_mr(self):
		self.run_test("성격", "{{ko-IPA|l=y|com=1}}", "sŏngkyŏk", "mr")
	def test_seonggyeok_yr(self):
		self.run_test("성격", "{{ko-IPA|l=y|com=1}}", "sēngqkyek", "yr")
	def test_seonggyeok_ipa(self):
		self.run_test("성격", "{{ko-IPA|l=y|com=1}}", "[ˈsʰɘ(ː)ŋk͈jʌ̹k̚]", "ipa")

	def test_sago_ph(self):
		self.run_test("사고", "{{ko-IPA|l=y}}", "사(ː)고", "ph")
	def test_sago_rr(self):
		self.run_test("사고", "{{ko-IPA|l=y}}", "sago", "rr")
	def test_sago_rrr(self):
		self.run_test("사고", "{{ko-IPA|l=y}}", "sago", "rrr")
	def test_sago_mr(self):
		self.run_test("사고", "{{ko-IPA|l=y}}", "sago", "mr")
	def test_sago_yr(self):
		self.run_test("사고", "{{ko-IPA|l=y}}", "sāko", "yr")
	def test_sago_ipa(self):
		self.run_test("사고", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)ɡo̞]", "ipa")
	def test_sago_ph_1(self):
		self.run_test("사고", "{{ko-IPA}}", "사고", "ph")
	def test_sago_rr_1(self):
		self.run_test("사고", "{{ko-IPA}}", "sago", "rr")
	def test_sago_rrr_1(self):
		self.run_test("사고", "{{ko-IPA}}", "sago", "rrr")
	def test_sago_mr_1(self):
		self.run_test("사고", "{{ko-IPA}}", "sago", "mr")
	def test_sago_yr_1(self):
		self.run_test("사고", "{{ko-IPA}}", "sako", "yr")
	def test_sago_ipa_1(self):
		self.run_test("사고", "{{ko-IPA}}", "[sʰa̠ɡo̞]", "ipa")
	def test_sago_ph_2(self):
		self.run_test("사고", "{{ko-IPA}}", "사고", "ph")
	def test_sago_rr_2(self):
		self.run_test("사고", "{{ko-IPA}}", "sago", "rr")
	def test_sago_rrr_2(self):
		self.run_test("사고", "{{ko-IPA}}", "sago", "rrr")
	def test_sago_mr_2(self):
		self.run_test("사고", "{{ko-IPA}}", "sago", "mr")
	def test_sago_yr_2(self):
		self.run_test("사고", "{{ko-IPA}}", "sako", "yr")
	def test_sago_ipa_2(self):
		self.run_test("사고", "{{ko-IPA}}", "[sʰa̠ɡo̞]", "ipa")

	def test_ildan_ph(self):
		self.run_test("일단", "{{ko-IPA|com=1}}", "일딴", "ph")
	def test_ildan_rr(self):
		self.run_test("일단", "{{ko-IPA|com=1}}", "ildan", "rr")
	def test_ildan_rrr(self):
		self.run_test("일단", "{{ko-IPA|com=1}}", "ildan", "rrr")
	def test_ildan_mr(self):
		self.run_test("일단", "{{ko-IPA|com=1}}", "iltan", "mr")
	def test_ildan_yr(self):
		self.run_test("일단", "{{ko-IPA|com=1}}", "ilqtan", "yr")
	def test_ildan_ipa(self):
		self.run_test("일단", "{{ko-IPA|com=1}}", "[iɭt͈a̠n]", "ipa")

	def test_gamdok_ph(self):
		self.run_test("감독", "{{ko-IPA}}", "감독", "ph")
	def test_gamdok_rr(self):
		self.run_test("감독", "{{ko-IPA}}", "gamdok", "rr")
	def test_gamdok_rrr(self):
		self.run_test("감독", "{{ko-IPA}}", "gamdog", "rrr")
	def test_gamdok_mr(self):
		self.run_test("감독", "{{ko-IPA}}", "kamdok", "mr")
	def test_gamdok_yr(self):
		self.run_test("감독", "{{ko-IPA}}", "kamtok", "yr")
	def test_gamdok_ipa(self):
		self.run_test("감독", "{{ko-IPA}}", "[ka̠mdo̞k̚]", "ipa")

	def test_oeguk_ph(self):
		self.run_test("외국", "{{ko-IPA|l=y}}", "웨(ː)국/외(ː)국", "ph")
	def test_oeguk_rr(self):
		self.run_test("외국", "{{ko-IPA|l=y}}", "oeguk", "rr")
	def test_oeguk_rrr(self):
		self.run_test("외국", "{{ko-IPA|l=y}}", "oegug", "rrr")
	def test_oeguk_mr(self):
		self.run_test("외국", "{{ko-IPA|l=y}}", "oeguk", "mr")
	def test_oeguk_yr(self):
		self.run_test("외국", "{{ko-IPA|l=y}}", "ōykwuk", "yr")
	def test_oeguk_ipa(self):
		self.run_test("외국", "{{ko-IPA|l=y}}", "[ˈwe̞(ː)ɡuk̚] ~ [ˈø̞(ː)ɡuk̚]", "ipa")

	def test_jase_ph(self):
		self.run_test("자세", "{{ko-IPA}}", "자세", "ph")
	def test_jase_rr(self):
		self.run_test("자세", "{{ko-IPA}}", "jase", "rr")
	def test_jase_rrr(self):
		self.run_test("자세", "{{ko-IPA}}", "jase", "rrr")
	def test_jase_mr(self):
		self.run_test("자세", "{{ko-IPA}}", "chase", "mr")
	def test_jase_yr(self):
		self.run_test("자세", "{{ko-IPA}}", "casey", "yr")
	def test_jase_ipa(self):
		self.run_test("자세", "{{ko-IPA}}", "[t͡ɕa̠sʰe̞]", "ipa")

	def test_byeongwon_ph(self):
		self.run_test("병원", "{{ko-IPA|l=y}}", "병(ː)원", "ph")
	def test_byeongwon_rr(self):
		self.run_test("병원", "{{ko-IPA|l=y}}", "byeong'won", "rr")
	def test_byeongwon_rrr(self):
		self.run_test("병원", "{{ko-IPA|l=y}}", "byeong'won", "rrr")
	def test_byeongwon_mr(self):
		self.run_test("병원", "{{ko-IPA|l=y}}", "pyŏngwŏn", "mr")
	def test_byeongwon_yr(self):
		self.run_test("병원", "{{ko-IPA|l=y}}", "pyēngwen", "yr")
	def test_byeongwon_ipa(self):
		self.run_test("병원", "{{ko-IPA|l=y}}", "[ˈpjɘ(ː)ŋwʌ̹n]", "ipa")

	def test_majimak_ph(self):
		self.run_test("마지막", "{{ko-IPA}}", "마지막", "ph")
	def test_majimak_rr(self):
		self.run_test("마지막", "{{ko-IPA}}", "majimak", "rr")
	def test_majimak_rrr(self):
		self.run_test("마지막", "{{ko-IPA}}", "majimag", "rrr")
	def test_majimak_mr(self):
		self.run_test("마지막", "{{ko-IPA}}", "majimak", "mr")
	def test_majimak_yr(self):
		self.run_test("마지막", "{{ko-IPA}}", "macimak", "yr")
	def test_majimak_ipa(self):
		self.run_test("마지막", "{{ko-IPA}}", "[ma̠d͡ʑima̠k̚]", "ipa")

	def test_igot_ph(self):
		self.run_test("이곳", "{{ko-IPA}}", "이곧", "ph")
	def test_igot_rr(self):
		self.run_test("이곳", "{{ko-IPA}}", "igot", "rr")
	def test_igot_rrr(self):
		self.run_test("이곳", "{{ko-IPA}}", "igos", "rrr")
	def test_igot_mr(self):
		self.run_test("이곳", "{{ko-IPA}}", "igot", "mr")
	def test_igot_yr(self):
		self.run_test("이곳", "{{ko-IPA}}", "ikos", "yr")
	def test_igot_ipa(self):
		self.run_test("이곳", "{{ko-IPA}}", "[iɡo̞t̚]", "ipa")

	def test_gonggan_ph(self):
		self.run_test("공간", "{{ko-IPA}}", "공간", "ph")
	def test_gonggan_rr(self):
		self.run_test("공간", "{{ko-IPA}}", "gonggan", "rr")
	def test_gonggan_rrr(self):
		self.run_test("공간", "{{ko-IPA}}", "gonggan", "rrr")
	def test_gonggan_mr(self):
		self.run_test("공간", "{{ko-IPA}}", "konggan", "mr")
	def test_gonggan_yr(self):
		self.run_test("공간", "{{ko-IPA}}", "kongkan", "yr")
	def test_gonggan_ipa(self):
		self.run_test("공간", "{{ko-IPA}}", "[ko̞ŋɡa̠n]", "ipa")

	def test_jedaero_ph(self):
		self.run_test("제대로", "{{ko-IPA}}", "제대로/제데로", "ph")
	def test_jedaero_rr(self):
		self.run_test("제대로", "{{ko-IPA}}", "jedaero", "rr")
	def test_jedaero_rrr(self):
		self.run_test("제대로", "{{ko-IPA}}", "jedaelo", "rrr")
	def test_jedaero_mr(self):
		self.run_test("제대로", "{{ko-IPA}}", "chedaero", "mr")
	def test_jedaero_yr(self):
		self.run_test("제대로", "{{ko-IPA}}", "ceytaylo", "yr")
	def test_jedaero_ipa(self):
		self.run_test("제대로", "{{ko-IPA}}", "[t͡ɕe̞dɛɾo̞] ~ [t͡ɕe̞de̞ɾo̞]", "ipa")

	def test_damda_ph(self):
		self.run_test("담다", "{{ko-IPA|l=y|com=1}}", "담(ː)따", "ph")
	def test_damda_rr(self):
		self.run_test("담다", "{{ko-IPA|l=y|com=1}}", "damda", "rr")
	def test_damda_rrr(self):
		self.run_test("담다", "{{ko-IPA|l=y|com=1}}", "damda", "rrr")
	def test_damda_mr(self):
		self.run_test("담다", "{{ko-IPA|l=y|com=1}}", "tamta", "mr")
	def test_damda_yr(self):
		self.run_test("담다", "{{ko-IPA|l=y|com=1}}", "tāmqta", "yr")
	def test_damda_ipa(self):
		self.run_test("담다", "{{ko-IPA|l=y|com=1}}", "[ˈta̠(ː)mt͈a̠]", "ipa")

	def test_hangnyeon_ph(self):
		self.run_test("학년", "{{ko-IPA|a=y}}", "항년", "ph")
	def test_hangnyeon_rr(self):
		self.run_test("학년", "{{ko-IPA|a=y}}", "hangnyeon", "rr")
	def test_hangnyeon_rrr(self):
		self.run_test("학년", "{{ko-IPA|a=y}}", "hagnyeon", "rrr")
	def test_hangnyeon_mr(self):
		self.run_test("학년", "{{ko-IPA|a=y}}", "hangnyŏn", "mr")
	def test_hangnyeon_yr(self):
		self.run_test("학년", "{{ko-IPA|a=y}}", "haknyen", "yr")
	def test_hangnyeon_ipa(self):
		self.run_test("학년", "{{ko-IPA|a=y}}", "[ha̠ŋɲʌ̹n]", "ipa")

	def test_ihaehada_ph(self):
		self.run_test("이해하다", "{{ko-IPA|l=y}}", "이(ː)해하다/이(ː)헤하다", "ph")
	def test_ihaehada_rr(self):
		self.run_test("이해하다", "{{ko-IPA|l=y}}", "ihaehada", "rr")
	def test_ihaehada_rrr(self):
		self.run_test("이해하다", "{{ko-IPA|l=y}}", "ihaehada", "rrr")
	def test_ihaehada_mr(self):
		self.run_test("이해하다", "{{ko-IPA|l=y}}", "ihaehada", "mr")
	def test_ihaehada_yr(self):
		self.run_test("이해하다", "{{ko-IPA|l=y}}", "īhayhata", "yr")
	def test_ihaehada_ipa(self):
		self.run_test("이해하다", "{{ko-IPA|l=y}}", "[ˈi(ː)ɦɛɦa̠da̠] ~ [ˈi(ː)ɦe̞ɦa̠da̠]", "ipa")

	def test_bunya_ph(self):
		self.run_test("분야", "{{ko-IPA}}", "부냐", "ph")
	def test_bunya_rr(self):
		self.run_test("분야", "{{ko-IPA}}", "bunya", "rr")
	def test_bunya_rrr(self):
		self.run_test("분야", "{{ko-IPA}}", "bun'ya", "rrr")
	def test_bunya_mr(self):
		self.run_test("분야", "{{ko-IPA}}", "punya", "mr")
	def test_bunya_yr(self):
		self.run_test("분야", "{{ko-IPA}}", "pun.ya", "yr")
	def test_bunya_ipa(self):
		self.run_test("분야", "{{ko-IPA}}", "[puɲa̠]", "ipa")

	def test_jepum_ph(self):
		self.run_test("제품", "{{ko-IPA|l=y}}", "제(ː)품", "ph")
	def test_jepum_rr(self):
		self.run_test("제품", "{{ko-IPA|l=y}}", "jepum", "rr")
	def test_jepum_rrr(self):
		self.run_test("제품", "{{ko-IPA|l=y}}", "jepum", "rrr")
	def test_jepum_mr(self):
		self.run_test("제품", "{{ko-IPA|l=y}}", "chep'um", "mr")
	def test_jepum_yr(self):
		self.run_test("제품", "{{ko-IPA|l=y}}", "cēy.phum", "yr")
	def test_jepum_ipa(self):
		self.run_test("제품", "{{ko-IPA|l=y}}", "[ˈt͡ɕe̞(ː)pʰum]", "ipa")

	def test_saeop_ph(self):
		self.run_test("사업", "{{ko-IPA|l=y}}", "사(ː)업", "ph")
	def test_saeop_rr(self):
		self.run_test("사업", "{{ko-IPA|l=y}}", "sa'eop", "rr")
	def test_saeop_rrr(self):
		self.run_test("사업", "{{ko-IPA|l=y}}", "sa'eob", "rrr")
	def test_saeop_mr(self):
		self.run_test("사업", "{{ko-IPA|l=y}}", "saŏp", "mr")
	def test_saeop_yr(self):
		self.run_test("사업", "{{ko-IPA|l=y}}", "sāep", "yr")
	def test_saeop_ipa(self):
		self.run_test("사업", "{{ko-IPA|l=y}}", "[ˈsʰa̠(ː)ʌ̹p̚]", "ipa")

	def test_haengwi_ph(self):
		self.run_test("행위", "{{ko-IPA}}", "행위/헹위", "ph")
	def test_haengwi_rr(self):
		self.run_test("행위", "{{ko-IPA}}", "haeng'wi", "rr")
	def test_haengwi_rrr(self):
		self.run_test("행위", "{{ko-IPA}}", "haeng'wi", "rrr")
	def test_haengwi_mr(self):
		self.run_test("행위", "{{ko-IPA}}", "haengwi", "mr")
	def test_haengwi_yr(self):
		self.run_test("행위", "{{ko-IPA}}", "hayngwi", "yr")
	def test_haengwi_ipa(self):
		self.run_test("행위", "{{ko-IPA}}", "[hɛŋɥi] ~ [he̞ŋɥi] ~ [hɛŋy] ~ [he̞ŋy]", "ipa")

	def test_sungan_ph(self):
		self.run_test("순간", "{{ko-IPA}}", "순간", "ph")
	def test_sungan_rr(self):
		self.run_test("순간", "{{ko-IPA}}", "sun'gan", "rr")
	def test_sungan_rrr(self):
		self.run_test("순간", "{{ko-IPA}}", "sungan", "rrr")
	def test_sungan_mr(self):
		self.run_test("순간", "{{ko-IPA}}", "sun'gan", "mr")
	def test_sungan_yr(self):
		self.run_test("순간", "{{ko-IPA}}", "swunkan", "yr")
	def test_sungan_ipa(self):
		self.run_test("순간", "{{ko-IPA}}", "[sʰunɡa̠n]", "ipa")

	def test_yeongeuk_ph(self):
		self.run_test("연극", "{{ko-IPA|l=y}}", "연(ː)극", "ph")
	def test_yeongeuk_rr(self):
		self.run_test("연극", "{{ko-IPA|l=y}}", "yeon'geuk", "rr")
	def test_yeongeuk_rrr(self):
		self.run_test("연극", "{{ko-IPA|l=y}}", "yeongeug", "rrr")
	def test_yeongeuk_mr(self):
		self.run_test("연극", "{{ko-IPA|l=y}}", "yŏn'gŭk", "mr")
	def test_yeongeuk_yr(self):
		self.run_test("연극", "{{ko-IPA|l=y}}", "yēnkuk", "yr")
	def test_yeongeuk_ipa(self):
		self.run_test("연극", "{{ko-IPA|l=y}}", "[ˈjɘ(ː)nɡɯk̚]", "ipa")

	def test_hyeondae_ph(self):
		self.run_test("현대", "{{ko-IPA|현대|l=y}}", "현(ː)대/현(ː)데", "ph")
	def test_hyeondae_rr(self):
		self.run_test("현대", "{{ko-IPA|현대|l=y}}", "hyeondae", "rr")
	def test_hyeondae_rrr(self):
		self.run_test("현대", "{{ko-IPA|현대|l=y}}", "hyeondae", "rrr")
	def test_hyeondae_mr(self):
		self.run_test("현대", "{{ko-IPA|현대|l=y}}", "hyŏndae", "mr")
	def test_hyeondae_yr(self):
		self.run_test("현대", "{{ko-IPA|현대|l=y}}", "hyēntay", "yr")
	def test_hyeondae_ipa(self):
		self.run_test("현대", "{{ko-IPA|현대|l=y}}", "[ˈçɘ(ː)ndɛ] ~ [ˈçɘ(ː)nde̞]", "ipa")

	def test_seolmyeonghada_ph(self):
		self.run_test("설명하다", "{{ko-IPA}}", "설명하다", "ph")
	def test_seolmyeonghada_rr(self):
		self.run_test("설명하다", "{{ko-IPA}}", "seolmyeonghada", "rr")
	def test_seolmyeonghada_rrr(self):
		self.run_test("설명하다", "{{ko-IPA}}", "seolmyeonghada", "rrr")
	def test_seolmyeonghada_mr(self):
		self.run_test("설명하다", "{{ko-IPA}}", "sŏlmyŏnghada", "mr")
	def test_seolmyeonghada_yr(self):
		self.run_test("설명하다", "{{ko-IPA}}", "sel.myenghata", "yr")
	def test_seolmyeonghada_ipa(self):
		self.run_test("설명하다", "{{ko-IPA}}", "[sʰʌ̹ɭmjʌ̹ŋɦa̠da̠]", "ipa")

	def test_choego_ph(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "췌(ː)고/최(ː)고", "ph")
	def test_choego_rr(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "choego", "rr")
	def test_choego_rrr(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "choego", "rrr")
	def test_choego_mr(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "ch'oego", "mr")
	def test_choego_yr(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "chōyko", "yr")
	def test_choego_ipa(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "[ˈt͡ɕʰwe̞(ː)ɡo̞] ~ [ˈt͡ɕʰø̞(ː)ɡo̞]", "ipa")
	def test_choego_ph_1(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "췌(ː)고/최(ː)고", "ph")
	def test_choego_rr_1(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "choego", "rr")
	def test_choego_rrr_1(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "choego", "rrr")
	def test_choego_mr_1(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "ch'oego", "mr")
	def test_choego_yr_1(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "chōyko", "yr")
	def test_choego_ipa_1(self):
		self.run_test("최고", "{{ko-IPA|l=y}}", "[ˈt͡ɕʰwe̞(ː)ɡo̞] ~ [ˈt͡ɕʰø̞(ː)ɡo̞]", "ipa")
	def test_choego_ph_2(self):
		self.run_test("최고", "{{ko-IPA}}", "췌고/최고", "ph")
	def test_choego_rr_2(self):
		self.run_test("최고", "{{ko-IPA}}", "choego", "rr")
	def test_choego_rrr_2(self):
		self.run_test("최고", "{{ko-IPA}}", "choego", "rrr")
	def test_choego_mr_2(self):
		self.run_test("최고", "{{ko-IPA}}", "ch'oego", "mr")
	def test_choego_yr_2(self):
		self.run_test("최고", "{{ko-IPA}}", "choyko", "yr")
	def test_choego_ipa_2(self):
		self.run_test("최고", "{{ko-IPA}}", "[t͡ɕʰwe̞ɡo̞] ~ [t͡ɕʰø̞ɡo̞]", "ipa")

	def test_deureonada_ph(self):
		self.run_test("드러나다", "{{ko-IPA}}", "드러나다", "ph")
	def test_deureonada_rr(self):
		self.run_test("드러나다", "{{ko-IPA}}", "deureonada", "rr")
	def test_deureonada_rrr(self):
		self.run_test("드러나다", "{{ko-IPA}}", "deuleonada", "rrr")
	def test_deureonada_mr(self):
		self.run_test("드러나다", "{{ko-IPA}}", "tŭrŏnada", "mr")
	def test_deureonada_yr(self):
		self.run_test("드러나다", "{{ko-IPA}}", "tulenata", "yr")
	def test_deureonada_ipa(self):
		self.run_test("드러나다", "{{ko-IPA}}", "[tɯɾʌ̹na̠da̠]", "ipa")

	def test_olhae_ph(self):
		self.run_test("올해", "{{ko-IPA}}", "올해/올헤", "ph")
	def test_olhae_rr(self):
		self.run_test("올해", "{{ko-IPA}}", "olhae", "rr")
	def test_olhae_rrr(self):
		self.run_test("올해", "{{ko-IPA}}", "olhae", "rrr")
	def test_olhae_mr(self):
		self.run_test("올해", "{{ko-IPA}}", "orhae", "mr")
	def test_olhae_yr(self):
		self.run_test("올해", "{{ko-IPA}}", "ol.hay", "yr")
	def test_olhae_ipa(self):
		self.run_test("올해", "{{ko-IPA}}", "[o̞ɾɦɛ] ~ [o̞ɾɦe̞]", "ipa")

	def test_nongeop_ph(self):
		self.run_test("농업", "{{ko-IPA}}", "농업", "ph")
	def test_nongeop_rr(self):
		self.run_test("농업", "{{ko-IPA}}", "nong'eop", "rr")
	def test_nongeop_rrr(self):
		self.run_test("농업", "{{ko-IPA}}", "nong'eob", "rrr")
	def test_nongeop_mr(self):
		self.run_test("농업", "{{ko-IPA}}", "nongŏp", "mr")
	def test_nongeop_yr(self):
		self.run_test("농업", "{{ko-IPA}}", "nongep", "yr")
	def test_nongeop_ipa(self):
		self.run_test("농업", "{{ko-IPA}}", "[no̞ŋʌ̹p̚]", "ipa")

	def test_daeda_ph(self):
		self.run_test("대다", "{{ko-IPA|l=y}}", "대(ː)다/데(ː)다", "ph")
	def test_daeda_rr(self):
		self.run_test("대다", "{{ko-IPA|l=y}}", "daeda", "rr")
	def test_daeda_rrr(self):
		self.run_test("대다", "{{ko-IPA|l=y}}", "daeda", "rrr")
	def test_daeda_mr(self):
		self.run_test("대다", "{{ko-IPA|l=y}}", "taeda", "mr")
	def test_daeda_yr(self):
		self.run_test("대다", "{{ko-IPA|l=y}}", "tāyta", "yr")
	def test_daeda_ipa(self):
		self.run_test("대다", "{{ko-IPA|l=y}}", "[ˈtɛ(ː)da̠] ~ [ˈte̞(ː)da̠]", "ipa")
	def test_daeda_ph_1(self):
		self.run_test("대다", "{{ko-IPA}}", "대다/데다", "ph")
	def test_daeda_rr_1(self):
		self.run_test("대다", "{{ko-IPA}}", "daeda", "rr")
	def test_daeda_rrr_1(self):
		self.run_test("대다", "{{ko-IPA}}", "daeda", "rrr")
	def test_daeda_mr_1(self):
		self.run_test("대다", "{{ko-IPA}}", "taeda", "mr")
	def test_daeda_yr_1(self):
		self.run_test("대다", "{{ko-IPA}}", "tayta", "yr")
	def test_daeda_ipa_1(self):
		self.run_test("대다", "{{ko-IPA}}", "[tɛda̠] ~ [te̞da̠]", "ipa")
	def test_daeda_ph_2(self):
		self.run_test("대다", "{{ko-IPA}}", "대다/데다", "ph")
	def test_daeda_rr_2(self):
		self.run_test("대다", "{{ko-IPA}}", "daeda", "rr")